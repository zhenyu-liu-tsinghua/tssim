!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABR_INIT_QP_GRAIN_MAX	../../source/encoder/ratecontrol.cpp	285;"	d	file:
ABR_INIT_QP_MAX	../../source/encoder/ratecontrol.cpp	284;"	d	file:
ABR_INIT_QP_MIN	../../source/encoder/ratecontrol.cpp	283;"	d	file:
ABR_SCENECUT_INIT_QP_MIN	../../source/encoder/ratecontrol.cpp	286;"	d	file:
ADD1	../../source/common/vec/dct-sse3.cpp	39;"	d	file:
ADD10	../../source/common/version.cpp	121;"	d	file:
ADD10	../../source/common/version.cpp	123;"	d	file:
ADD12	../../source/common/version.cpp	126;"	d	file:
ADD12	../../source/common/version.cpp	128;"	d	file:
ADD2	../../source/common/vec/dct-sse3.cpp	42;"	d	file:
ADD8	../../source/common/version.cpp	116;"	d	file:
ADD8	../../source/common/version.cpp	118;"	d	file:
ADDAVG_W12_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W12_H4 16$/;"	l
ADDAVG_W12_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W12_H4 32$/;"	l
ADDAVG_W12_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W12_H4_AVX2 16$/;"	l
ADDAVG_W12_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W12_H4_AVX2 32$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 12$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 16$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 24$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 32$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 4$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 64$/;"	l
ADDAVG_W16_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4 8$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 12$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 16$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 24$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 32$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 4$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 64$/;"	l
ADDAVG_W16_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W16_H4_AVX2 8$/;"	l
ADDAVG_W24_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W24_H2 24, 32$/;"	l
ADDAVG_W24_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W24_H2 24, 64$/;"	l
ADDAVG_W24_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W24_H2_AVX2 32$/;"	l
ADDAVG_W24_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W24_H2_AVX2 64$/;"	l
ADDAVG_W32_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2 16$/;"	l
ADDAVG_W32_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2 24$/;"	l
ADDAVG_W32_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2 32$/;"	l
ADDAVG_W32_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2 48$/;"	l
ADDAVG_W32_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2 64$/;"	l
ADDAVG_W32_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2 8$/;"	l
ADDAVG_W32_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2_AVX2 16$/;"	l
ADDAVG_W32_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2_AVX2 24$/;"	l
ADDAVG_W32_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2_AVX2 32$/;"	l
ADDAVG_W32_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2_AVX2 48$/;"	l
ADDAVG_W32_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2_AVX2 64$/;"	l
ADDAVG_W32_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W32_H2_AVX2 8$/;"	l
ADDAVG_W48_H2	../../source/common/x86/mc-a.asm	/^ADDAVG_W48_H2 64$/;"	l
ADDAVG_W48_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W48_H2_AVX2 64$/;"	l
ADDAVG_W4_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W4_H4 16$/;"	l
ADDAVG_W4_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W4_H4 32$/;"	l
ADDAVG_W4_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W4_H4 4$/;"	l
ADDAVG_W4_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W4_H4 8$/;"	l
ADDAVG_W64_H1	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1 16$/;"	l
ADDAVG_W64_H1	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1 32$/;"	l
ADDAVG_W64_H1	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1 48$/;"	l
ADDAVG_W64_H1	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1 64$/;"	l
ADDAVG_W64_H1_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1_AVX2 16$/;"	l
ADDAVG_W64_H1_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1_AVX2 32$/;"	l
ADDAVG_W64_H1_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1_AVX2 48$/;"	l
ADDAVG_W64_H1_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H1_AVX2 64$/;"	l
ADDAVG_W64_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H2_AVX2 16$/;"	l
ADDAVG_W64_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H2_AVX2 32$/;"	l
ADDAVG_W64_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H2_AVX2 48$/;"	l
ADDAVG_W64_H2_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W64_H2_AVX2 64$/;"	l
ADDAVG_W8_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4 12$/;"	l
ADDAVG_W8_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4 16$/;"	l
ADDAVG_W8_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4 32$/;"	l
ADDAVG_W8_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4 4$/;"	l
ADDAVG_W8_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4 64$/;"	l
ADDAVG_W8_H4	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4 8$/;"	l
ADDAVG_W8_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4_AVX2 12$/;"	l
ADDAVG_W8_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4_AVX2 16$/;"	l
ADDAVG_W8_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4_AVX2 32$/;"	l
ADDAVG_W8_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4_AVX2 4$/;"	l
ADDAVG_W8_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4_AVX2 64$/;"	l
ADDAVG_W8_H4_AVX2	../../source/common/x86/mc-a.asm	/^ADDAVG_W8_H4_AVX2 8$/;"	l
ADD_MVCOST	../../source/encoder/motion.cpp	1070;"	d	file:
ADD_MVCOST	../../source/encoder/motion.cpp	1110;"	d	file:
ADI_BUF_STRIDE	../../source/common/predict.h	/^    enum { ADI_BUF_STRIDE = (2 * MAX_CU_SIZE + 1 + 15) }; \/\/ alignment to 16 bytes$/;"	e	enum:X265_NS::Predict::__anon30
ALIGN_VAR_16	../../source/common/common.h	76;"	d
ALIGN_VAR_16	../../source/common/common.h	87;"	d
ALIGN_VAR_16	../../source/common/constants.cpp	/^ALIGN_VAR_16(const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4]) =$/;"	p	namespace:X265_NS	file:	signature:(const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4])
ALIGN_VAR_16	../../source/common/constants.h	/^ALIGN_VAR_16(extern const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4]);  \/\/ +1 for safe buffer area for codeCoeffNxN assembly optimize, there have up to 15 bytes beyond bound read$/;"	p	namespace:X265_NS	signature:(extern const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4])
ALIGN_VAR_16	../../source/common/ppc/pixel_altivec.cpp	67;"	d	file:
ALIGN_VAR_16	../../source/common/quant.h	/^    ALIGN_VAR_16(uint32_t, nrResidualSum[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS]);$/;"	p	struct:X265_NS::NoiseReduction	access:public	signature:(uint32_t, nrResidualSum[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS])
ALIGN_VAR_32	../../source/common/common.h	77;"	d
ALIGN_VAR_32	../../source/common/common.h	88;"	d
ALIGN_VAR_32	../../source/common/ppc/pixel_altivec.cpp	68;"	d	file:
ALIGN_VAR_4	../../source/common/common.h	74;"	d
ALIGN_VAR_4	../../source/common/common.h	85;"	d
ALIGN_VAR_8	../../source/common/common.h	75;"	d
ALIGN_VAR_8	../../source/common/common.h	86;"	d
ALIGN_VAR_8	../../source/common/ppc/pixel_altivec.cpp	66;"	d	file:
ALL_CHROMA_420_4x4_PU	../../source/common/x86/asm-primitives.cpp	264;"	d	file:
ALL_CHROMA_420_4x4_PU_TYPED	../../source/common/x86/asm-primitives.cpp	245;"	d	file:
ALL_CHROMA_420_CU	../../source/common/x86/asm-primitives.cpp	215;"	d	file:
ALL_CHROMA_420_CU_S	../../source/common/x86/asm-primitives.cpp	216;"	d	file:
ALL_CHROMA_420_CU_TYPED	../../source/common/x86/asm-primitives.cpp	205;"	d	file:
ALL_CHROMA_420_CU_TYPED_S	../../source/common/x86/asm-primitives.cpp	210;"	d	file:
ALL_CHROMA_420_PU	../../source/common/x86/asm-primitives.cpp	243;"	d	file:
ALL_CHROMA_420_PU_TYPED	../../source/common/x86/asm-primitives.cpp	218;"	d	file:
ALL_CHROMA_422_CU	../../source/common/x86/asm-primitives.cpp	271;"	d	file:
ALL_CHROMA_422_CU_TYPED	../../source/common/x86/asm-primitives.cpp	266;"	d	file:
ALL_CHROMA_422_PU	../../source/common/x86/asm-primitives.cpp	298;"	d	file:
ALL_CHROMA_422_PU_TYPED	../../source/common/x86/asm-primitives.cpp	273;"	d	file:
ALL_CHROMA_444_PU	../../source/common/x86/asm-primitives.cpp	326;"	d	file:
ALL_CHROMA_444_PU_TYPED	../../source/common/x86/asm-primitives.cpp	300;"	d	file:
ALL_IDX	../../source/common/common.h	301;"	d
ALL_LUMA_BLOCKS	../../source/common/x86/asm-primitives.cpp	149;"	d	file:
ALL_LUMA_BLOCKS_TYPED	../../source/common/x86/asm-primitives.cpp	140;"	d	file:
ALL_LUMA_CU	../../source/common/x86/asm-primitives.cpp	146;"	d	file:
ALL_LUMA_CU_S	../../source/common/x86/asm-primitives.cpp	147;"	d	file:
ALL_LUMA_CU_TYPED	../../source/common/x86/asm-primitives.cpp	120;"	d	file:
ALL_LUMA_CU_TYPED_S	../../source/common/x86/asm-primitives.cpp	125;"	d	file:
ALL_LUMA_PU	../../source/common/x86/asm-primitives.cpp	177;"	d	file:
ALL_LUMA_PU_T	../../source/common/x86/asm-primitives.cpp	179;"	d	file:
ALL_LUMA_PU_TYPED	../../source/common/x86/asm-primitives.cpp	152;"	d	file:
ALL_LUMA_TU	../../source/common/x86/asm-primitives.cpp	148;"	d	file:
ALL_LUMA_TU_S	../../source/common/x86/asm-primitives.cpp	150;"	d	file:
ALL_LUMA_TU_TYPED	../../source/common/x86/asm-primitives.cpp	130;"	d	file:
ALL_LUMA_TU_TYPED_S	../../source/common/x86/asm-primitives.cpp	135;"	d	file:
ALL_POOL_THREADS	../../source/common/threadpool.h	/^static const sleepbitmap_t ALL_POOL_THREADS = (sleepbitmap_t)-1;$/;"	m	namespace:X265_NS
AMP_ID	../../source/encoder/frameencoder.h	51;"	d
AMVP_DECIMATION_FACTOR	../../source/common/common.h	296;"	d
AMVP_NUM_CANDS	../../source/common/common.h	319;"	d
ANGULAR_MODE_ID	../../source/encoder/frameencoder.h	50;"	d
ASM	../../source/common/version.cpp	81;"	d	file:
ASM	../../source/common/version.cpp	83;"	d	file:
ASSIGN_SA8D	../../source/common/x86/asm-primitives.cpp	403;"	d	file:
ASSIGN_SSE_PP	../../source/common/x86/asm-primitives.cpp	393;"	d	file:
ASSIGN_SSE_SS	../../source/common/x86/asm-primitives.cpp	401;"	d	file:
ATOMICS	../../source/common/version.cpp	87;"	d	file:
ATOMICS	../../source/common/version.cpp	89;"	d	file:
ATOMIC_ADD	../../source/common/threading.h	66;"	d
ATOMIC_AND	../../source/common/threading.h	63;"	d
ATOMIC_DEC	../../source/common/threading.h	65;"	d
ATOMIC_INC	../../source/common/threading.h	64;"	d
ATOMIC_OR	../../source/common/threading.h	62;"	d
AVC_LUMA_PU	../../source/common/x86/asm-primitives.cpp	328;"	d	file:
AVG16_CACHELINE_LOOP_SSSE3	../../source/common/x86/mc-a.asm	/^AVG16_CACHELINE_LOOP_SSSE3 j, j$/;"	l
AVG16_CACHELINE_LOOP_SSSE3	../../source/common/x86/mc-a.asm	/^AVG16_CACHELINE_LOOP_SSSE3 j, k$/;"	l
AVG2_W16	../../source/common/x86/mc-a.asm	/^AVG2_W16 12, movd$/;"	l
AVG2_W16	../../source/common/x86/mc-a.asm	/^AVG2_W16 16, movq$/;"	l
AVG2_W8	../../source/common/x86/mc-a.asm	/^AVG2_W8 4, movd$/;"	l
AVG2_W8	../../source/common/x86/mc-a.asm	/^AVG2_W8 8, movq$/;"	l
AVG2_W_ONE	../../source/common/x86/mc-a.asm	/^AVG2_W_ONE  4$/;"	l
AVG2_W_ONE	../../source/common/x86/mc-a.asm	/^AVG2_W_ONE  8$/;"	l
AVG2_W_ONE	../../source/common/x86/mc-a.asm	/^AVG2_W_ONE 16$/;"	l
AVG2_W_TWO	../../source/common/x86/mc-a.asm	/^AVG2_W_TWO  8, movu, mova$/;"	l
AVG2_W_TWO	../../source/common/x86/mc-a.asm	/^AVG2_W_TWO 10, movd, movd$/;"	l
AVG2_W_TWO	../../source/common/x86/mc-a.asm	/^AVG2_W_TWO 16, movu, mova$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  16,  4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  16,  8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  16, 12$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  16, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  16, 32$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  16, 64$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4,  2$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4,  4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4,  8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4, 2$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4, 4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  4, 8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  8,  4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  8,  8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  8, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH  8, 32$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 12, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16,  4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16,  8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16, 12$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16, 32$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16, 4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16, 64$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 16, 8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 24, 32$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 32, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 32, 24$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 32, 32$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 32, 64$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 32, 8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 4, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 4, 2$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 4, 4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 4, 8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 48, 64$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 64, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 64, 32$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 64, 48$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 64, 64$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 8,  4$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 8,  8$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 8, 16$/;"	l
AVGH	../../source/common/x86/mc-a.asm	/^AVGH 8, 32$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK  8, 32, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK  8, 64, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 12, 32, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 12, 64, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 16, 32, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 16, 64, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 16, 64, sse2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 20, 32, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 20, 64, mmx2$/;"	l
AVG_CACHELINE_CHECK	../../source/common/x86/mc-a.asm	/^AVG_CACHELINE_CHECK 20, 64, sse2$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 12, movdqu, movdqa, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 12, movq, movq, movd$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 12, movq, movq, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 16, movdqu, movdqa$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 16, movq, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 24, movdqu, movdqa$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 24, movq, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 32, movdqu, movdqa$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 32, movq, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 4, movd, movd$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 4, movq, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 48, movdqu, movdqa$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 48, movq, movq$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 64, movdqu, movdqa$/;"	l
AVG_FUNC	../../source/common/x86/mc-a.asm	/^AVG_FUNC 64, movq, movq$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 12$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 12, 7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 12, 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 16$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 16, 7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 16, 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 24$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 24, 7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 24, 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 32$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 32, 7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 32, 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 4$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 4,  8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 48$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 48, 7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 48, 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 64$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 64, 7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 64, 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 8$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 8,  7$/;"	l
AVG_WEIGHT	../../source/common/x86/mc-a.asm	/^AVG_WEIGHT 8,  8$/;"	l
AVX	../../source/common/cpu.cpp	78;"	d	file:
AVX	../../source/common/cpu.cpp	88;"	d	file:
AVX2	../../source/common/cpu.cpp	85;"	d	file:
AVX2	../../source/common/cpu.cpp	87;"	d	file:
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR addpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR addps, sse, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR addsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR addss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR addsubpd, sse3, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR addsubps, sse3, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR aesdec, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR aesdeclast, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR aesenc, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR aesenclast, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR aesimc$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR aeskeygenassist$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR andnpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR andnps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR andpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR andps, sse, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR blendpd, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR blendps, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR blendvpd, sse4 ; can't be emulated$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR blendvps, sse4 ; can't be emulated$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cmppd, sse2, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cmpps, sse, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cmpsd, sse2, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cmpss, sse, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR comisd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR comiss, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtdq2pd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtdq2ps, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtpd2dq, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtpd2ps, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtps2dq, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtps2pd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtsd2si, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtsd2ss, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtsi2sd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtsi2ss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtss2sd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvtss2si, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvttpd2dq, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvttps2dq, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvttsd2si, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR cvttss2si, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR divpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR divps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR divsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR divss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR dppd, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR dpps, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR extractps, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR haddpd, sse3, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR haddps, sse3, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR hsubpd, sse3, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR hsubps, sse3, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR insertps, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR lddqu, sse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR ldmxcsr, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR maskmovdqu, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR maxpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR maxps, sse, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR maxsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR maxss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR minpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR minps, sse, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR minsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR minss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movapd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movaps, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movd, mmx$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movddup, sse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movdqa, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movdqu, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movhlps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movhpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movhps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movlhps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movlpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movlps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movmskpd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movmskps, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movntdq, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movntdqa, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movntpd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movntps, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movq, mmx$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movshdup, sse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movsldup, sse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movupd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR movups, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR mpsadbw, sse4, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR mulpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR mulps, sse, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR mulsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR mulss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR orpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR orps, sse, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pabsb, ssse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pabsd, ssse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pabsw, ssse3$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR packssdw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR packsswb, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR packusdw, sse4, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR packuswb, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddb, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddd, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddq, sse2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddsb, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddsw, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddusb, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddusw, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR paddw, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR palignr, ssse3, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pand, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pandn, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pavgb, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pavgw, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pblendvb, sse4 ; can't be emulated$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pblendw, sse4, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pclmulhqhqdq, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pclmulhqlqdq, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pclmullqhqdq, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pclmullqlqdq, fnord, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pclmulqdq, fnord, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpeqb, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpeqd, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpeqq, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpeqw, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpestri, sse42$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpestrm, sse42$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpgtb, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpgtd, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpgtq, sse42, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpgtw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpistri, sse42$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pcmpistrm, sse42$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pextrb, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pextrd, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pextrq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pextrw, mmx2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pfadd, 3dnow, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pfmul, 3dnow, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pfsub, 3dnow, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phaddd, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phaddsw, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phaddw, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phminposuw, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phsubd, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phsubsw, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR phsubw, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pinsrb, sse4, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pinsrd, sse4, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pinsrq, sse4, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pinsrw, mmx2, 0, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaddubsw, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaddwd, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaxsb, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaxsd, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaxsw, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaxub, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaxud, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmaxuw, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pminsb, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pminsd, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pminsw, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pminub, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pminud, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pminuw, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovmskb, mmx2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovsxbd, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovsxbq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovsxbw, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovsxdq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovsxwd, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovsxwq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovzxbd, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovzxbq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovzxbw, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovzxdq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovzxwd, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmovzxwq, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmuldq, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmulhrsw, ssse3, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmulhuw, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmulhw, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmulld, sse4, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmullw, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pmuludq, sse2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR por, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psadbw, mmx2, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pshufb, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pshufd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pshufhw, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pshuflw, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psignb, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psignd, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psignw, ssse3, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pslld, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pslldq, sse2, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psllq, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psllw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psrad, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psraw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psrld, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psrldq, sse2, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psrlq, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psrlw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubb, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubd, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubq, sse2, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubsb, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubsw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubusb, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubusw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR psubw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR ptest, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpckhbw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpckhdq, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpckhqdq, sse2, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpckhwd, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpcklbw, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpckldq, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpcklqdq, sse2, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR punpcklwd, mmx, 0, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR pxor, mmx, 0, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR rcpps, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR rcpss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR roundpd, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR roundps, sse4$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR roundsd, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR roundss, sse4, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR rsqrtps, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR rsqrtss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR shufpd, sse2, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR shufps, sse, 1, 1, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR sqrtpd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR sqrtps, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR sqrtsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR sqrtss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR stmxcsr, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR subpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR subps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR subsd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR subss, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR ucomisd, sse2$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR ucomiss, sse$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR unpckhpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR unpckhps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR unpcklpd, sse2, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR unpcklps, sse, 1, 0, 0$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR xorpd, sse2, 1, 0, 1$/;"	l
AVX_INSTR	../../source/common/x86/x86inc.asm	/^AVX_INSTR xorps, sse, 1, 0, 1$/;"	l
Analysis	../../source/encoder/analysis.cpp	/^Analysis::Analysis()$/;"	f	class:Analysis	signature:()
Analysis	../../source/encoder/analysis.h	/^    Analysis();$/;"	p	class:X265_NS::Analysis	access:public	signature:()
Analysis	../../source/encoder/analysis.h	/^class Analysis : public Search$/;"	c	namespace:X265_NS	inherits:Search
Analysis::Analysis	../../source/encoder/analysis.cpp	/^Analysis::Analysis()$/;"	f	class:Analysis	signature:()
Analysis::PMODE::processTasks	../../source/encoder/analysis.cpp	/^void Analysis::PMODE::processTasks(int workerThreadId)$/;"	f	class:Analysis::PMODE	signature:(int workerThreadId)
Analysis::addSplitFlagCost	../../source/encoder/analysis.cpp	/^void Analysis::addSplitFlagCost(Mode& mode, uint32_t depth)$/;"	f	class:Analysis	signature:(Mode& mode, uint32_t depth)
Analysis::calculateNormFactor	../../source/encoder/analysis.cpp	/^void Analysis::calculateNormFactor(CUData& ctu, int qp)$/;"	f	class:Analysis	signature:(CUData& ctu, int qp)
Analysis::calculateQpforCuSize	../../source/encoder/analysis.cpp	/^int Analysis::calculateQpforCuSize(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck, double baseQp)$/;"	f	class:Analysis	signature:(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck, double baseQp)
Analysis::checkBidir2Nx2N	../../source/encoder/analysis.cpp	/^void Analysis::checkBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom)
Analysis::checkInter_rd0_4	../../source/encoder/analysis.cpp	/^void Analysis::checkInter_rd0_4(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])$/;"	f	class:Analysis	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])
Analysis::checkInter_rd5_6	../../source/encoder/analysis.cpp	/^void Analysis::checkInter_rd5_6(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])$/;"	f	class:Analysis	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])
Analysis::checkMerge2Nx2N_rd0_4	../../source/encoder/analysis.cpp	/^void Analysis::checkMerge2Nx2N_rd0_4(Mode& skip, Mode& merge, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
Analysis::checkMerge2Nx2N_rd5_6	../../source/encoder/analysis.cpp	/^void Analysis::checkMerge2Nx2N_rd5_6(Mode& skip, Mode& merge, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
Analysis::collectPUStatistics	../../source/encoder/analysis.cpp	/^void Analysis::collectPUStatistics(const CUData& ctu, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& ctu, const CUGeom& cuGeom)
Analysis::complexityCheckCU	../../source/encoder/analysis.cpp	/^bool Analysis::complexityCheckCU(const Mode& bestMode)$/;"	f	class:Analysis	signature:(const Mode& bestMode)
Analysis::compressCTU	../../source/encoder/analysis.cpp	/^Mode& Analysis::compressCTU(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext)$/;"	f	class:Analysis	signature:(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext)
Analysis::compressInterCU_dist	../../source/encoder/analysis.cpp	/^uint32_t Analysis::compressInterCU_dist(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
Analysis::compressInterCU_rd0_4	../../source/encoder/analysis.cpp	/^SplitData Analysis::compressInterCU_rd0_4(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
Analysis::compressInterCU_rd5_6	../../source/encoder/analysis.cpp	/^SplitData Analysis::compressInterCU_rd5_6(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
Analysis::compressIntraCU	../../source/encoder/analysis.cpp	/^void Analysis::compressIntraCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
Analysis::create	../../source/encoder/analysis.cpp	/^bool Analysis::create(ThreadLocalData *tld)$/;"	f	class:Analysis	signature:(ThreadLocalData *tld)
Analysis::destroy	../../source/encoder/analysis.cpp	/^void Analysis::destroy()$/;"	f	class:Analysis	signature:()
Analysis::encodeResidue	../../source/encoder/analysis.cpp	/^void Analysis::encodeResidue(const CUData& ctu, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& ctu, const CUGeom& cuGeom)
Analysis::findSameContentRefCount	../../source/encoder/analysis.cpp	/^int Analysis::findSameContentRefCount(const CUData& parentCTU, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
Analysis::iterateCheckBidir2Nx2N	../../source/encoder/analysis.cpp	/^void Analysis::iterateCheckBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2])$/;"	f	class:Analysis	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2])
Analysis::loadTUDepth	../../source/encoder/analysis.cpp	/^int32_t Analysis::loadTUDepth(CUGeom cuGeom, CUData parentCTU)$/;"	f	class:Analysis	signature:(CUGeom cuGeom, CUData parentCTU)
Analysis::normFactor	../../source/encoder/analysis.cpp	/^void Analysis::normFactor(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype)$/;"	f	class:Analysis	signature:(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype)
Analysis::processPmode	../../source/encoder/analysis.cpp	/^void Analysis::processPmode(PMODE& pmode, Analysis& slave)$/;"	f	class:Analysis	signature:(PMODE& pmode, Analysis& slave)
Analysis::qprdRefine	../../source/encoder/analysis.cpp	/^void Analysis::qprdRefine(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)
Analysis::recodeCU	../../source/encoder/analysis.cpp	/^void Analysis::recodeCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)
Analysis::recursionDepthCheck	../../source/encoder/analysis.cpp	/^bool Analysis::recursionDepthCheck(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode)
Analysis::topSkipMinDepth	../../source/encoder/analysis.cpp	/^uint32_t Analysis::topSkipMinDepth(const CUData& parentCTU, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
Analysis::tryLossless	../../source/encoder/analysis.cpp	/^void Analysis::tryLossless(const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUGeom& cuGeom)
AngleMapping422TableSize	../../source/common/constants.h	/^enum { AngleMapping422TableSize = 36 };$/;"	e	enum:X265_NS::__anon23
BASE_FRAME_DURATION	../../source/encoder/ratecontrol.h	39;"	d
BC_MAX_MV	../../source/encoder/bitcost.h	/^    enum { BC_MAX_MV = (1 << 15) };$/;"	e	enum:X265_NS::BitCost::__anon20
BC_MAX_QP	../../source/encoder/bitcost.h	/^    enum { BC_MAX_QP = 82 };$/;"	e	enum:X265_NS::BitCost::__anon21
BITDEPTH	../../source/common/version.cpp	100;"	d	file:
BITDEPTH	../../source/common/version.cpp	105;"	d	file:
BITDEPTH	../../source/common/version.cpp	110;"	d	file:
BITS	../../source/common/version.cpp	75;"	d	file:
BITS	../../source/common/version.cpp	77;"	d	file:
BITS_PER_SUM	../../source/common/pixel.cpp	187;"	d	file:
BITS_PER_SUM	../../source/common/ppc/pixel_altivec.cpp	78;"	d	file:
BITS_PER_SUM	../../source/common/ppc/ppccommon.h	84;"	d
BLOCKCOPY_PP_W12_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W12_H4 12, 16$/;"	l
BLOCKCOPY_PP_W12_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W12_H4 12, 32$/;"	l
BLOCKCOPY_PP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H4 16, 12$/;"	l
BLOCKCOPY_PP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H4 16, 4$/;"	l
BLOCKCOPY_PP_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H8 16, 16$/;"	l
BLOCKCOPY_PP_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H8 16, 24$/;"	l
BLOCKCOPY_PP_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H8 16, 32$/;"	l
BLOCKCOPY_PP_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H8 16, 64$/;"	l
BLOCKCOPY_PP_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W16_H8 16, 8$/;"	l
BLOCKCOPY_PP_W24_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W24_H4 24, 32$/;"	l
BLOCKCOPY_PP_W24_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W24_H4 24, 64$/;"	l
BLOCKCOPY_PP_W32_H16_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H16_avx 32, 32$/;"	l
BLOCKCOPY_PP_W32_H16_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H16_avx 32, 48$/;"	l
BLOCKCOPY_PP_W32_H16_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H16_avx 32, 64$/;"	l
BLOCKCOPY_PP_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H4 32, 16$/;"	l
BLOCKCOPY_PP_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H4 32, 24$/;"	l
BLOCKCOPY_PP_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H4 32, 32$/;"	l
BLOCKCOPY_PP_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H4 32, 48$/;"	l
BLOCKCOPY_PP_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H4 32, 64$/;"	l
BLOCKCOPY_PP_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W32_H4 32, 8$/;"	l
BLOCKCOPY_PP_W48_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W48_H2 48, 64$/;"	l
BLOCKCOPY_PP_W48_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W48_H4_avx 48, 64$/;"	l
BLOCKCOPY_PP_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W4_H8 4, 16$/;"	l
BLOCKCOPY_PP_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W4_H8 4, 32$/;"	l
BLOCKCOPY_PP_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4 64, 16$/;"	l
BLOCKCOPY_PP_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4 64, 32$/;"	l
BLOCKCOPY_PP_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4 64, 48$/;"	l
BLOCKCOPY_PP_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4 64, 64$/;"	l
BLOCKCOPY_PP_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4_avx 64, 16$/;"	l
BLOCKCOPY_PP_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4_avx 64, 32$/;"	l
BLOCKCOPY_PP_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4_avx 64, 48$/;"	l
BLOCKCOPY_PP_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PP_W64_H4_avx 64, 64$/;"	l
BLOCKCOPY_PS_W12_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W12_H2 12, 16$/;"	l
BLOCKCOPY_PS_W12_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W12_H2 12, 32$/;"	l
BLOCKCOPY_PS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4 16,  8$/;"	l
BLOCKCOPY_PS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4 16, 12$/;"	l
BLOCKCOPY_PS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4 16, 16$/;"	l
BLOCKCOPY_PS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4 16, 24$/;"	l
BLOCKCOPY_PS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4 16, 32$/;"	l
BLOCKCOPY_PS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4 16, 64$/;"	l
BLOCKCOPY_PS_W16_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4_avx2 16, 16$/;"	l
BLOCKCOPY_PS_W16_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W16_H4_avx2 16, 32$/;"	l
BLOCKCOPY_PS_W24_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W24_H2 24, 32$/;"	l
BLOCKCOPY_PS_W24_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W24_H2 24, 64$/;"	l
BLOCKCOPY_PS_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H2 32,  8$/;"	l
BLOCKCOPY_PS_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H2 32, 16$/;"	l
BLOCKCOPY_PS_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H2 32, 24$/;"	l
BLOCKCOPY_PS_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H2 32, 32$/;"	l
BLOCKCOPY_PS_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H2 32, 48$/;"	l
BLOCKCOPY_PS_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H2 32, 64$/;"	l
BLOCKCOPY_PS_W32_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H4_avx2 32, 32$/;"	l
BLOCKCOPY_PS_W32_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W32_H4_avx2 32, 64$/;"	l
BLOCKCOPY_PS_W48_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W48_H2 48, 64$/;"	l
BLOCKCOPY_PS_W4_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W4_H4 4, 16$/;"	l
BLOCKCOPY_PS_W4_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W4_H4 4, 32$/;"	l
BLOCKCOPY_PS_W4_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W4_H4 4, 8$/;"	l
BLOCKCOPY_PS_W64_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W64_H2 64, 16$/;"	l
BLOCKCOPY_PS_W64_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W64_H2 64, 32$/;"	l
BLOCKCOPY_PS_W64_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W64_H2 64, 48$/;"	l
BLOCKCOPY_PS_W64_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W64_H2 64, 64$/;"	l
BLOCKCOPY_PS_W6_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W6_H4 6, 16$/;"	l
BLOCKCOPY_PS_W6_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W6_H4 6, 8$/;"	l
BLOCKCOPY_PS_W8_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W8_H4  8,  8$/;"	l
BLOCKCOPY_PS_W8_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W8_H4  8, 12$/;"	l
BLOCKCOPY_PS_W8_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W8_H4  8, 16$/;"	l
BLOCKCOPY_PS_W8_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W8_H4  8, 32$/;"	l
BLOCKCOPY_PS_W8_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_PS_W8_H4  8, 64$/;"	l
BLOCKCOPY_SP_W12_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W12_H4 12, 16$/;"	l
BLOCKCOPY_SP_W12_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W12_H4 12, 32$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16,  4$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16,  8$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16, 12$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16, 16$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16, 24$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16, 32$/;"	l
BLOCKCOPY_SP_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H4 16, 64$/;"	l
BLOCKCOPY_SP_W16_H8_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H8_avx2 16, 16$/;"	l
BLOCKCOPY_SP_W16_H8_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W16_H8_avx2 16, 32$/;"	l
BLOCKCOPY_SP_W24_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W24_H2 24, 32$/;"	l
BLOCKCOPY_SP_W24_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W24_H2 24, 64$/;"	l
BLOCKCOPY_SP_W2_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W2_H2 2,  4$/;"	l
BLOCKCOPY_SP_W2_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W2_H2 2,  8$/;"	l
BLOCKCOPY_SP_W2_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W2_H2 2, 16$/;"	l
BLOCKCOPY_SP_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H2 32,  8$/;"	l
BLOCKCOPY_SP_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H2 32, 16$/;"	l
BLOCKCOPY_SP_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H2 32, 24$/;"	l
BLOCKCOPY_SP_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H2 32, 32$/;"	l
BLOCKCOPY_SP_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H2 32, 48$/;"	l
BLOCKCOPY_SP_W32_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H2 32, 64$/;"	l
BLOCKCOPY_SP_W32_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H4_avx2 32, 32$/;"	l
BLOCKCOPY_SP_W32_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W32_H4_avx2 32, 64$/;"	l
BLOCKCOPY_SP_W48_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W48_H2 48, 64$/;"	l
BLOCKCOPY_SP_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W4_H8 4, 16$/;"	l
BLOCKCOPY_SP_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W4_H8 4, 32$/;"	l
BLOCKCOPY_SP_W64_H1	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W64_H1 64, 16$/;"	l
BLOCKCOPY_SP_W64_H1	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W64_H1 64, 32$/;"	l
BLOCKCOPY_SP_W64_H1	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W64_H1 64, 48$/;"	l
BLOCKCOPY_SP_W64_H1	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W64_H1 64, 64$/;"	l
BLOCKCOPY_SP_W64_H4_avx2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W64_H4_avx2 64, 64$/;"	l
BLOCKCOPY_SP_W6_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W6_H2 6,  8$/;"	l
BLOCKCOPY_SP_W6_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W6_H2 6, 16$/;"	l
BLOCKCOPY_SP_W8_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W8_H4 8, 12$/;"	l
BLOCKCOPY_SP_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W8_H8 8, 16$/;"	l
BLOCKCOPY_SP_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W8_H8 8, 32$/;"	l
BLOCKCOPY_SP_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SP_W8_H8 8, 64$/;"	l
BLOCKCOPY_SS_W12_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W12_H4 12, 16$/;"	l
BLOCKCOPY_SS_W12_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W12_H4 12, 32$/;"	l
BLOCKCOPY_SS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4 16, 12$/;"	l
BLOCKCOPY_SS_W16_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4 16, 4$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 12$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 16$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 24$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 32$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 4$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 64$/;"	l
BLOCKCOPY_SS_W16_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H4_avx 16, 8$/;"	l
BLOCKCOPY_SS_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H8 16, 16$/;"	l
BLOCKCOPY_SS_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H8 16, 24$/;"	l
BLOCKCOPY_SS_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H8 16, 32$/;"	l
BLOCKCOPY_SS_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H8 16, 64$/;"	l
BLOCKCOPY_SS_W16_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W16_H8 16, 8$/;"	l
BLOCKCOPY_SS_W24_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W24_H4 24, 32$/;"	l
BLOCKCOPY_SS_W24_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W24_H4 24, 64$/;"	l
BLOCKCOPY_SS_W24_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W24_H4_avx 24, 32$/;"	l
BLOCKCOPY_SS_W24_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W24_H4_avx 24, 64$/;"	l
BLOCKCOPY_SS_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4 32, 16$/;"	l
BLOCKCOPY_SS_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4 32, 24$/;"	l
BLOCKCOPY_SS_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4 32, 32$/;"	l
BLOCKCOPY_SS_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4 32, 48$/;"	l
BLOCKCOPY_SS_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4 32, 64$/;"	l
BLOCKCOPY_SS_W32_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4 32, 8$/;"	l
BLOCKCOPY_SS_W32_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4_avx 32,  8$/;"	l
BLOCKCOPY_SS_W32_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4_avx 32, 16$/;"	l
BLOCKCOPY_SS_W32_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4_avx 32, 24$/;"	l
BLOCKCOPY_SS_W32_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4_avx 32, 32$/;"	l
BLOCKCOPY_SS_W32_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4_avx 32, 48$/;"	l
BLOCKCOPY_SS_W32_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W32_H4_avx 32, 64$/;"	l
BLOCKCOPY_SS_W48_H2	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W48_H2 48, 64$/;"	l
BLOCKCOPY_SS_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W4_H8 4, 16$/;"	l
BLOCKCOPY_SS_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W4_H8 4, 32$/;"	l
BLOCKCOPY_SS_W4_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W4_H8 4, 8$/;"	l
BLOCKCOPY_SS_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4 64, 16$/;"	l
BLOCKCOPY_SS_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4 64, 32$/;"	l
BLOCKCOPY_SS_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4 64, 48$/;"	l
BLOCKCOPY_SS_W64_H4	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4 64, 64$/;"	l
BLOCKCOPY_SS_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4_avx 64, 16$/;"	l
BLOCKCOPY_SS_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4_avx 64, 32$/;"	l
BLOCKCOPY_SS_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4_avx 64, 48$/;"	l
BLOCKCOPY_SS_W64_H4_avx	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W64_H4_avx 64, 64$/;"	l
BLOCKCOPY_SS_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W8_H8 8, 16$/;"	l
BLOCKCOPY_SS_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W8_H8 8, 32$/;"	l
BLOCKCOPY_SS_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W8_H8 8, 64$/;"	l
BLOCKCOPY_SS_W8_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKCOPY_SS_W8_H8 8, 8$/;"	l
BLOCKFILL_S_W32_H8	../../source/common/x86/blockcopy8.asm	/^BLOCKFILL_S_W32_H8 32, 32$/;"	l
BLOCK_16x16	../../source/common/primitives.h	/^    BLOCK_16x16,$/;"	e	enum:X265_NS::LumaCU
BLOCK_32x32	../../source/common/primitives.h	/^    BLOCK_32x32,$/;"	e	enum:X265_NS::LumaCU
BLOCK_420_16x16	../../source/common/primitives.h	/^    BLOCK_420_16x16,$/;"	e	enum:X265_NS::ChromaCU420
BLOCK_420_2x2	../../source/common/primitives.h	/^    BLOCK_420_2x2,$/;"	e	enum:X265_NS::ChromaCU420
BLOCK_420_32x32	../../source/common/primitives.h	/^    BLOCK_420_32x32$/;"	e	enum:X265_NS::ChromaCU420
BLOCK_420_4x4	../../source/common/primitives.h	/^    BLOCK_420_4x4,$/;"	e	enum:X265_NS::ChromaCU420
BLOCK_420_8x8	../../source/common/primitives.h	/^    BLOCK_420_8x8,$/;"	e	enum:X265_NS::ChromaCU420
BLOCK_422_16x32	../../source/common/primitives.h	/^    BLOCK_422_16x32,$/;"	e	enum:X265_NS::ChromaCU422
BLOCK_422_2x4	../../source/common/primitives.h	/^    BLOCK_422_2x4,$/;"	e	enum:X265_NS::ChromaCU422
BLOCK_422_32x64	../../source/common/primitives.h	/^    BLOCK_422_32x64$/;"	e	enum:X265_NS::ChromaCU422
BLOCK_422_4x8	../../source/common/primitives.h	/^    BLOCK_422_4x8,$/;"	e	enum:X265_NS::ChromaCU422
BLOCK_422_8x16	../../source/common/primitives.h	/^    BLOCK_422_8x16,$/;"	e	enum:X265_NS::ChromaCU422
BLOCK_4x4	../../source/common/primitives.h	/^    BLOCK_4x4,$/;"	e	enum:X265_NS::LumaCU
BLOCK_64x64	../../source/common/primitives.h	/^    BLOCK_64x64,$/;"	e	enum:X265_NS::LumaCU
BLOCK_8x8	../../source/common/primitives.h	/^    BLOCK_8x8,$/;"	e	enum:X265_NS::LumaCU
BOOL	../../source/common/param.cpp	1482;"	d	file:
BOOL	../../source/common/param.cpp	1673;"	d	file:
BRANCH_INSTR	../../source/common/x86/x86inc.asm	/^BRANCH_INSTR jz, je, jnz, jne, jl, jle, jnl, jnle, jg, jge, jng, jnge, ja, jae, jna, jnae, jb, jbe, jnb, jnbe, jc, jnc, js, jns, jo, jno, jp, jnp$/;"	l
BR_SHIFT	../../source/encoder/ratecontrol.cpp	42;"	d	file:
B_SLICE	../../source/common/slice.h	/^    B_SLICE,$/;"	e	enum:X265_NS::SliceType
BitCost	../../source/encoder/bitcost.h	/^    BitCost() : m_cost_mvx(0), m_cost_mvy(0), m_cost(0), m_mvp(0) {}$/;"	f	class:X265_NS::BitCost	access:public	signature:()
BitCost	../../source/encoder/bitcost.h	/^class BitCost$/;"	c	namespace:X265_NS
BitCost::CalculateLogs	../../source/encoder/bitcost.cpp	/^void BitCost::CalculateLogs()$/;"	f	class:BitCost	signature:()
BitCost::destroy	../../source/encoder/bitcost.cpp	/^void BitCost::destroy()$/;"	f	class:BitCost	signature:()
BitCost::s_bitsizes	../../source/encoder/bitcost.cpp	/^float *BitCost::s_bitsizes;$/;"	m	class:BitCost	file:
BitCost::s_costCalcLock	../../source/encoder/bitcost.cpp	/^Lock BitCost::s_costCalcLock;$/;"	m	class:BitCost	file:
BitCost::s_costs	../../source/encoder/bitcost.cpp	/^uint16_t *BitCost::s_costs[BC_MAX_QP];$/;"	m	class:BitCost	file:
BitCost::s_fpelMvCosts	../../source/encoder/bitcost.cpp	/^uint16_t* BitCost::s_fpelMvCosts[BC_MAX_QP][4];$/;"	m	class:BitCost	file:
BitCost::setQP	../../source/encoder/bitcost.cpp	/^void BitCost::setQP(unsigned int qp)$/;"	f	class:BitCost	signature:(unsigned int qp)
BitCounter	../../source/common/bitstream.h	/^    BitCounter() : m_bitCounter(0) {}$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
BitCounter	../../source/common/bitstream.h	/^class BitCounter : public BitInterface$/;"	c	namespace:X265_NS	inherits:BitInterface
BitInterface	../../source/common/bitstream.h	/^class BitInterface$/;"	c	namespace:X265_NS
Bitstream	../../source/common/bitstream.cpp	/^Bitstream::Bitstream()$/;"	f	class:Bitstream	signature:()
Bitstream	../../source/common/bitstream.h	/^    Bitstream();$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
Bitstream	../../source/common/bitstream.h	/^class Bitstream : public BitInterface$/;"	c	namespace:X265_NS	inherits:BitInterface
Bitstream::Bitstream	../../source/common/bitstream.cpp	/^Bitstream::Bitstream()$/;"	f	class:Bitstream	signature:()
Bitstream::push_back	../../source/common/bitstream.cpp	/^void Bitstream::push_back(uint8_t val)$/;"	f	class:Bitstream	signature:(uint8_t val)
Bitstream::write	../../source/common/bitstream.cpp	/^void Bitstream::write(uint32_t val, uint32_t numBits)$/;"	f	class:Bitstream	signature:(uint32_t val, uint32_t numBits)
Bitstream::writeAlignOne	../../source/common/bitstream.cpp	/^void Bitstream::writeAlignOne()$/;"	f	class:Bitstream	signature:()
Bitstream::writeAlignZero	../../source/common/bitstream.cpp	/^void Bitstream::writeAlignZero()$/;"	f	class:Bitstream	signature:()
Bitstream::writeByte	../../source/common/bitstream.cpp	/^void Bitstream::writeByte(uint32_t val)$/;"	f	class:Bitstream	signature:(uint32_t val)
Bitstream::writeByteAlignment	../../source/common/bitstream.cpp	/^void Bitstream::writeByteAlignment()$/;"	f	class:Bitstream	signature:()
BondedTaskGroup	../../source/common/threadpool.h	/^    BondedTaskGroup()  { m_bondedPeerCount = m_jobTotal = m_jobAcquired = 0; }$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:()
BondedTaskGroup	../../source/common/threadpool.h	/^class BondedTaskGroup$/;"	c	namespace:X265_NS
BytesPerPartition	../../source/common/cudata.h	/^    enum { BytesPerPartition = 21 };  \/\/ combined sizeof() of all per-part data$/;"	e	enum:X265_NS::CUData::__anon8
C1FLAG_NUMBER	../../source/common/common.h	277;"	d
C2FLAG_NUMBER	../../source/common/common.h	278;"	d
CBCR_OFFSET	../../source/common/constants.h	100;"	d
CHECK	../../source/common/param.cpp	1123;"	d	file:
CHECKED	../../source/common/version.cpp	93;"	d	file:
CHECKED	../../source/common/version.cpp	95;"	d	file:
CHECKED_MALLOC	../../source/common/common.h	220;"	d
CHECKED_MALLOC_ZERO	../../source/common/common.h	229;"	d
CHECKSUM	../../source/encoder/sei.h	/^        CHECKSUM,$/;"	e	enum:X265_NS::SEIDecodedPictureHash::Method
CHECK_RANGE	../../source/encoder/level.cpp	195;"	d	file:
CHECK_RANGE	../../source/encoder/level.cpp	211;"	d	file:
CHROMA_420	../../source/common/ipfilter.cpp	375;"	d	file:
CHROMA_420_12x16	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_16x12	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_16x16	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_16x32	../../source/common/primitives.h	/^    CHROMA_420_32x16, CHROMA_420_16x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_16x4	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_16x8	../../source/common/primitives.h	/^    CHROMA_420_16x8,  CHROMA_420_8x16,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_24x32	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_2x2	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_2x4	../../source/common/primitives.h	/^    CHROMA_420_4x2,   CHROMA_420_2x4,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_2x8	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_32x16	../../source/common/primitives.h	/^    CHROMA_420_32x16, CHROMA_420_16x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_32x24	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_32x32	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_32x8	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_4x16	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_4x2	../../source/common/primitives.h	/^    CHROMA_420_4x2,   CHROMA_420_2x4,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_4x4	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_4x8	../../source/common/primitives.h	/^    CHROMA_420_8x4,   CHROMA_420_4x8,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_6x8	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_8x16	../../source/common/primitives.h	/^    CHROMA_420_16x8,  CHROMA_420_8x16,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_8x2	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_8x32	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_8x4	../../source/common/primitives.h	/^    CHROMA_420_8x4,   CHROMA_420_4x8,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_8x6	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_8x8	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
CHROMA_420_ADDAVG	../../source/common/x86/asm-primitives.cpp	652;"	d	file:
CHROMA_420_CU_BLOCKCOPY	../../source/common/x86/asm-primitives.cpp	628;"	d	file:
CHROMA_420_FILTERS	../../source/common/x86/asm-primitives.cpp	438;"	d	file:
CHROMA_420_HORIZ_FILTERS	../../source/common/x86/asm-primitives.cpp	821;"	d	file:
CHROMA_420_PIXELSUB_PS	../../source/common/x86/asm-primitives.cpp	641;"	d	file:
CHROMA_420_PU_BLOCKCOPY	../../source/common/x86/asm-primitives.cpp	632;"	d	file:
CHROMA_420_VERT_FILTERS	../../source/common/x86/asm-primitives.cpp	763;"	d	file:
CHROMA_420_VERT_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	775;"	d	file:
CHROMA_420_VSP_FILTERS	../../source/common/x86/asm-primitives.cpp	479;"	d	file:
CHROMA_420_VSP_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	459;"	d	file:
CHROMA_420_VSS_FILTERS	../../source/common/x86/asm-primitives.cpp	553;"	d	file:
CHROMA_420_VSS_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	576;"	d	file:
CHROMA_422	../../source/common/ipfilter.cpp	384;"	d	file:
CHROMA_422_12x32	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_16x16	../../source/common/primitives.h	/^    CHROMA_422_16x16, CHROMA_422_8x32,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_16x24	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_16x32	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_16x64	../../source/common/primitives.h	/^    CHROMA_422_32x32, CHROMA_422_16x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_16x8	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_24x64	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_2x16	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_2x4	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_2x8	../../source/common/primitives.h	/^    CHROMA_422_4x4,   CHROMA_422_2x8,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_32x16	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_32x32	../../source/common/primitives.h	/^    CHROMA_422_32x32, CHROMA_422_16x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_32x48	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_32x64	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_4x16	../../source/common/primitives.h	/^    CHROMA_422_8x8,   CHROMA_422_4x16,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_4x32	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_4x4	../../source/common/primitives.h	/^    CHROMA_422_4x4,   CHROMA_422_2x8,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_4x8	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_6x16	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_8x12	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_8x16	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_8x32	../../source/common/primitives.h	/^    CHROMA_422_16x16, CHROMA_422_8x32,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_8x4	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_8x64	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_8x8	../../source/common/primitives.h	/^    CHROMA_422_8x8,   CHROMA_422_4x16,$/;"	e	enum:X265_NS::ChromaPU422
CHROMA_422_ADDAVG	../../source/common/x86/asm-primitives.cpp	653;"	d	file:
CHROMA_422_CU_BLOCKCOPY	../../source/common/x86/asm-primitives.cpp	629;"	d	file:
CHROMA_422_FILTERS	../../source/common/x86/asm-primitives.cpp	444;"	d	file:
CHROMA_422_HORIZ_FILTERS	../../source/common/x86/asm-primitives.cpp	829;"	d	file:
CHROMA_422_PIXELSUB_PS	../../source/common/x86/asm-primitives.cpp	645;"	d	file:
CHROMA_422_PU_BLOCKCOPY	../../source/common/x86/asm-primitives.cpp	633;"	d	file:
CHROMA_422_VERT_FILTERS	../../source/common/x86/asm-primitives.cpp	787;"	d	file:
CHROMA_422_VERT_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	809;"	d	file:
CHROMA_422_VSP_FILTERS	../../source/common/x86/asm-primitives.cpp	510;"	d	file:
CHROMA_422_VSP_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	490;"	d	file:
CHROMA_422_VSS_FILTERS	../../source/common/x86/asm-primitives.cpp	584;"	d	file:
CHROMA_422_VSS_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	607;"	d	file:
CHROMA_444	../../source/common/ipfilter.cpp	393;"	d	file:
CHROMA_444_FILTERS	../../source/common/x86/asm-primitives.cpp	450;"	d	file:
CHROMA_444_HORIZ_FILTERS	../../source/common/x86/asm-primitives.cpp	855;"	d	file:
CHROMA_444_VERT_FILTERS	../../source/common/x86/asm-primitives.cpp	815;"	d	file:
CHROMA_444_VSP_FILTERS	../../source/common/x86/asm-primitives.cpp	544;"	d	file:
CHROMA_444_VSP_FILTERS_SSE4	../../source/common/x86/asm-primitives.cpp	521;"	d	file:
CHROMA_444_VSS_FILTERS	../../source/common/x86/asm-primitives.cpp	612;"	d	file:
CHROMA_CU_420	../../source/common/pixel.cpp	1163;"	d	file:
CHROMA_CU_422	../../source/common/pixel.cpp	1240;"	d	file:
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 12 16$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 12 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 12$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 16$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 24$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 4$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 64$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 16 8$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 24 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 24 64$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 32 16$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 32 24$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 32 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 32 48$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 32 64$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 32 8$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 4 16$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 4 2$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 4 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 4 4$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 4 8$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 48 64$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 64 16$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 64 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 64 48$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 64 64$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 12$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 16$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 2$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 32$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 4$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 6$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 64$/;"	l
CHROMA_HPP	../../source/common/arm/ipfilter8.S	/^CHROMA_HPP 8 8$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 12 16$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 12 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 12$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 16$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 24$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 4$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 64$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 16 8$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 24 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 24 64$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 32 16$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 32 24$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 32 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 32 48$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 32 64$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 32 8$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 4 16$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 4 2$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 4 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 4 4$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 4 8$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 48 64$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 64 16$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 64 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 64 48$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 64 64$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 12$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 16$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 2$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 32$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 4$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 6$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 64$/;"	l
CHROMA_HPS	../../source/common/arm/ipfilter8.S	/^CHROMA_HPS 8 8$/;"	l
CHROMA_H_SHIFT	../../source/common/common.h	322;"	d
CHROMA_PU_420	../../source/common/pixel.cpp	1105;"	d	file:
CHROMA_PU_422	../../source/common/pixel.cpp	1182;"	d	file:
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 12$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 16$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 24$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 32$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 4$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 64$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 16 8$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 24 32$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 24 64$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 32 16$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 32 24$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 32 32$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 32 48$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 32 64$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 32 8$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 48 64$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 64 16$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 64 32$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 64 48$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 64 64$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 12$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 16$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 2$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 32$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 4$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 6$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 64$/;"	l
CHROMA_VPP	../../source/common/arm/ipfilter8.S	/^CHROMA_VPP 8 8$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 12$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 16$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 24$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 32$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 4$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 64$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 16 8$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 24 32$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 24 64$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 32 16$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 32 24$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 32 32$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 32 48$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 32 64$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 32 8$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 48 64$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 64 16$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 64 32$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 64 48$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 64 64$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 12$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 16$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 2$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 32$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 4$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 6$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 64$/;"	l
CHROMA_VPS	../../source/common/arm/ipfilter8.S	/^CHROMA_VPS 8 8$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 12$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 16$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 24$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 32$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 4$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 64$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 16 8$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 24 32$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 24 64$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 32 16$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 32 24$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 32 32$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 32 48$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 32 64$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 32 8$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 48 64$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 64 16$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 64 32$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 64 48$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 64 64$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 12$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 16$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 2$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 32$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 4$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 6$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 64$/;"	l
CHROMA_VSP	../../source/common/arm/ipfilter8.S	/^CHROMA_VSP 8 8$/;"	l
CHROMA_V_SHIFT	../../source/common/common.h	323;"	d
CLIP_ADD	../../source/encoder/slicetype.cpp	2736;"	d	file:
CLIP_DURATION	../../source/encoder/ratecontrol.h	47;"	d
CLZ	../../source/common/threading.h	60;"	d
CMP_OPT_FIRST_PASS	../../source/encoder/ratecontrol.cpp	53;"	d	file:
CNU	../../source/common/contexts.h	75;"	d
COEF_REMAIN_BIN_REDUCTION	../../source/common/common.h	272;"	d
COMPILEDBY	../../source/common/version.cpp	33;"	d	file:
COMPILEDBY	../../source/common/version.cpp	42;"	d	file:
COMPILEDBY	../../source/common/version.cpp	51;"	d	file:
COMPILEDBY	../../source/common/version.cpp	53;"	d	file:
COMPILEDBY	../../source/common/version.cpp	57;"	d	file:
COMPUTE_ROW	../../source/common/vec/dct-sse3.cpp	1025;"	d	file:
COMPUTE_ROW	../../source/common/vec/dct-sse3.cpp	1032;"	d	file:
COMPUTE_ROW	../../source/common/vec/dct-sse3.cpp	1054;"	d	file:
COMPUTE_ROW	../../source/common/vec/dct-sse3.cpp	335;"	d	file:
COMPUTE_ROW	../../source/common/vec/dct-sse3.cpp	671;"	d	file:
COMPUTE_ROW	../../source/common/vec/dct-sse3.cpp	952;"	d	file:
CONDITION_VARIABLE	../../source/common/winxp.h	52;"	d
CONTEXT_NUMBER_OF_TYPES	../../source/common/common.h	/^    CONTEXT_NUMBER_OF_TYPES = 3$/;"	e	enum:X265_NS::SignificanceMapContextType
CONTEXT_TYPE_4x4	../../source/common/common.h	/^    CONTEXT_TYPE_4x4 = 0,$/;"	e	enum:X265_NS::SignificanceMapContextType
CONTEXT_TYPE_8x8	../../source/common/common.h	/^    CONTEXT_TYPE_8x8 = 1,$/;"	e	enum:X265_NS::SignificanceMapContextType
CONTEXT_TYPE_NxN	../../source/common/common.h	/^    CONTEXT_TYPE_NxN = 2,$/;"	e	enum:X265_NS::SignificanceMapContextType
COPY1_IF_LT	../../source/common/common.h	179;"	d
COPY2_IF_LT	../../source/common/common.h	180;"	d
COPY3_IF_LT	../../source/common/common.h	186;"	d
COPY4_IF_LT	../../source/common/common.h	193;"	d
COST_MAX	../../source/encoder/motion.h	/^    static const int COST_MAX = 1 << 28;$/;"	m	class:X265_NS::MotionEstimate	access:public
COST_MV	../../source/encoder/motion.cpp	234;"	d	file:
COST_MV_PT_DIST	../../source/encoder/motion.cpp	220;"	d	file:
COST_MV_PT_DIST_X4	../../source/encoder/motion.cpp	255;"	d	file:
COST_MV_X3_ABS	../../source/encoder/motion.cpp	296;"	d	file:
COST_MV_X3_DIR	../../source/encoder/motion.cpp	242;"	d	file:
COST_MV_X4	../../source/encoder/motion.cpp	273;"	d	file:
COST_MV_X4_DIR	../../source/encoder/motion.cpp	311;"	d	file:
CPB_SHIFT	../../source/encoder/ratecontrol.cpp	43;"	d	file:
CRC	../../source/encoder/sei.h	/^        CRC,$/;"	e	enum:X265_NS::SEIDecodedPictureHash::Method
CRF_INIT_QP	../../source/encoder/ratecontrol.cpp	287;"	d	file:
CRF_INIT_QP	../../source/encoder/ratecontrol.cpp	805;"	d	file:
CROSS	../../source/encoder/motion.cpp	332;"	d	file:
CTURow	../../source/encoder/frameencoder.h	/^struct CTURow$/;"	s	namespace:X265_NS
CTZ	../../source/common/threading.h	61;"	d
CU	../../source/common/primitives.h	/^    struct CU$/;"	s	struct:X265_NS::EncoderPrimitives	access:public
CUChroma	../../source/common/primitives.h	/^        struct CUChroma$/;"	s	struct:X265_NS::EncoderPrimitives::Chroma	access:public
CUData	../../source/common/cudata.cpp	/^CUData::CUData()$/;"	f	class:CUData	signature:()
CUData	../../source/common/cudata.h	/^    CUData();$/;"	p	class:X265_NS::CUData	access:public	signature:()
CUData	../../source/common/cudata.h	/^class CUData$/;"	c	namespace:X265_NS
CUData::CUData	../../source/common/cudata.cpp	/^CUData::CUData()$/;"	f	class:CUData	signature:()
CUData::calcCTUGeoms	../../source/common/cudata.cpp	/^void CUData::calcCTUGeoms(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS])$/;"	f	class:CUData	signature:(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS])
CUData::clipMv	../../source/common/cudata.cpp	/^void CUData::clipMv(MV& outMV) const$/;"	f	class:CUData	signature:(MV& outMV) const
CUData::copyFromPic	../../source/common/cudata.cpp	/^void CUData::copyFromPic(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp)$/;"	f	class:CUData	signature:(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp)
CUData::copyPartFrom	../../source/common/cudata.cpp	/^void CUData::copyPartFrom(const CUData& subCU, const CUGeom& childGeom, uint32_t subPartIdx)$/;"	f	class:CUData	signature:(const CUData& subCU, const CUGeom& childGeom, uint32_t subPartIdx)
CUData::copyToPic	../../source/common/cudata.cpp	/^void CUData::copyToPic(uint32_t depth) const$/;"	f	class:CUData	signature:(uint32_t depth) const
CUData::deriveCenterIdx	../../source/common/cudata.cpp	/^uint32_t CUData::deriveCenterIdx(uint32_t puIdx) const$/;"	f	class:CUData	signature:(uint32_t puIdx) const
CUData::deriveLeftBottomIdx	../../source/common/cudata.cpp	/^uint32_t CUData::deriveLeftBottomIdx(uint32_t puIdx) const$/;"	f	class:CUData	signature:(uint32_t puIdx) const
CUData::deriveLeftRightTopIdx	../../source/common/cudata.cpp	/^void CUData::deriveLeftRightTopIdx(uint32_t partIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const$/;"	f	class:CUData	signature:(uint32_t partIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const
CUData::deriveRightBottomIdx	../../source/common/cudata.cpp	/^uint32_t CUData::deriveRightBottomIdx(uint32_t puIdx) const$/;"	f	class:CUData	signature:(uint32_t puIdx) const
CUData::getAllowedChromaDir	../../source/common/cudata.cpp	/^void CUData::getAllowedChromaDir(uint32_t absPartIdx, uint32_t* modeList) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t* modeList) const
CUData::getColMVP	../../source/common/cudata.cpp	/^bool CUData::getColMVP(MV& outMV, int& outRefIdx, int picList, int cuAddr, int partUnitIdx) const$/;"	f	class:CUData	signature:(MV& outMV, int& outRefIdx, int picList, int cuAddr, int partUnitIdx) const
CUData::getCollocatedMV	../../source/common/cudata.cpp	/^bool CUData::getCollocatedMV(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const$/;"	f	class:CUData	signature:(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const
CUData::getCtxSkipFlag	../../source/common/cudata.cpp	/^uint32_t CUData::getCtxSkipFlag(uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx) const
CUData::getCtxSplitFlag	../../source/common/cudata.cpp	/^uint32_t CUData::getCtxSplitFlag(uint32_t absPartIdx, uint32_t depth) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t depth) const
CUData::getDirectPMV	../../source/common/cudata.cpp	/^bool CUData::getDirectPMV(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const$/;"	f	class:CUData	signature:(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const
CUData::getIndirectPMV	../../source/common/cudata.cpp	/^bool CUData::getIndirectPMV(MV& outMV, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const$/;"	f	class:CUData	signature:(MV& outMV, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const
CUData::getInterMergeCandidates	../../source/common/cudata.cpp	/^uint32_t CUData::getInterMergeCandidates(uint32_t absPartIdx, uint32_t puIdx, MVField(*candMvField)[2], uint8_t* candDir) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t puIdx, MVField(*candMvField)[2], uint8_t* candDir) const
CUData::getInterNeighbourMV	../../source/common/cudata.cpp	/^void CUData::getInterNeighbourMV(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const$/;"	f	class:CUData	signature:(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const
CUData::getInterTUQtDepthRange	../../source/common/cudata.cpp	/^void CUData::getInterTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
CUData::getIntraDirLumaPredictor	../../source/common/cudata.cpp	/^int CUData::getIntraDirLumaPredictor(uint32_t absPartIdx, uint32_t* intraDirPred) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t* intraDirPred) const
CUData::getIntraTUQtDepthRange	../../source/common/cudata.cpp	/^void CUData::getIntraTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
CUData::getLastCodedQP	../../source/common/cudata.cpp	/^int8_t CUData::getLastCodedQP(uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx) const
CUData::getLastValidPartIdx	../../source/common/cudata.cpp	/^int CUData::getLastValidPartIdx(int absPartIdx) const$/;"	f	class:CUData	signature:(int absPartIdx) const
CUData::getMvField	../../source/common/cudata.cpp	/^void CUData::getMvField(const CUData* cu, uint32_t absPartIdx, int picList, MVField& outMvField) const$/;"	f	class:CUData	signature:(const CUData* cu, uint32_t absPartIdx, int picList, MVField& outMvField) const
CUData::getNeighbourMV	../../source/common/cudata.cpp	/^void CUData::getNeighbourMV(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const$/;"	f	class:CUData	signature:(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const
CUData::getPMV	../../source/common/cudata.cpp	/^int CUData::getPMV(InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx, MV* amvpCand, MV* pmv) const$/;"	f	class:CUData	signature:(InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx, MV* amvpCand, MV* pmv) const
CUData::getPUAbove	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAbove(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const
CUData::getPUAboveLeft	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAboveLeft(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const
CUData::getPUAboveRight	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAboveRight(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const
CUData::getPUAboveRightAdi	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAboveRightAdi(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const$/;"	f	class:CUData	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
CUData::getPUBelowLeft	../../source/common/cudata.cpp	/^const CUData* CUData::getPUBelowLeft(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const
CUData::getPUBelowLeftAdi	../../source/common/cudata.cpp	/^const CUData* CUData::getPUBelowLeftAdi(uint32_t& blPartUnitIdx,  uint32_t curPartUnitIdx, uint32_t partUnitOffset) const$/;"	f	class:CUData	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
CUData::getPULeft	../../source/common/cudata.cpp	/^const CUData* CUData::getPULeft(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const
CUData::getPartIndexAndSize	../../source/common/cudata.cpp	/^void CUData::getPartIndexAndSize(uint32_t partIdx, uint32_t& outPartAddr, int& outWidth, int& outHeight) const$/;"	f	class:CUData	signature:(uint32_t partIdx, uint32_t& outPartAddr, int& outWidth, int& outHeight) const
CUData::getQpMinCuAbove	../../source/common/cudata.cpp	/^const CUData* CUData::getQpMinCuAbove(uint32_t& aPartUnitIdx, uint32_t curAbsIdxInCTU) const$/;"	f	class:CUData	signature:(uint32_t& aPartUnitIdx, uint32_t curAbsIdxInCTU) const
CUData::getQpMinCuLeft	../../source/common/cudata.cpp	/^const CUData* CUData::getQpMinCuLeft(uint32_t& lPartUnitIdx, uint32_t curAbsIdxInCTU) const$/;"	f	class:CUData	signature:(uint32_t& lPartUnitIdx, uint32_t curAbsIdxInCTU) const
CUData::getRefQP	../../source/common/cudata.cpp	/^int8_t CUData::getRefQP(uint32_t curAbsIdxInCTU) const$/;"	f	class:CUData	signature:(uint32_t curAbsIdxInCTU) const
CUData::getTUEntropyCodingParameters	../../source/common/cudata.cpp	/^void CUData::getTUEntropyCodingParameters(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const$/;"	f	class:CUData	signature:(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const
CUData::hasEqualMotion	../../source/common/cudata.cpp	/^bool CUData::hasEqualMotion(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const
CUData::initCTU	../../source/common/cudata.cpp	/^void CUData::initCTU(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCuInSlice)$/;"	f	class:CUData	signature:(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCuInSlice)
CUData::initLosslessCU	../../source/common/cudata.cpp	/^void CUData::initLosslessCU(const CUData& cu, const CUGeom& cuGeom)$/;"	f	class:CUData	signature:(const CUData& cu, const CUGeom& cuGeom)
CUData::initSubCU	../../source/common/cudata.cpp	/^void CUData::initSubCU(const CUData& ctu, const CUGeom& cuGeom, int qp)$/;"	f	class:CUData	signature:(const CUData& ctu, const CUGeom& cuGeom, int qp)
CUData::initialize	../../source/common/cudata.cpp	/^void CUData::initialize(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance)$/;"	f	class:CUData	signature:(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance)
CUData::scaleMvByPOCDist	../../source/common/cudata.cpp	/^MV CUData::scaleMvByPOCDist(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const$/;"	f	class:CUData	signature:(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const
CUData::setAllPU	../../source/common/cudata.cpp	/^void CUData::setAllPU(T* p, const T& val, int absPartIdx, int puIdx)$/;"	f	class:CUData	signature:(T* p, const T& val, int absPartIdx, int puIdx)
CUData::setEmptyPart	../../source/common/cudata.cpp	/^void CUData::setEmptyPart(const CUGeom& childGeom, uint32_t subPartIdx)$/;"	f	class:CUData	signature:(const CUGeom& childGeom, uint32_t subPartIdx)
CUData::setPUInterDir	../../source/common/cudata.cpp	/^void CUData::setPUInterDir(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx)$/;"	f	class:CUData	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx)
CUData::setPUMv	../../source/common/cudata.cpp	/^void CUData::setPUMv(int list, const MV& mv, int absPartIdx, int puIdx)$/;"	f	class:CUData	signature:(int list, const MV& mv, int absPartIdx, int puIdx)
CUData::setPURefIdx	../../source/common/cudata.cpp	/^void CUData::setPURefIdx(int list, int8_t refIdx, int absPartIdx, int puIdx)$/;"	f	class:CUData	signature:(int list, int8_t refIdx, int absPartIdx, int puIdx)
CUData::setQPSubCUs	../../source/common/cudata.cpp	/^bool CUData::setQPSubCUs(int8_t qp, uint32_t absPartIdx, uint32_t depth)$/;"	f	class:CUData	signature:(int8_t qp, uint32_t absPartIdx, uint32_t depth)
CUData::updatePic	../../source/common/cudata.cpp	/^void CUData::updatePic(uint32_t depth, int picCsp) const$/;"	f	class:CUData	signature:(uint32_t depth, int picCsp) const
CUDataMemPool	../../source/common/cudata.h	/^    CUDataMemPool() { charMemBlock = NULL; trCoeffMemBlock = NULL; mvMemBlock = NULL; distortionMemBlock = NULL; }$/;"	f	struct:X265_NS::CUDataMemPool	access:public	signature:()
CUDataMemPool	../../source/common/cudata.h	/^struct CUDataMemPool$/;"	s	namespace:X265_NS
CUGeom	../../source/common/cudata.h	/^struct CUGeom$/;"	s	namespace:X265_NS
CUStats	../../source/encoder/search.h	/^    CUStats() { clear(); }$/;"	f	struct:X265_NS::CUStats	access:public	signature:()
CUStats	../../source/encoder/search.h	/^struct CUStats$/;"	s	namespace:X265_NS
CUTREE_FIX8	../../source/common/x86/mc-a2.asm	/^CUTREE_FIX8$/;"	l
CUTREE_PREDICT_LENGTH	../../source/encoder/slicetype.cpp	45;"	d	file:
CU_DQP_EG_k	../../source/encoder/entropy.cpp	36;"	d	file:
CU_DQP_TU_CMAX	../../source/encoder/entropy.cpp	35;"	d	file:
CU_SET_FLAG	../../source/common/cudata.cpp	2171;"	d	file:
Cache	../../source/encoder/weightPrediction.cpp	/^struct Cache$/;"	s	namespace:__anon22	file:
CalculateLogs	../../source/encoder/bitcost.cpp	/^void BitCost::CalculateLogs()$/;"	f	class:BitCost	signature:()
CalculateLogs	../../source/encoder/bitcost.h	/^    static void CalculateLogs();$/;"	p	class:X265_NS::BitCost	access:private	signature:()
Chroma	../../source/common/primitives.h	/^    struct Chroma$/;"	s	struct:X265_NS::EncoderPrimitives	access:public
ChromaCU420	../../source/common/primitives.h	/^enum ChromaCU420$/;"	g	namespace:X265_NS
ChromaCU422	../../source/common/primitives.h	/^enum ChromaCU422$/;"	g	namespace:X265_NS
ChromaPU420	../../source/common/primitives.h	/^enum ChromaPU420$/;"	g	namespace:X265_NS
ChromaPU422	../../source/common/primitives.h	/^enum ChromaPU422$/;"	g	namespace:X265_NS
ChromaQPMappingTableSize	../../source/common/constants.h	/^enum { ChromaQPMappingTableSize = 70 };$/;"	e	enum:X265_NS::__anon22
ConditionVariable	../../source/common/winxp.h	/^} ConditionVariable;$/;"	t	namespace:X265_NS	typeref:struct:X265_NS::__anon21
Coop	../../source/encoder/slicetype.h	/^    struct Coop$/;"	s	class:X265_NS::CostEstimateGroup	access:public
Cost	../../source/encoder/search.h	/^        Cost() { rdcost = 0; bits = 0; distortion = 0; energy = 0; }$/;"	f	struct:X265_NS::Search::Cost	access:public	signature:()
Cost	../../source/encoder/search.h	/^    struct Cost$/;"	s	class:X265_NS::Search	access:protected
CostEstimateGroup	../../source/encoder/slicetype.h	/^    CostEstimateGroup(Lookahead& l, Lowres** f) : m_lookahead(l), m_frames(f), m_batchMode(false) {}$/;"	f	class:X265_NS::CostEstimateGroup	access:public	signature:(Lookahead& l, Lowres** f)
CostEstimateGroup	../../source/encoder/slicetype.h	/^class CostEstimateGroup : public BondedTaskGroup$/;"	c	namespace:X265_NS	inherits:BondedTaskGroup
CostEstimateGroup::add	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::add(int p0, int p1, int b)$/;"	f	class:CostEstimateGroup	signature:(int p0, int p1, int b)
CostEstimateGroup::estimateCUCost	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::estimateCUCost(LookaheadTLD& tld, int cuX, int cuY, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice)$/;"	f	class:CostEstimateGroup	signature:(LookaheadTLD& tld, int cuX, int cuY, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice)
CostEstimateGroup::estimateFrameCost	../../source/encoder/slicetype.cpp	/^int64_t CostEstimateGroup::estimateFrameCost(LookaheadTLD& tld, int p0, int p1, int b, bool bIntraPenalty)$/;"	f	class:CostEstimateGroup	signature:(LookaheadTLD& tld, int p0, int p1, int b, bool bIntraPenalty)
CostEstimateGroup::finishBatch	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::finishBatch()$/;"	f	class:CostEstimateGroup	signature:()
CostEstimateGroup::processTasks	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::processTasks(int workerThreadID)$/;"	f	class:CostEstimateGroup	signature:(int workerThreadID)
CostEstimateGroup::singleCost	../../source/encoder/slicetype.cpp	/^int64_t CostEstimateGroup::singleCost(int p0, int p1, int b, bool intraPenalty)$/;"	f	class:CostEstimateGroup	signature:(int p0, int p1, int b, bool intraPenalty)
DCT16_ADD1	../../source/common/vec/dct-ssse3.cpp	38;"	d	file:
DCT16_ADD2	../../source/common/vec/dct-ssse3.cpp	41;"	d	file:
DCT16_SHIFT1	../../source/common/vec/dct-ssse3.cpp	37;"	d	file:
DCT16_SHIFT2	../../source/common/vec/dct-ssse3.cpp	40;"	d	file:
DCT32_ADD1	../../source/common/vec/dct-ssse3.cpp	44;"	d	file:
DCT32_ADD2	../../source/common/vec/dct-ssse3.cpp	47;"	d	file:
DCT32_SHIFT1	../../source/common/vec/dct-ssse3.cpp	43;"	d	file:
DCT32_SHIFT2	../../source/common/vec/dct-ssse3.cpp	46;"	d	file:
DC_IDX	../../source/common/common.h	305;"	d
DEBLOCK_SMALLEST_BLOCK	../../source/common/deblock.cpp	34;"	d	file:
DEBUG_BREAK	../../source/common/common.h	102;"	d
DEBUG_BREAK	../../source/common/common.h	104;"	d
DEBUG_BREAK	../../source/common/common.h	106;"	d
DECLARE_ARG	../../source/common/x86/x86inc.asm	/^DECLARE_ARG 7, 8, 9, 10, 11, 12, 13, 14$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 0,  rcx$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 0,  rdi$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 0, eax, 4$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 1,  rdx$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 1,  rsi$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 1, ecx, 8$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 10, rbp, 40$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 10, rbp, 88$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 11, R14, 48$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 11, R14, 96$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 12, R15, 104$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 12, R15, 56$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 13, R12, 112$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 13, R12, 64$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 14, R13, 120$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 14, R13, 72$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 2,  R8$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 2,  rdx$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 2, edx, 12$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 3,  R9$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 3,  rcx$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 3, ebx, 16$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 4,  R10, 40$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 4,  R8$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 4, esi, 20$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 5,  R11, 48$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 5,  R9$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 5, edi, 24$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 6,  rax, 56$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 6,  rax, 8$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 6, ebp, 28$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 7,  R10, 16$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 7,  rdi, 64$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 8,  R11, 24$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 8,  rsi, 72$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 9,  rbx, 32$/;"	l
DECLARE_REG	../../source/common/x86/x86inc.asm	/^DECLARE_REG 9,  rbx, 80$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE ax, al, ah$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE bp, bpl, null$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE bx, bl, bh$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE cx, cl, ch$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE di, dil, null$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE dx, dl, dh$/;"	l
DECLARE_REG_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_SIZE si, sil, null$/;"	l
DECLARE_REG_TMP_SIZE	../../source/common/x86/x86inc.asm	/^DECLARE_REG_TMP_SIZE 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14$/;"	l
DECL_ALL	../../source/common/x86/intrapred.h	68;"	d
DECL_ALL	../../source/common/x86/intrapred.h	89;"	d
DECL_ANG	../../source/common/x86/intrapred.h	30;"	d
DECL_ANG	../../source/common/x86/intrapred.h	91;"	d
DECL_ANGS	../../source/common/x86/intrapred.h	33;"	d
DECL_ANGS	../../source/common/x86/intrapred.h	90;"	d
DECL_PIXELS	../../source/common/x86/pixel.h	41;"	d
DECL_PIXELS	../../source/common/x86/pixel.h	69;"	d
DECL_SAO	../../source/common/x86/loopfilter.h	29;"	d
DEFAULT_INTRA_TC_OFFSET	../../source/common/deblock.cpp	35;"	d	file:
DEFINE_UTILS	../../source/common/x86/pixel-util.h	28;"	d
DEFINE_UTILS	../../source/common/x86/pixel-util.h	48;"	d
DELTARDCOST	../../source/common/quant.cpp	1388;"	d	file:
DIA1_ITER	../../source/encoder/motion.cpp	326;"	d	file:
DM_CHROMA_IDX	../../source/common/common.h	307;"	d
DONT_SPLIT	../../source/encoder/entropy.h	/^    DONT_SPLIT            = 0,$/;"	e	enum:X265_NS::SplitType
DPB	../../source/encoder/dpb.h	/^    DPB(x265_param *param)$/;"	f	class:X265_NS::DPB	access:public	signature:(x265_param *param)
DPB	../../source/encoder/dpb.h	/^class DPB$/;"	c	namespace:X265_NS
DPB::applyReferencePictureSet	../../source/encoder/dpb.cpp	/^void DPB::applyReferencePictureSet(RPS *rps, int curPoc)$/;"	f	class:DPB	signature:(RPS *rps, int curPoc)
DPB::arrangeLongtermPicturesInRPS	../../source/encoder/dpb.cpp	/^void DPB::arrangeLongtermPicturesInRPS(int curPoc, RPS * rps)$/;"	f	class:DPB	signature:(int curPoc, RPS * rps)
DPB::computeRPS	../../source/encoder/dpb.cpp	/^void DPB::computeRPS(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer)$/;"	f	class:DPB	signature:(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer)
DPB::decodingRefreshMarking	../../source/encoder/dpb.cpp	/^void DPB::decodingRefreshMarking(int pocCurr, NalUnitType nalUnitType)$/;"	f	class:DPB	signature:(int pocCurr, NalUnitType nalUnitType)
DPB::getLSB	../../source/encoder/dpb.cpp	/^int DPB::getLSB(int poc, int maxLSB)$/;"	f	class:DPB	signature:(int poc, int maxLSB)
DPB::getNalUnitType	../../source/encoder/dpb.cpp	/^NalUnitType DPB::getNalUnitType(int curPOC, bool bIsKeyFrame)$/;"	f	class:DPB	signature:(int curPOC, bool bIsKeyFrame)
DPB::prepareEncode	../../source/encoder/dpb.cpp	/^void DPB::prepareEncode(Frame *newFrame)$/;"	f	class:DPB	signature:(Frame *newFrame)
DPB::recycleUnreferenced	../../source/encoder/dpb.cpp	/^void DPB::recycleUnreferenced()$/;"	f	class:DPB	signature:()
DPB::~DPB	../../source/encoder/dpb.cpp	/^DPB::~DPB()$/;"	f	class:DPB	signature:()
Deblock	../../source/common/deblock.h	/^class Deblock$/;"	c	namespace:X265_NS
Deblock::deblockCTU	../../source/common/deblock.cpp	/^void Deblock::deblockCTU(const CUData* ctu, const CUGeom& cuGeom, int32_t dir)$/;"	f	class:Deblock	signature:(const CUData* ctu, const CUGeom& cuGeom, int32_t dir)
Deblock::deblockCU	../../source/common/deblock.cpp	/^void Deblock::deblockCU(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[])
Deblock::edgeFilterChroma	../../source/common/deblock.cpp	/^void Deblock::edgeFilterChroma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
Deblock::edgeFilterLuma	../../source/common/deblock.cpp	/^void Deblock::edgeFilterLuma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
Deblock::getBoundaryStrength	../../source/common/deblock.cpp	/^uint8_t Deblock::getBoundaryStrength(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[])
Deblock::s_betaTable	../../source/common/deblock.cpp	/^const uint8_t Deblock::s_betaTable[52] =$/;"	m	class:Deblock	file:
Deblock::s_tcTable	../../source/common/deblock.cpp	/^const uint8_t Deblock::s_tcTable[54] =$/;"	m	class:Deblock	file:
Deblock::setEdgefilterMultiple	../../source/common/deblock.cpp	/^void Deblock::setEdgefilterMultiple(uint32_t scanIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits)$/;"	f	class:Deblock	signature:(uint32_t scanIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits)
Deblock::setEdgefilterPU	../../source/common/deblock.cpp	/^void Deblock::setEdgefilterPU(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits)$/;"	f	class:Deblock	signature:(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits)
Deblock::setEdgefilterTU	../../source/common/deblock.cpp	/^void Deblock::setEdgefilterTU(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[])
EDGE_HOR	../../source/common/deblock.h	/^    enum { EDGE_VER, EDGE_HOR };$/;"	e	enum:X265_NS::Deblock::__anon4
EDGE_VER	../../source/common/deblock.h	/^    enum { EDGE_VER, EDGE_HOR };$/;"	e	enum:X265_NS::Deblock::__anon4
ELAPSED_MSEC	../../source/encoder/encoder.cpp	1489;"	d	file:
ELAPSED_MSEC	../../source/encoder/encoder.cpp	1596;"	d	file:
ELAPSED_MSEC	../../source/encoder/encoder.cpp	1771;"	d	file:
ELAPSED_SEC	../../source/encoder/encoder.cpp	1488;"	d	file:
ELAPSED_SEC	../../source/encoder/encoder.cpp	1595;"	d	file:
ELF	../../source/common/arm/asm.S	/^ELF     .eabi_attribute 24, \\val$/;"	l
ELF	../../source/common/arm/asm.S	/^ELF     .eabi_attribute 25, \\val$/;"	l
ELF	../../source/common/arm/asm.S	/^ELF     .hidden EXTERN_ASM\\name$/;"	l
ELF	../../source/common/arm/asm.S	/^ELF     .hidden \\name$/;"	l
ELF	../../source/common/arm/asm.S	/^ELF     .size   \\name, . - \\name$/;"	l
ELF	../../source/common/arm/asm.S	/^ELF     .type   EXTERN_ASM\\name, %function$/;"	l
ELF	../../source/common/arm/asm.S	/^ELF     .type   \\name, %function$/;"	l
ELIDE_CODE	../../source/compat/getopt/getopt.c	56;"	d	file:
ENABLE_THREADING	../../source/input/y4m.cpp	29;"	d	file:
ENABLE_THREADING	../../source/input/yuv.cpp	29;"	d	file:
EncStats	../../source/encoder/encoder.h	/^    EncStats()$/;"	f	struct:X265_NS::EncStats	access:public	signature:()
EncStats	../../source/encoder/encoder.h	/^struct EncStats$/;"	s	namespace:X265_NS
EncStats::addBits	../../source/encoder/encoder.cpp	/^void EncStats::addBits(uint64_t bits)$/;"	f	class:EncStats	signature:(uint64_t bits)
EncStats::addPsnr	../../source/encoder/encoder.cpp	/^void EncStats::addPsnr(double psnrY, double psnrU, double psnrV)$/;"	f	class:EncStats	signature:(double psnrY, double psnrU, double psnrV)
EncStats::addQP	../../source/encoder/encoder.cpp	/^void EncStats::addQP(double aveQp)$/;"	f	class:EncStats	signature:(double aveQp)
EncStats::addSsim	../../source/encoder/encoder.cpp	/^void EncStats::addSsim(double ssim)$/;"	f	class:EncStats	signature:(double ssim)
Encoder	../../source/encoder/encoder.cpp	/^Encoder::Encoder()$/;"	f	class:Encoder	signature:()
Encoder	../../source/encoder/encoder.h	/^    Encoder();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
Encoder	../../source/encoder/encoder.h	/^class Encoder : public x265_encoder$/;"	c	namespace:X265_NS	inherits:x265_encoder
Encoder::Encoder	../../source/encoder/encoder.cpp	/^Encoder::Encoder()$/;"	f	class:Encoder	signature:()
Encoder::allocAnalysis	../../source/encoder/encoder.cpp	/^void Encoder::allocAnalysis(x265_analysis_data* analysis)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis)
Encoder::allocAnalysis2Pass	../../source/encoder/encoder.cpp	/^void Encoder::allocAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis, int sliceType)
Encoder::analyseRefIdx	../../source/encoder/encoder.cpp	/^void Encoder::analyseRefIdx(int *numRefIdx)$/;"	f	class:Encoder	signature:(int *numRefIdx)
Encoder::calcRefreshInterval	../../source/encoder/encoder.cpp	/^void Encoder::calcRefreshInterval(Frame* frameEnc)$/;"	f	class:Encoder	signature:(Frame* frameEnc)
Encoder::computeSPSRPSIndex	../../source/encoder/encoder.cpp	/^bool Encoder::computeSPSRPSIndex()$/;"	f	class:Encoder	signature:()
Encoder::configure	../../source/encoder/encoder.cpp	/^void Encoder::configure(x265_param *p)$/;"	f	class:Encoder	signature:(x265_param *p)
Encoder::copyCtuInfo	../../source/encoder/encoder.cpp	/^void Encoder::copyCtuInfo(x265_ctu_info_t** frameCtuInfo, int poc)$/;"	f	class:Encoder	signature:(x265_ctu_info_t** frameCtuInfo, int poc)
Encoder::create	../../source/encoder/encoder.cpp	/^void Encoder::create()$/;"	f	class:Encoder	signature:()
Encoder::destroy	../../source/encoder/encoder.cpp	/^void Encoder::destroy()$/;"	f	class:Encoder	signature:()
Encoder::encode	../../source/encoder/encoder.cpp	/^int Encoder::encode(const x265_picture* pic_in, x265_picture* pic_out)$/;"	f	class:Encoder	signature:(const x265_picture* pic_in, x265_picture* pic_out)
Encoder::fetchStats	../../source/encoder/encoder.cpp	/^void Encoder::fetchStats(x265_stats *stats, size_t statsSizeBytes)$/;"	f	class:Encoder	signature:(x265_stats *stats, size_t statsSizeBytes)
Encoder::finishFrameStats	../../source/encoder/encoder.cpp	/^void Encoder::finishFrameStats(Frame* curFrame, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc)$/;"	f	class:Encoder	signature:(Frame* curFrame, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc)
Encoder::freeAnalysis	../../source/encoder/encoder.cpp	/^void Encoder::freeAnalysis(x265_analysis_data* analysis)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis)
Encoder::freeAnalysis2Pass	../../source/encoder/encoder.cpp	/^void Encoder::freeAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis, int sliceType)
Encoder::getStreamHeaders	../../source/encoder/encoder.cpp	/^void Encoder::getStreamHeaders(NALList& list, Entropy& sbacCoder, Bitstream& bs)$/;"	f	class:Encoder	signature:(NALList& list, Entropy& sbacCoder, Bitstream& bs)
Encoder::initPPS	../../source/encoder/encoder.cpp	/^void Encoder::initPPS(PPS *pps)$/;"	f	class:Encoder	signature:(PPS *pps)
Encoder::initRefIdx	../../source/encoder/encoder.cpp	/^void Encoder::initRefIdx()$/;"	f	class:Encoder	signature:()
Encoder::initSPS	../../source/encoder/encoder.cpp	/^void Encoder::initSPS(SPS *sps)$/;"	f	class:Encoder	signature:(SPS *sps)
Encoder::initVPS	../../source/encoder/encoder.cpp	/^void Encoder::initVPS(VPS *vps)$/;"	f	class:Encoder	signature:(VPS *vps)
Encoder::printReconfigureParams	../../source/encoder/encoder.cpp	/^void Encoder::printReconfigureParams()$/;"	f	class:Encoder	signature:()
Encoder::printSummary	../../source/encoder/encoder.cpp	/^void Encoder::printSummary()$/;"	f	class:Encoder	signature:()
Encoder::readAnalysis2PassFile	../../source/encoder/encoder.cpp	/^void Encoder::readAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, int curPoc, int sliceType)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis2Pass, int curPoc, int sliceType)
Encoder::readAnalysisFile	../../source/encoder/encoder.cpp	/^void Encoder::readAnalysisFile(x265_analysis_data* analysis, int curPoc, const x265_picture* picIn)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis, int curPoc, const x265_picture* picIn)
Encoder::reconfigureParam	../../source/encoder/encoder.cpp	/^int Encoder::reconfigureParam(x265_param* encParam, x265_param* param)$/;"	f	class:Encoder	signature:(x265_param* encParam, x265_param* param)
Encoder::statsString	../../source/encoder/encoder.cpp	/^char* Encoder::statsString(EncStats& stat, char* buffer)$/;"	f	class:Encoder	signature:(EncStats& stat, char* buffer)
Encoder::stopJobs	../../source/encoder/encoder.cpp	/^void Encoder::stopJobs()$/;"	f	class:Encoder	signature:()
Encoder::updateRefIdx	../../source/encoder/encoder.cpp	/^void Encoder::updateRefIdx()$/;"	f	class:Encoder	signature:()
Encoder::updateVbvPlan	../../source/encoder/encoder.cpp	/^void Encoder::updateVbvPlan(RateControl* rc)$/;"	f	class:Encoder	signature:(RateControl* rc)
Encoder::writeAnalysis2PassFile	../../source/encoder/encoder.cpp	/^void Encoder::writeAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype)
Encoder::writeAnalysisFile	../../source/encoder/encoder.cpp	/^void Encoder::writeAnalysisFile(x265_analysis_data* analysis, FrameData &curEncData)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis, FrameData &curEncData)
EncoderPrimitives	../../source/common/primitives.h	/^struct EncoderPrimitives$/;"	s	namespace:X265_NS
Entropy	../../source/encoder/entropy.cpp	/^Entropy::Entropy()$/;"	f	class:X265_NS::Entropy	signature:()
Entropy	../../source/encoder/entropy.h	/^    Entropy();$/;"	p	class:X265_NS::Entropy	access:public	signature:()
Entropy	../../source/encoder/entropy.h	/^class Entropy : public SyntaxElementWriter$/;"	c	namespace:X265_NS	inherits:SyntaxElementWriter
EstBitsSbac	../../source/encoder/entropy.h	/^struct EstBitsSbac$/;"	s	namespace:X265_NS
Estimate	../../source/encoder/slicetype.h	/^    struct Estimate$/;"	s	class:X265_NS::CostEstimateGroup	access:public
Event	../../source/common/threading.h	/^    Event()$/;"	f	class:X265_NS::Event	access:public	signature:()
Event	../../source/common/threading.h	/^class Event$/;"	c	namespace:X265_NS
F1	../../source/common/md5.cpp	172;"	d	file:
F2	../../source/common/md5.cpp	173;"	d	file:
F3	../../source/common/md5.cpp	174;"	d	file:
F4	../../source/common/md5.cpp	175;"	d	file:
FDEC_STRIDE	../../source/common/arm/asm.S	/^#define FDEC_STRIDE 32$/;"	d
FENC_STRIDE	../../source/common/arm/asm.S	/^#define FENC_STRIDE 64$/;"	d
FENC_STRIDE	../../source/common/common.h	70;"	d
FILLER_OVERHEAD	../../source/common/common.h	335;"	d
FILTER	../../source/common/pixel.cpp	606;"	d	file:
FILTER	../../source/common/pixel.cpp	611;"	d	file:
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 2, 16, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 2, 16, ps, 7, 5, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 2, 4, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 2, 4, ps, 7, 5, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 2, 8, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 2, 8, ps, 7, 5, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 16, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 16, ps, 7, 6, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 2, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 2, ps, 7, 6, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 32, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 32, ps, 7, 6, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 4, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 4, ps, 7, 6, 6$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 8, pp, 6, 8, 5$/;"	l
FILTER_CHROMA_H	../../source/common/x86/ipfilter16.asm	/^FILTER_CHROMA_H 4, 8, ps, 7, 6, 6$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 12, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 12, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 12, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 12, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 12, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 12, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 24, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 24, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 4, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 4, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 64, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 64, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 8, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 16, 8, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 2, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 2, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 2, 4, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 2, 4, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 2, 8, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 2, 8, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 24, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 24, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 24, 64, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 24, 64, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 24, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 24, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 48, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 48, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 64, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 64, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 8, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 32, 8, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 2, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 2, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 4, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 4, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 8, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 4, 8, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 48, 64, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 48, 64, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 6, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 6, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 6, 8, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 6, 8, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 48, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 48, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 64, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 64, 64, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 12, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 12, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 16, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 16, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 2, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 2, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 32, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 32, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 4, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 4, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 6, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 6, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 64, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 64, ps$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 8, pp$/;"	l
FILTER_HOR_CHROMA_sse3	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_CHROMA_sse3 8, 8, ps$/;"	l
FILTER_HOR_LUMA_W12	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W12 12, 16, pp$/;"	l
FILTER_HOR_LUMA_W12	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W12 12, 16, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 12$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 12, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 12, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 16, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 16, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 32, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 32, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 4, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 4, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 64, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 64, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 8, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 16, 8, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 16, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 16, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 24, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 24, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 32, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 32, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 64, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 64, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 8, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 32, 8, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 4$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 48, 64, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 48, 64, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 16, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 16, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 32, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 32, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 48, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 48, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 64, pp$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 64, 64, ps$/;"	l
FILTER_HOR_LUMA_W16	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W16 8$/;"	l
FILTER_HOR_LUMA_W24	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W24 24, 32, pp$/;"	l
FILTER_HOR_LUMA_W24	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W24 24, 32, ps$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 32, 16$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 32, 24$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 32, 32$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 32, 64$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 32, 8$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 64, 16$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 64, 32$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 64, 48$/;"	l
FILTER_HOR_LUMA_W32	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W32 64, 64$/;"	l
FILTER_HOR_LUMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4 4, 16, pp$/;"	l
FILTER_HOR_LUMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4 4, 16, ps$/;"	l
FILTER_HOR_LUMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4 4, 4, pp$/;"	l
FILTER_HOR_LUMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4 4, 4, ps$/;"	l
FILTER_HOR_LUMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4 4, 8, pp$/;"	l
FILTER_HOR_LUMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4 4, 8, ps$/;"	l
FILTER_HOR_LUMA_W4_avx2	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4_avx2 16$/;"	l
FILTER_HOR_LUMA_W4_avx2	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4_avx2 4$/;"	l
FILTER_HOR_LUMA_W4_avx2	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W4_avx2 8$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 16$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 32$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 4$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 16, pp$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 16, ps$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 32, pp$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 32, ps$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 4, pp$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 4, ps$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 8, pp$/;"	l
FILTER_HOR_LUMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_HOR_LUMA_W8 8, 8, ps$/;"	l
FILTER_VER_CHROMA_AVX2_4x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x2 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x2 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_4x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x2 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_4x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x2 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x4 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x4 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x4 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x4 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x8 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x8 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x8 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4x8 ss, 0 , 6$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN pp, 16, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN pp, 32, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN ps, 16, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN ps, 32, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN sp, 16, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN sp, 32, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN ss, 16, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_4xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_4xN ss, 32, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 16, pp$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 16, ps$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 16, sp$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 16, ss$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 8, pp$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 8, ps$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 8, sp$/;"	l
FILTER_VER_CHROMA_AVX2_6xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_6xN 8, ss$/;"	l
FILTER_VER_CHROMA_AVX2_8x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x12 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x12 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_8x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x12 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_8x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x12 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x2 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x2 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_8x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x2 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_8x2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x2 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x4 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x4 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x4 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x4 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x6 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x6 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_8x6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x6 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_8x6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x6 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x8 pp, 1, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x8 ps, 0, INTERP_SHIFT_PS$/;"	l
FILTER_VER_CHROMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x8 sp, 1, INTERP_SHIFT_SP$/;"	l
FILTER_VER_CHROMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8x8 ss, 0, 6$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN pp, 16$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN pp, 32$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN pp, 64$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN ps, 16$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN ps, 32$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN ps, 64$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN sp, 16$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN sp, 32$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN sp, 64$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN ss, 16$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN ss, 32$/;"	l
FILTER_VER_CHROMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_AVX2_8xN ss, 64$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 16, pp, 8$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 16, ps, 6$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 16, sp, 8$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 16, ss, 5$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 4, pp, 8$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 4, ps, 6$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 4, sp, 8$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 4, ss, 5$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 8, pp, 8$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 8, ps, 6$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 8, sp, 8$/;"	l
FILTER_VER_CHROMA_W2	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W2 8, ss, 5$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 2, pp, 7$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 2, ps, 5$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 2, sp, 7$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 2, ss, 4$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 4, pp, 7$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 4, ps, 5$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 4, sp, 7$/;"	l
FILTER_VER_CHROMA_W4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W4 4, ss, 4$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 16, pp, 8$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 16, ps, 7$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 16, sp, 8$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 16, ss, 6$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 8, pp, 8$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 8, ps, 7$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 8, sp, 8$/;"	l
FILTER_VER_CHROMA_W6	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W6 8, ss, 6$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 12, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 12, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 12, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 12, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 16, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 16, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 16, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 16, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 2, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 2, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 2, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 2, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 32, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 32, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 32, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 32, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 4, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 4, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 4, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 4, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 6, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 6, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 6, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 6, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 64, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 64, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 64, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 64, ss, 7$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 8, pp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 8, ps, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 8, sp, 8$/;"	l
FILTER_VER_CHROMA_W8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_CHROMA_W8 8, 8, ss, 7$/;"	l
FILTER_VER_LUMA_AVX2_12x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_12x16 pp$/;"	l
FILTER_VER_LUMA_AVX2_12x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_12x16 ps$/;"	l
FILTER_VER_LUMA_AVX2_12x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_12x16 sp$/;"	l
FILTER_VER_LUMA_AVX2_12x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_12x16 ss$/;"	l
FILTER_VER_LUMA_AVX2_16x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x12 pp$/;"	l
FILTER_VER_LUMA_AVX2_16x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x12 ps$/;"	l
FILTER_VER_LUMA_AVX2_16x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x12 sp$/;"	l
FILTER_VER_LUMA_AVX2_16x12	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x12 ss$/;"	l
FILTER_VER_LUMA_AVX2_16x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x4 pp$/;"	l
FILTER_VER_LUMA_AVX2_16x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x4 ps$/;"	l
FILTER_VER_LUMA_AVX2_16x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x4 sp$/;"	l
FILTER_VER_LUMA_AVX2_16x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_16x4 ss$/;"	l
FILTER_VER_LUMA_AVX2_32x24	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_32x24 pp$/;"	l
FILTER_VER_LUMA_AVX2_32x24	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_32x24 ps$/;"	l
FILTER_VER_LUMA_AVX2_32x24	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_32x24 sp$/;"	l
FILTER_VER_LUMA_AVX2_32x24	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_32x24 ss$/;"	l
FILTER_VER_LUMA_AVX2_4x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x16 pp$/;"	l
FILTER_VER_LUMA_AVX2_4x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x16 ps$/;"	l
FILTER_VER_LUMA_AVX2_4x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x16 sp$/;"	l
FILTER_VER_LUMA_AVX2_4x16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x16 ss$/;"	l
FILTER_VER_LUMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x4 pp$/;"	l
FILTER_VER_LUMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x4 ps$/;"	l
FILTER_VER_LUMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x4 sp$/;"	l
FILTER_VER_LUMA_AVX2_4x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x4 ss$/;"	l
FILTER_VER_LUMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x8 pp$/;"	l
FILTER_VER_LUMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x8 ps$/;"	l
FILTER_VER_LUMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x8 sp$/;"	l
FILTER_VER_LUMA_AVX2_4x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_4x8 ss$/;"	l
FILTER_VER_LUMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x4 pp$/;"	l
FILTER_VER_LUMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x4 ps$/;"	l
FILTER_VER_LUMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x4 sp$/;"	l
FILTER_VER_LUMA_AVX2_8x4	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x4 ss$/;"	l
FILTER_VER_LUMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x8 pp$/;"	l
FILTER_VER_LUMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x8 ps$/;"	l
FILTER_VER_LUMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x8 sp$/;"	l
FILTER_VER_LUMA_AVX2_8x8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8x8 ss$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN pp, 16$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN pp, 32$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN ps, 16$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN ps, 32$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN sp, 16$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN sp, 32$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN ss, 16$/;"	l
FILTER_VER_LUMA_AVX2_8xN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_8xN ss, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 pp, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 pp, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 pp, 64$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 ps, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 ps, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 ps, 64$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 sp, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 sp, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 sp, 64$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 ss, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 ss, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx16	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx16 ss, 64$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 pp, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 pp, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 ps, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 ps, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 sp, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 sp, 32$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 ss, 16$/;"	l
FILTER_VER_LUMA_AVX2_Nx8	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_Nx8 ss, 32$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 32, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 32, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 32, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 32, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 64, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 64, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 64, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 16, 64, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 24, 32, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 24, 32, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 24, 32, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 24, 32, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 32, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 32, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 32, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 32, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 64, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 64, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 64, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 32, 64, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 48, 64, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 48, 64, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 48, 64, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 48, 64, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 32, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 32, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 32, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 32, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 48, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 48, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 48, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 48, ss$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 64, pp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 64, ps$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 64, sp$/;"	l
FILTER_VER_LUMA_AVX2_NxN	../../source/common/x86/ipfilter16.asm	/^FILTER_VER_LUMA_AVX2_NxN 64, 64, ss$/;"	l
FIX8PACK	../../source/common/x86/mc.h	57;"	d
FIX8PACK	../../source/common/x86/mc.h	63;"	d
FIX8UNPACK	../../source/common/x86/mc.h	49;"	d
FIX8UNPACK	../../source/common/x86/mc.h	55;"	d
FMA4_INSTR	../../source/common/x86/x86inc.asm	/^FMA4_INSTR fmadd,    pd, ps, sd, ss$/;"	l
FMA4_INSTR	../../source/common/x86/x86inc.asm	/^FMA4_INSTR fmaddsub, pd, ps$/;"	l
FMA4_INSTR	../../source/common/x86/x86inc.asm	/^FMA4_INSTR fmsub,    pd, ps, sd, ss$/;"	l
FMA4_INSTR	../../source/common/x86/x86inc.asm	/^FMA4_INSTR fmsubadd, pd, ps$/;"	l
FMA4_INSTR	../../source/common/x86/x86inc.asm	/^FMA4_INSTR fnmadd,   pd, ps, sd, ss$/;"	l
FMA4_INSTR	../../source/common/x86/x86inc.asm	/^FMA4_INSTR fnmsub,   pd, ps, sd, ss$/;"	l
FMA_INSTR	../../source/common/x86/x86inc.asm	/^FMA_INSTR  pmacsdd,  pmulld, paddd ; sse4 emulation$/;"	l
FMA_INSTR	../../source/common/x86/x86inc.asm	/^FMA_INSTR  pmacsww,  pmullw, paddw$/;"	l
FMA_INSTR	../../source/common/x86/x86inc.asm	/^FMA_INSTR pmacsdql,  pmuldq, paddq ; sse4 emulation$/;"	l
FMA_INSTR	../../source/common/x86/x86inc.asm	/^FMA_INSTR pmadcswd, pmaddwd, paddd$/;"	l
FRAME_INIT_LOWRES	../../source/common/x86/mc-a2.asm	/^FRAME_INIT_LOWRES$/;"	l
FUNC	../../source/common/arm/asm.S	/^FUNC    .endfunc$/;"	l
FUNC	../../source/common/arm/asm.S	/^FUNC    .func   EXTERN_ASM\\name$/;"	l
FUNC	../../source/common/arm/asm.S	/^FUNC    .func   \\name$/;"	l
FUNCDEF_CHROMA_PU	../../source/common/x86/asm-primitives.cpp	79;"	d	file:
FUNCDEF_PU	../../source/common/x86/asm-primitives.cpp	52;"	d	file:
FUNCDEF_TU	../../source/common/x86/asm-primitives.cpp	31;"	d	file:
FUNCDEF_TU_S	../../source/common/x86/asm-primitives.cpp	38;"	d	file:
FUNCDEF_TU_S2	../../source/common/x86/asm-primitives.cpp	45;"	d	file:
Frame	../../source/common/frame.cpp	/^Frame::Frame()$/;"	f	class:Frame	signature:()
Frame	../../source/common/frame.h	/^    Frame();$/;"	p	class:X265_NS::Frame	access:public	signature:()
Frame	../../source/common/frame.h	/^class Frame$/;"	c	namespace:X265_NS
Frame::Frame	../../source/common/frame.cpp	/^Frame::Frame()$/;"	f	class:Frame	signature:()
Frame::allocEncodeData	../../source/common/frame.cpp	/^bool Frame::allocEncodeData(x265_param *param, const SPS& sps)$/;"	f	class:Frame	signature:(x265_param *param, const SPS& sps)
Frame::create	../../source/common/frame.cpp	/^bool Frame::create(x265_param *param, float* quantOffsets)$/;"	f	class:Frame	signature:(x265_param *param, float* quantOffsets)
Frame::destroy	../../source/common/frame.cpp	/^void Frame::destroy()$/;"	f	class:Frame	signature:()
Frame::reinit	../../source/common/frame.cpp	/^void Frame::reinit(const SPS& sps)$/;"	f	class:Frame	signature:(const SPS& sps)
FrameData	../../source/common/framedata.cpp	/^FrameData::FrameData()$/;"	f	class:FrameData	signature:()
FrameData	../../source/common/framedata.h	/^    FrameData();$/;"	p	class:X265_NS::FrameData	access:public	signature:()
FrameData	../../source/common/framedata.h	/^class FrameData$/;"	c	namespace:X265_NS
FrameData::FrameData	../../source/common/framedata.cpp	/^FrameData::FrameData()$/;"	f	class:FrameData	signature:()
FrameData::create	../../source/common/framedata.cpp	/^bool FrameData::create(const x265_param& param, const SPS& sps, int csp)$/;"	f	class:FrameData	signature:(const x265_param& param, const SPS& sps, int csp)
FrameData::destroy	../../source/common/framedata.cpp	/^void FrameData::destroy()$/;"	f	class:FrameData	signature:()
FrameData::reinit	../../source/common/framedata.cpp	/^void FrameData::reinit(const SPS& sps)$/;"	f	class:FrameData	signature:(const SPS& sps)
FrameEncoder	../../source/encoder/frameencoder.cpp	/^FrameEncoder::FrameEncoder()$/;"	f	class:X265_NS::FrameEncoder	signature:()
FrameEncoder	../../source/encoder/frameencoder.h	/^    FrameEncoder();$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:()
FrameEncoder	../../source/encoder/frameencoder.h	/^class FrameEncoder : public WaveFront, public Thread$/;"	c	namespace:X265_NS	inherits:WaveFront,Thread
FrameFilter	../../source/encoder/framefilter.h	/^    FrameFilter()$/;"	f	class:X265_NS::FrameFilter	access:public	signature:()
FrameFilter	../../source/encoder/framefilter.h	/^class FrameFilter$/;"	c	namespace:X265_NS
FrameFilter::ParallelFilter::copySaoAboveRef	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::copySaoAboveRef(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col)$/;"	f	class:FrameFilter::ParallelFilter	signature:(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col)
FrameFilter::ParallelFilter::processPostCu	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::processPostCu(int col) const$/;"	f	class:FrameFilter::ParallelFilter	signature:(int col) const
FrameFilter::ParallelFilter::processSaoCTU	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::processSaoCTU(SAOParam *saoParam, int col)$/;"	f	class:FrameFilter::ParallelFilter	signature:(SAOParam *saoParam, int col)
FrameFilter::ParallelFilter::processTasks	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::processTasks(int \/*workerThreadId*\/)$/;"	f	class:FrameFilter::ParallelFilter	signature:(int )
FrameFilter::computeMEIntegral	../../source/encoder/framefilter.cpp	/^void FrameFilter::computeMEIntegral(int row)$/;"	f	class:FrameFilter	signature:(int row)
FrameFilter::destroy	../../source/encoder/framefilter.cpp	/^void FrameFilter::destroy()$/;"	f	class:FrameFilter	signature:()
FrameFilter::init	../../source/encoder/framefilter.cpp	/^void FrameFilter::init(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols)$/;"	f	class:FrameFilter	signature:(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols)
FrameFilter::processPostRow	../../source/encoder/framefilter.cpp	/^void FrameFilter::processPostRow(int row)$/;"	f	class:FrameFilter	signature:(int row)
FrameFilter::processRow	../../source/encoder/framefilter.cpp	/^void FrameFilter::processRow(int row)$/;"	f	class:FrameFilter	signature:(int row)
FrameFilter::start	../../source/encoder/framefilter.cpp	/^void FrameFilter::start(Frame *frame, Entropy& initState)$/;"	f	class:FrameFilter	signature:(Frame *frame, Entropy& initState)
FrameStats	../../source/common/framedata.h	/^    FrameStats()$/;"	f	struct:X265_NS::FrameStats	access:public	signature:()
FrameStats	../../source/common/framedata.h	/^struct FrameStats$/;"	s	namespace:X265_NS
GCC_VERSION	../../source/common/vec/vec-primitives.cpp	35;"	d	file:
GETOPT_INTERFACE_VERSION	../../source/compat/getopt/getopt.c	52;"	d	file:
GIVE_UP_TIME	../../source/common/threading.h	67;"	d
GLUE	../../source/common/arm/asm.S	/^#define GLUE(a, b) a ## b$/;"	d
HADAMARD4	../../source/common/pixel.cpp	189;"	d	file:
HADAMARD4_VEC	../../source/common/ppc/pixel_altivec.cpp	1162;"	d	file:
HADAMARD4_x2vec	../../source/common/ppc/pixel_altivec.cpp	1299;"	d	file:
HAVE_AVX2	../../source/common/vec/vec-primitives.cpp	33;"	d	file:
HAVE_AVX2	../../source/common/vec/vec-primitives.cpp	42;"	d	file:
HAVE_AVX2	../../source/common/vec/vec-primitives.cpp	49;"	d	file:
HAVE_SSE3	../../source/common/vec/vec-primitives.cpp	30;"	d	file:
HAVE_SSE3	../../source/common/vec/vec-primitives.cpp	37;"	d	file:
HAVE_SSE3	../../source/common/vec/vec-primitives.cpp	45;"	d	file:
HAVE_SSE4	../../source/common/vec/vec-primitives.cpp	32;"	d	file:
HAVE_SSE4	../../source/common/vec/vec-primitives.cpp	39;"	d	file:
HAVE_SSE4	../../source/common/vec/vec-primitives.cpp	47;"	d	file:
HAVE_SSSE3	../../source/common/vec/vec-primitives.cpp	31;"	d	file:
HAVE_SSSE3	../../source/common/vec/vec-primitives.cpp	38;"	d	file:
HAVE_SSSE3	../../source/common/vec/vec-primitives.cpp	46;"	d	file:
HEVC_SAD	../../source/common/x86/asm-primitives.cpp	338;"	d	file:
HEVC_SAD_X3	../../source/common/x86/asm-primitives.cpp	357;"	d	file:
HEVC_SAD_X4	../../source/common/x86/asm-primitives.cpp	375;"	d	file:
HEVC_SSD	../../source/common/x86/ssd-a.asm	/^HEVC_SSD$/;"	l
HIGH	../../source/common/slice.h	/^        HIGH = 1,$/;"	e	enum:X265_NS::Level::Tier
HIGHTHROUGHPUTREXT	../../source/common/slice.h	/^        HIGHTHROUGHPUTREXT = 5$/;"	e	enum:X265_NS::Profile::Name
HOR_IDX	../../source/common/common.h	304;"	d
HRDInfo	../../source/common/slice.h	/^    HRDInfo()$/;"	f	struct:X265_NS::HRDInfo	access:public	signature:()
HRDInfo	../../source/common/slice.h	/^struct HRDInfo$/;"	s	namespace:X265_NS
HRDTiming	../../source/encoder/ratecontrol.h	/^struct HRDTiming$/;"	s	namespace:X265_NS
IEP_RATE	../../source/common/quant.h	/^    enum { IEP_RATE = 32768 }; \/* FIX15 cost of an equal probable bit *\/$/;"	e	enum:X265_NS::Quant::__anon3
IF_FILTER_PREC	../../source/common/constants.h	69;"	d
IF_INTERNAL_OFFS	../../source/common/constants.h	70;"	d
IF_INTERNAL_PREC	../../source/common/constants.h	68;"	d
INIT_ABS_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_ABS_FLAG[3][NUM_ABS_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_CHROMA_PRED_MODE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_CHROMA_PRED_MODE[3][NUM_CHROMA_PRED_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_CPUFLAGS	../../source/common/x86/pixel-util8.asm	/^INIT_CPUFLAGS$/;"	l
INIT_CU_TRANSQUANT_BYPASS_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_CU_TRANSQUANT_BYPASS_FLAG[3][NUM_TQUANT_BYPASS_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_DQP	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_DQP[3][NUM_DELTA_QP_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_INTER_DIR	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_INTER_DIR[3][NUM_INTER_DIR_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_INTRA_PRED_MODE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_INTRA_PRED_MODE[3][NUM_ADI_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_LAST	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_LAST[3][NUM_CTX_LAST_FLAG_XY] =$/;"	m	namespace:X265_NS	file:
INIT_MERGE_FLAG_EXT	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MERGE_FLAG_EXT[3][NUM_MERGE_FLAG_EXT_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_MERGE_IDX_EXT	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MERGE_IDX_EXT[3][NUM_MERGE_IDX_EXT_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_MMX	../../source/common/x86/mc-a.asm	/^INIT_MMX mmx$/;"	l
INIT_MMX	../../source/common/x86/mc-a.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/mc-a.asm	/^INIT_MMX ssse3$/;"	l
INIT_MMX	../../source/common/x86/mc-a.asm	/^INIT_MMX$/;"	l
INIT_MMX	../../source/common/x86/mc-a2.asm	/^INIT_MMX cache32, mmx2$/;"	l
INIT_MMX	../../source/common/x86/mc-a2.asm	/^INIT_MMX mmx$/;"	l
INIT_MMX	../../source/common/x86/mc-a2.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/mc-a2.asm	/^INIT_MMX$/;"	l
INIT_MMX	../../source/common/x86/pixel-32.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/pixel-a.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/pixel-util8.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/sad-a.asm	/^INIT_MMX$/;"	l
INIT_MMX	../../source/common/x86/sad16-a.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/sad16-a.asm	/^INIT_MMX ssse3$/;"	l
INIT_MMX	../../source/common/x86/ssd-a.asm	/^INIT_MMX mmx$/;"	l
INIT_MMX	../../source/common/x86/ssd-a.asm	/^INIT_MMX mmx2$/;"	l
INIT_MMX	../../source/common/x86/ssd-a.asm	/^INIT_MMX ssse3$/;"	l
INIT_MVD	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MVD[3][NUM_MV_RES_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_MVP_IDX	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MVP_IDX[3][NUM_MVP_IDX_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_ONE_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_ONE_FLAG[3][NUM_ONE_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_PART_SIZE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_PART_SIZE[3][NUM_PART_SIZE_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_PRED_MODE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_PRED_MODE[3][NUM_PRED_MODE_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_QT_CBF	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_QT_CBF[3][NUM_QT_CBF_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_QT_ROOT_CBF	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_QT_ROOT_CBF[3][NUM_QT_ROOT_CBF_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_REF_PIC	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_REF_PIC[3][NUM_REF_NO_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_SAO_MERGE_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SAO_MERGE_FLAG[3][NUM_SAO_MERGE_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_SAO_TYPE_IDX	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SAO_TYPE_IDX[3][NUM_SAO_TYPE_IDX_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_SIG_CG_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SIG_CG_FLAG[3][2 * NUM_SIG_CG_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_SIG_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SIG_FLAG[3][NUM_SIG_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_SKIP_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SKIP_FLAG[3][NUM_SKIP_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_SPLIT_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SPLIT_FLAG[3][NUM_SPLIT_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_TRANSFORMSKIP_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_TRANSFORMSKIP_FLAG[3][2 * NUM_TRANSFORMSKIP_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_TRANS_SUBDIV_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_TRANS_SUBDIV_FLAG[3][NUM_TRANS_SUBDIV_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
INIT_XMM	../../source/common/x86/blockcopy8.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/blockcopy8.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/dct8.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/dct8.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/dct8.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/intrapred16.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/intrapred16.asm	/^INIT_XMM sse4    $/;"	l
INIT_XMM	../../source/common/x86/intrapred16.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/intrapred16.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/intrapred8.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/intrapred8.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/intrapred8.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/intrapred8_allangs.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/intrapred8_allangs.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/ipfilter16.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/ipfilter16.asm	/^INIT_XMM sse3$/;"	l
INIT_XMM	../../source/common/x86/ipfilter16.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/ipfilter16.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/ipfilter8.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/ipfilter8.asm	/^INIT_XMM sse3$/;"	l
INIT_XMM	../../source/common/x86/ipfilter8.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/ipfilter8.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/loopfilter.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM aligned, sse$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM avx2$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM sse$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/mc-a.asm	/^INIT_XMM$/;"	l
INIT_XMM	../../source/common/x86/mc-a2.asm	/^INIT_XMM avx$/;"	l
INIT_XMM	../../source/common/x86/mc-a2.asm	/^INIT_XMM sse$/;"	l
INIT_XMM	../../source/common/x86/mc-a2.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/mc-a2.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/mc-a2.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/mc-a2.asm	/^INIT_XMM xop$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM avx$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM avx2$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM ssse3,atom$/;"	l
INIT_XMM	../../source/common/x86/pixel-a.asm	/^INIT_XMM xop$/;"	l
INIT_XMM	../../source/common/x86/pixel-util8.asm	/^INIT_XMM avx$/;"	l
INIT_XMM	../../source/common/x86/pixel-util8.asm	/^INIT_XMM avx2,bmi2$/;"	l
INIT_XMM	../../source/common/x86/pixel-util8.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/pixel-util8.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/pixel-util8.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/pixel-util8.asm	/^INIT_XMM xop$/;"	l
INIT_XMM	../../source/common/x86/pixeladd8.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/pixeladd8.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/sad-a.asm	/^INIT_XMM avx$/;"	l
INIT_XMM	../../source/common/x86/sad-a.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/sad-a.asm	/^INIT_XMM sse2, aligned$/;"	l
INIT_XMM	../../source/common/x86/sad-a.asm	/^INIT_XMM sse3$/;"	l
INIT_XMM	../../source/common/x86/sad-a.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/sad-a.asm	/^INIT_XMM$/;"	l
INIT_XMM	../../source/common/x86/sad16-a.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/sad16-a.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/sad16-a.asm	/^INIT_XMM xop$/;"	l
INIT_XMM	../../source/common/x86/ssd-a.asm	/^INIT_XMM avx$/;"	l
INIT_XMM	../../source/common/x86/ssd-a.asm	/^INIT_XMM sse2$/;"	l
INIT_XMM	../../source/common/x86/ssd-a.asm	/^INIT_XMM sse2slow$/;"	l
INIT_XMM	../../source/common/x86/ssd-a.asm	/^INIT_XMM sse4$/;"	l
INIT_XMM	../../source/common/x86/ssd-a.asm	/^INIT_XMM ssse3$/;"	l
INIT_XMM	../../source/common/x86/ssd-a.asm	/^INIT_XMM xop$/;"	l
INIT_XMM	../../source/common/x86/x86inc.asm	/^INIT_XMM$/;"	l
INIT_YMM	../../source/common/x86/blockcopy8.asm	/^INIT_YMM avx$/;"	l
INIT_YMM	../../source/common/x86/blockcopy8.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/dct8.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/intrapred16.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/intrapred8.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/intrapred8_allangs.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/ipfilter16.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/ipfilter8.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/loopfilter.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/mc-a.asm	/^INIT_YMM aligned, avx$/;"	l
INIT_YMM	../../source/common/x86/mc-a.asm	/^INIT_YMM avx$/;"	l
INIT_YMM	../../source/common/x86/mc-a.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/mc-a2.asm	/^INIT_YMM avx$/;"	l
INIT_YMM	../../source/common/x86/mc-a2.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/pixel-a.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/pixel-util8.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/pixel-util8.asm	/^INIT_YMM avx2,bmi2$/;"	l
INIT_YMM	../../source/common/x86/pixeladd8.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/sad-a.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/sad16-a.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/seaintegral.asm	/^INIT_YMM avx2$/;"	l
INIT_YMM	../../source/common/x86/ssd-a.asm	/^INIT_YMM avx2$/;"	l
INT16_MAX	../../source/compat/msvc/stdint.h	12;"	d
INT64_MAX	../../source/compat/msvc/stdint.h	11;"	d
INTEGRAL_12	../../source/common/primitives.h	/^    INTEGRAL_12,$/;"	e	enum:X265_NS::IntegralSize
INTEGRAL_16	../../source/common/primitives.h	/^    INTEGRAL_16,$/;"	e	enum:X265_NS::IntegralSize
INTEGRAL_24	../../source/common/primitives.h	/^    INTEGRAL_24,$/;"	e	enum:X265_NS::IntegralSize
INTEGRAL_32	../../source/common/primitives.h	/^    INTEGRAL_32,$/;"	e	enum:X265_NS::IntegralSize
INTEGRAL_4	../../source/common/primitives.h	/^    INTEGRAL_4,$/;"	e	enum:X265_NS::IntegralSize
INTEGRAL_8	../../source/common/primitives.h	/^    INTEGRAL_8,$/;"	e	enum:X265_NS::IntegralSize
INTEGRAL_INIT4H	../../source/common/x86/mc-a2.asm	/^INTEGRAL_INIT4H$/;"	l
INTEGRAL_INIT8H	../../source/common/x86/mc-a2.asm	/^INTEGRAL_INIT8H$/;"	l
INTEGRAL_INIT_8V	../../source/common/x86/mc-a2.asm	/^INTEGRAL_INIT_8V$/;"	l
INTEGRAL_PLANE_NUM	../../source/common/common.h	331;"	d
INTER_MODES	../../source/common/framedata.h	37;"	d
INTRA	../../source/common/cudata.h	/^        INTRA           = 1<<0, \/\/ CU is intra predicted$/;"	e	enum:X265_NS::CUGeom::__anon5
INTRA_ANG_SSE4	../../source/common/x86/asm-primitives.cpp	731;"	d	file:
INTRA_ANG_SSE4_COMMON	../../source/common/x86/asm-primitives.cpp	676;"	d	file:
INTRA_ANG_SSE4_HIGH	../../source/common/x86/asm-primitives.cpp	699;"	d	file:
INTRA_ANG_SSSE3	../../source/common/x86/asm-primitives.cpp	672;"	d	file:
INTRA_MODES	../../source/common/framedata.h	38;"	d
INVALID_SLICE_PRIORITY	../../source/common/threadpool.h	/^enum { INVALID_SLICE_PRIORITY = 10 }; \/\/ a value larger than any X265_TYPE_* macro$/;"	e	enum:X265_NS::__anon20
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 12, 16, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 12, 16, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 12, 32, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 12, 32, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 12, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 12, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 16, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 16, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 24, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 24, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 32, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 32, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 4, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 4, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 64, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 64, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 8, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 16, 8, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 24, 32, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 24, 32, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 24, 64, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 24, 64, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 16, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 16, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 24, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 24, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 32, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 32, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 48, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 48, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 64, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 64, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 8, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 32, 8, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 48, 64, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 48, 64, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 6, 16, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 6, 16, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 6, 8, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 6, 8, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 16, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 16, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 32, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 32, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 48, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 48, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 64, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 64, 64, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 12, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 12, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 16, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 16, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 2, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 2, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 32, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 32, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 4, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 4, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 6, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 6, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 64, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 64, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 8, pp, 5, 6, 8$/;"	l
IPFILTER_CHROMA	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA 8, 8, ps, 6, 7, 6$/;"	l
IPFILTER_CHROMA_PS_12xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_12xN_AVX2 16$/;"	l
IPFILTER_CHROMA_PS_12xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_12xN_AVX2 32$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 12$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 16$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 24$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 32$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 4$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 64$/;"	l
IPFILTER_CHROMA_PS_16xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_16xN_AVX2 8$/;"	l
IPFILTER_CHROMA_PS_24xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_24xN_AVX2 32$/;"	l
IPFILTER_CHROMA_PS_24xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_24xN_AVX2 64$/;"	l
IPFILTER_CHROMA_PS_32xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_32xN_AVX2 16$/;"	l
IPFILTER_CHROMA_PS_32xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_32xN_AVX2 24$/;"	l
IPFILTER_CHROMA_PS_32xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_32xN_AVX2 32$/;"	l
IPFILTER_CHROMA_PS_32xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_32xN_AVX2 48$/;"	l
IPFILTER_CHROMA_PS_32xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_32xN_AVX2 64$/;"	l
IPFILTER_CHROMA_PS_32xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_32xN_AVX2 8$/;"	l
IPFILTER_CHROMA_PS_64xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_64xN_AVX2 16$/;"	l
IPFILTER_CHROMA_PS_64xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_64xN_AVX2 32$/;"	l
IPFILTER_CHROMA_PS_64xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_64xN_AVX2 48$/;"	l
IPFILTER_CHROMA_PS_64xN_AVX2	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_PS_64xN_AVX2 64$/;"	l
IPFILTER_CHROMA_avx2_12xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_12xN 16$/;"	l
IPFILTER_CHROMA_avx2_12xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_12xN 32$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 12$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 16$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 24$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 32$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 4$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 64$/;"	l
IPFILTER_CHROMA_avx2_16xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_16xN 8$/;"	l
IPFILTER_CHROMA_avx2_24xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_24xN 32$/;"	l
IPFILTER_CHROMA_avx2_24xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_24xN 64$/;"	l
IPFILTER_CHROMA_avx2_32xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_32xN 16$/;"	l
IPFILTER_CHROMA_avx2_32xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_32xN 24$/;"	l
IPFILTER_CHROMA_avx2_32xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_32xN 32$/;"	l
IPFILTER_CHROMA_avx2_32xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_32xN 48$/;"	l
IPFILTER_CHROMA_avx2_32xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_32xN 64$/;"	l
IPFILTER_CHROMA_avx2_32xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_32xN 8$/;"	l
IPFILTER_CHROMA_avx2_64xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_64xN 16$/;"	l
IPFILTER_CHROMA_avx2_64xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_64xN 32$/;"	l
IPFILTER_CHROMA_avx2_64xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_64xN 48$/;"	l
IPFILTER_CHROMA_avx2_64xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_64xN 64$/;"	l
IPFILTER_CHROMA_avx2_6xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_6xN 16$/;"	l
IPFILTER_CHROMA_avx2_6xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_6xN 8$/;"	l
IPFILTER_CHROMA_avx2_8xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_8xN 12$/;"	l
IPFILTER_CHROMA_avx2_8xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_8xN 16$/;"	l
IPFILTER_CHROMA_avx2_8xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_8xN 32$/;"	l
IPFILTER_CHROMA_avx2_8xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_8xN 6$/;"	l
IPFILTER_CHROMA_avx2_8xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_8xN 64$/;"	l
IPFILTER_CHROMA_avx2_8xN	../../source/common/x86/ipfilter16.asm	/^IPFILTER_CHROMA_avx2_8xN 8$/;"	l
IS_REFERENCED	../../source/common/frame.h	39;"	d
I_SLICE	../../source/common/slice.h	/^    I_SLICE$/;"	e	enum:X265_NS::SliceType
InitializeConditionVariable	../../source/common/winxp.h	53;"	d
InputFile	../../source/input/input.h	/^    InputFile()           {}$/;"	f	class:X265_NS::InputFile	access:public	signature:()
InputFile	../../source/input/input.h	/^class InputFile$/;"	c	namespace:X265_NS
InputFile::open	../../source/input/input.cpp	/^InputFile* InputFile::open(InputFileInfo& info, bool bForceY4m)$/;"	f	class:InputFile	signature:(InputFileInfo& info, bool bForceY4m)
InputFileInfo	../../source/input/input.h	/^struct InputFileInfo$/;"	s	namespace:X265_NS
IntegralSize	../../source/common/primitives.h	/^enum IntegralSize$/;"	g	namespace:X265_NS
InterNeighbourMV	../../source/common/cudata.h	/^struct InterNeighbourMV$/;"	s	namespace:X265_NS
IntraNeighbors	../../source/common/predict.h	/^    struct IntraNeighbors$/;"	s	class:X265_NS::Predict	access:public
JOIN	../../source/common/arm/asm.S	/^#define JOIN(a, b) GLUE(a, b)$/;"	d
JobProvider	../../source/common/threadpool.h	/^    JobProvider()$/;"	f	class:X265_NS::JobProvider	access:public	signature:()
JobProvider	../../source/common/threadpool.h	/^class JobProvider$/;"	c	namespace:X265_NS
LEAF	../../source/common/cudata.h	/^        LEAF            = 1<<3, \/\/ CU is a leaf node of the CTU$/;"	e	enum:X265_NS::CUGeom::__anon5
LEVEL1	../../source/common/slice.h	/^        LEVEL1 = 30,$/;"	e	enum:X265_NS::Level::Name
LEVEL2	../../source/common/slice.h	/^        LEVEL2 = 60,$/;"	e	enum:X265_NS::Level::Name
LEVEL2_1	../../source/common/slice.h	/^        LEVEL2_1 = 63,$/;"	e	enum:X265_NS::Level::Name
LEVEL3	../../source/common/slice.h	/^        LEVEL3 = 90,$/;"	e	enum:X265_NS::Level::Name
LEVEL3_1	../../source/common/slice.h	/^        LEVEL3_1 = 93,$/;"	e	enum:X265_NS::Level::Name
LEVEL4	../../source/common/slice.h	/^        LEVEL4 = 120,$/;"	e	enum:X265_NS::Level::Name
LEVEL4_1	../../source/common/slice.h	/^        LEVEL4_1 = 123,$/;"	e	enum:X265_NS::Level::Name
LEVEL5	../../source/common/slice.h	/^        LEVEL5 = 150,$/;"	e	enum:X265_NS::Level::Name
LEVEL5_1	../../source/common/slice.h	/^        LEVEL5_1 = 153,$/;"	e	enum:X265_NS::Level::Name
LEVEL5_2	../../source/common/slice.h	/^        LEVEL5_2 = 156,$/;"	e	enum:X265_NS::Level::Name
LEVEL6	../../source/common/slice.h	/^        LEVEL6 = 180,$/;"	e	enum:X265_NS::Level::Name
LEVEL6_1	../../source/common/slice.h	/^        LEVEL6_1 = 183,$/;"	e	enum:X265_NS::Level::Name
LEVEL6_2	../../source/common/slice.h	/^        LEVEL6_2 = 186,$/;"	e	enum:X265_NS::Level::Name
LEVEL8_5	../../source/common/slice.h	/^        LEVEL8_5 = 255,$/;"	e	enum:X265_NS::Level::Name
LOAD_ZERO	../../source/common/ppc/pixel_altivec.cpp	40;"	d	file:
LOAD_ZERO	../../source/common/ppc/ppccommon.h	39;"	d
LOG2_RASTER_SIZE	../../source/common/common.h	259;"	d
LOG2_SCAN_SET_SIZE	../../source/common/common.h	299;"	d
LOG2_UNIT_SIZE	../../source/common/common.h	256;"	d
LOWRES	../../source/common/x86/mc.h	27;"	d
LOWRES	../../source/common/x86/mc.h	37;"	d
LOWRES_COST_MASK	../../source/encoder/slicetype.h	42;"	d
LOWRES_COST_SHIFT	../../source/encoder/slicetype.h	43;"	d
LUMA	../../source/common/ipfilter.cpp	402;"	d	file:
LUMA_12x16	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
LUMA_16x12	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
LUMA_16x16	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_16x32	../../source/common/primitives.h	/^    LUMA_32x16, LUMA_16x32,$/;"	e	enum:X265_NS::LumaPU
LUMA_16x4	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
LUMA_16x64	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_16x8	../../source/common/primitives.h	/^    LUMA_16x8,  LUMA_8x16,$/;"	e	enum:X265_NS::LumaPU
LUMA_24x32	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
LUMA_32x16	../../source/common/primitives.h	/^    LUMA_32x16, LUMA_16x32,$/;"	e	enum:X265_NS::LumaPU
LUMA_32x24	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
LUMA_32x32	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_32x64	../../source/common/primitives.h	/^    LUMA_64x32, LUMA_32x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_32x8	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
LUMA_48x64	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_4x16	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
LUMA_4x4	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_4x8	../../source/common/primitives.h	/^    LUMA_8x4,   LUMA_4x8,$/;"	e	enum:X265_NS::LumaPU
LUMA_64x16	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_64x32	../../source/common/primitives.h	/^    LUMA_64x32, LUMA_32x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_64x48	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_64x64	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_8x16	../../source/common/primitives.h	/^    LUMA_16x8,  LUMA_8x16,$/;"	e	enum:X265_NS::LumaPU
LUMA_8x32	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
LUMA_8x4	../../source/common/primitives.h	/^    LUMA_8x4,   LUMA_4x8,$/;"	e	enum:X265_NS::LumaPU
LUMA_8x8	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
LUMA_ADDAVG	../../source/common/x86/asm-primitives.cpp	651;"	d	file:
LUMA_CU	../../source/common/pixel.cpp	996;"	d	file:
LUMA_CU_BLOCKCOPY	../../source/common/x86/asm-primitives.cpp	624;"	d	file:
LUMA_FILTERS	../../source/common/x86/asm-primitives.cpp	614;"	d	file:
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    12 16$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    16 12$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    16 16$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    16 32$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    16 4$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    16 64$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    16 8$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    24 32$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    32 16$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    32 24$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    32 32$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    32 64$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    32 8$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    4 16$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    4 4$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    4 8$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    48 64$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    64 16$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    64 32$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    64 48$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    64 64$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    8 16$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    8 32$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    8 4$/;"	l
LUMA_HPP	../../source/common/arm/ipfilter8.S	/^LUMA_HPP    8 8$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    12 16$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    16 12$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    16 16$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    16 32$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    16 4$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    16 64$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    16 8$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    24 32$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    32 16$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    32 24$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    32 32$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    32 64$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    32 8$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    4 16$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    4 4$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    4 8$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    48 64$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    64 16$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    64 32$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    64 48$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    64 64$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    8 16$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    8 32$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    8 4$/;"	l
LUMA_HPS	../../source/common/arm/ipfilter8.S	/^LUMA_HPS    8 8$/;"	l
LUMA_PIXELSUB	../../source/common/x86/asm-primitives.cpp	635;"	d	file:
LUMA_PU	../../source/common/pixel.cpp	988;"	d	file:
LUMA_PU	../../source/common/ppc/pixel_altivec.cpp	4197;"	d	file:
LUMA_PU_BLOCKCOPY	../../source/common/x86/asm-primitives.cpp	631;"	d	file:
LUMA_VAR	../../source/common/x86/asm-primitives.cpp	649;"	d	file:
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 16 12$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 16 16$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 16 32$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 16 4$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 16 64$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 16 8$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 24 32$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 32 16$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 32 24$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 32 32$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 32 64$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 32 8$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 48 64$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 64 16$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 64 32$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 64 48$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 64 64$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 8 16$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 8 32$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 8 4$/;"	l
LUMA_VPP	../../source/common/arm/ipfilter8.S	/^LUMA_VPP 8 8$/;"	l
LUMA_VPP_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VPP_4xN 16$/;"	l
LUMA_VPP_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VPP_4xN 4$/;"	l
LUMA_VPP_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VPP_4xN 8$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 16 12$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 16 16$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 16 32$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 16 4$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 16 64$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 16 8$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 24 32$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 32 16$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 32 24$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 32 32$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 32 64$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 32 8$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 48 64$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 64 16$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 64 32$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 64 48$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 64 64$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 8 16$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 8 32$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 8 4$/;"	l
LUMA_VPS	../../source/common/arm/ipfilter8.S	/^LUMA_VPS 8 8$/;"	l
LUMA_VPS_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VPS_4xN 16$/;"	l
LUMA_VPS_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VPS_4xN 4$/;"	l
LUMA_VPS_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VPS_4xN 8$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 16 12$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 16 16$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 16 32$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 16 4$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 16 64$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 16 8$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 24 32$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 32 16$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 32 24$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 32 32$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 32 64$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 32 8$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 48 64$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 64 16$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 64 32$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 64 48$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 64 64$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 8 16$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 8 32$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 8 4$/;"	l
LUMA_VSP	../../source/common/arm/ipfilter8.S	/^LUMA_VSP 8 8$/;"	l
LUMA_VSP_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VSP_4xN 16$/;"	l
LUMA_VSP_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VSP_4xN 4$/;"	l
LUMA_VSP_4xN	../../source/common/arm/ipfilter8.S	/^LUMA_VSP_4xN 8$/;"	l
LUMA_VSS_FILTERS	../../source/common/x86/asm-primitives.cpp	622;"	d	file:
Level	../../source/common/slice.h	/^namespace Level {$/;"	n	namespace:X265_NS
LevelSpec	../../source/encoder/level.cpp	/^} LevelSpec;$/;"	t	namespace:X265_NS	typeref:struct:X265_NS::__anon13	file:
Lock	../../source/common/threading.h	/^    Lock()$/;"	f	class:X265_NS::Lock	access:public	signature:()
Lock	../../source/common/threading.h	/^class Lock$/;"	c	namespace:X265_NS
Lookahead	../../source/encoder/slicetype.cpp	/^Lookahead::Lookahead(x265_param *param, ThreadPool* pool)$/;"	f	class:Lookahead	signature:(x265_param *param, ThreadPool* pool)
Lookahead	../../source/encoder/slicetype.h	/^    Lookahead(x265_param *param, ThreadPool *pool);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(x265_param *param, ThreadPool *pool)
Lookahead	../../source/encoder/slicetype.h	/^class Lookahead : public JobProvider$/;"	c	namespace:X265_NS	inherits:JobProvider
Lookahead::Lookahead	../../source/encoder/slicetype.cpp	/^Lookahead::Lookahead(x265_param *param, ThreadPool* pool)$/;"	f	class:Lookahead	signature:(x265_param *param, ThreadPool* pool)
Lookahead::addPicture	../../source/encoder/slicetype.cpp	/^void Lookahead::addPicture(Frame& curFrame, int sliceType)$/;"	f	class:Lookahead	signature:(Frame& curFrame, int sliceType)
Lookahead::analyzeSlicetypeTrellis	../../source/encoder/slicetype.cpp	/^void Lookahead::analyzeSlicetypeTrellis(Lowres **frames, int length, char(*pcBestPaths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, \/*bool *pbStrongP,*\/ int &iLastUsed)$/;"	f	class:Lookahead	signature:(Lowres **frames, int length, char(*pcBestPaths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, int &iLastUsed)
Lookahead::checkLookaheadQueue	../../source/encoder/slicetype.cpp	/^void Lookahead::checkLookaheadQueue(int &frameCnt)$/;"	f	class:Lookahead	signature:(int &frameCnt)
Lookahead::create	../../source/encoder/slicetype.cpp	/^bool Lookahead::create()$/;"	f	class:Lookahead	signature:()
Lookahead::cuTree	../../source/encoder/slicetype.cpp	/^void Lookahead::cuTree(Lowres **frames, int numframes, bool bIntra)$/;"	f	class:Lookahead	signature:(Lowres **frames, int numframes, bool bIntra)
Lookahead::cuTreeFinish	../../source/encoder/slicetype.cpp	/^void Lookahead::cuTreeFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance)$/;"	f	class:Lookahead	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance)
Lookahead::cuTreeNonrefbFinish	../../source/encoder/slicetype.cpp	/^void Lookahead::cuTreeNonrefbFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance)$/;"	f	class:Lookahead	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance)
Lookahead::destroy	../../source/encoder/slicetype.cpp	/^void Lookahead::destroy()$/;"	f	class:Lookahead	signature:()
Lookahead::estimateCUPropagate	../../source/encoder/slicetype.cpp	/^void Lookahead::estimateCUPropagate(Lowres **frames, double averageDuration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip)$/;"	f	class:Lookahead	signature:(Lowres **frames, double averageDuration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip)
Lookahead::findJob	../../source/encoder/slicetype.cpp	/^void Lookahead::findJob(int \/*workerThreadID*\/)$/;"	f	class:Lookahead	signature:(int )
Lookahead::flush	../../source/encoder/slicetype.cpp	/^void Lookahead::flush()$/;"	f	class:Lookahead	signature:()
Lookahead::frameCostRecalculate	../../source/encoder/slicetype.cpp	/^int64_t Lookahead::frameCostRecalculate(Lowres** frames, int p0, int p1, int b)$/;"	f	class:Lookahead	signature:(Lowres** frames, int p0, int p1, int b)
Lookahead::getDecidedPicture	../../source/encoder/slicetype.cpp	/^Frame* Lookahead::getDecidedPicture()$/;"	f	class:Lookahead	signature:()
Lookahead::getEstimatedPictureCost	../../source/encoder/slicetype.cpp	/^void Lookahead::getEstimatedPictureCost(Frame *curFrame)$/;"	f	class:Lookahead	signature:(Frame *curFrame)
Lookahead::getWorkerStats	../../source/encoder/slicetype.cpp	/^void Lookahead::getWorkerStats(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount)$/;"	f	class:Lookahead	signature:(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount)
Lookahead::pyramidCutreeFinish	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidCutreeFinish(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb)$/;"	f	class:Lookahead	signature:(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb)
Lookahead::pyramidEstimateCUPropagate	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidEstimateCUPropagate(Lowres **frames, double averageDuration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip)$/;"	f	class:Lookahead	signature:(Lowres **frames, double averageDuration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip)
Lookahead::pyramidEstimateFrameCost	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidEstimateFrameCost(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost)$/;"	f	class:Lookahead	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost)
Lookahead::pyramidInsertBref	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidInsertBref(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum)$/;"	f	class:Lookahead	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum)
Lookahead::pyramidRatecontrolEstimateMinigop	../../source/encoder/slicetype.cpp	/^void  Lookahead::pyramidRatecontrolEstimateMinigop(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt)$/;"	f	class:Lookahead	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt)
Lookahead::pyramidSetFrameOrderForEncode	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidSetFrameOrderForEncode(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx)$/;"	f	class:Lookahead	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx)
Lookahead::scenecut	../../source/encoder/slicetype.cpp	/^bool Lookahead::scenecut(Lowres **frames, int numFrames)$/;"	f	class:Lookahead	signature:(Lowres **frames, int numFrames)
Lookahead::slicetypeAnalyse	../../source/encoder/slicetype.cpp	/^void Lookahead::slicetypeAnalyse(Lowres **frames, bool bKeyframe)$/;"	f	class:Lookahead	signature:(Lowres **frames, bool bKeyframe)
Lookahead::slicetypeDecide	../../source/encoder/slicetype.cpp	/^void Lookahead::slicetypeDecide()$/;"	f	class:Lookahead	signature:()
Lookahead::stopJobs	../../source/encoder/slicetype.cpp	/^void Lookahead::stopJobs()$/;"	f	class:Lookahead	signature:()
Lookahead::vbvFrameCost	../../source/encoder/slicetype.cpp	/^int64_t Lookahead::vbvFrameCost(Lowres **frames, int p0, int p1, int b)$/;"	f	class:Lookahead	signature:(Lowres **frames, int p0, int p1, int b)
Lookahead::vbvLookahead	../../source/encoder/slicetype.cpp	/^void Lookahead::vbvLookahead(Lowres **frames, int numFrames, int keyframe)$/;"	f	class:Lookahead	signature:(Lowres **frames, int numFrames, int keyframe)
LookaheadTLD	../../source/encoder/slicetype.h	/^    LookaheadTLD()$/;"	f	struct:X265_NS::LookaheadTLD	access:public	signature:()
LookaheadTLD	../../source/encoder/slicetype.h	/^struct LookaheadTLD$/;"	s	namespace:X265_NS
LookaheadTLD::acEnergyCu	../../source/encoder/slicetype.cpp	/^uint32_t LookaheadTLD::acEnergyCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize)$/;"	f	class:LookaheadTLD	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize)
LookaheadTLD::allocWeightedRef	../../source/encoder/slicetype.cpp	/^bool LookaheadTLD::allocWeightedRef(Lowres& fenc)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc)
LookaheadTLD::calcAdaptiveQuantFrame	../../source/encoder/slicetype.cpp	/^void LookaheadTLD::calcAdaptiveQuantFrame(Frame *curFrame, x265_param* param)$/;"	f	class:LookaheadTLD	signature:(Frame *curFrame, x265_param* param)
LookaheadTLD::lowresIntraEstimate	../../source/encoder/slicetype.cpp	/^void LookaheadTLD::lowresIntraEstimate(Lowres& fenc, uint32_t qgSize)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc, uint32_t qgSize)
LookaheadTLD::lumaSumCu	../../source/encoder/slicetype.cpp	/^uint32_t LookaheadTLD::lumaSumCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize)$/;"	f	class:LookaheadTLD	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize)
LookaheadTLD::weightCostLuma	../../source/encoder/slicetype.cpp	/^uint32_t LookaheadTLD::weightCostLuma(Lowres& fenc, Lowres& ref, WeightParam& wp)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc, Lowres& ref, WeightParam& wp)
LookaheadTLD::weightsAnalyse	../../source/encoder/slicetype.cpp	/^void LookaheadTLD::weightsAnalyse(Lowres& fenc, Lowres& ref)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc, Lowres& ref)
Lowres	../../source/common/lowres.h	/^struct Lowres : public ReferencePlanes$/;"	s	namespace:X265_NS	inherits:ReferencePlanes
Lowres::create	../../source/common/lowres.cpp	/^bool Lowres::create(PicYuv *origPic, int _bframes, bool bAQEnabled, uint32_t qgSize)$/;"	f	class:Lowres	signature:(PicYuv *origPic, int _bframes, bool bAQEnabled, uint32_t qgSize)
Lowres::destroy	../../source/common/lowres.cpp	/^void Lowres::destroy()$/;"	f	class:Lowres	signature:()
Lowres::init	../../source/common/lowres.cpp	/^void Lowres::init(PicYuv *origPic, int poc)$/;"	f	class:Lowres	signature:(PicYuv *origPic, int poc)
LumaCU	../../source/common/primitives.h	/^enum LumaCU \/\/ can be indexed using log2n(width)-2$/;"	g	namespace:X265_NS
LumaPU	../../source/common/primitives.h	/^enum LumaPU$/;"	g	namespace:X265_NS
MAIN	../../source/common/slice.h	/^        MAIN = 0,$/;"	e	enum:X265_NS::Level::Tier
MAIN	../../source/common/slice.h	/^        MAIN = 1,$/;"	e	enum:X265_NS::Profile::Name
MAIN10	../../source/common/slice.h	/^        MAIN10 = 2,$/;"	e	enum:X265_NS::Profile::Name
MAINREXT	../../source/common/slice.h	/^        MAINREXT = 4,$/;"	e	enum:X265_NS::Profile::Name
MAINSTILLPICTURE	../../source/common/slice.h	/^        MAINSTILLPICTURE = 3,$/;"	e	enum:X265_NS::Profile::Name
MAKE_COEF	../../source/common/vec/dct-ssse3.cpp	110;"	d	file:
MAKE_COEF	../../source/common/vec/dct-ssse3.cpp	97;"	d	file:
MAKE_COEF16	../../source/common/vec/dct-ssse3.cpp	555;"	d	file:
MAKE_COEF16	../../source/common/vec/dct-ssse3.cpp	575;"	d	file:
MAKE_COEF16	../../source/common/vec/dct-ssse3.cpp	589;"	d	file:
MAKE_COEF16	../../source/common/vec/dct-ssse3.cpp	599;"	d	file:
MAKE_COEF16	../../source/common/vec/dct-ssse3.cpp	653;"	d	file:
MAKE_COEF16	../../source/common/vec/dct-ssse3.cpp	676;"	d	file:
MAKE_COEF8	../../source/common/vec/dct-ssse3.cpp	541;"	d	file:
MAKE_COEF8	../../source/common/vec/dct-ssse3.cpp	553;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	1034;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	1111;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	275;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	303;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	494;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	525;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	882;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	926;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	928;"	d	file:
MAKE_ODD	../../source/common/vec/dct-ssse3.cpp	984;"	d	file:
MAXPARAMSIZE	../../source/common/param.h	57;"	d
MAX_BATCH_SIZE	../../source/encoder/slicetype.h	/^    enum { MAX_BATCH_SIZE = 512 };$/;"	e	enum:X265_NS::CostEstimateGroup::__anon17
MAX_CHROMA_LAMBDA_OFFSET	../../source/common/common.h	206;"	d
MAX_COOP_SLICES	../../source/encoder/slicetype.h	/^    enum { MAX_COOP_SLICES = 32 };$/;"	e	enum:X265_NS::CostEstimateGroup::__anon16
MAX_CU_SIZE	../../source/common/common.h	254;"	d
MAX_DOUBLE	../../source/common/common.h	153;"	d
MAX_DURATION	../../source/encoder/ratecontrol.cpp	846;"	d	file:
MAX_DURATION	../../source/encoder/ratecontrol.cpp	857;"	d	file:
MAX_FRAME_DURATION	../../source/encoder/ratecontrol.h	42;"	d
MAX_FRAME_HEIGHT	../../source/input/input.h	30;"	d
MAX_FRAME_RATE	../../source/input/input.h	32;"	d
MAX_FRAME_WIDTH	../../source/input/input.h	28;"	d
MAX_GEOMS	../../source/common/cudata.h	/^    enum { MAX_GEOMS = 85 };$/;"	e	enum:X265_NS::CUGeom::__anon6
MAX_HDR_LEGAL_RANGE	../../source/common/constants.h	99;"	d
MAX_INT	../../source/common/common.h	151;"	d
MAX_INT64	../../source/common/common.h	152;"	d
MAX_INTER_PARTS	../../source/encoder/search.h	/^    enum { MAX_INTER_PARTS = 2 };$/;"	e	enum:X265_NS::Mode::__anon1
MAX_LOG2_CU_SIZE	../../source/common/common.h	252;"	d
MAX_LOG2_TR_SIZE	../../source/common/common.h	267;"	d
MAX_LOG2_TS_SIZE	../../source/common/common.h	268;"	d
MAX_MATRIX_COEF_NUM	../../source/common/scalinglist.h	/^    enum { MAX_MATRIX_COEF_NUM = 64 }; \/\/ max coefficient number per quantization matrix$/;"	e	enum:X265_NS::ScalingList::__anon27
MAX_MATRIX_SIZE_NUM	../../source/common/scalinglist.h	/^    enum { MAX_MATRIX_SIZE_NUM = 8 };  \/\/ max size number for quantization matrix$/;"	e	enum:X265_NS::ScalingList::__anon28
MAX_MAX_QPSCALE	../../source/common/common.h	160;"	d
MAX_MV	../../source/common/cudata.cpp	31;"	d	file:
MAX_NAL_UNITS	../../source/encoder/nal.h	/^    static const int MAX_NAL_UNITS = 16;$/;"	m	class:X265_NS::NALList	access:public
MAX_NUM_COMPONENT	../../source/common/common.h	/^    MAX_NUM_COMPONENT = 3$/;"	e	enum:X265_NS::TextType
MAX_NUM_PARTITIONS	../../source/common/common.h	261;"	d
MAX_NUM_REF	../../source/common/common.h	313;"	d
MAX_NUM_REF_IDX	../../source/encoder/encoder.h	75;"	d
MAX_NUM_REF_PICS	../../source/common/common.h	312;"	d
MAX_NUM_SAO_CLASS	../../source/encoder/sao.h	/^    enum { MAX_NUM_SAO_CLASS = 32 };$/;"	e	enum:X265_NS::SAO::__anon7
MAX_NUM_SAO_TYPE	../../source/encoder/sao.h	/^    MAX_NUM_SAO_TYPE$/;"	e	enum:X265_NS::SAOType
MAX_NUM_SHORT_TERM_RPS	../../source/common/common.h	314;"	d
MAX_NUM_SPU_W	../../source/common/common.h	265;"	d
MAX_NUM_TR_CATEGORIES	../../source/common/common.h	327;"	d
MAX_NUM_TR_COEFFS	../../source/common/common.h	326;"	d
MAX_OFF_CTX_MOD	../../source/common/contexts.h	104;"	d
MAX_PFILTER_CUS	../../source/encoder/framefilter.h	64;"	d
MAX_POOL_THREADS	../../source/common/threadpool.h	/^enum { MAX_POOL_THREADS = sizeof(sleepbitmap_t) * 8 };$/;"	e	enum:X265_NS::__anon19
MAX_PRED_TYPES	../../source/encoder/analysis.h	/^        MAX_PRED_TYPES$/;"	e	enum:X265_NS::Analysis::__anon18
MAX_RD_INTRA_MODES	../../source/encoder/search.h	/^    enum { MAX_RD_INTRA_MODES = 16 };$/;"	e	enum:X265_NS::Search::__anon3
MAX_TLAYER	../../source/common/common.h	316;"	d
MAX_TR_DYNAMIC_RANGE	../../source/common/common.h	291;"	d
MAX_TR_SIZE	../../source/common/common.h	269;"	d
MAX_TS_SIZE	../../source/common/common.h	270;"	d
MAX_UINT	../../source/common/common.h	150;"	d
MBTREE_AVX	../../source/common/x86/mc-a2.asm	/^MBTREE_AVX$/;"	l
MC_COPY	../../source/common/x86/mc-a.asm	/^MC_COPY  8$/;"	l
MC_COPY	../../source/common/x86/mc-a.asm	/^MC_COPY 16$/;"	l
MD5	../../source/common/md5.h	/^    MD5()$/;"	f	class:X265_NS::MD5	access:public	signature:()
MD5	../../source/common/md5.h	/^class MD5$/;"	c	namespace:X265_NS
MD5	../../source/encoder/sei.h	/^        MD5,$/;"	e	enum:X265_NS::SEIDecodedPictureHash::Method
MD5Context	../../source/common/md5.h	/^typedef struct MD5Context$/;"	s	namespace:X265_NS
MD5Context	../../source/common/md5.h	/^} MD5Context;$/;"	t	namespace:X265_NS	typeref:struct:X265_NS::MD5Context
MD5Final	../../source/common/md5.cpp	/^void MD5Final(MD5Context *ctx, uint8_t *digest)$/;"	f	namespace:X265_NS	signature:(MD5Context *ctx, uint8_t *digest)
MD5Final	../../source/common/md5.h	/^void MD5Final(MD5Context *ctx, uint8_t *digest);$/;"	p	namespace:X265_NS	signature:(MD5Context *ctx, uint8_t *digest)
MD5Init	../../source/common/md5.cpp	/^void MD5Init(MD5Context *ctx)$/;"	f	namespace:X265_NS	signature:(MD5Context *ctx)
MD5Init	../../source/common/md5.h	/^void MD5Init(MD5Context *context);$/;"	p	namespace:X265_NS	signature:(MD5Context *context)
MD5STEP	../../source/common/md5.cpp	178;"	d	file:
MD5Transform	../../source/common/md5.cpp	/^void MD5Transform(uint32_t *buf, uint32_t *in)$/;"	f	namespace:X265_NS	signature:(uint32_t *buf, uint32_t *in)
MD5Transform	../../source/common/md5.cpp	/^void MD5Transform(uint32_t *buf, uint32_t *in);$/;"	p	namespace:X265_NS	file:	signature:(uint32_t *buf, uint32_t *in)
MD5Update	../../source/common/md5.cpp	/^void MD5Update(MD5Context *ctx, uint8_t *buf, uint32_t len)$/;"	f	namespace:X265_NS	signature:(MD5Context *ctx, uint8_t *buf, uint32_t len)
MD5Update	../../source/common/md5.h	/^void MD5Update(MD5Context *context, unsigned char *buf, uint32_t len);$/;"	p	namespace:X265_NS	signature:(MD5Context *context, unsigned char *buf, uint32_t len)
MDCS_ANGLE_LIMIT	../../source/common/common.h	309;"	d
MDCS_LOG2_MAX_SIZE	../../source/common/common.h	310;"	d
MD_ABOVE	../../source/common/cudata.h	/^    MD_ABOVE,       \/\/ MVP of above block$/;"	e	enum:X265_NS::MVP_DIR
MD_ABOVE_LEFT	../../source/common/cudata.h	/^    MD_ABOVE_LEFT,  \/\/ MVP of above left block$/;"	e	enum:X265_NS::MVP_DIR
MD_ABOVE_RIGHT	../../source/common/cudata.h	/^    MD_ABOVE_RIGHT, \/\/ MVP of above right block$/;"	e	enum:X265_NS::MVP_DIR
MD_BELOW_LEFT	../../source/common/cudata.h	/^    MD_BELOW_LEFT,  \/\/ MVP of below left block$/;"	e	enum:X265_NS::MVP_DIR
MD_COLLOCATED_CT	../../source/common/cudata.h	/^    MD_COLLOCATED_CT$/;"	e	enum:X265_NS::MVP_DIR
MD_COLLOCATED_RB	../../source/common/cudata.h	/^    MD_COLLOCATED_RB,   \/\/ MVP of temporal neighbour$/;"	e	enum:X265_NS::MVP_DIR
MD_LEFT	../../source/common/cudata.h	/^    MD_LEFT = 0,    \/\/ MVP of left block$/;"	e	enum:X265_NS::MVP_DIR
MEMCPY	../../source/common/x86/mc-a2.asm	/^MEMCPY$/;"	l
MEMZERO	../../source/common/x86/mc-a2.asm	/^MEMZERO 4$/;"	l
MEMZERO	../../source/common/x86/mc-a2.asm	/^MEMZERO 8$/;"	l
MIN_AMORTIZE_FRACTION	../../source/encoder/ratecontrol.h	46;"	d
MIN_AMORTIZE_FRAME	../../source/encoder/ratecontrol.h	45;"	d
MIN_CU_SIZE	../../source/common/common.h	253;"	d
MIN_FIFO_SIZE	../../source/common/bitstream.cpp	11;"	d	file:
MIN_FRAME_DURATION	../../source/encoder/ratecontrol.h	43;"	d
MIN_FRAME_HEIGHT	../../source/input/input.h	29;"	d
MIN_FRAME_RATE	../../source/input/input.h	31;"	d
MIN_FRAME_WIDTH	../../source/input/input.h	27;"	d
MIN_HDR_LEGAL_RANGE	../../source/common/constants.h	98;"	d
MIN_LOG2_CU_SIZE	../../source/common/common.h	251;"	d
MIN_MV	../../source/encoder/motion.cpp	1071;"	d	file:
MIN_MV	../../source/encoder/motion.cpp	1111;"	d	file:
MIN_PU_SIZE	../../source/common/common.h	263;"	d
MIN_QPSCALE	../../source/common/common.h	159;"	d
MIN_TU_SIZE	../../source/common/common.h	264;"	d
MLS_CG_BLK_SIZE	../../source/common/common.h	285;"	d
MLS_CG_LOG2_SIZE	../../source/common/common.h	286;"	d
MLS_CG_SIZE	../../source/common/common.h	284;"	d
MLS_GRP_NUM	../../source/common/common.h	283;"	d
MMX2	../../source/common/cpu.cpp	64;"	d	file:
MMX2	../../source/common/cpu.cpp	90;"	d	file:
MODE_INTER	../../source/common/cudata.h	/^    MODE_INTER = (1 << 0),$/;"	e	enum:X265_NS::PredMode
MODE_INTRA	../../source/common/cudata.h	/^    MODE_INTRA = (1 << 1),$/;"	e	enum:X265_NS::PredMode
MODE_NONE	../../source/common/cudata.h	/^    MODE_NONE  = 0,$/;"	e	enum:X265_NS::PredMode
MODE_SKIP	../../source/common/cudata.h	/^    MODE_SKIP  = (1 << 2) | MODE_INTER$/;"	e	enum:X265_NS::PredMode
MRG_MAX_NUM_CANDS	../../source/common/common.h	320;"	d
MSK	../../source/common/x86/sad-a.asm	/^MSK:                  db 255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0$/;"	d
MV	../../source/common/mv.h	/^    MV()                                       {}$/;"	f	struct:X265_NS::MV	access:public	signature:()
MV	../../source/common/mv.h	/^    MV(int16_t _x, int16_t _y) : x(_x), y(_y)  {}$/;"	f	struct:X265_NS::MV	access:public	signature:(int16_t _x, int16_t _y)
MV	../../source/common/mv.h	/^    MV(int32_t w) : word(w)                    {}$/;"	f	struct:X265_NS::MV	access:public	signature:(int32_t w)
MV	../../source/common/mv.h	/^struct MV$/;"	s	namespace:X265_NS
MVC	../../source/encoder/slicetype.cpp	3368;"	d	file:
MVC	../../source/encoder/slicetype.cpp	3464;"	d	file:
MVField	../../source/common/cudata.h	/^struct MVField$/;"	s	namespace:X265_NS
MVP_DIR	../../source/common/cudata.h	/^enum MVP_DIR$/;"	g	namespace:X265_NS
MVP_IDX_BITS	../../source/encoder/search.h	53;"	d
MatrixType	../../source/common/scalinglist.cpp	/^    const char ScalingList::MatrixType[4][6][20] =$/;"	m	class:X265_NS::ScalingList	file:
MatrixType	../../source/common/scalinglist.h	/^    static const char MatrixType[4][6][20];$/;"	m	class:X265_NS::ScalingList	access:public
MatrixType_DC	../../source/common/scalinglist.cpp	/^    const char ScalingList::MatrixType_DC[4][12][22] =$/;"	m	class:X265_NS::ScalingList	file:
MatrixType_DC	../../source/common/scalinglist.h	/^    static const char MatrixType_DC[4][12][22];$/;"	m	class:X265_NS::ScalingList	access:public
MergeData	../../source/encoder/search.h	/^    struct MergeData$/;"	s	class:X265_NS::Search	access:protected
Method	../../source/encoder/sei.h	/^    enum Method$/;"	g	class:X265_NS::SEIDecodedPictureHash	access:public
Mode	../../source/encoder/search.h	/^struct Mode$/;"	s	namespace:X265_NS
ModeDepth	../../source/encoder/analysis.h	/^    struct ModeDepth$/;"	s	class:X265_NS::Analysis	access:public
MotionData	../../source/encoder/search.h	/^    MotionData()$/;"	f	struct:X265_NS::MotionData	access:public	signature:()
MotionData	../../source/encoder/search.h	/^struct MotionData$/;"	s	namespace:X265_NS
MotionEstimate	../../source/encoder/motion.cpp	/^MotionEstimate::MotionEstimate()$/;"	f	class:MotionEstimate	signature:()
MotionEstimate	../../source/encoder/motion.h	/^    MotionEstimate();$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:()
MotionEstimate	../../source/encoder/motion.h	/^class MotionEstimate : public BitCost$/;"	c	namespace:X265_NS	inherits:BitCost
MotionEstimate::MotionEstimate	../../source/encoder/motion.cpp	/^MotionEstimate::MotionEstimate()$/;"	f	class:MotionEstimate	signature:()
MotionEstimate::StarPatternSearch	../../source/encoder/motion.cpp	/^void MotionEstimate::StarPatternSearch(ReferencePlanes *ref,$/;"	f	class:MotionEstimate	signature:(ReferencePlanes *ref, const MV & mvmin, const MV & mvmax, MV & bmv, int & bcost, int & bPointNr, int & bDistance, int earlyExitIters, int merange)
MotionEstimate::hpelIterationCount	../../source/encoder/motion.cpp	/^int MotionEstimate::hpelIterationCount(int subme)$/;"	f	class:MotionEstimate	signature:(int subme)
MotionEstimate::init	../../source/encoder/motion.cpp	/^void MotionEstimate::init(int csp)$/;"	f	class:MotionEstimate	signature:(int csp)
MotionEstimate::initScales	../../source/encoder/motion.cpp	/^void MotionEstimate::initScales(void)$/;"	f	class:MotionEstimate	signature:(void)
MotionEstimate::motionEstimate	../../source/encoder/motion.cpp	/^int MotionEstimate::motionEstimate(ReferencePlanes *ref,$/;"	f	class:MotionEstimate	signature:(ReferencePlanes *ref, const MV & mvmin, const MV & mvmax, const MV & qmvp, int numCandidates, const MV * mvc, int merange, MV & outQMv, uint32_t maxSlices, pixel * srcReferencePlane)
MotionEstimate::refineMV	../../source/encoder/motion.cpp	/^void MotionEstimate::refineMV(ReferencePlanes* ref,$/;"	f	class:MotionEstimate	signature:(ReferencePlanes* ref, const MV& mvmin, const MV& mvmax, const MV& qmvp, MV& outQMv)
MotionEstimate::setSourcePU	../../source/encoder/motion.cpp	/^void MotionEstimate::setSourcePU(const Yuv& srcFencYuv, int _ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int method, const int refine, bool bChroma)$/;"	f	class:MotionEstimate	signature:(const Yuv& srcFencYuv, int _ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int method, const int refine, bool bChroma)
MotionEstimate::setSourcePU	../../source/encoder/motion.cpp	/^void MotionEstimate::setSourcePU(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int method, const int refine)$/;"	f	class:MotionEstimate	signature:(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int method, const int refine)
MotionEstimate::subpelCompare	../../source/encoder/motion.cpp	/^int MotionEstimate::subpelCompare(ReferencePlanes *ref, const MV& qmv, pixelcmp_t cmp)$/;"	f	class:MotionEstimate	signature:(ReferencePlanes *ref, const MV& qmv, pixelcmp_t cmp)
MotionEstimate::~MotionEstimate	../../source/encoder/motion.cpp	/^MotionEstimate::~MotionEstimate()$/;"	f	class:MotionEstimate	signature:()
MotionReference	../../source/encoder/reference.cpp	/^MotionReference::MotionReference()$/;"	f	class:MotionReference	signature:()
MotionReference	../../source/encoder/reference.h	/^    MotionReference();$/;"	p	class:X265_NS::MotionReference	access:public	signature:()
MotionReference	../../source/encoder/reference.h	/^class MotionReference : public ReferencePlanes$/;"	c	namespace:X265_NS	inherits:ReferencePlanes
MotionReference::MotionReference	../../source/encoder/reference.cpp	/^MotionReference::MotionReference()$/;"	f	class:MotionReference	signature:()
MotionReference::applyWeight	../../source/encoder/reference.cpp	/^void MotionReference::applyWeight(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId)$/;"	f	class:MotionReference	signature:(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId)
MotionReference::init	../../source/encoder/reference.cpp	/^int MotionReference::init(PicYuv* recPic, WeightParam *wp, const x265_param& p)$/;"	f	class:MotionReference	signature:(PicYuv* recPic, WeightParam *wp, const x265_param& p)
MotionReference::~MotionReference	../../source/encoder/reference.cpp	/^MotionReference::~MotionReference()$/;"	f	class:MotionReference	signature:()
NALList	../../source/encoder/nal.cpp	/^NALList::NALList()$/;"	f	class:NALList	signature:()
NALList	../../source/encoder/nal.h	/^    NALList();$/;"	p	class:X265_NS::NALList	access:public	signature:()
NALList	../../source/encoder/nal.h	/^class NALList$/;"	c	namespace:X265_NS
NALList::NALList	../../source/encoder/nal.cpp	/^NALList::NALList()$/;"	f	class:NALList	signature:()
NALList::serialize	../../source/encoder/nal.cpp	/^void NALList::serialize(NalUnitType nalUnitType, const Bitstream& bs)$/;"	f	class:NALList	signature:(NalUnitType nalUnitType, const Bitstream& bs)
NALList::serializeSubstreams	../../source/encoder/nal.cpp	/^uint32_t NALList::serializeSubstreams(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams)$/;"	f	class:NALList	signature:(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams)
NALList::takeContents	../../source/encoder/nal.cpp	/^void NALList::takeContents(NALList& other)$/;"	f	class:NALList	signature:(NALList& other)
NAL_TYPE_OVERHEAD	../../source/common/common.h	333;"	d
NONE	../../source/common/slice.h	/^        NONE = 0,$/;"	e	enum:X265_NS::Level::Name
NONE	../../source/common/slice.h	/^        NONE = 0,$/;"	e	enum:X265_NS::Profile::Name
NONOPTION_P	../../source/compat/getopt/getopt.c	536;"	d	file:
NTAPS_CHROMA	../../source/common/constants.h	67;"	d
NTAPS_LUMA	../../source/common/constants.h	66;"	d
NULL	../../source/common/common.h	147;"	d
NUMBER_OF_SPLIT_MODES	../../source/encoder/entropy.h	/^    NUMBER_OF_SPLIT_MODES = 3$/;"	e	enum:X265_NS::SplitType
NUM_ABS_FLAG_CTX	../../source/common/contexts.h	64;"	d
NUM_ABS_FLAG_CTX_CHROMA	../../source/common/contexts.h	66;"	d
NUM_ABS_FLAG_CTX_LUMA	../../source/common/contexts.h	65;"	d
NUM_ADI_CTX	../../source/common/contexts.h	39;"	d
NUM_CHROMA_MODE	../../source/common/common.h	306;"	d
NUM_CHROMA_PRED_CTX	../../source/common/contexts.h	41;"	d
NUM_CTX_LAST_FLAG_XY	../../source/common/contexts.h	57;"	d
NUM_CTX_LAST_FLAG_XY_CHROMA	../../source/common/contexts.h	59;"	d
NUM_CTX_LAST_FLAG_XY_LUMA	../../source/common/contexts.h	58;"	d
NUM_CU_DEPTH	../../source/common/common.h	249;"	d
NUM_CU_SIZES	../../source/common/primitives.h	/^    NUM_CU_SIZES$/;"	e	enum:X265_NS::LumaCU
NUM_DELTA_QP_CTX	../../source/common/contexts.h	49;"	d
NUM_EDGETYPE	../../source/encoder/sao.h	/^    enum { NUM_EDGETYPE = 5 };$/;"	e	enum:X265_NS::SAO::__anon10
NUM_FULL_DEPTH	../../source/common/common.h	250;"	d
NUM_INTEGRAL_SIZE	../../source/common/primitives.h	/^    NUM_INTEGRAL_SIZE$/;"	e	enum:X265_NS::IntegralSize
NUM_INTER_DIR_CTX	../../source/common/contexts.h	42;"	d
NUM_INTRA_MODE	../../source/common/common.h	71;"	d
NUM_LISTS	../../source/common/scalinglist.h	/^    enum { NUM_LISTS = 6 };            \/\/ number of quantization matrix lists (YUV * inter\/intra)$/;"	e	enum:X265_NS::ScalingList::__anon25
NUM_MERGE_FLAG_EXT_CTX	../../source/common/contexts.h	33;"	d
NUM_MERGE_IDX_EXT_CTX	../../source/common/contexts.h	34;"	d
NUM_MVP_IDX_CTX	../../source/common/contexts.h	68;"	d
NUM_MV_RES_CTX	../../source/common/contexts.h	43;"	d
NUM_ONE_FLAG_CTX	../../source/common/contexts.h	61;"	d
NUM_ONE_FLAG_CTX_CHROMA	../../source/common/contexts.h	63;"	d
NUM_ONE_FLAG_CTX_LUMA	../../source/common/contexts.h	62;"	d
NUM_PART_SIZE_CTX	../../source/common/contexts.h	36;"	d
NUM_PLANE	../../source/encoder/sao.h	/^    enum { NUM_PLANE = 3 };$/;"	e	enum:X265_NS::SAO::__anon11
NUM_PRED_MODE_CTX	../../source/common/contexts.h	37;"	d
NUM_PU_SIZES	../../source/common/primitives.h	/^    NUM_PU_SIZES$/;"	e	enum:X265_NS::LumaPU
NUM_QT_CBF_CTX	../../source/common/contexts.h	47;"	d
NUM_QT_ROOT_CBF_CTX	../../source/common/contexts.h	48;"	d
NUM_REF_NO_CTX	../../source/common/contexts.h	45;"	d
NUM_REM	../../source/common/scalinglist.h	/^    enum { NUM_REM = 6 };              \/\/ number of remainders of QP\/6$/;"	e	enum:X265_NS::ScalingList::__anon26
NUM_SAO_MERGE_FLAG_CTX	../../source/common/contexts.h	70;"	d
NUM_SAO_TYPE_IDX_CTX	../../source/common/contexts.h	71;"	d
NUM_SCAN_SIZE	../../source/common/constants.h	78;"	d
NUM_SCAN_TYPE	../../source/common/common.h	/^    NUM_SCAN_TYPE = 3$/;"	e	enum:X265_NS::ScanType
NUM_SIG_CG_FLAG_CTX	../../source/common/contexts.h	51;"	d
NUM_SIG_FLAG_CTX	../../source/common/contexts.h	53;"	d
NUM_SIG_FLAG_CTX_CHROMA	../../source/common/contexts.h	55;"	d
NUM_SIG_FLAG_CTX_LUMA	../../source/common/contexts.h	54;"	d
NUM_SIZES	../../source/common/cudata.h	/^    NUM_SIZES$/;"	e	enum:X265_NS::PartSize
NUM_SIZES	../../source/common/scalinglist.h	/^    enum { NUM_SIZES = 4 };            \/\/ 4x4, 8x8, 16x16, 32x32$/;"	e	enum:X265_NS::ScalingList::__anon24
NUM_SKIP_FLAG_CTX	../../source/common/contexts.h	31;"	d
NUM_SPLIT_FLAG_CTX	../../source/common/contexts.h	30;"	d
NUM_SUBPART	../../source/encoder/search.h	52;"	d
NUM_TQUANT_BYPASS_FLAG_CTX	../../source/common/contexts.h	74;"	d
NUM_TRANSFORMSKIP_FLAG_CTX	../../source/common/contexts.h	73;"	d
NUM_TRANS_SUBDIV_FLAG_CTX	../../source/common/contexts.h	46;"	d
NUM_TR_SIZE	../../source/common/primitives.h	/^enum { NUM_TR_SIZE = 4 }; \/\/ TU are 4x4, 8x8, 16x16, and 32x32$/;"	e	enum:X265_NS::__anon18
NUM_TU_DEPTH	../../source/common/cudata.h	31;"	d
Name	../../source/common/slice.h	/^    enum Name$/;"	g	namespace:X265_NS::Level
Name	../../source/common/slice.h	/^    enum Name$/;"	g	namespace:X265_NS::Profile
NoiseReduction	../../source/common/quant.h	/^struct NoiseReduction$/;"	s	namespace:X265_NS
OFFSETPN	../../source/common/x86/mc-a.asm	/^OFFSETPN  4$/;"	l
OFFSETPN	../../source/common/x86/mc-a.asm	/^OFFSETPN  8$/;"	l
OFFSETPN	../../source/common/x86/mc-a.asm	/^OFFSETPN 12$/;"	l
OFFSETPN	../../source/common/x86/mc-a.asm	/^OFFSETPN 16$/;"	l
OFFSETPN	../../source/common/x86/mc-a.asm	/^OFFSETPN 20$/;"	l
OFFSET_THRESH	../../source/encoder/sao.h	/^    enum { OFFSET_THRESH = 1 << X265_MIN(X265_DEPTH - 5, 5) };$/;"	e	enum:X265_NS::SAO::__anon9
OFF_ABS_FLAG_CTX	../../source/common/contexts.h	98;"	d
OFF_ADI_CTX	../../source/common/contexts.h	84;"	d
OFF_CHROMA_PRED_CTX	../../source/common/contexts.h	85;"	d
OFF_CTX_LAST_FLAG_X	../../source/common/contexts.h	95;"	d
OFF_CTX_LAST_FLAG_Y	../../source/common/contexts.h	96;"	d
OFF_DELTA_QP_CTX	../../source/common/contexts.h	86;"	d
OFF_INTER_DIR_CTX	../../source/common/contexts.h	87;"	d
OFF_MERGE_FLAG_EXT_CTX	../../source/common/contexts.h	80;"	d
OFF_MERGE_IDX_EXT_CTX	../../source/common/contexts.h	81;"	d
OFF_MVP_IDX_CTX	../../source/common/contexts.h	99;"	d
OFF_MV_RES_CTX	../../source/common/contexts.h	89;"	d
OFF_ONE_FLAG_CTX	../../source/common/contexts.h	97;"	d
OFF_PART_SIZE_CTX	../../source/common/contexts.h	82;"	d
OFF_PRED_MODE_CTX	../../source/common/contexts.h	83;"	d
OFF_QT_CBF_CTX	../../source/common/contexts.h	90;"	d
OFF_QT_ROOT_CBF_CTX	../../source/common/contexts.h	92;"	d
OFF_REF_NO_CTX	../../source/common/contexts.h	88;"	d
OFF_SAO_MERGE_FLAG_CTX	../../source/common/contexts.h	100;"	d
OFF_SAO_TYPE_IDX_CTX	../../source/common/contexts.h	101;"	d
OFF_SIG_CG_FLAG_CTX	../../source/common/contexts.h	93;"	d
OFF_SIG_FLAG_CTX	../../source/common/contexts.h	94;"	d
OFF_SKIP_FLAG_CTX	../../source/common/contexts.h	79;"	d
OFF_SPLIT_FLAG_CTX	../../source/common/contexts.h	78;"	d
OFF_TQUANT_BYPASS_FLAG_CTX	../../source/common/contexts.h	103;"	d
OFF_TRANSFORMSKIP_FLAG_CTX	../../source/common/contexts.h	102;"	d
OFF_TRANS_SUBDIV_FLAG_CTX	../../source/common/contexts.h	91;"	d
ONARCH	../../source/common/version.cpp	35;"	d	file:
ONARCH	../../source/common/version.cpp	37;"	d	file:
ONARCH	../../source/common/version.cpp	44;"	d	file:
ONARCH	../../source/common/version.cpp	46;"	d	file:
ONE_ANG	../../source/common/ppc/intrapred_altivec.cpp	30742;"	d	file:
ONOS	../../source/common/version.cpp	61;"	d	file:
ONOS	../../source/common/version.cpp	63;"	d	file:
ONOS	../../source/common/version.cpp	65;"	d	file:
ONOS	../../source/common/version.cpp	67;"	d	file:
ONOS	../../source/common/version.cpp	69;"	d	file:
ONOS	../../source/common/version.cpp	71;"	d	file:
OPT	../../source/common/param.cpp	591;"	d	file:
OPT	../../source/common/param.cpp	981;"	d	file:
OPT2	../../source/common/param.cpp	592;"	d	file:
OutputFile	../../source/output/output.h	/^    OutputFile() {}$/;"	f	class:X265_NS::OutputFile	access:public	signature:()
OutputFile	../../source/output/output.h	/^class OutputFile$/;"	c	namespace:X265_NS
OutputFile::open	../../source/output/output.cpp	/^OutputFile* OutputFile::open(const char *fname, InputFileInfo& inputInfo)$/;"	f	class:OutputFile	signature:(const char *fname, InputFileInfo& inputInfo)
P2S_H_12xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_12xN 16$/;"	l
P2S_H_12xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_12xN 32$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 12$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 16$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 24$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 32$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 4$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 64$/;"	l
P2S_H_16xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN 8$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 12$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 16$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 24$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 32$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 4$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 64$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_16xN_avx2 8$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter8.asm	/^P2S_H_16xN_avx2 32$/;"	l
P2S_H_16xN_avx2	../../source/common/x86/ipfilter8.asm	/^P2S_H_16xN_avx2 64$/;"	l
P2S_H_24xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_24xN 32$/;"	l
P2S_H_24xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_24xN 64$/;"	l
P2S_H_24xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_24xN_avx2 32$/;"	l
P2S_H_24xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_24xN_avx2 64$/;"	l
P2S_H_2xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_2xN 16$/;"	l
P2S_H_2xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_2xN 4$/;"	l
P2S_H_2xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_2xN 8$/;"	l
P2S_H_32xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN 16$/;"	l
P2S_H_32xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN 24$/;"	l
P2S_H_32xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN 32$/;"	l
P2S_H_32xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN 48$/;"	l
P2S_H_32xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN 64$/;"	l
P2S_H_32xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN 8$/;"	l
P2S_H_32xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN_avx2 16$/;"	l
P2S_H_32xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN_avx2 24$/;"	l
P2S_H_32xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN_avx2 32$/;"	l
P2S_H_32xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN_avx2 48$/;"	l
P2S_H_32xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN_avx2 64$/;"	l
P2S_H_32xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_32xN_avx2 8$/;"	l
P2S_H_4xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_4xN 16$/;"	l
P2S_H_4xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_4xN 32$/;"	l
P2S_H_4xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_4xN 4$/;"	l
P2S_H_4xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_4xN 8$/;"	l
P2S_H_64xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN 16$/;"	l
P2S_H_64xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN 32$/;"	l
P2S_H_64xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN 48$/;"	l
P2S_H_64xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN 64$/;"	l
P2S_H_64xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN_avx2 16$/;"	l
P2S_H_64xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN_avx2 32$/;"	l
P2S_H_64xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN_avx2 48$/;"	l
P2S_H_64xN_avx2	../../source/common/x86/ipfilter16.asm	/^P2S_H_64xN_avx2 64$/;"	l
P2S_H_6xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_6xN 16$/;"	l
P2S_H_6xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_6xN 8$/;"	l
P2S_H_8xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_8xN 12$/;"	l
P2S_H_8xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_8xN 16$/;"	l
P2S_H_8xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_8xN 32$/;"	l
P2S_H_8xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_8xN 4$/;"	l
P2S_H_8xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_8xN 64$/;"	l
P2S_H_8xN	../../source/common/x86/ipfilter16.asm	/^P2S_H_8xN 8$/;"	l
PARAM_NS	../../source/common/param.h	45;"	d
PARAM_NS	../../source/common/param.h	54;"	d
PERMUTE	../../source/compat/getopt/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon1	file:
PFX	../../source/common/contexts.h	/^extern "C" const uint32_t PFX(entropyStateBits)[128];$/;"	p	signature:(entropyStateBits)
PFX	../../source/common/cpu.h	33;"	d
PFX	../../source/common/primitives.h	/^extern const char* PFX(build_info_str);$/;"	p	signature:(build_info_str)
PFX	../../source/common/primitives.h	/^extern const char* PFX(version_str);$/;"	p	signature:(version_str)
PFX	../../source/common/primitives.h	/^extern const int   PFX(max_bit_depth);$/;"	p	signature:(max_bit_depth)
PFX	../../source/encoder/entropy.cpp	/^extern "C" const uint32_t PFX(entropyStateBits)[128] =$/;"	p	file:	signature:(entropyStateBits)
PFX2	../../source/common/cpu.h	32;"	d
PFX3	../../source/common/cpu.h	31;"	d
PIXELSUB_PS_W16_H4	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W16_H4 16, 16$/;"	l
PIXELSUB_PS_W16_H4	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W16_H4 16, 32$/;"	l
PIXELSUB_PS_W16_H4_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W16_H4_avx2 16$/;"	l
PIXELSUB_PS_W16_H4_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W16_H4_avx2 32$/;"	l
PIXELSUB_PS_W16_H8_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W16_H8_avx2 16, 16$/;"	l
PIXELSUB_PS_W16_H8_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W16_H8_avx2 16, 32$/;"	l
PIXELSUB_PS_W32_H2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W32_H2 32, 32$/;"	l
PIXELSUB_PS_W32_H2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W32_H2 32, 64$/;"	l
PIXELSUB_PS_W32_H4_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W32_H4_avx2 32$/;"	l
PIXELSUB_PS_W32_H4_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W32_H4_avx2 64$/;"	l
PIXELSUB_PS_W32_H8_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W32_H8_avx2 32, 32$/;"	l
PIXELSUB_PS_W32_H8_avx2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W32_H8_avx2 32, 64$/;"	l
PIXELSUB_PS_W4_H4	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W4_H4 4, 8$/;"	l
PIXELSUB_PS_W64_H2	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W64_H2 64, 64$/;"	l
PIXELSUB_PS_W8_H4	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W8_H4 8, 16$/;"	l
PIXELSUB_PS_W8_H4	../../source/common/x86/pixel-util8.asm	/^PIXELSUB_PS_W8_H4 8, 8$/;"	l
PIXEL_ADD_PS_W16_H4	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W16_H4 16, 16$/;"	l
PIXEL_ADD_PS_W16_H4	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W16_H4 16, 32$/;"	l
PIXEL_ADD_PS_W16_H4_avx2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W16_H4_avx2 16$/;"	l
PIXEL_ADD_PS_W16_H4_avx2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W16_H4_avx2 32$/;"	l
PIXEL_ADD_PS_W32_H2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W32_H2 32, 32$/;"	l
PIXEL_ADD_PS_W32_H2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W32_H2 32, 64$/;"	l
PIXEL_ADD_PS_W32_H4_avx2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W32_H4_avx2 32$/;"	l
PIXEL_ADD_PS_W32_H4_avx2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W32_H4_avx2 64$/;"	l
PIXEL_ADD_PS_W4_H4	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W4_H4   4,  8$/;"	l
PIXEL_ADD_PS_W64_H2	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W64_H2 64, 64$/;"	l
PIXEL_ADD_PS_W8_H4	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W8_H4 8,  8$/;"	l
PIXEL_ADD_PS_W8_H4	../../source/common/x86/pixeladd8.asm	/^PIXEL_ADD_PS_W8_H4 8, 16$/;"	l
PIXEL_AVG	../../source/common/x86/asm-primitives.cpp	409;"	d	file:
PIXEL_AVG_W18	../../source/common/x86/mc-a.asm	/^PIXEL_AVG_W18$/;"	l
PIXEL_AVG_W4	../../source/common/x86/asm-primitives.cpp	433;"	d	file:
PIXEL_MAX	../../source/common/common.h	329;"	d
PIXEL_MAX	../../source/common/pixel.cpp	676;"	d	file:
PIXEL_MIN	../../source/common/loopfilter.cpp	29;"	d	file:
PIXEL_VSAD	../../source/common/x86/sad16-a.asm	/^PIXEL_VSAD$/;"	l
PLANAR_IDX	../../source/common/common.h	302;"	d
PLANE_DEINTERLEAVE	../../source/common/x86/mc-a2.asm	/^PLANE_DEINTERLEAVE$/;"	l
PLANE_INTERLEAVE	../../source/common/x86/mc-a2.asm	/^PLANE_INTERLEAVE$/;"	l
PME	../../source/encoder/search.h	/^        PME(Search& s, Mode& m, const CUGeom& g, const PredictionUnit& u, int p) : master(s), mode(m), cuGeom(g), pu(u), puIdx(p) {}$/;"	f	class:X265_NS::Search::PME	access:public	signature:(Search& s, Mode& m, const CUGeom& g, const PredictionUnit& u, int p)
PME	../../source/encoder/search.h	/^    class PME : public BondedTaskGroup$/;"	c	class:X265_NS::Search	inherits:BondedTaskGroup	access:public
PMODE	../../source/encoder/analysis.h	/^        PMODE(Analysis& m, const CUGeom& g) : master(m), cuGeom(g) {}$/;"	f	class:X265_NS::Analysis::PMODE	access:public	signature:(Analysis& m, const CUGeom& g)
PMODE	../../source/encoder/analysis.h	/^    class PMODE : public BondedTaskGroup$/;"	c	class:X265_NS::Analysis	inherits:BondedTaskGroup	access:public
PPS	../../source/common/slice.h	/^struct PPS$/;"	s	namespace:X265_NS
PRED_2Nx2N	../../source/encoder/analysis.h	/^        PRED_2Nx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_2NxN	../../source/encoder/analysis.h	/^        PRED_2NxN,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_2NxnD	../../source/encoder/analysis.h	/^        PRED_2NxnD,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_2NxnU	../../source/encoder/analysis.h	/^        PRED_2NxnU,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_BIDIR	../../source/encoder/analysis.h	/^        PRED_BIDIR,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_INTRA	../../source/encoder/analysis.h	/^        PRED_INTRA,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_INTRA_NxN	../../source/encoder/analysis.h	/^        PRED_INTRA_NxN, \/* 4x4 intra PU blocks for 8x8 CU *\/$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_LOSSLESS	../../source/encoder/analysis.h	/^        PRED_LOSSLESS,  \/* lossless encode of best mode *\/$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_MERGE	../../source/encoder/analysis.h	/^        PRED_MERGE,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_Nx2N	../../source/encoder/analysis.h	/^        PRED_Nx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_SKIP	../../source/encoder/analysis.h	/^        PRED_SKIP,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_SPLIT	../../source/encoder/analysis.h	/^        PRED_SPLIT,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_nLx2N	../../source/encoder/analysis.h	/^        PRED_nLx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
PRED_nRx2N	../../source/encoder/analysis.h	/^        PRED_nRx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
PREFETCH_FENC	../../source/common/x86/mc-a.asm	/^PREFETCH_FENC 420$/;"	l
PREFETCH_FENC	../../source/common/x86/mc-a.asm	/^PREFETCH_FENC 422$/;"	l
PRESENT	../../source/common/cudata.h	/^        PRESENT         = 1<<1, \/\/ CU is not completely outside the frame$/;"	e	enum:X265_NS::CUGeom::__anon5
PROCESS	../../source/common/vec/dct-sse3.cpp	366;"	d	file:
PROCESS	../../source/common/vec/dct-sse3.cpp	669;"	d	file:
PROFILE_INIT	../../source/common/common.h	52;"	d
PROFILE_INIT	../../source/common/common.h	59;"	d
PROFILE_INIT	../../source/common/common.h	65;"	d
PROFILE_PAUSE	../../source/common/common.h	53;"	d
PROFILE_PAUSE	../../source/common/common.h	60;"	d
PROFILE_PAUSE	../../source/common/common.h	66;"	d
PROFILE_RESUME	../../source/common/common.h	54;"	d
PROFILE_RESUME	../../source/common/common.h	61;"	d
PROFILE_RESUME	../../source/common/common.h	67;"	d
PROPAGATE_COST	../../source/common/x86/mc.h	39;"	d
PROPAGATE_COST	../../source/common/x86/mc.h	47;"	d
PSYVALUE	../../source/common/quant.cpp	663;"	d	file:
PU	../../source/common/primitives.h	/^    struct PU$/;"	s	struct:X265_NS::EncoderPrimitives	access:public
PUChroma	../../source/common/primitives.h	/^        struct PUChroma$/;"	s	struct:X265_NS::EncoderPrimitives::Chroma	access:public
P_SLICE	../../source/common/slice.h	/^    P_SLICE,$/;"	e	enum:X265_NS::SliceType
ParallelFilter	../../source/encoder/framefilter.h	/^        ParallelFilter()$/;"	f	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:()
ParallelFilter	../../source/encoder/framefilter.h	/^    class ParallelFilter : public BondedTaskGroup, public Deblock$/;"	c	class:X265_NS::FrameFilter	inherits:BondedTaskGroup,Deblock	access:public
PartSize	../../source/common/cudata.h	/^enum PartSize$/;"	g	namespace:X265_NS
PeriodicIR	../../source/common/framedata.h	/^    struct PeriodicIR$/;"	s	class:X265_NS::FrameData	access:public
PicList	../../source/common/piclist.h	/^    PicList()$/;"	f	class:X265_NS::PicList	access:public	signature:()
PicList	../../source/common/piclist.h	/^class PicList$/;"	c	namespace:X265_NS
PicList::getPOC	../../source/common/piclist.cpp	/^Frame* PicList::getPOC(int poc)$/;"	f	class:PicList	signature:(int poc)
PicList::popBack	../../source/common/piclist.cpp	/^Frame *PicList::popBack()$/;"	f	class:PicList	signature:()
PicList::popFront	../../source/common/piclist.cpp	/^Frame *PicList::popFront()$/;"	f	class:PicList	signature:()
PicList::pushBack	../../source/common/piclist.cpp	/^void PicList::pushBack(Frame& curFrame)$/;"	f	class:PicList	signature:(Frame& curFrame)
PicList::pushFront	../../source/common/piclist.cpp	/^void PicList::pushFront(Frame& curFrame)$/;"	f	class:PicList	signature:(Frame& curFrame)
PicList::remove	../../source/common/piclist.cpp	/^void PicList::remove(Frame& curFrame)$/;"	f	class:PicList	signature:(Frame& curFrame)
PicYuv	../../source/common/picyuv.cpp	/^PicYuv::PicYuv()$/;"	f	class:PicYuv	signature:()
PicYuv	../../source/common/picyuv.h	/^    PicYuv();$/;"	p	class:X265_NS::PicYuv	access:public	signature:()
PicYuv	../../source/common/picyuv.h	/^class PicYuv$/;"	c	namespace:X265_NS
PicYuv::PicYuv	../../source/common/picyuv.cpp	/^PicYuv::PicYuv()$/;"	f	class:PicYuv	signature:()
PicYuv::copyFromPicture	../../source/common/picyuv.cpp	/^void PicYuv::copyFromPicture(const x265_picture& pic, const x265_param& param, int padx, int pady)$/;"	f	class:PicYuv	signature:(const x265_picture& pic, const x265_param& param, int padx, int pady)
PicYuv::create	../../source/common/picyuv.cpp	/^bool PicYuv::create(x265_param* param, pixel *pixelbuf)$/;"	f	class:PicYuv	signature:(x265_param* param, pixel *pixelbuf)
PicYuv::createOffsets	../../source/common/picyuv.cpp	/^bool PicYuv::createOffsets(const SPS& sps)$/;"	f	class:PicYuv	signature:(const SPS& sps)
PicYuv::destroy	../../source/common/picyuv.cpp	/^void PicYuv::destroy()$/;"	f	class:PicYuv	signature:()
PicYuv::getLumaBufLen	../../source/common/picyuv.cpp	/^int PicYuv::getLumaBufLen(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp)$/;"	f	class:PicYuv	signature:(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp)
PreLookaheadGroup	../../source/encoder/slicetype.h	/^    PreLookaheadGroup(Lookahead& l) : m_lookahead(l) {}$/;"	f	class:X265_NS::PreLookaheadGroup	access:public	signature:(Lookahead& l)
PreLookaheadGroup	../../source/encoder/slicetype.h	/^class PreLookaheadGroup : public BondedTaskGroup$/;"	c	namespace:X265_NS	inherits:BondedTaskGroup
PreLookaheadGroup::processTasks	../../source/encoder/slicetype.cpp	/^void PreLookaheadGroup::processTasks(int workerThreadID)$/;"	f	class:PreLookaheadGroup	signature:(int workerThreadID)
PredMode	../../source/common/cudata.h	/^enum PredMode$/;"	g	namespace:X265_NS
Predict	../../source/common/predict.cpp	/^Predict::Predict()$/;"	f	class:Predict	signature:()
Predict	../../source/common/predict.h	/^    Predict();$/;"	p	class:X265_NS::Predict	access:public	signature:()
Predict	../../source/common/predict.h	/^class Predict$/;"	c	namespace:X265_NS
Predict::Predict	../../source/common/predict.cpp	/^Predict::Predict()$/;"	f	class:Predict	signature:()
Predict::addWeightBi	../../source/common/predict.cpp	/^void Predict::addWeightBi(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const
Predict::addWeightUni	../../source/common/predict.cpp	/^void Predict::addWeightUni(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const
Predict::allocBuffers	../../source/common/predict.cpp	/^bool Predict::allocBuffers(int csp)$/;"	f	class:Predict	signature:(int csp)
Predict::fillReferenceSamples	../../source/common/predict.cpp	/^void Predict::fillReferenceSamples(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258])$/;"	f	class:Predict	signature:(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258])
Predict::initAdiPattern	../../source/common/predict.cpp	/^void Predict::initAdiPattern(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode)$/;"	f	class:Predict	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode)
Predict::initAdiPatternChroma	../../source/common/predict.cpp	/^void Predict::initAdiPatternChroma(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId)$/;"	f	class:Predict	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId)
Predict::initIntraNeighbors	../../source/common/predict.cpp	/^void Predict::initIntraNeighbors(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *intraNeighbors)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *intraNeighbors)
Predict::isAboveAvailable	../../source/common/predict.cpp	/^int Predict::isAboveAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags)
Predict::isAboveLeftAvailable	../../source/common/predict.cpp	/^bool Predict::isAboveLeftAvailable(const CUData& cu, uint32_t partIdxLT)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLT)
Predict::isAboveRightAvailable	../../source/common/predict.cpp	/^int Predict::isAboveRightAvailable(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits)
Predict::isBelowLeftAvailable	../../source/common/predict.cpp	/^int Predict::isBelowLeftAvailable(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits)
Predict::isLeftAvailable	../../source/common/predict.cpp	/^int Predict::isLeftAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags)
Predict::motionCompensation	../../source/common/predict.cpp	/^void Predict::motionCompensation(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)$/;"	f	class:Predict	signature:(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
Predict::motionCompensationIterate	../../source/common/predict.cpp	/^void Predict::motionCompensationIterate(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)$/;"	f	class:Predict	signature:(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
Predict::predInterChromaPixel	../../source/common/predict.cpp	/^void Predict::predInterChromaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
Predict::predInterChromaShort	../../source/common/predict.cpp	/^void Predict::predInterChromaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
Predict::predInterLumaPixel	../../source/common/predict.cpp	/^void Predict::predInterLumaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
Predict::predInterLumaShort	../../source/common/predict.cpp	/^void Predict::predInterLumaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
Predict::predIntraChromaAng	../../source/common/predict.cpp	/^void Predict::predIntraChromaAng(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSizeC)$/;"	f	class:Predict	signature:(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSizeC)
Predict::predIntraLumaAng	../../source/common/predict.cpp	/^void Predict::predIntraLumaAng(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSize)$/;"	f	class:Predict	signature:(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSize)
Predict::~Predict	../../source/common/predict.cpp	/^Predict::~Predict()$/;"	f	class:Predict	signature:()
PredictionUnit	../../source/common/predict.cpp	/^PredictionUnit::PredictionUnit(const CUData& cu, const CUGeom& cuGeom, int puIdx)$/;"	f	class:PredictionUnit	signature:(const CUData& cu, const CUGeom& cuGeom, int puIdx)
PredictionUnit	../../source/common/predict.h	/^    PredictionUnit(const CUData& cu, const CUGeom& cuGeom, int puIdx);$/;"	p	struct:X265_NS::PredictionUnit	access:public	signature:(const CUData& cu, const CUGeom& cuGeom, int puIdx)
PredictionUnit	../../source/common/predict.h	/^struct PredictionUnit$/;"	s	namespace:X265_NS
PredictionUnit::PredictionUnit	../../source/common/predict.cpp	/^PredictionUnit::PredictionUnit(const CUData& cu, const CUGeom& cuGeom, int puIdx)$/;"	f	class:PredictionUnit	signature:(const CUData& cu, const CUGeom& cuGeom, int puIdx)
Predictor	../../source/encoder/ratecontrol.h	/^struct Predictor$/;"	s	namespace:X265_NS
Profile	../../source/common/slice.h	/^namespace Profile {$/;"	n	namespace:X265_NS
ProfileCUScope	../../source/encoder/search.h	44;"	d
ProfileCUScope	../../source/encoder/search.h	48;"	d
ProfileCUScopeNamed	../../source/encoder/search.h	41;"	d
ProfileCUScopeNamed	../../source/encoder/search.h	47;"	d
ProfileCounter	../../source/encoder/search.h	45;"	d
ProfileCounter	../../source/encoder/search.h	49;"	d
ProfileLookaheadTime	../../source/encoder/slicetype.cpp	38;"	d	file:
ProfileLookaheadTime	../../source/encoder/slicetype.cpp	40;"	d	file:
ProfileScopeEvent	../../source/common/common.h	50;"	d
ProfileScopeEvent	../../source/common/common.h	57;"	d
ProfileScopeEvent	../../source/common/common.h	63;"	d
ProfileTierLevel	../../source/common/slice.h	/^struct ProfileTierLevel$/;"	s	namespace:X265_NS
QP_BD_OFFSET	../../source/common/common.h	205;"	d
QP_MAX_MAX	../../source/common/common.h	157;"	d
QP_MAX_SPEC	../../source/common/common.h	156;"	d
QP_MIN	../../source/common/common.h	155;"	d
QUAD_SPLIT	../../source/encoder/entropy.h	/^    QUAD_SPLIT            = 2,$/;"	e	enum:X265_NS::SplitType
QUANT_IQUANT_SHIFT	../../source/common/common.h	288;"	d
QUANT_SHIFT	../../source/common/common.h	289;"	d
QUEUE_SIZE	../../source/input/y4m.h	31;"	d
QUEUE_SIZE	../../source/input/yuv.h	31;"	d
QpParam	../../source/common/quant.h	/^    QpParam() : qp(MAX_INT) {}$/;"	f	struct:X265_NS::QpParam	access:public	signature:()
QpParam	../../source/common/quant.h	/^struct QpParam$/;"	s	namespace:X265_NS
Quant	../../source/common/quant.cpp	/^Quant::Quant()$/;"	f	class:Quant	signature:()
Quant	../../source/common/quant.h	/^    Quant();$/;"	p	class:X265_NS::Quant	access:public	signature:()
Quant	../../source/common/quant.h	/^class Quant$/;"	c	namespace:X265_NS
Quant::Quant	../../source/common/quant.cpp	/^Quant::Quant()$/;"	f	class:Quant	signature:()
Quant::allocNoiseReduction	../../source/common/quant.cpp	/^bool Quant::allocNoiseReduction(const x265_param& param)$/;"	f	class:Quant	signature:(const x265_param& param)
Quant::getSigCtxInc	../../source/common/quant.cpp	/^uint32_t Quant::getSigCtxInc(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma,$/;"	f	class:Quant	signature:(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma, uint32_t firstSignificanceMapContext)
Quant::init	../../source/common/quant.cpp	/^bool Quant::init(double psyScale, const ScalingList& scalingList, Entropy& entropy)$/;"	f	class:Quant	signature:(double psyScale, const ScalingList& scalingList, Entropy& entropy)
Quant::invtransformNxN	../../source/common/quant.cpp	/^void Quant::invtransformNxN(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff,$/;"	f	class:Quant	signature:(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff, uint32_t log2TrSize, TextType ttype, bool bIntra, bool useTransformSkip, uint32_t numSig)
Quant::rdoQuant	../../source/common/quant.cpp	/^uint32_t Quant::rdoQuant(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy)$/;"	f	class:Quant	signature:(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy)
Quant::setChromaQP	../../source/common/quant.cpp	/^void Quant::setChromaQP(int qpin, TextType ttype, int chFmt)$/;"	f	class:Quant	signature:(int qpin, TextType ttype, int chFmt)
Quant::setQPforQuant	../../source/common/quant.cpp	/^void Quant::setQPforQuant(const CUData& ctu, int qp)$/;"	f	class:Quant	signature:(const CUData& ctu, int qp)
Quant::signBitHidingHDQ	../../source/common/quant.cpp	/^uint32_t Quant::signBitHidingHDQ(int16_t* coeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codeParams, uint32_t log2TrSize)$/;"	f	class:Quant	signature:(int16_t* coeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codeParams, uint32_t log2TrSize)
Quant::ssimDistortion	../../source/common/quant.cpp	/^uint64_t Quant::ssimDistortion(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx)$/;"	f	class:Quant	signature:(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx)
Quant::transformNxN	../../source/common/quant.cpp	/^uint32_t Quant::transformNxN(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride,$/;"	f	class:Quant	signature:(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride, coeff_t* coeff, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx, bool useTransformSkip)
Quant::~Quant	../../source/common/quant.cpp	/^Quant::~Quant()$/;"	f	class:Quant	signature:()
RASTER_SIZE	../../source/common/common.h	260;"	d
RAWOutput	../../source/output/raw.cpp	/^RAWOutput::RAWOutput(const char* fname, InputFileInfo&)$/;"	f	class:RAWOutput	signature:(const char* fname, InputFileInfo&)
RAWOutput	../../source/output/raw.h	/^    RAWOutput(const char* fname, InputFileInfo&);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(const char* fname, InputFileInfo&)
RAWOutput	../../source/output/raw.h	/^class RAWOutput : public OutputFile$/;"	c	namespace:X265_NS	inherits:OutputFile
RAWOutput::RAWOutput	../../source/output/raw.cpp	/^RAWOutput::RAWOutput(const char* fname, InputFileInfo&)$/;"	f	class:RAWOutput	signature:(const char* fname, InputFileInfo&)
RAWOutput::closeFile	../../source/output/raw.cpp	/^void RAWOutput::closeFile(int64_t, int64_t)$/;"	f	class:RAWOutput	signature:(int64_t, int64_t)
RAWOutput::setParam	../../source/output/raw.cpp	/^void RAWOutput::setParam(x265_param* param)$/;"	f	class:RAWOutput	signature:(x265_param* param)
RAWOutput::writeFrame	../../source/output/raw.cpp	/^int RAWOutput::writeFrame(const x265_nal* nal, uint32_t nalcount, x265_picture&)$/;"	f	class:RAWOutput	signature:(const x265_nal* nal, uint32_t nalcount, x265_picture&)
RAWOutput::writeHeaders	../../source/output/raw.cpp	/^int RAWOutput::writeHeaders(const x265_nal* nal, uint32_t nalcount)$/;"	f	class:RAWOutput	signature:(const x265_nal* nal, uint32_t nalcount)
RCStatCU	../../source/common/framedata.h	/^    struct RCStatCU$/;"	s	class:X265_NS::FrameData	access:public
RCStatRow	../../source/common/framedata.h	/^    struct RCStatRow$/;"	s	class:X265_NS::FrameData	access:public
RDCOST	../../source/common/quant.cpp	662;"	d	file:
RDCost	../../source/encoder/rdcost.h	/^class RDCost$/;"	c	namespace:X265_NS
READ_UNPACKHILO	../../source/common/vec/dct-sse3.cpp	299;"	d	file:
READ_UNPACKHILO	../../source/common/vec/dct-sse3.cpp	673;"	d	file:
RECON_BUF_SIZE	../../source/output/reconplay.h	/^    enum { RECON_BUF_SIZE = 40 };$/;"	e	enum:X265_NS::ReconPlay::__anon1
REF_NOT_VALID	../../source/common/common.h	317;"	d
REQUIRE_ORDER	../../source/compat/getopt/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon1	file:
RET	../../source/common/x86/blockcopy8.asm	/^RET$/;"	l
RET	../../source/common/x86/intrapred8_allangs.asm	/^RET$/;"	l
RET	../../source/common/x86/ipfilter16.asm	/^RET$/;"	l
RET	../../source/common/x86/ipfilter8.asm	/^RET$/;"	l
RET	../../source/common/x86/pixel-util8.asm	/^RET$/;"	l
RET	../../source/common/x86/ssd-a.asm	/^RET$/;"	l
RETURN_IN_ORDER	../../source/compat/getopt/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon1	file:
RPS	../../source/common/slice.h	/^    RPS()$/;"	f	struct:X265_NS::RPS	access:public	signature:()
RPS	../../source/common/slice.h	/^struct RPS$/;"	s	namespace:X265_NS
RPS::sortDeltaPOC	../../source/common/slice.cpp	/^void RPS::sortDeltaPOC(unsigned int maxDecPicBuffer)$/;"	f	class:RPS	signature:(unsigned int maxDecPicBuffer)
RPSListNode	../../source/encoder/encoder.h	/^struct RPSListNode$/;"	s	namespace:X265_NS
RQTData	../../source/encoder/search.h	/^struct RQTData$/;"	s	namespace:X265_NS
RateControl	../../source/encoder/ratecontrol.cpp	/^RateControl::RateControl(x265_param& p)$/;"	f	class:RateControl	signature:(x265_param& p)
RateControl	../../source/encoder/ratecontrol.h	/^    RateControl(x265_param& p);$/;"	p	class:X265_NS::RateControl	access:public	signature:(x265_param& p)
RateControl	../../source/encoder/ratecontrol.h	/^class RateControl$/;"	c	namespace:X265_NS
RateControl::RateControl	../../source/encoder/ratecontrol.cpp	/^RateControl::RateControl(x265_param& p)$/;"	f	class:RateControl	signature:(x265_param& p)
RateControl::accumPQpUpdate	../../source/encoder/ratecontrol.cpp	/^void RateControl::accumPQpUpdate()$/;"	f	class:RateControl	signature:()
RateControl::analyseABR2Pass	../../source/encoder/ratecontrol.cpp	/^bool RateControl::analyseABR2Pass(uint64_t allAvailableBits)$/;"	f	class:RateControl	signature:(uint64_t allAvailableBits)
RateControl::checkAndResetABR	../../source/encoder/ratecontrol.cpp	/^void RateControl::checkAndResetABR(RateControlEntry* rce, bool isFrameDone)$/;"	f	class:RateControl	signature:(RateControlEntry* rce, bool isFrameDone)
RateControl::clipQscale	../../source/encoder/ratecontrol.cpp	/^double RateControl::clipQscale(Frame* curFrame, RateControlEntry* rce, double q)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce, double q)
RateControl::countExpectedBits	../../source/encoder/ratecontrol.cpp	/^double RateControl::countExpectedBits(int startPos, int endPos)$/;"	f	class:RateControl	signature:(int startPos, int endPos)
RateControl::cuTreeReadFor2Pass	../../source/encoder/ratecontrol.cpp	/^bool RateControl::cuTreeReadFor2Pass(Frame* frame)$/;"	f	class:RateControl	signature:(Frame* frame)
RateControl::destroy	../../source/encoder/ratecontrol.cpp	/^void RateControl::destroy()$/;"	f	class:RateControl	signature:()
RateControl::estIQscale	../../source/encoder/ratecontrol.cpp	/^double RateControl::estIQscale(double rate, double lowresSatd)$/;"	f	class:RateControl	signature:(double rate, double lowresSatd)
RateControl::estimateBRate	../../source/encoder/ratecontrol.cpp	/^double RateControl::estimateBRate(double lowresSatd, double q)$/;"	f	class:RateControl	signature:(double lowresSatd, double q)
RateControl::estimateIRate	../../source/encoder/ratecontrol.cpp	/^double RateControl::estimateIRate(double lowresSatd, double q)$/;"	f	class:RateControl	signature:(double lowresSatd, double q)
RateControl::estimatePRate	../../source/encoder/ratecontrol.cpp	/^double RateControl::estimatePRate(double lowresSatd, double q)$/;"	f	class:RateControl	signature:(double lowresSatd, double q)
RateControl::findUnderflow	../../source/encoder/ratecontrol.cpp	/^bool RateControl::findUnderflow(double *fills, int *t0, int *t1, int over, int endPos)$/;"	f	class:RateControl	signature:(double *fills, int *t0, int *t1, int over, int endPos)
RateControl::fixUnderflow	../../source/encoder/ratecontrol.cpp	/^bool RateControl::fixUnderflow(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax)$/;"	f	class:RateControl	signature:(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax)
RateControl::getDiffLimitedQScale	../../source/encoder/ratecontrol.cpp	/^double RateControl::getDiffLimitedQScale(RateControlEntry *rce, double q)$/;"	f	class:RateControl	signature:(RateControlEntry *rce, double q)
RateControl::getInitQScale	../../source/encoder/ratecontrol.cpp	/^double RateControl::getInitQScale(Frame *curFrame, RateControlEntry *rce)$/;"	f	class:RateControl	signature:(Frame *curFrame, RateControlEntry *rce)
RateControl::getPredictorType	../../source/encoder/ratecontrol.cpp	/^int RateControl::getPredictorType(int lowresSliceType, int sliceType)$/;"	f	class:RateControl	signature:(int lowresSliceType, int sliceType)
RateControl::getQScale	../../source/encoder/ratecontrol.cpp	/^double RateControl::getQScale(RateControlEntry *rce, double rateFactor)$/;"	f	class:RateControl	signature:(RateControlEntry *rce, double rateFactor)
RateControl::getQScaleI	../../source/encoder/ratecontrol.cpp	/^double RateControl::getQScaleI(Frame *curFrame, RateControlEntry *rce, double rateFactor)$/;"	f	class:RateControl	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor)
RateControl::getQScaleP	../../source/encoder/ratecontrol.cpp	/^double RateControl::getQScaleP(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool&   bHighDiscrepency)$/;"	f	class:RateControl	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool& bHighDiscrepency)
RateControl::getZone	../../source/encoder/ratecontrol.cpp	/^x265_zone* RateControl::getZone()$/;"	f	class:RateControl	signature:()
RateControl::hrdFullness	../../source/encoder/ratecontrol.cpp	/^void RateControl::hrdFullness(SEIBufferingPeriod *seiBP)$/;"	f	class:RateControl	signature:(SEIBufferingPeriod *seiBP)
RateControl::init	../../source/encoder/ratecontrol.cpp	/^bool RateControl::init(const SPS& sps)$/;"	f	class:RateControl	signature:(const SPS& sps)
RateControl::initFramePredictors	../../source/encoder/ratecontrol.cpp	/^void RateControl::initFramePredictors()$/;"	f	class:RateControl	signature:()
RateControl::initHRD	../../source/encoder/ratecontrol.cpp	/^void RateControl::initHRD(SPS& sps)$/;"	f	class:RateControl	signature:(SPS& sps)
RateControl::initPass2	../../source/encoder/ratecontrol.cpp	/^bool RateControl::initPass2()$/;"	f	class:RateControl	signature:()
RateControl::predictRowsSizeSum	../../source/encoder/ratecontrol.cpp	/^double RateControl::predictRowsSizeSum(Frame* curFrame, RateControlEntry* rce, double qpVbv, int32_t& encodedBitsSoFar)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce, double qpVbv, int32_t& encodedBitsSoFar)
RateControl::predictSize	../../source/encoder/ratecontrol.cpp	/^double RateControl::predictSize(Predictor *p, double q, double var)$/;"	f	class:RateControl	signature:(Predictor *p, double q, double var)
RateControl::rateControlEnd	../../source/encoder/ratecontrol.cpp	/^int RateControl::rateControlEnd(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler)$/;"	f	class:RateControl	signature:(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler)
RateControl::rateControlSliceType	../../source/encoder/ratecontrol.cpp	/^int RateControl::rateControlSliceType(int frameNum)$/;"	f	class:RateControl	signature:(int frameNum)
RateControl::rateControlStart	../../source/encoder/ratecontrol.cpp	/^int RateControl::rateControlStart(Frame* curFrame, RateControlEntry* rce, Encoder* enc)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce, Encoder* enc)
RateControl::rateControlUpdateStats	../../source/encoder/ratecontrol.cpp	/^void RateControl::rateControlUpdateStats(RateControlEntry* rce)$/;"	f	class:RateControl	signature:(RateControlEntry* rce)
RateControl::rateEstimateQscale	../../source/encoder/ratecontrol.cpp	/^double RateControl::rateEstimateQscale(Frame* curFrame, RateControlEntry *rce, Encoder *enc)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry *rce, Encoder *enc)
RateControl::reconfigureRC	../../source/encoder/ratecontrol.cpp	/^void RateControl::reconfigureRC()$/;"	f	class:RateControl	signature:()
RateControl::rowVbvRateControl	../../source/encoder/ratecontrol.cpp	/^int RateControl::rowVbvRateControl(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv)$/;"	f	class:RateControl	signature:(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv)
RateControl::s_defaultStatFileName	../../source/encoder/ratecontrol.cpp	/^const char *RateControl::s_defaultStatFileName = "x265_2pass.log";$/;"	m	class:RateControl	file:
RateControl::s_slidingWindowFrames	../../source/encoder/ratecontrol.cpp	/^const int RateControl::s_slidingWindowFrames = 20;$/;"	m	class:RateControl	file:
RateControl::setFinalFrameCount	../../source/encoder/ratecontrol.cpp	/^void RateControl::setFinalFrameCount(int count)$/;"	f	class:RateControl	signature:(int count)
RateControl::splitbUsed	../../source/encoder/ratecontrol.cpp	/^void RateControl::splitbUsed(char bused[], RateControlEntry *rce)$/;"	f	class:RateControl	signature:(char bused[], RateControlEntry *rce)
RateControl::splitdeltaPOC	../../source/encoder/ratecontrol.cpp	/^void RateControl::splitdeltaPOC(char deltapoc[], RateControlEntry *rce)$/;"	f	class:RateControl	signature:(char deltapoc[], RateControlEntry *rce)
RateControl::terminate	../../source/encoder/ratecontrol.cpp	/^void RateControl::terminate()$/;"	f	class:RateControl	signature:()
RateControl::tuneAbrQScaleFromFeedback	../../source/encoder/ratecontrol.cpp	/^double RateControl::tuneAbrQScaleFromFeedback(double qScale)$/;"	f	class:RateControl	signature:(double qScale)
RateControl::tuneQScaleForGrain	../../source/encoder/ratecontrol.cpp	/^double RateControl::tuneQScaleForGrain(double rcOverflow)$/;"	f	class:RateControl	signature:(double rcOverflow)
RateControl::updatePredictor	../../source/encoder/ratecontrol.cpp	/^void RateControl::updatePredictor(Predictor *p, double q, double var, double bits)$/;"	f	class:RateControl	signature:(Predictor *p, double q, double var, double bits)
RateControl::updateVbv	../../source/encoder/ratecontrol.cpp	/^int RateControl::updateVbv(int64_t bits, RateControlEntry* rce)$/;"	f	class:RateControl	signature:(int64_t bits, RateControlEntry* rce)
RateControl::updateVbvPlan	../../source/encoder/ratecontrol.cpp	/^void RateControl::updateVbvPlan(Encoder* enc)$/;"	f	class:RateControl	signature:(Encoder* enc)
RateControl::vbv2Pass	../../source/encoder/ratecontrol.cpp	/^bool RateControl::vbv2Pass(uint64_t allAvailableBits, int endPos, int startPos)$/;"	f	class:RateControl	signature:(uint64_t allAvailableBits, int endPos, int startPos)
RateControl::writeRateControlFrameStats	../../source/encoder/ratecontrol.cpp	/^int RateControl::writeRateControlFrameStats(Frame* curFrame, RateControlEntry* rce)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce)
RateControlEntry	../../source/encoder/ratecontrol.h	/^struct RateControlEntry$/;"	s	namespace:X265_NS
RcStats	../../source/common/frame.h	/^struct RcStats$/;"	s	namespace:X265_NS
ReconFile	../../source/output/output.h	/^    ReconFile()           {}$/;"	f	class:X265_NS::ReconFile	access:public	signature:()
ReconFile	../../source/output/output.h	/^class ReconFile$/;"	c	namespace:X265_NS
ReconFile::open	../../source/output/output.cpp	/^ReconFile* ReconFile::open(const char *fname, int width, int height, uint32_t bitdepth, uint32_t fpsNum, uint32_t fpsDenom, int csp)$/;"	f	class:ReconFile	signature:(const char *fname, int width, int height, uint32_t bitdepth, uint32_t fpsNum, uint32_t fpsDenom, int csp)
ReconPlay	../../source/output/reconplay.cpp	/^ReconPlay::ReconPlay(const char* commandLine, x265_param& param)$/;"	f	class:ReconPlay	signature:(const char* commandLine, x265_param& param)
ReconPlay	../../source/output/reconplay.h	/^    ReconPlay(const char* commandLine, x265_param& param);$/;"	p	class:X265_NS::ReconPlay	access:public	signature:(const char* commandLine, x265_param& param)
ReconPlay	../../source/output/reconplay.h	/^class ReconPlay : public Thread$/;"	c	namespace:X265_NS	inherits:Thread
ReconPlay::ReconPlay	../../source/output/reconplay.cpp	/^ReconPlay::ReconPlay(const char* commandLine, x265_param& param)$/;"	f	class:ReconPlay	signature:(const char* commandLine, x265_param& param)
ReconPlay::outputFrame	../../source/output/reconplay.cpp	/^bool ReconPlay::outputFrame()$/;"	f	class:ReconPlay	signature:()
ReconPlay::threadMain	../../source/output/reconplay.cpp	/^void ReconPlay::threadMain()$/;"	f	class:ReconPlay	signature:()
ReconPlay::writePicture	../../source/output/reconplay.cpp	/^bool ReconPlay::writePicture(const x265_picture& pic)$/;"	f	class:ReconPlay	signature:(const x265_picture& pic)
ReconPlay::~ReconPlay	../../source/output/reconplay.cpp	/^ReconPlay::~ReconPlay()$/;"	f	class:ReconPlay	signature:()
RefIdxLastGOP	../../source/encoder/encoder.h	/^struct RefIdxLastGOP$/;"	s	namespace:X265_NS
ReferencePlanes	../../source/common/lowres.h	/^    ReferencePlanes() { memset(this, 0, sizeof(ReferencePlanes)); }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:()
ReferencePlanes	../../source/common/lowres.h	/^struct ReferencePlanes$/;"	s	namespace:X265_NS
SA8D	../../source/common/x86/pixel-a.asm	/^SA8D$/;"	l
SA8D_1D_ALTIVEC	../../source/common/ppc/pixel_altivec.cpp	3501;"	d	file:
SAD	../../source/common/x86/sad-a.asm	/^SAD  4,  4$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD  4,  8$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD  4, 16$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD  8,  4$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD  8,  8$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD  8, 16$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD 16,  8$/;"	l
SAD	../../source/common/x86/sad-a.asm	/^SAD 16, 16$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  16,  4$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  16,  8$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  16, 12$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  16, 16$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  16, 32$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  8,  4$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  8,  8$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  8, 16$/;"	l
SAD	../../source/common/x86/sad16-a.asm	/^SAD  8, 32$/;"	l
SAD16_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC sse2, 16$/;"	l
SAD16_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC sse2, 8$/;"	l
SAD16_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC ssse3, 16$/;"	l
SAD16_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC ssse3, 8$/;"	l
SAD16_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC_MMX2  8, 32$/;"	l
SAD16_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC_MMX2  8, 64$/;"	l
SAD16_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC_MMX2 16, 32$/;"	l
SAD16_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_FUNC_MMX2 16, 64$/;"	l
SAD16_CACHELINE_LOOP_SSE2	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_LOOP_SSE2 i$/;"	l
SAD16_CACHELINE_LOOP_SSSE3	../../source/common/x86/sad-a.asm	/^SAD16_CACHELINE_LOOP_SSSE3 i$/;"	l
SAD16_NEON	../../source/common/arm/sad-a.S	/^SAD16_NEON 12$/;"	l
SAD16_NEON	../../source/common/arm/sad-a.S	/^SAD16_NEON 16$/;"	l
SAD16_NEON	../../source/common/arm/sad-a.S	/^SAD16_NEON 32$/;"	l
SAD16_NEON	../../source/common/arm/sad-a.S	/^SAD16_NEON 4$/;"	l
SAD16_NEON	../../source/common/arm/sad-a.S	/^SAD16_NEON 64$/;"	l
SAD16_NEON	../../source/common/arm/sad-a.S	/^SAD16_NEON 8$/;"	l
SAD32_NEON	../../source/common/arm/sad-a.S	/^SAD32_NEON 16$/;"	l
SAD32_NEON	../../source/common/arm/sad-a.S	/^SAD32_NEON 24$/;"	l
SAD32_NEON	../../source/common/arm/sad-a.S	/^SAD32_NEON 32$/;"	l
SAD32_NEON	../../source/common/arm/sad-a.S	/^SAD32_NEON 64$/;"	l
SAD32_NEON	../../source/common/arm/sad-a.S	/^SAD32_NEON 8$/;"	l
SAD4_ARMV6	../../source/common/arm/sad-a.S	/^SAD4_ARMV6 16$/;"	l
SAD4_ARMV6	../../source/common/arm/sad-a.S	/^SAD4_ARMV6 4$/;"	l
SAD4_ARMV6	../../source/common/arm/sad-a.S	/^SAD4_ARMV6 8$/;"	l
SAD64_NEON	../../source/common/arm/sad-a.S	/^SAD64_NEON 16$/;"	l
SAD64_NEON	../../source/common/arm/sad-a.S	/^SAD64_NEON 32$/;"	l
SAD64_NEON	../../source/common/arm/sad-a.S	/^SAD64_NEON 48$/;"	l
SAD64_NEON	../../source/common/arm/sad-a.S	/^SAD64_NEON 64$/;"	l
SAD8_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD8_CACHELINE_FUNC_MMX2   4, 32$/;"	l
SAD8_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD8_CACHELINE_FUNC_MMX2   4, 64$/;"	l
SAD8_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD8_CACHELINE_FUNC_MMX2   8, 32$/;"	l
SAD8_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD8_CACHELINE_FUNC_MMX2   8, 64$/;"	l
SAD8_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD8_CACHELINE_FUNC_MMX2  16, 32$/;"	l
SAD8_CACHELINE_FUNC_MMX2	../../source/common/x86/sad-a.asm	/^SAD8_CACHELINE_FUNC_MMX2  16, 64$/;"	l
SAD8_NEON	../../source/common/arm/sad-a.S	/^SAD8_NEON 16$/;"	l
SAD8_NEON	../../source/common/arm/sad-a.S	/^SAD8_NEON 32$/;"	l
SAD8_NEON	../../source/common/arm/sad-a.S	/^SAD8_NEON 4$/;"	l
SAD8_NEON	../../source/common/arm/sad-a.S	/^SAD8_NEON 8$/;"	l
SADS	../../source/encoder/motion.cpp	1062;"	d	file:
SADS	../../source/encoder/motion.cpp	1109;"	d	file:
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC  8,  8, 32, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC  8,  8, 64, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC  8, 16, 32, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC  8, 16, 64, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC  8, 16, 64, sse2, mmx2, sse2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16,  8, 32, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16,  8, 64, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16,  8, 64, sse2, sse2, sse2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16,  8, 64, sse2, ssse3, ssse3$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16, 16, 32, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16, 16, 64, mmx2, mmx2, mmx2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16, 16, 64, sse2, sse2, sse2$/;"	l
SADX34_CACHELINE_FUNC	../../source/common/x86/sad-a.asm	/^SADX34_CACHELINE_FUNC 16, 16, 64, sse2, ssse3, ssse3$/;"	l
SAD_12	../../source/common/x86/sad16-a.asm	/^SAD_12  12, 16$/;"	l
SAD_24	../../source/common/x86/sad16-a.asm	/^SAD_24  24, 32$/;"	l
SAD_32	../../source/common/x86/sad16-a.asm	/^SAD_32  32,  8$/;"	l
SAD_32	../../source/common/x86/sad16-a.asm	/^SAD_32  32, 16$/;"	l
SAD_32	../../source/common/x86/sad16-a.asm	/^SAD_32  32, 24$/;"	l
SAD_32	../../source/common/x86/sad16-a.asm	/^SAD_32  32, 32$/;"	l
SAD_32	../../source/common/x86/sad16-a.asm	/^SAD_32  32, 64$/;"	l
SAD_48	../../source/common/x86/sad16-a.asm	/^SAD_48  48, 64$/;"	l
SAD_64	../../source/common/x86/sad16-a.asm	/^SAD_64  64, 16$/;"	l
SAD_64	../../source/common/x86/sad16-a.asm	/^SAD_64  64, 32$/;"	l
SAD_64	../../source/common/x86/sad16-a.asm	/^SAD_64  64, 48$/;"	l
SAD_64	../../source/common/x86/sad16-a.asm	/^SAD_64  64, 64$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX  4,  16, 2$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX  4,  4, 2$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX  4,  8, 2$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX  8,  4, 2$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX  8,  8, 2$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX  8, 16, 2$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX 16,  8, 1$/;"	l
SAD_MMX	../../source/common/x86/sad16-a.asm	/^SAD_MMX 16, 16, 1$/;"	l
SAD_Nx64	../../source/common/x86/sad16-a.asm	/^SAD_Nx64  16$/;"	l
SAD_THRESH	../../source/encoder/motion.cpp	61;"	d	file:
SAD_W16	../../source/common/x86/sad-a.asm	/^SAD_W16$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3,  4,  4$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3,  4,  8$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3,  4, 16$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3,  8,  4$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3,  8,  8$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3,  8, 16$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3, 16,  8$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 3, 16, 16$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4,  4,  4$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4,  4,  8$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4,  4, 16$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4,  8,  4$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4,  8,  8$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4,  8, 16$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4, 16,  8$/;"	l
SAD_X	../../source/common/x86/sad-a.asm	/^SAD_X 4, 16, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  4,  4$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  4,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  4, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  8,  4$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  8,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  8, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3,  8, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 12, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16,  12$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16,  16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16,  32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16,  4$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16,  64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16, 12$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 16, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 24, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 32,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 32, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 32, 24$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 32, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 32, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 48, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 64, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 64, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 64, 48$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 3, 64, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  4,  4$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  4,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  4, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  8,  4$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  8,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  8, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4,  8, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 12, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16,  12$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16,  16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16,  32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16,  4$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16,  64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16, 12$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 16, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 24, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 32,  8$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 32, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 32, 24$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 32, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 32, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 48, 64$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 64, 16$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 64, 32$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 64, 48$/;"	l
SAD_X	../../source/common/x86/sad16-a.asm	/^SAD_X 4, 64, 64$/;"	l
SAD_X3_W12	../../source/common/x86/sad-a.asm	/^SAD_X3_W12$/;"	l
SAD_X3_W24	../../source/common/x86/sad-a.asm	/^SAD_X3_W24$/;"	l
SAD_X3_W32	../../source/common/x86/sad-a.asm	/^SAD_X3_W32$/;"	l
SAD_X3_W48	../../source/common/x86/sad-a.asm	/^SAD_X3_W48$/;"	l
SAD_X3_W64	../../source/common/x86/sad-a.asm	/^SAD_X3_W64$/;"	l
SAD_X4_W12	../../source/common/x86/sad-a.asm	/^SAD_X4_W12$/;"	l
SAD_X4_W24	../../source/common/x86/sad-a.asm	/^SAD_X4_W24$/;"	l
SAD_X4_W32	../../source/common/x86/sad-a.asm	/^SAD_X4_W32$/;"	l
SAD_X4_W48	../../source/common/x86/sad-a.asm	/^SAD_X4_W48$/;"	l
SAD_X4_W64	../../source/common/x86/sad-a.asm	/^SAD_X4_W64$/;"	l
SAD_X_12x16	../../source/common/arm/sad-a.S	/^SAD_X_12x16 3$/;"	l
SAD_X_12x16	../../source/common/arm/sad-a.S	/^SAD_X_12x16 4$/;"	l
SAD_X_16xN	../../source/common/arm/sad-a.S	/^SAD_X_16xN 3 12$/;"	l
SAD_X_16xN	../../source/common/arm/sad-a.S	/^SAD_X_16xN 3 4$/;"	l
SAD_X_16xN	../../source/common/arm/sad-a.S	/^SAD_X_16xN 4 12$/;"	l
SAD_X_16xN	../../source/common/arm/sad-a.S	/^SAD_X_16xN 4 4$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 3 16$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 3 32$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 3 64$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 3 8$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 4 16$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 4 32$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 4 64$/;"	l
SAD_X_16xN_LOOP	../../source/common/arm/sad-a.S	/^SAD_X_16xN_LOOP 4 8$/;"	l
SAD_X_24x32	../../source/common/arm/sad-a.S	/^SAD_X_24x32 3$/;"	l
SAD_X_24x32	../../source/common/arm/sad-a.S	/^SAD_X_24x32 4$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 3 16$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 3 24$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 3 32$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 3 64$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 3 8$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 4 16$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 4 24$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 4 32$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 4 64$/;"	l
SAD_X_32xN	../../source/common/arm/sad-a.S	/^SAD_X_32xN 4 8$/;"	l
SAD_X_48x64	../../source/common/arm/sad-a.S	/^SAD_X_48x64 3$/;"	l
SAD_X_48x64	../../source/common/arm/sad-a.S	/^SAD_X_48x64 4$/;"	l
SAD_X_4xN	../../source/common/arm/sad-a.S	/^SAD_X_4xN 3 16$/;"	l
SAD_X_4xN	../../source/common/arm/sad-a.S	/^SAD_X_4xN 3 4$/;"	l
SAD_X_4xN	../../source/common/arm/sad-a.S	/^SAD_X_4xN 3 8$/;"	l
SAD_X_4xN	../../source/common/arm/sad-a.S	/^SAD_X_4xN 4 16$/;"	l
SAD_X_4xN	../../source/common/arm/sad-a.S	/^SAD_X_4xN 4 4$/;"	l
SAD_X_4xN	../../source/common/arm/sad-a.S	/^SAD_X_4xN 4 8$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 3 16$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 3 32$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 3 48$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 3 64$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 4 16$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 4 32$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 4 48$/;"	l
SAD_X_64xN	../../source/common/arm/sad-a.S	/^SAD_X_64xN 4 64$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 3 16$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 3 32$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 3 4$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 3 8$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 4 16$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 4 32$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 4 4$/;"	l
SAD_X_8xN	../../source/common/arm/sad-a.S	/^SAD_X_8xN 4 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 3, 16,  8, 7$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 3, 16, 12, 7$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 3, 16, 16, 7$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 3, 16, 32, 7$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 16,  8, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 16, 12, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 16, 16, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 16, 32, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 32,  8, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 32, 16, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 32, 24, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 32, 32, 8$/;"	l
SAD_X_AVX2	../../source/common/x86/sad-a.asm	/^SAD_X_AVX2 4, 32, 64, 8$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3,  8, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3,  8, 32, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3, 16,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3, 16, 12, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3, 16, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3, 16, 32, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  3, 16, 64, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4,  8,  4, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4,  8,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4,  8, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4,  8, 32, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4, 16,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4, 16, 12, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4, 16, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4, 16, 32, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2  4, 16, 64, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3,  8,  4, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3,  8,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3,  8, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16,  4, 6$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16,  4, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16,  8, 6$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16, 12, 6$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16, 16, 6$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16, 32, 6$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 3, 16, 64, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4,  8,  4, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4,  8,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4,  8, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4, 16,  4, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4, 16,  8, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4, 16, 12, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4, 16, 16, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4, 16, 32, 7$/;"	l
SAD_X_SSE2	../../source/common/x86/sad-a.asm	/^SAD_X_SSE2 4, 16, 64, 7$/;"	l
SAO	../../source/encoder/sao.cpp	/^SAO::SAO()$/;"	f	class:X265_NS::SAO	signature:()
SAO	../../source/encoder/sao.h	/^    SAO();$/;"	p	class:X265_NS::SAO	access:public	signature:()
SAO	../../source/encoder/sao.h	/^class SAO$/;"	c	namespace:X265_NS
SAOContexts	../../source/encoder/sao.h	/^    struct SAOContexts$/;"	s	class:X265_NS::SAO	access:public
SAOParam	../../source/common/common.h	/^    SAOParam()$/;"	f	struct:X265_NS::SAOParam	access:public	signature:()
SAOParam	../../source/common/common.h	/^struct SAOParam$/;"	s	namespace:X265_NS
SAOType	../../source/encoder/sao.h	/^enum SAOType$/;"	g	namespace:X265_NS
SAO_BIT_INC	../../source/encoder/sao.h	/^    enum { SAO_BIT_INC = 0 }; \/* in HM12.0, it wrote as X265_MAX(X265_DEPTH - 10, 0) *\/$/;"	e	enum:X265_NS::SAO::__anon8
SAO_BO	../../source/encoder/sao.h	/^    SAO_BO,$/;"	e	enum:X265_NS::SAOType
SAO_BO_BITS	../../source/common/loopfilter.cpp	127;"	d	file:
SAO_BO_BITS	../../source/encoder/sao.cpp	555;"	d	file:
SAO_BO_BITS	../../source/encoder/sao.h	/^    enum { SAO_BO_BITS  = 5 };$/;"	e	enum:X265_NS::SAO::__anon6
SAO_DEPTHRATE_SIZE	../../source/encoder/sao.h	/^    enum { SAO_DEPTHRATE_SIZE = 4 };$/;"	e	enum:X265_NS::SAO::__anon12
SAO_ENCODING_RATE	../../source/common/common.h	280;"	d
SAO_ENCODING_RATE_CHROMA	../../source/common/common.h	281;"	d
SAO_EO_0	../../source/encoder/sao.h	/^    SAO_EO_0 = 0,$/;"	e	enum:X265_NS::SAOType
SAO_EO_1	../../source/encoder/sao.h	/^    SAO_EO_1,$/;"	e	enum:X265_NS::SAOType
SAO_EO_2	../../source/encoder/sao.h	/^    SAO_EO_2,$/;"	e	enum:X265_NS::SAOType
SAO_EO_3	../../source/encoder/sao.h	/^    SAO_EO_3,$/;"	e	enum:X265_NS::SAOType
SAO_MAX_DEPTH	../../source/encoder/sao.h	/^    enum { SAO_MAX_DEPTH = 4 };$/;"	e	enum:X265_NS::SAO::__anon5
SAO_MERGE_LEFT	../../source/common/common.h	/^    SAO_MERGE_LEFT,$/;"	e	enum:X265_NS::SaoMergeMode
SAO_MERGE_NONE	../../source/common/common.h	/^    SAO_MERGE_NONE,$/;"	e	enum:X265_NS::SaoMergeMode
SAO_MERGE_UP	../../source/common/common.h	/^    SAO_MERGE_UP$/;"	e	enum:X265_NS::SaoMergeMode
SAO_NUM_OFFSET	../../source/common/common.h	/^enum { SAO_NUM_OFFSET = 4 };$/;"	e	enum:X265_NS::__anon16
SATDS_SSE2	../../source/common/x86/pixel-a.asm	/^SATDS_SSE2$/;"	l
SBH_THRESHOLD	../../source/common/common.h	275;"	d
SCALE_BITS	../../source/common/common.h	290;"	d
SCALING_LIST_DC	../../source/common/scalinglist.h	/^    static const int SCALING_LIST_DC = 16;    \/\/ default DC value$/;"	m	class:X265_NS::ScalingList	access:protected
SCAN_DIAG	../../source/common/common.h	/^    SCAN_DIAG = 0,     \/\/ up-right diagonal scan$/;"	e	enum:X265_NS::ScanType
SCAN_HOR	../../source/common/common.h	/^    SCAN_HOR = 1,      \/\/ horizontal first scan$/;"	e	enum:X265_NS::ScanType
SCAN_SET_SIZE	../../source/common/common.h	298;"	d
SCAN_VER	../../source/common/common.h	/^    SCAN_VER = 2,      \/\/ vertical first scan$/;"	e	enum:X265_NS::ScanType
SECTION	../../source/common/x86/blockcopy8.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/cpu-a.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/dct8.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/intrapred16.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/intrapred8.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/intrapred8_allangs.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/ipfilter16.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/ipfilter8.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/loopfilter.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/mc-a.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/mc-a2.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/pixel-32.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/pixel-a.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/pixel-util8.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/pixeladd8.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/sad-a.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/sad16-a.asm	/^SECTION .text$/;"	l
SECTION	../../source/common/x86/seaintegral.asm	/^SECTION .text $/;"	l
SECTION	../../source/common/x86/ssd-a.asm	/^SECTION .text$/;"	l
SECTION_RODATA	../../source/common/x86/blockcopy8.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/const-a.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/dct8.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/intrapred16.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/intrapred8.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/intrapred8_allangs.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/ipfilter16.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/ipfilter8.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/loopfilter.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/mc-a.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/mc-a2.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/pixel-a.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/pixel-util8.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/pixeladd8.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/sad-a.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	../../source/common/x86/ssd-a.asm	/^SECTION_RODATA 32$/;"	l
SEI	../../source/encoder/sei.h	/^class SEI : public SyntaxElementWriter$/;"	c	namespace:X265_NS	inherits:SyntaxElementWriter
SEI::setSize	../../source/encoder/sei.cpp	/^void SEI::setSize(uint32_t size)$/;"	f	class:SEI	signature:(uint32_t size)
SEI::write	../../source/encoder/sei.cpp	/^void SEI::write(Bitstream& bs, const SPS& sps)$/;"	f	class:SEI	signature:(Bitstream& bs, const SPS& sps)
SEI::writeByteAlign	../../source/encoder/sei.cpp	/^void SEI::writeByteAlign()$/;"	f	class:SEI	signature:()
SEIActiveParameterSets	../../source/encoder/sei.h	/^    SEIActiveParameterSets()$/;"	f	class:X265_NS::SEIActiveParameterSets	access:public	signature:()
SEIActiveParameterSets	../../source/encoder/sei.h	/^class SEIActiveParameterSets : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIBufferingPeriod	../../source/encoder/sei.h	/^    SEIBufferingPeriod()$/;"	f	class:X265_NS::SEIBufferingPeriod	access:public	signature:()
SEIBufferingPeriod	../../source/encoder/sei.h	/^class SEIBufferingPeriod : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIContentLightLevel	../../source/encoder/sei.h	/^    SEIContentLightLevel()$/;"	f	class:X265_NS::SEIContentLightLevel	access:public	signature:()
SEIContentLightLevel	../../source/encoder/sei.h	/^class SEIContentLightLevel : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEICreativeIntentMeta	../../source/encoder/sei.h	/^    SEICreativeIntentMeta()$/;"	f	class:X265_NS::SEICreativeIntentMeta	access:public	signature:()
SEICreativeIntentMeta	../../source/encoder/sei.h	/^class SEICreativeIntentMeta : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIDecodedPictureHash	../../source/encoder/sei.h	/^    SEIDecodedPictureHash()$/;"	f	class:X265_NS::SEIDecodedPictureHash	access:public	signature:()
SEIDecodedPictureHash	../../source/encoder/sei.h	/^class SEIDecodedPictureHash : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIMasteringDisplayColorVolume	../../source/encoder/sei.h	/^    SEIMasteringDisplayColorVolume()$/;"	f	class:X265_NS::SEIMasteringDisplayColorVolume	access:public	signature:()
SEIMasteringDisplayColorVolume	../../source/encoder/sei.h	/^class SEIMasteringDisplayColorVolume : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIPictureTiming	../../source/encoder/sei.h	/^    SEIPictureTiming()$/;"	f	class:X265_NS::SEIPictureTiming	access:public	signature:()
SEIPictureTiming	../../source/encoder/sei.h	/^class SEIPictureTiming : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIRecoveryPoint	../../source/encoder/sei.h	/^class SEIRecoveryPoint : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIuserDataUnregistered	../../source/encoder/sei.h	/^    SEIuserDataUnregistered() : m_userData(NULL)$/;"	f	class:X265_NS::SEIuserDataUnregistered	access:public	signature:()
SEIuserDataUnregistered	../../source/encoder/sei.h	/^class SEIuserDataUnregistered : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
SEIuserDataUnregistered::m_uuid_iso_iec_11578	../../source/encoder/sei.cpp	/^const uint8_t SEIuserDataUnregistered::m_uuid_iso_iec_11578[16] = {$/;"	m	class:SEIuserDataUnregistered	file:
SETUP_CHROMA_420_VERT_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	769;"	d	file:
SETUP_CHROMA_420_VSP_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	456;"	d	file:
SETUP_CHROMA_420_VSS_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	550;"	d	file:
SETUP_CHROMA_422_HORIZ_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	825;"	d	file:
SETUP_CHROMA_422_VERT_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	781;"	d	file:
SETUP_CHROMA_422_VSP_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	487;"	d	file:
SETUP_CHROMA_422_VSS_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	581;"	d	file:
SETUP_CHROMA_444_VSP_FUNC_DEF	../../source/common/x86/asm-primitives.cpp	518;"	d	file:
SETUP_FUNC_DEF	../../source/common/x86/ipfilter8.h	27;"	d
SETUP_INTRA_ANG16_32	../../source/common/x86/asm-primitives.cpp	664;"	d	file:
SETUP_INTRA_ANG4	../../source/common/x86/asm-primitives.cpp	661;"	d	file:
SETUP_INTRA_ANG4_8	../../source/common/x86/asm-primitives.cpp	668;"	d	file:
SETUP_INTRA_ANG_COMMON	../../source/common/x86/asm-primitives.cpp	655;"	d	file:
SETUP_INTRA_ANG_HIGH	../../source/common/x86/asm-primitives.cpp	694;"	d	file:
SETUP_SCALE	../../source/encoder/motion.cpp	123;"	d	file:
SETUP_SCALE	../../source/encoder/motion.cpp	150;"	d	file:
SET_WEIGHT	../../source/common/slice.h	326;"	d
SHIFT1	../../source/common/vec/dct-sse3.cpp	38;"	d	file:
SHIFT2	../../source/common/vec/dct-sse3.cpp	41;"	d	file:
SHIFT_INV_1ST	../../source/common/common.h	293;"	d
SHIFT_INV_2ND	../../source/common/common.h	294;"	d
SIGCOST	../../source/common/quant.cpp	661;"	d	file:
SIGN	../../source/common/quant.cpp	36;"	d	file:
SIZE_2Nx2N	../../source/common/cudata.h	/^    SIZE_2Nx2N, \/\/ symmetric motion partition,  2Nx2N$/;"	e	enum:X265_NS::PartSize
SIZE_2NxN	../../source/common/cudata.h	/^    SIZE_2NxN,  \/\/ symmetric motion partition,  2Nx N$/;"	e	enum:X265_NS::PartSize
SIZE_2NxnD	../../source/common/cudata.h	/^    SIZE_2NxnD, \/\/ asymmetric motion partition, 2Nx(3N\/2) + 2Nx( N\/2)$/;"	e	enum:X265_NS::PartSize
SIZE_2NxnU	../../source/common/cudata.h	/^    SIZE_2NxnU, \/\/ asymmetric motion partition, 2Nx( N\/2) + 2Nx(3N\/2)$/;"	e	enum:X265_NS::PartSize
SIZE_Nx2N	../../source/common/cudata.h	/^    SIZE_Nx2N,  \/\/ symmetric motion partition,   Nx2N$/;"	e	enum:X265_NS::PartSize
SIZE_NxN	../../source/common/cudata.h	/^    SIZE_NxN,   \/\/ symmetric motion partition,   Nx N$/;"	e	enum:X265_NS::PartSize
SIZE_nLx2N	../../source/common/cudata.h	/^    SIZE_nLx2N, \/\/ asymmetric motion partition, ( N\/2)x2N + (3N\/2)x2N$/;"	e	enum:X265_NS::PartSize
SIZE_nRx2N	../../source/common/cudata.h	/^    SIZE_nRx2N, \/\/ asymmetric motion partition, (3N\/2)x2N + ( N\/2)x2N$/;"	e	enum:X265_NS::PartSize
SLEEPBITMAP_AND	../../source/common/threadpool.cpp	41;"	d	file:
SLEEPBITMAP_AND	../../source/common/threadpool.cpp	47;"	d	file:
SLEEPBITMAP_AND	../../source/common/threadpool.cpp	56;"	d	file:
SLEEPBITMAP_CTZ	../../source/common/threadpool.cpp	39;"	d	file:
SLEEPBITMAP_CTZ	../../source/common/threadpool.cpp	45;"	d	file:
SLEEPBITMAP_CTZ	../../source/common/threadpool.cpp	54;"	d	file:
SLEEPBITMAP_OR	../../source/common/threadpool.cpp	40;"	d	file:
SLEEPBITMAP_OR	../../source/common/threadpool.cpp	46;"	d	file:
SLEEPBITMAP_OR	../../source/common/threadpool.cpp	55;"	d	file:
SLFASE_CONSTANT	../../source/common/constants.h	71;"	d
SPLIT	../../source/common/cudata.h	/^        SPLIT           = 1<<4, \/\/ CU is currently split in four child CUs.$/;"	e	enum:X265_NS::CUGeom::__anon5
SPLIT_MANDATORY	../../source/common/cudata.h	/^        SPLIT_MANDATORY = 1<<2, \/\/ CU split is mandatory if CU is inside frame and can be split$/;"	e	enum:X265_NS::CUGeom::__anon5
SPS	../../source/common/slice.h	/^    SPS()$/;"	f	struct:X265_NS::SPS	access:public	signature:()
SPS	../../source/common/slice.h	/^struct SPS$/;"	s	namespace:X265_NS
SSD	../../source/common/x86/ssd-a.asm	/^SSD  4,  4$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD  4,  8$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD  4, 16$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD  8,  4$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD  8,  8$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD  8, 16$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16,  8$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16, 12$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16, 16$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16, 32$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16, 4$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16, 64$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 16, 8$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 24, 24 ; not used, but resolves x265_pixel_ssd_24x24_sse2.startloop symbol$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 32, 16$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 32, 24$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 32, 32$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 32, 64$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 32, 8$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 64, 64$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 8,  16$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 8,  32$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 8,  4$/;"	l
SSD	../../source/common/x86/ssd-a.asm	/^SSD 8,  8$/;"	l
SSD_12	../../source/common/x86/ssd-a.asm	/^SSD_12     12, 16$/;"	l
SSD_24	../../source/common/x86/ssd-a.asm	/^SSD_24     24, 32$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     4,  4$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     4,  8$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     4, 16$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     8,  4$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     8,  8$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     8, 16$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE     8, 32$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16,  4$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16,  8$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16, 12$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16, 16$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16, 32$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16, 64$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    16, 8$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    32,  8$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    32, 16$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    32, 24$/;"	l
SSD_ONE	../../source/common/x86/ssd-a.asm	/^SSD_ONE    32, 64$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     4,  4$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     4,  8$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     4, 16$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     8,  4$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     8,  8$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     8, 16$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS     8, 32$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS    16,  4$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS    16,  8$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS    16, 12$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS    16, 16$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS    16, 32$/;"	l
SSD_SS	../../source/common/x86/ssd-a.asm	/^SSD_SS    16, 64$/;"	l
SSD_SS_12x16	../../source/common/x86/ssd-a.asm	/^SSD_SS_12x16$/;"	l
SSD_SS_24	../../source/common/x86/ssd-a.asm	/^SSD_SS_24$/;"	l
SSD_SS_32	../../source/common/x86/ssd-a.asm	/^SSD_SS_32 16$/;"	l
SSD_SS_32	../../source/common/x86/ssd-a.asm	/^SSD_SS_32 24$/;"	l
SSD_SS_32	../../source/common/x86/ssd-a.asm	/^SSD_SS_32 32$/;"	l
SSD_SS_32	../../source/common/x86/ssd-a.asm	/^SSD_SS_32 64$/;"	l
SSD_SS_32	../../source/common/x86/ssd-a.asm	/^SSD_SS_32 8$/;"	l
SSD_SS_32xN	../../source/common/x86/ssd-a.asm	/^SSD_SS_32xN$/;"	l
SSD_SS_48	../../source/common/x86/ssd-a.asm	/^SSD_SS_48$/;"	l
SSD_SS_64	../../source/common/x86/ssd-a.asm	/^SSD_SS_64 16$/;"	l
SSD_SS_64	../../source/common/x86/ssd-a.asm	/^SSD_SS_64 32$/;"	l
SSD_SS_64	../../source/common/x86/ssd-a.asm	/^SSD_SS_64 48$/;"	l
SSD_SS_64	../../source/common/x86/ssd-a.asm	/^SSD_SS_64 64$/;"	l
SSD_SS_64xN	../../source/common/x86/ssd-a.asm	/^SSD_SS_64xN$/;"	l
SSD_SS_ONE	../../source/common/x86/ssd-a.asm	/^SSD_SS_ONE$/;"	l
SSD_TWO	../../source/common/x86/ssd-a.asm	/^SSD_TWO    48, 64$/;"	l
SSD_TWO	../../source/common/x86/ssd-a.asm	/^SSD_TWO    64, 16$/;"	l
SSD_TWO	../../source/common/x86/ssd-a.asm	/^SSD_TWO    64, 32$/;"	l
SSD_TWO	../../source/common/x86/ssd-a.asm	/^SSD_TWO    64, 48$/;"	l
SSE2	../../source/common/cpu.cpp	68;"	d	file:
SSE2	../../source/common/cpu.cpp	89;"	d	file:
SSIM	../../source/common/x86/pixel-util8.asm	/^SSIM$/;"	l
STACK_ALIGN	../../source/common/threading.cpp	33;"	d	file:
START_CODE_OVERHEAD	../../source/common/common.h	334;"	d
START_VALUE	../../source/encoder/entropy.cpp	37;"	d	file:
STORE_LINE	../../source/common/vec/dct-sse3.cpp	1389;"	d	file:
STORE_LINE	../../source/common/vec/dct-sse3.cpp	1412;"	d	file:
STR	../../source/common/version.cpp	30;"	d	file:
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 0, 1, 4$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 0, 1, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 0, 2, 4$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 0, 2, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 0, 4, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 1, 3, 4$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 1, 3, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 1, 5, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 2, 3, 4$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 2, 3, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 2, 6, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 3, 7, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 4, 5, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 4, 6, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 5, 7, 9$/;"	d
SUMSUB_BA	../../source/common/x86/pixel-a.asm	/^    SUMSUB_BA d, 6, 7, 9$/;"	d
SWAP_FLAGS	../../source/compat/getopt/getopt.c	271;"	d	file:
SWAP_FLAGS	../../source/compat/getopt/getopt.c	279;"	d	file:
SWAP_FLAGS	../../source/compat/getopt/getopt.c	282;"	d	file:
SaoCtuParam	../../source/common/common.h	/^struct SaoCtuParam$/;"	s	namespace:X265_NS
SaoMergeMode	../../source/common/common.h	/^enum SaoMergeMode$/;"	g	namespace:X265_NS
ScalingList	../../source/common/scalinglist.cpp	/^ScalingList::ScalingList()$/;"	f	class:X265_NS::ScalingList	signature:()
ScalingList	../../source/common/scalinglist.h	/^    ScalingList();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
ScalingList	../../source/common/scalinglist.h	/^class ScalingList$/;"	c	namespace:X265_NS
ScanType	../../source/common/common.h	/^enum ScanType$/;"	g	namespace:X265_NS
ScopedElapsedTime	../../source/common/threading.h	/^    ScopedElapsedTime(int64_t& accum) : accumlatedTime(accum) { startTime = x265_mdate(); }$/;"	f	struct:X265_NS::ScopedElapsedTime	access:public	signature:(int64_t& accum)
ScopedElapsedTime	../../source/common/threading.h	/^struct ScopedElapsedTime$/;"	s	namespace:X265_NS
ScopedLock	../../source/common/threading.h	/^    ScopedLock(Lock &instance) : inst(instance)$/;"	f	class:X265_NS::ScopedLock	access:public	signature:(Lock &instance)
ScopedLock	../../source/common/threading.h	/^class ScopedLock$/;"	c	namespace:X265_NS
Search	../../source/encoder/search.cpp	/^Search::Search()$/;"	f	class:Search	signature:()
Search	../../source/encoder/search.h	/^    Search();$/;"	p	class:X265_NS::Search	access:public	signature:()
Search	../../source/encoder/search.h	/^class Search : public Predict$/;"	c	namespace:X265_NS	inherits:Predict
Search::PME::processTasks	../../source/encoder/search.cpp	/^void Search::PME::processTasks(int workerThreadId)$/;"	f	class:Search::PME	signature:(int workerThreadId)
Search::Search	../../source/encoder/search.cpp	/^Search::Search()$/;"	f	class:Search	signature:()
Search::checkBestMVP	../../source/encoder/search.cpp	/^const MV& Search::checkBestMVP(const MV* amvpCand, const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const$/;"	f	class:Search	signature:(const MV* amvpCand, const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const
Search::checkDQP	../../source/encoder/search.cpp	/^void Search::checkDQP(Mode& mode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom)
Search::checkIntra	../../source/encoder/search.cpp	/^void Search::checkIntra(Mode& intraMode, const CUGeom& cuGeom, PartSize partSize)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom, PartSize partSize)
Search::checkIntraInInter	../../source/encoder/search.cpp	/^void Search::checkIntraInInter(Mode& intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom)
Search::cntDQPForSplitPred	../../source/encoder/search.cpp	/^uint32_t Search::cntDQPForSplitPred(Mode& mode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom)
Search::codeCoeffQTChroma	../../source/encoder/search.cpp	/^void Search::codeCoeffQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype)$/;"	f	class:Search	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype)
Search::codeInterSubdivCbfQT	../../source/encoder/search.cpp	/^void Search::codeInterSubdivCbfQT(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2])
Search::codeIntraChromaQt	../../source/encoder/search.cpp	/^void Search::codeIntraChromaQt(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)
Search::codeIntraChromaTSkip	../../source/encoder/search.cpp	/^void Search::codeIntraChromaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost)
Search::codeIntraLumaQT	../../source/encoder/search.cpp	/^void Search::codeIntraLumaQT(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& outCost, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& outCost, const uint32_t depthRange[2])
Search::codeIntraLumaTSkip	../../source/encoder/search.cpp	/^void Search::codeIntraLumaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)
Search::codeSubdivCbfQTChroma	../../source/encoder/search.cpp	/^void Search::codeSubdivCbfQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx)$/;"	f	class:Search	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx)
Search::encodeIntraInInter	../../source/encoder/search.cpp	/^void Search::encodeIntraInInter(Mode& intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom)
Search::encodeResAndCalcRdInterCU	../../source/encoder/search.cpp	/^void Search::encodeResAndCalcRdInterCU(Mode& interMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& interMode, const CUGeom& cuGeom)
Search::encodeResAndCalcRdSkipCU	../../source/encoder/search.cpp	/^void Search::encodeResAndCalcRdSkipCU(Mode& interMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& interMode, const CUGeom& cuGeom)
Search::estIntraPredChromaQT	../../source/encoder/search.cpp	/^sse_t Search::estIntraPredChromaQT(Mode &intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode &intraMode, const CUGeom& cuGeom)
Search::estIntraPredQT	../../source/encoder/search.cpp	/^sse_t Search::estIntraPredQT(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2])
Search::estimateNullCbfCost	../../source/encoder/search.cpp	/^uint64_t Search::estimateNullCbfCost(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId)$/;"	f	class:Search	signature:(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId)
Search::estimateResidualQT	../../source/encoder/search.cpp	/^void Search::estimateResidualQT(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& outCosts, const uint32_t depthRange[2], int32_t splitMore)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& outCosts, const uint32_t depthRange[2], int32_t splitMore)
Search::extractIntraResultChromaQT	../../source/encoder/search.cpp	/^void Search::extractIntraResultChromaQT(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth)$/;"	f	class:Search	signature:(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth)
Search::extractIntraResultQT	../../source/encoder/search.cpp	/^void Search::extractIntraResultQT(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx)$/;"	f	class:Search	signature:(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx)
Search::getBestIntraModeChroma	../../source/encoder/search.cpp	/^void Search::getBestIntraModeChroma(Mode& intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom)
Search::getBlkBits	../../source/encoder/search.cpp	/^void Search::getBlkBits(PartSize cuMode, bool bPSlice, int partIdx, uint32_t lastMode, uint32_t blockBit[3])$/;"	f	class:Search	signature:(PartSize cuMode, bool bPSlice, int partIdx, uint32_t lastMode, uint32_t blockBit[3])
Search::getIntraRemModeBits	../../source/encoder/search.cpp	/^uint32_t Search::getIntraRemModeBits(CUData& cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const$/;"	f	class:Search	signature:(CUData& cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const
Search::getLowresMV	../../source/encoder/search.cpp	/^MV Search::getLowresMV(const CUData& cu, const PredictionUnit& pu, int list, int ref)$/;"	f	class:Search	signature:(const CUData& cu, const PredictionUnit& pu, int list, int ref)
Search::initSearch	../../source/encoder/search.cpp	/^bool Search::initSearch(const x265_param& param, ScalingList& scalingList)$/;"	f	class:Search	signature:(const x265_param& param, ScalingList& scalingList)
Search::invalidateContexts	../../source/encoder/search.cpp	/^void Search::invalidateContexts(int fromDepth)$/;"	f	class:Search	signature:(int fromDepth)
Search::invalidateContexts	../../source/encoder/search.cpp	/^void Search::invalidateContexts(int) {}$/;"	f	class:Search	signature:(int)
Search::mergeEstimation	../../source/encoder/search.cpp	/^uint32_t Search::mergeEstimation(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m)$/;"	f	class:Search	signature:(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m)
Search::offsetSubTUCBFs	../../source/encoder/search.cpp	/^void Search::offsetSubTUCBFs(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx)$/;"	f	class:Search	signature:(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx)
Search::predInterSearch	../../source/encoder/search.cpp	/^void Search::predInterSearch(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t refMasks[2])$/;"	f	class:Search	signature:(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t refMasks[2])
Search::processPME	../../source/encoder/search.cpp	/^void Search::processPME(PME& pme, Search& slave)$/;"	f	class:Search	signature:(PME& pme, Search& slave)
Search::residualQTIntraChroma	../../source/encoder/search.cpp	/^void Search::residualQTIntraChroma(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth)
Search::residualTransformQuantInter	../../source/encoder/search.cpp	/^void Search::residualTransformQuantInter(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
Search::residualTransformQuantIntra	../../source/encoder/search.cpp	/^void Search::residualTransformQuantIntra(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
Search::saveResidualQTData	../../source/encoder/search.cpp	/^void Search::saveResidualQTData(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth)$/;"	f	class:Search	signature:(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth)
Search::searchMV	../../source/encoder/search.cpp	/^void Search::searchMV(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv)$/;"	f	class:Search	signature:(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv)
Search::selectMVP	../../source/encoder/search.cpp	/^int Search::selectMVP(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref)$/;"	f	class:Search	signature:(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref)
Search::setLambdaFromQP	../../source/encoder/search.cpp	/^int Search::setLambdaFromQP(const CUData& ctu, int qp, int lambdaQp)$/;"	f	class:Search	signature:(const CUData& ctu, int qp, int lambdaQp)
Search::setSearchRange	../../source/encoder/search.cpp	/^void Search::setSearchRange(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const$/;"	f	class:Search	signature:(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const
Search::singleMotionEstimation	../../source/encoder/search.cpp	/^void Search::singleMotionEstimation(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref)$/;"	f	class:Search	signature:(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref)
Search::splitTU	../../source/encoder/search.cpp	/^bool Search::splitTU(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore)
Search::updateCandList	../../source/encoder/search.cpp	/^void Search::updateCandList(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList)$/;"	f	class:Search	signature:(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList)
Search::~Search	../../source/encoder/search.cpp	/^Search::~Search()$/;"	f	class:Search	signature:()
ShortYuv	../../source/common/shortyuv.cpp	/^ShortYuv::ShortYuv()$/;"	f	class:ShortYuv	signature:()
ShortYuv	../../source/common/shortyuv.h	/^    ShortYuv();$/;"	p	class:X265_NS::ShortYuv	access:public	signature:()
ShortYuv	../../source/common/shortyuv.h	/^class ShortYuv$/;"	c	namespace:X265_NS
ShortYuv::ShortYuv	../../source/common/shortyuv.cpp	/^ShortYuv::ShortYuv()$/;"	f	class:ShortYuv	signature:()
ShortYuv::clear	../../source/common/shortyuv.cpp	/^void ShortYuv::clear()$/;"	f	class:ShortYuv	signature:()
ShortYuv::copyPartToPartChroma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartChroma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const$/;"	f	class:ShortYuv	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
ShortYuv::copyPartToPartChroma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const$/;"	f	class:ShortYuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
ShortYuv::copyPartToPartLuma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartLuma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const$/;"	f	class:ShortYuv	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
ShortYuv::copyPartToPartLuma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const$/;"	f	class:ShortYuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
ShortYuv::create	../../source/common/shortyuv.cpp	/^bool ShortYuv::create(uint32_t size, int csp)$/;"	f	class:ShortYuv	signature:(uint32_t size, int csp)
ShortYuv::destroy	../../source/common/shortyuv.cpp	/^void ShortYuv::destroy()$/;"	f	class:ShortYuv	signature:()
ShortYuv::subtract	../../source/common/shortyuv.cpp	/^void ShortYuv::subtract(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp)$/;"	f	class:ShortYuv	signature:(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp)
SignificanceMapContextType	../../source/common/common.h	/^enum SignificanceMapContextType$/;"	g	namespace:X265_NS
SleepConditionVariableCS	../../source/common/winxp.h	54;"	d
Slice	../../source/common/slice.h	/^    Slice()$/;"	f	class:X265_NS::Slice	access:public	signature:()
Slice	../../source/common/slice.h	/^class Slice$/;"	c	namespace:X265_NS
Slice	../../source/encoder/slicetype.h	/^    struct Slice$/;"	s	class:X265_NS::CostEstimateGroup	access:public
Slice::disableWeights	../../source/common/slice.cpp	/^void Slice::disableWeights()$/;"	f	class:Slice	signature:()
Slice::realEndAddress	../../source/common/slice.cpp	/^uint32_t Slice::realEndAddress(uint32_t endCUAddr) const$/;"	f	class:Slice	signature:(uint32_t endCUAddr) const
Slice::setRefPicList	../../source/common/slice.cpp	/^void Slice::setRefPicList(PicList& picList)$/;"	f	class:Slice	signature:(PicList& picList)
SliceType	../../source/common/slice.h	/^enum SliceType$/;"	g	namespace:X265_NS
SplitData	../../source/encoder/analysis.h	/^struct SplitData$/;"	s	namespace:X265_NS
SplitType	../../source/encoder/entropy.h	/^enum SplitType$/;"	g	namespace:X265_NS
StarPatternSearch	../../source/encoder/motion.cpp	/^void MotionEstimate::StarPatternSearch(ReferencePlanes *ref,$/;"	f	class:MotionEstimate	signature:(ReferencePlanes *ref, const MV & mvmin, const MV & mvmax, MV & bmv, int & bcost, int & bPointNr, int & bDistance, int earlyExitIters, int merange)
StarPatternSearch	../../source/encoder/motion.h	/^    inline void StarPatternSearch(ReferencePlanes *ref,$/;"	p	class:X265_NS::MotionEstimate	access:protected	signature:(ReferencePlanes *ref, const MV & mvmin, const MV & mvmax, MV & bmv, int & bcost, int & bPointNr, int & bDistance, int earlyExitIters, int merange)
StatisticLog	../../source/encoder/frameencoder.h	/^    StatisticLog()$/;"	f	struct:X265_NS::StatisticLog	access:public	signature:()
StatisticLog	../../source/encoder/frameencoder.h	/^struct StatisticLog$/;"	s	namespace:X265_NS
SubpelWorkload	../../source/encoder/motion.cpp	/^struct SubpelWorkload$/;"	s	namespace:__anon23	file:
SyntaxElementWriter	../../source/common/bitstream.h	/^    SyntaxElementWriter() : m_bitIf(NULL) {}$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:()
SyntaxElementWriter	../../source/common/bitstream.h	/^class SyntaxElementWriter$/;"	c	namespace:X265_NS
SyntaxElementWriter::writeUvlc	../../source/common/bitstream.cpp	/^void SyntaxElementWriter::writeUvlc(uint32_t code)$/;"	f	class:SyntaxElementWriter	signature:(uint32_t code)
TEXT_CHROMA_U	../../source/common/common.h	/^    TEXT_CHROMA_U = 1,  \/\/ chroma U$/;"	e	enum:X265_NS::TextType
TEXT_CHROMA_V	../../source/common/common.h	/^    TEXT_CHROMA_V = 2,  \/\/ chroma V$/;"	e	enum:X265_NS::TextType
TEXT_LUMA	../../source/common/common.h	/^    TEXT_LUMA     = 0,  \/\/ luma$/;"	e	enum:X265_NS::TextType
THREAD_NAME	../../source/common/common.h	51;"	d
THREAD_NAME	../../source/common/common.h	58;"	d
THREAD_NAME	../../source/common/common.h	64;"	d
TMVP_UNIT_MASK	../../source/common/cudata.h	/^    enum { TMVP_UNIT_MASK = 0xF0 };  \/\/ mask for mapping index to into a compressed (reference) MV field$/;"	e	enum:X265_NS::CUData::__anon9
TOOLCMP	../../source/encoder/encoder.cpp	3562;"	d	file:
TOOLOPT	../../source/common/param.cpp	1422;"	d	file:
TOOLVAL	../../source/common/param.cpp	1423;"	d	file:
TRANS	../../source/common/x86/x86util.asm	/^        TRANS d, ORDER, %3, %4, %5, %6$/;"	d
TRANSPOSE_8x8_16BIT	../../source/common/vec/dct-sse3.cpp	1336;"	d	file:
TRANSPOSE_8x8_16BIT	../../source/common/vec/dct-sse3.cpp	1382;"	d	file:
TRANSPOSE_8x8_16BIT	../../source/common/vec/dct-sse3.cpp	340;"	d	file:
TRANSPOSE_8x8_16BIT	../../source/common/vec/dct-sse3.cpp	670;"	d	file:
TRY_ANGLE	../../source/encoder/search.cpp	1373;"	d	file:
TUEntropyCodingParameters	../../source/common/cudata.h	/^struct TUEntropyCodingParameters$/;"	s	namespace:X265_NS
TUInfoCache	../../source/encoder/search.h	/^    struct TUInfoCache$/;"	s	class:X265_NS::Search	access:protected
TURecurse	../../source/encoder/entropy.h	/^    TURecurse(SplitType splitType, uint32_t _absPartIdxStep, uint32_t _absPartIdxTU)$/;"	f	struct:X265_NS::TURecurse	access:public	signature:(SplitType splitType, uint32_t _absPartIdxStep, uint32_t _absPartIdxTU)
TURecurse	../../source/encoder/entropy.h	/^struct TURecurse$/;"	s	namespace:X265_NS
TextType	../../source/common/common.h	/^enum TextType$/;"	g	namespace:X265_NS
Thread	../../source/common/threading.cpp	/^Thread::Thread()$/;"	f	class:X265_NS::Thread	signature:()
Thread	../../source/common/threading.h	/^    Thread();$/;"	p	class:X265_NS::Thread	access:public	signature:()
Thread	../../source/common/threading.h	/^class Thread$/;"	c	namespace:X265_NS
ThreadHandle	../../source/common/threading.h	/^typedef HANDLE ThreadHandle;$/;"	t	namespace:X265_NS
ThreadLocalData	../../source/encoder/analysis.h	/^struct ThreadLocalData$/;"	s	namespace:X265_NS
ThreadPool	../../source/common/threadpool.cpp	/^ThreadPool::ThreadPool()$/;"	f	class:X265_NS::ThreadPool	signature:()
ThreadPool	../../source/common/threadpool.h	/^    ThreadPool();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
ThreadPool	../../source/common/threadpool.h	/^class ThreadPool$/;"	c	namespace:X265_NS
ThreadSafeInteger	../../source/common/threading.h	/^    ThreadSafeInteger()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
ThreadSafeInteger	../../source/common/threading.h	/^class ThreadSafeInteger$/;"	c	namespace:X265_NS
ThreadShim	../../source/common/threading.cpp	/^static DWORD WINAPI ThreadShim(Thread *instance)$/;"	f	namespace:X265_NS	signature:(Thread *instance)
ThreadShim	../../source/common/threading.cpp	/^static void *ThreadShim(void *opaque)$/;"	f	namespace:X265_NS	signature:(void *opaque)
Tier	../../source/common/slice.h	/^    enum Tier$/;"	g	namespace:X265_NS::Level
TimingInfo	../../source/common/slice.h	/^struct TimingInfo$/;"	s	namespace:X265_NS
UINT64_MAX	../../source/compat/msvc/stdint.h	10;"	d
UNIT_SIZE	../../source/common/common.h	257;"	d
UNPACKHILO	../../source/common/vec/dct-sse3.cpp	317;"	d	file:
UNPACKHILO	../../source/common/vec/dct-sse3.cpp	672;"	d	file:
UNQUANT	../../source/common/quant.cpp	660;"	d	file:
VAR	../../source/common/x86/pixel-util8.asm	/^VAR$/;"	l
VEC_DIFF_S16	../../source/common/ppc/pixel_altivec.cpp	2218;"	d	file:
VEC_TRANSPOSE_4	../../source/common/ppc/pixel_altivec.cpp	1175;"	d	file:
VEC_TRANSPOSE_8	../../source/common/ppc/pixel_altivec.cpp	1189;"	d	file:
VERTICAL_SPLIT	../../source/encoder/entropy.h	/^    VERTICAL_SPLIT        = 1,$/;"	e	enum:X265_NS::SplitType
VER_IDX	../../source/common/common.h	303;"	d
VPS	../../source/common/slice.h	/^struct VPS$/;"	s	namespace:X265_NS
VUI	../../source/common/slice.h	/^struct VUI$/;"	s	namespace:X265_NS
WEIGHTER	../../source/common/x86/mc-a.asm	/^WEIGHTER  4$/;"	l
WEIGHTER	../../source/common/x86/mc-a.asm	/^WEIGHTER  8$/;"	l
WEIGHTER	../../source/common/x86/mc-a.asm	/^WEIGHTER 12$/;"	l
WEIGHTER	../../source/common/x86/mc-a.asm	/^WEIGHTER 16$/;"	l
WEIGHTER	../../source/common/x86/mc-a.asm	/^WEIGHTER 20$/;"	l
WEIGHTER	../../source/common/x86/mc-a.asm	/^WEIGHTER 8$/;"	l
WRITE_CODE	../../source/common/bitstream.h	/^    inline void WRITE_CODE(uint32_t code, uint32_t length, const char *) { writeCode(code, length); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code, uint32_t length, const char *)
WRITE_FLAG	../../source/common/bitstream.h	/^    inline void WRITE_FLAG(bool flag,                      const char *) { writeFlag(flag); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(bool flag, const char *)
WRITE_SVLC	../../source/common/bitstream.h	/^    inline void WRITE_SVLC(int32_t  code,                  const char *) { writeSvlc(code); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(int32_t code, const char *)
WRITE_UVLC	../../source/common/bitstream.h	/^    inline void WRITE_UVLC(uint32_t code,                  const char *) { writeUvlc(code); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code, const char *)
WakeAllConditionVariable	../../source/common/winxp.h	56;"	d
WakeConditionVariable	../../source/common/winxp.h	55;"	d
WaveFront	../../source/common/wavefront.h	/^    WaveFront()$/;"	f	class:X265_NS::WaveFront	access:public	signature:()
WaveFront	../../source/common/wavefront.h	/^class WaveFront : public JobProvider$/;"	c	namespace:X265_NS	inherits:JobProvider
WeightAnalysis	../../source/encoder/frameencoder.h	/^        WeightAnalysis(FrameEncoder& fe) : master(fe) {}$/;"	f	class:X265_NS::FrameEncoder::WeightAnalysis	access:public	signature:(FrameEncoder& fe)
WeightAnalysis	../../source/encoder/frameencoder.h	/^    class WeightAnalysis : public BondedTaskGroup$/;"	c	class:X265_NS::FrameEncoder	inherits:BondedTaskGroup	access:public
WeightParam	../../source/common/slice.h	/^struct WeightParam$/;"	s	namespace:X265_NS
WeightValues	../../source/common/predict.h	/^    struct WeightValues$/;"	s	class:X265_NS::Predict	access:public
Window	../../source/common/slice.h	/^    Window()$/;"	f	struct:X265_NS::Window	access:public	signature:()
Window	../../source/common/slice.h	/^struct Window$/;"	s	namespace:X265_NS
WorkerThread	../../source/common/threadpool.cpp	/^    WorkerThread(ThreadPool& pool, int id) : m_pool(pool), m_id(id) {}$/;"	f	class:X265_NS::WorkerThread	access:public	signature:(ThreadPool& pool, int id)
WorkerThread	../../source/common/threadpool.cpp	/^class WorkerThread : public Thread$/;"	c	namespace:X265_NS	file:	inherits:Thread
X	../../source/common/arm/asm.S	/^#define X(s) JOIN(EXTERN_ASM, s)$/;"	d
X265_ALIGNBYTES	../../source/common/common.cpp	57;"	d	file:
X265_ANALYSIS_H	../../source/encoder/analysis.h	27;"	d
X265_BITCOST_H	../../source/encoder/bitcost.h	25;"	d
X265_BITSTREAM_H	../../source/common/bitstream.h	26;"	d
X265_BLOCKCOPY8_ARM_H	../../source/common/arm/blockcopy8.h	27;"	d
X265_BLOCKCOPY8_H	../../source/common/x86/blockcopy8.h	26;"	d
X265_CHECK	../../source/common/common.h	113;"	d
X265_COMMON_H	../../source/common/common.h	26;"	d
X265_CONSTANTS_H	../../source/common/constants.h	26;"	d
X265_CONTEXTS_H	../../source/common/contexts.h	26;"	d
X265_CPU_H	../../source/common/cpu.h	26;"	d
X265_CUDATA_H	../../source/common/cudata.h	25;"	d
X265_DCT8_ARM_H	../../source/common/arm/dct8.h	26;"	d
X265_DCT8_H	../../source/common/x86/dct8.h	26;"	d
X265_DEBLOCK_H	../../source/common/deblock.h	26;"	d
X265_DPB_H	../../source/encoder/dpb.h	25;"	d
X265_ENCODER_H	../../source/encoder/encoder.h	25;"	d
X265_ENTROPY_H	../../source/encoder/entropy.h	26;"	d
X265_FRAMEDATA_H	../../source/common/framedata.h	25;"	d
X265_FRAMEENCODER_H	../../source/encoder/frameencoder.h	26;"	d
X265_FRAMEFILTER_H	../../source/encoder/framefilter.h	26;"	d
X265_FRAME_H	../../source/common/frame.h	26;"	d
X265_FREAD	../../source/encoder/encoder.cpp	2893;"	d	file:
X265_FREAD	../../source/encoder/encoder.cpp	3137;"	d	file:
X265_FREAD	../../source/encoder/encoder.cpp	3143;"	d	file:
X265_FREAD	../../source/encoder/encoder.cpp	3262;"	d	file:
X265_FREE	../../source/common/common.h	218;"	d
X265_FREE_ZERO	../../source/common/common.h	219;"	d
X265_FWRITE	../../source/encoder/encoder.cpp	3268;"	d	file:
X265_FWRITE	../../source/encoder/encoder.cpp	3453;"	d	file:
X265_FWRITE	../../source/encoder/encoder.cpp	3458;"	d	file:
X265_FWRITE	../../source/encoder/encoder.cpp	3549;"	d	file:
X265_HEVC_RAW_H	../../source/output/raw.h	26;"	d
X265_I386_PIXEL_ARM_H	../../source/common/arm/pixel.h	31;"	d
X265_I386_PIXEL_H	../../source/common/x86/pixel.h	31;"	d
X265_INPUT_H	../../source/input/input.h	25;"	d
X265_INTRAPRED_ARM_H	../../source/common/arm/intrapred.h	29;"	d
X265_INTRAPRED_H	../../source/common/x86/intrapred.h	28;"	d
X265_IPFILTER8_ARM_H	../../source/common/arm/ipfilter8.h	26;"	d
X265_IPFILTER8_H	../../source/common/x86/ipfilter8.h	25;"	d
X265_LEVEL_H	../../source/encoder/level.h	25;"	d
X265_LL	../../source/common/common.h	96;"	d
X265_LL	../../source/common/common.h	98;"	d
X265_LOG2	../../source/common/common.h	243;"	d
X265_LOG2	../../source/common/common.h	246;"	d
X265_LOG2F	../../source/common/common.h	242;"	d
X265_LOG2F	../../source/common/common.h	245;"	d
X265_LOOKAHEAD_MAX	../../source/common/common.h	210;"	d
X265_LOOKAHEAD_QP	../../source/common/common.h	209;"	d
X265_LOOPFILTER_ARM_H	../../source/common/arm/loopfilter.h	27;"	d
X265_LOOPFILTER_H	../../source/common/x86/loopfilter.h	27;"	d
X265_LOWRES_CU_BITS	../../source/common/common.h	215;"	d
X265_LOWRES_CU_SIZE	../../source/common/common.h	214;"	d
X265_LOWRES_H	../../source/common/lowres.h	25;"	d
X265_MALLOC	../../source/common/common.h	217;"	d
X265_MAX	../../source/common/common.h	178;"	d
X265_MAX3	../../source/common/common.h	202;"	d
X265_MAX4	../../source/common/common.h	204;"	d
X265_MAX_PRED_MODE_PER_CTU	../../source/common/common.h	324;"	d
X265_MC_ARM_H	../../source/common/arm/mc.h	25;"	d
X265_MC_H	../../source/common/x86/mc.h	25;"	d
X265_MD5_H	../../source/common/md5.h	26;"	d
X265_MIN	../../source/common/common.h	177;"	d
X265_MIN3	../../source/common/common.h	201;"	d
X265_MIN4	../../source/common/common.h	203;"	d
X265_MOTIONESTIMATE_H	../../source/encoder/motion.h	26;"	d
X265_MV_H	../../source/common/mv.h	25;"	d
X265_NAL_H	../../source/encoder/nal.h	25;"	d
X265_NS	../../source/common/arm/asm-primitives.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/bitstream.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/common.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/common.h	/^namespace X265_NS { extern int g_checkFailures; }$/;"	n
X265_NS	../../source/common/common.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/constants.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/constants.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/contexts.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/cpu.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/cpu.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/cudata.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/dct.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/deblock.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/frame.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/framedata.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/intrapred.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/ipfilter.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/loopfilter.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/lowres.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/md5.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/md5.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/mv.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/param.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/param.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/piclist.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/picyuv.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/picyuv.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/pixel.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/ppc/dct_altivec.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/ppc/intrapred_altivec.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/ppc/ipfilter_altivec.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/ppc/pixel_altivec.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/predict.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/primitives.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/primitives.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/quant.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/scalinglist.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/scalinglist.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/shortyuv.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/slice.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/threading.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/threading.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/threadpool.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/threadpool.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/vec/dct-sse3.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/vec/dct-sse41.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/vec/dct-ssse3.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/vec/vec-primitives.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/wavefront.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/wavefront.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/winxp.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/winxp.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/common/x86/asm-primitives.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/common/yuv.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/analysis.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/bitcost.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/dpb.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/encoder.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/encoder/encoder.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/entropy.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/encoder/entropy.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/frameencoder.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/encoder/frameencoder.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/framefilter.cpp	/^namespace X265_NS$/;"	n	file:
X265_NS	../../source/encoder/framefilter.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/level.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/encoder/level.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/motion.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/nal.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/ratecontrol.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/rdcost.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/reference.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/sao.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/encoder/sao.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/search.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/sei.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/slicetype.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/encoder/weightPrediction.cpp	/^namespace X265_NS {$/;"	n	file:
X265_NS	../../source/input/input.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/input/y4m.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/input/yuv.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/output/output.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/output/raw.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/output/reconplay.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/output/y4m.h	/^namespace X265_NS {$/;"	n
X265_NS	../../source/output/yuv.h	/^namespace X265_NS {$/;"	n
X265_NS::ALIGN_VAR_16	../../source/common/constants.cpp	/^ALIGN_VAR_16(const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4]) =$/;"	p	namespace:X265_NS	file:	signature:(const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4])
X265_NS::ALIGN_VAR_16	../../source/common/constants.h	/^ALIGN_VAR_16(extern const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4]);  \/\/ +1 for safe buffer area for codeCoeffNxN assembly optimize, there have up to 15 bytes beyond bound read$/;"	p	namespace:X265_NS	signature:(extern const uint16_t, g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4])
X265_NS::ALL_POOL_THREADS	../../source/common/threadpool.h	/^static const sleepbitmap_t ALL_POOL_THREADS = (sleepbitmap_t)-1;$/;"	m	namespace:X265_NS
X265_NS::Analysis	../../source/encoder/analysis.h	/^class Analysis : public Search$/;"	c	namespace:X265_NS	inherits:Search
X265_NS::Analysis::Analysis	../../source/encoder/analysis.h	/^    Analysis();$/;"	p	class:X265_NS::Analysis	access:public	signature:()
X265_NS::Analysis::MAX_PRED_TYPES	../../source/encoder/analysis.h	/^        MAX_PRED_TYPES$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::ModeDepth	../../source/encoder/analysis.h	/^    struct ModeDepth$/;"	s	class:X265_NS::Analysis	access:public
X265_NS::Analysis::ModeDepth::bestMode	../../source/encoder/analysis.h	/^        Mode*          bestMode;$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
X265_NS::Analysis::ModeDepth::cuMemPool	../../source/encoder/analysis.h	/^        CUDataMemPool  cuMemPool;$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
X265_NS::Analysis::ModeDepth::fencYuv	../../source/encoder/analysis.h	/^        Yuv            fencYuv;$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
X265_NS::Analysis::ModeDepth::pred	../../source/encoder/analysis.h	/^        Mode           pred[MAX_PRED_TYPES];$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
X265_NS::Analysis::PMODE	../../source/encoder/analysis.h	/^    class PMODE : public BondedTaskGroup$/;"	c	class:X265_NS::Analysis	inherits:BondedTaskGroup	access:public
X265_NS::Analysis::PMODE::PMODE	../../source/encoder/analysis.h	/^        PMODE(Analysis& m, const CUGeom& g) : master(m), cuGeom(g) {}$/;"	f	class:X265_NS::Analysis::PMODE	access:public	signature:(Analysis& m, const CUGeom& g)
X265_NS::Analysis::PMODE::cuGeom	../../source/encoder/analysis.h	/^        const CUGeom& cuGeom;$/;"	m	class:X265_NS::Analysis::PMODE	access:public
X265_NS::Analysis::PMODE::master	../../source/encoder/analysis.h	/^        Analysis&     master;$/;"	m	class:X265_NS::Analysis::PMODE	access:public
X265_NS::Analysis::PMODE::modes	../../source/encoder/analysis.h	/^        int           modes[MAX_PRED_TYPES];$/;"	m	class:X265_NS::Analysis::PMODE	access:public
X265_NS::Analysis::PMODE::operator =	../../source/encoder/analysis.h	/^        PMODE operator=(const PMODE&);$/;"	p	class:X265_NS::Analysis::PMODE	access:protected	signature:(const PMODE&)
X265_NS::Analysis::PMODE::processTasks	../../source/encoder/analysis.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::Analysis::PMODE	access:public	signature:(int workerThreadId)
X265_NS::Analysis::PRED_2Nx2N	../../source/encoder/analysis.h	/^        PRED_2Nx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_2NxN	../../source/encoder/analysis.h	/^        PRED_2NxN,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_2NxnD	../../source/encoder/analysis.h	/^        PRED_2NxnD,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_2NxnU	../../source/encoder/analysis.h	/^        PRED_2NxnU,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_BIDIR	../../source/encoder/analysis.h	/^        PRED_BIDIR,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_INTRA	../../source/encoder/analysis.h	/^        PRED_INTRA,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_INTRA_NxN	../../source/encoder/analysis.h	/^        PRED_INTRA_NxN, \/* 4x4 intra PU blocks for 8x8 CU *\/$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_LOSSLESS	../../source/encoder/analysis.h	/^        PRED_LOSSLESS,  \/* lossless encode of best mode *\/$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_MERGE	../../source/encoder/analysis.h	/^        PRED_MERGE,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_Nx2N	../../source/encoder/analysis.h	/^        PRED_Nx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_SKIP	../../source/encoder/analysis.h	/^        PRED_SKIP,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_SPLIT	../../source/encoder/analysis.h	/^        PRED_SPLIT,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_nLx2N	../../source/encoder/analysis.h	/^        PRED_nLx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::PRED_nRx2N	../../source/encoder/analysis.h	/^        PRED_nRx2N,$/;"	e	enum:X265_NS::Analysis::__anon18
X265_NS::Analysis::addSplitFlagCost	../../source/encoder/analysis.h	/^    void addSplitFlagCost(Mode& mode, uint32_t depth);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& mode, uint32_t depth)
X265_NS::Analysis::cacheCost	../../source/encoder/analysis.h	/^    uint64_t*            cacheCost;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::calculateNormFactor	../../source/encoder/analysis.h	/^    void calculateNormFactor(CUData& ctu, int qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(CUData& ctu, int qp)
X265_NS::Analysis::calculateQpforCuSize	../../source/encoder/analysis.h	/^    int calculateQpforCuSize(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck = 0, double baseQP = -1);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck = 0, double baseQP = -1)
X265_NS::Analysis::checkBestMode	../../source/encoder/analysis.h	/^    inline void checkBestMode(Mode& mode, uint32_t depth)$/;"	f	class:X265_NS::Analysis	access:protected	signature:(Mode& mode, uint32_t depth)
X265_NS::Analysis::checkBidir2Nx2N	../../source/encoder/analysis.h	/^    void checkBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom)
X265_NS::Analysis::checkInter_rd0_4	../../source/encoder/analysis.h	/^    void checkInter_rd0_4(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2]);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2])
X265_NS::Analysis::checkInter_rd5_6	../../source/encoder/analysis.h	/^    void checkInter_rd5_6(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2]);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2])
X265_NS::Analysis::checkMerge2Nx2N_rd0_4	../../source/encoder/analysis.h	/^    void checkMerge2Nx2N_rd0_4(Mode& skip, Mode& merge, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
X265_NS::Analysis::checkMerge2Nx2N_rd5_6	../../source/encoder/analysis.h	/^    void checkMerge2Nx2N_rd5_6(Mode& skip, Mode& merge, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
X265_NS::Analysis::collectPUStatistics	../../source/encoder/analysis.h	/^    void collectPUStatistics(const CUData& ctu, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& ctu, const CUGeom& cuGeom)
X265_NS::Analysis::complexityCheckCU	../../source/encoder/analysis.h	/^    bool complexityCheckCU(const Mode& bestMode);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const Mode& bestMode)
X265_NS::Analysis::compressCTU	../../source/encoder/analysis.h	/^    Mode& compressCTU(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext);$/;"	p	class:X265_NS::Analysis	access:public	signature:(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext)
X265_NS::Analysis::compressInterCU_dist	../../source/encoder/analysis.h	/^    uint32_t compressInterCU_dist(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
X265_NS::Analysis::compressInterCU_rd0_4	../../source/encoder/analysis.h	/^    SplitData compressInterCU_rd0_4(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
X265_NS::Analysis::compressInterCU_rd5_6	../../source/encoder/analysis.h	/^    SplitData compressInterCU_rd5_6(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
X265_NS::Analysis::compressIntraCU	../../source/encoder/analysis.h	/^    void compressIntraCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
X265_NS::Analysis::create	../../source/encoder/analysis.h	/^    bool create(ThreadLocalData* tld);$/;"	p	class:X265_NS::Analysis	access:public	signature:(ThreadLocalData* tld)
X265_NS::Analysis::destroy	../../source/encoder/analysis.h	/^    void destroy();$/;"	p	class:X265_NS::Analysis	access:public	signature:()
X265_NS::Analysis::encodeResidue	../../source/encoder/analysis.h	/^    void encodeResidue(const CUData& parentCTU, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
X265_NS::Analysis::findSameContentRefCount	../../source/encoder/analysis.h	/^    int findSameContentRefCount(const CUData& parentCTU, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
X265_NS::Analysis::iterateCheckBidir2Nx2N	../../source/encoder/analysis.h	/^    void iterateCheckBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2]);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2])
X265_NS::Analysis::loadTUDepth	../../source/encoder/analysis.h	/^    int32_t loadTUDepth(CUGeom cuGeom, CUData parentCTU);$/;"	p	class:X265_NS::Analysis	access:public	signature:(CUGeom cuGeom, CUData parentCTU)
X265_NS::Analysis::m_additionalCtuInfo	../../source/encoder/analysis.h	/^    uint8_t*                m_additionalCtuInfo;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_bChromaSa8d	../../source/encoder/analysis.h	/^    bool      m_bChromaSa8d;$/;"	m	class:X265_NS::Analysis	access:public
X265_NS::Analysis::m_bHD	../../source/encoder/analysis.h	/^    bool      m_bHD;$/;"	m	class:X265_NS::Analysis	access:public
X265_NS::Analysis::m_bTryLossless	../../source/encoder/analysis.h	/^    bool      m_bTryLossless;$/;"	m	class:X265_NS::Analysis	access:public
X265_NS::Analysis::m_evaluateInter	../../source/encoder/analysis.h	/^    uint8_t                 m_evaluateInter;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_modeDepth	../../source/encoder/analysis.h	/^    ModeDepth m_modeDepth[NUM_CU_DEPTH];$/;"	m	class:X265_NS::Analysis	access:public
X265_NS::Analysis::m_multipassAnalysis	../../source/encoder/analysis.h	/^    analysis2PassFrameData* m_multipassAnalysis;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_multipassDepth	../../source/encoder/analysis.h	/^    uint8_t*                m_multipassDepth;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_multipassModes	../../source/encoder/analysis.h	/^    uint8_t*                m_multipassModes;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_multipassMv	../../source/encoder/analysis.h	/^    MV*                     m_multipassMv[2];$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_multipassMvpIdx	../../source/encoder/analysis.h	/^    int*                    m_multipassMvpIdx[2];$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_multipassRef	../../source/encoder/analysis.h	/^    int32_t*                m_multipassRef[2];$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_prevCtuInfoChange	../../source/encoder/analysis.h	/^    int*                    m_prevCtuInfoChange;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_reuseDepth	../../source/encoder/analysis.h	/^    uint8_t*             m_reuseDepth;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_reuseInterDataCTU	../../source/encoder/analysis.h	/^    analysis_inter_data* m_reuseInterDataCTU;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_reuseMergeFlag	../../source/encoder/analysis.h	/^    uint8_t*             m_reuseMergeFlag;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_reuseModes	../../source/encoder/analysis.h	/^    uint8_t*             m_reuseModes;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_reusePartSize	../../source/encoder/analysis.h	/^    uint8_t*             m_reusePartSize;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_reuseRef	../../source/encoder/analysis.h	/^    int32_t*             m_reuseRef;$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::m_splitRefIdx	../../source/encoder/analysis.h	/^    uint32_t             m_splitRefIdx[4];$/;"	m	class:X265_NS::Analysis	access:protected
X265_NS::Analysis::normFactor	../../source/encoder/analysis.h	/^    void normFactor(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype)
X265_NS::Analysis::processPmode	../../source/encoder/analysis.h	/^    void processPmode(PMODE& pmode, Analysis& slave);$/;"	p	class:X265_NS::Analysis	access:public	signature:(PMODE& pmode, Analysis& slave)
X265_NS::Analysis::qprdRefine	../../source/encoder/analysis.h	/^    void qprdRefine(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)
X265_NS::Analysis::recodeCU	../../source/encoder/analysis.h	/^    void recodeCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t origqp = -1);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t origqp = -1)
X265_NS::Analysis::recursionDepthCheck	../../source/encoder/analysis.h	/^    bool recursionDepthCheck(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode)
X265_NS::Analysis::topSkipMinDepth	../../source/encoder/analysis.h	/^    uint32_t topSkipMinDepth(const CUData& parentCTU, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
X265_NS::Analysis::tryLossless	../../source/encoder/analysis.h	/^    void tryLossless(const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUGeom& cuGeom)
X265_NS::AngleMapping422TableSize	../../source/common/constants.h	/^enum { AngleMapping422TableSize = 36 };$/;"	e	enum:X265_NS::__anon23
X265_NS::BLOCK_16x16	../../source/common/primitives.h	/^    BLOCK_16x16,$/;"	e	enum:X265_NS::LumaCU
X265_NS::BLOCK_32x32	../../source/common/primitives.h	/^    BLOCK_32x32,$/;"	e	enum:X265_NS::LumaCU
X265_NS::BLOCK_420_16x16	../../source/common/primitives.h	/^    BLOCK_420_16x16,$/;"	e	enum:X265_NS::ChromaCU420
X265_NS::BLOCK_420_2x2	../../source/common/primitives.h	/^    BLOCK_420_2x2,$/;"	e	enum:X265_NS::ChromaCU420
X265_NS::BLOCK_420_32x32	../../source/common/primitives.h	/^    BLOCK_420_32x32$/;"	e	enum:X265_NS::ChromaCU420
X265_NS::BLOCK_420_4x4	../../source/common/primitives.h	/^    BLOCK_420_4x4,$/;"	e	enum:X265_NS::ChromaCU420
X265_NS::BLOCK_420_8x8	../../source/common/primitives.h	/^    BLOCK_420_8x8,$/;"	e	enum:X265_NS::ChromaCU420
X265_NS::BLOCK_422_16x32	../../source/common/primitives.h	/^    BLOCK_422_16x32,$/;"	e	enum:X265_NS::ChromaCU422
X265_NS::BLOCK_422_2x4	../../source/common/primitives.h	/^    BLOCK_422_2x4,$/;"	e	enum:X265_NS::ChromaCU422
X265_NS::BLOCK_422_32x64	../../source/common/primitives.h	/^    BLOCK_422_32x64$/;"	e	enum:X265_NS::ChromaCU422
X265_NS::BLOCK_422_4x8	../../source/common/primitives.h	/^    BLOCK_422_4x8,$/;"	e	enum:X265_NS::ChromaCU422
X265_NS::BLOCK_422_8x16	../../source/common/primitives.h	/^    BLOCK_422_8x16,$/;"	e	enum:X265_NS::ChromaCU422
X265_NS::BLOCK_4x4	../../source/common/primitives.h	/^    BLOCK_4x4,$/;"	e	enum:X265_NS::LumaCU
X265_NS::BLOCK_64x64	../../source/common/primitives.h	/^    BLOCK_64x64,$/;"	e	enum:X265_NS::LumaCU
X265_NS::BLOCK_8x8	../../source/common/primitives.h	/^    BLOCK_8x8,$/;"	e	enum:X265_NS::LumaCU
X265_NS::B_SLICE	../../source/common/slice.h	/^    B_SLICE,$/;"	e	enum:X265_NS::SliceType
X265_NS::BitCost	../../source/encoder/bitcost.h	/^class BitCost$/;"	c	namespace:X265_NS
X265_NS::BitCost::BC_MAX_MV	../../source/encoder/bitcost.h	/^    enum { BC_MAX_MV = (1 << 15) };$/;"	e	enum:X265_NS::BitCost::__anon20
X265_NS::BitCost::BC_MAX_QP	../../source/encoder/bitcost.h	/^    enum { BC_MAX_QP = 82 };$/;"	e	enum:X265_NS::BitCost::__anon21
X265_NS::BitCost::BitCost	../../source/encoder/bitcost.h	/^    BitCost() : m_cost_mvx(0), m_cost_mvy(0), m_cost(0), m_mvp(0) {}$/;"	f	class:X265_NS::BitCost	access:public	signature:()
X265_NS::BitCost::CalculateLogs	../../source/encoder/bitcost.h	/^    static void CalculateLogs();$/;"	p	class:X265_NS::BitCost	access:private	signature:()
X265_NS::BitCost::bitcost	../../source/encoder/bitcost.h	/^    inline uint32_t bitcost(const MV& mv) const$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mv) const
X265_NS::BitCost::bitcost	../../source/encoder/bitcost.h	/^    static inline uint32_t bitcost(const MV& mv, const MV& mvp)$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mv, const MV& mvp)
X265_NS::BitCost::destroy	../../source/encoder/bitcost.h	/^    static void destroy();$/;"	p	class:X265_NS::BitCost	access:public	signature:()
X265_NS::BitCost::m_cost	../../source/encoder/bitcost.h	/^    uint16_t *m_cost;$/;"	m	class:X265_NS::BitCost	access:protected
X265_NS::BitCost::m_cost_mvx	../../source/encoder/bitcost.h	/^    uint16_t *m_cost_mvx;$/;"	m	class:X265_NS::BitCost	access:protected
X265_NS::BitCost::m_cost_mvy	../../source/encoder/bitcost.h	/^    uint16_t *m_cost_mvy;$/;"	m	class:X265_NS::BitCost	access:protected
X265_NS::BitCost::m_fpelMvCosts	../../source/encoder/bitcost.h	/^    uint16_t *m_fpelMvCosts[4];$/;"	m	class:X265_NS::BitCost	access:protected
X265_NS::BitCost::m_mvp	../../source/encoder/bitcost.h	/^    MV        m_mvp;$/;"	m	class:X265_NS::BitCost	access:protected
X265_NS::BitCost::mvcost	../../source/encoder/bitcost.h	/^    inline uint16_t mvcost(const MV& mv) const      { return m_cost_mvx[mv.x] + m_cost_mvy[mv.y]; }$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mv) const
X265_NS::BitCost::operator =	../../source/encoder/bitcost.h	/^    BitCost& operator =(const BitCost&);$/;"	p	class:X265_NS::BitCost	access:protected	signature:(const BitCost&)
X265_NS::BitCost::s_bitsizes	../../source/encoder/bitcost.h	/^    static float *s_bitsizes;$/;"	m	class:X265_NS::BitCost	access:private
X265_NS::BitCost::s_costCalcLock	../../source/encoder/bitcost.h	/^    static Lock s_costCalcLock;$/;"	m	class:X265_NS::BitCost	access:private
X265_NS::BitCost::s_costs	../../source/encoder/bitcost.h	/^    static uint16_t *s_costs[BC_MAX_QP];$/;"	m	class:X265_NS::BitCost	access:private
X265_NS::BitCost::s_fpelMvCosts	../../source/encoder/bitcost.h	/^    static uint16_t *s_fpelMvCosts[BC_MAX_QP][4];$/;"	m	class:X265_NS::BitCost	access:private
X265_NS::BitCost::setMVP	../../source/encoder/bitcost.h	/^    void setMVP(const MV& mvp)                      { m_mvp = mvp; m_cost_mvx = m_cost - mvp.x; m_cost_mvy = m_cost - mvp.y; }$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mvp)
X265_NS::BitCost::setQP	../../source/encoder/bitcost.h	/^    void setQP(unsigned int qp);$/;"	p	class:X265_NS::BitCost	access:public	signature:(unsigned int qp)
X265_NS::BitCounter	../../source/common/bitstream.h	/^class BitCounter : public BitInterface$/;"	c	namespace:X265_NS	inherits:BitInterface
X265_NS::BitCounter::BitCounter	../../source/common/bitstream.h	/^    BitCounter() : m_bitCounter(0) {}$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
X265_NS::BitCounter::getNumberOfWrittenBits	../../source/common/bitstream.h	/^    uint32_t getNumberOfWrittenBits() const { return m_bitCounter; }$/;"	f	class:X265_NS::BitCounter	access:public	signature:() const
X265_NS::BitCounter::m_bitCounter	../../source/common/bitstream.h	/^    uint32_t  m_bitCounter;$/;"	m	class:X265_NS::BitCounter	access:protected
X265_NS::BitCounter::resetBits	../../source/common/bitstream.h	/^    void     resetBits()                    { m_bitCounter = 0;    }$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
X265_NS::BitCounter::write	../../source/common/bitstream.h	/^    void     write(uint32_t, uint32_t num)  { m_bitCounter += num; }$/;"	f	class:X265_NS::BitCounter	access:public	signature:(uint32_t, uint32_t num)
X265_NS::BitCounter::writeAlignOne	../../source/common/bitstream.h	/^    void     writeAlignOne()                { }$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
X265_NS::BitCounter::writeAlignZero	../../source/common/bitstream.h	/^    void     writeAlignZero()               { }$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
X265_NS::BitCounter::writeByte	../../source/common/bitstream.h	/^    void     writeByte(uint32_t)            { m_bitCounter += 8;   }$/;"	f	class:X265_NS::BitCounter	access:public	signature:(uint32_t)
X265_NS::BitInterface	../../source/common/bitstream.h	/^class BitInterface$/;"	c	namespace:X265_NS
X265_NS::BitInterface::getNumberOfWrittenBits	../../source/common/bitstream.h	/^    virtual uint32_t getNumberOfWrittenBits() const         = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:() const
X265_NS::BitInterface::resetBits	../../source/common/bitstream.h	/^    virtual void     resetBits()                            = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:()
X265_NS::BitInterface::write	../../source/common/bitstream.h	/^    virtual void     write(uint32_t val, uint32_t numBits)  = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:(uint32_t val, uint32_t numBits)
X265_NS::BitInterface::writeAlignOne	../../source/common/bitstream.h	/^    virtual void     writeAlignOne()                        = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:()
X265_NS::BitInterface::writeAlignZero	../../source/common/bitstream.h	/^    virtual void     writeAlignZero()                       = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:()
X265_NS::BitInterface::writeByte	../../source/common/bitstream.h	/^    virtual void     writeByte(uint32_t val)                = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:(uint32_t val)
X265_NS::BitInterface::~BitInterface	../../source/common/bitstream.h	/^    virtual ~BitInterface() {}$/;"	f	class:X265_NS::BitInterface	access:public	signature:()
X265_NS::Bitstream	../../source/common/bitstream.h	/^class Bitstream : public BitInterface$/;"	c	namespace:X265_NS	inherits:BitInterface
X265_NS::Bitstream::Bitstream	../../source/common/bitstream.h	/^    Bitstream();$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
X265_NS::Bitstream::copyBits	../../source/common/bitstream.h	/^    void     copyBits(Bitstream* stream)     { m_partialByteBits = stream->m_partialByteBits; m_byteOccupancy = stream->m_byteOccupancy; m_partialByte = stream->m_partialByte; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:(Bitstream* stream)
X265_NS::Bitstream::getFIFO	../../source/common/bitstream.h	/^    const uint8_t* getFIFO() const           { return m_fifo; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:() const
X265_NS::Bitstream::getNumberOfWrittenBits	../../source/common/bitstream.h	/^    uint32_t getNumberOfWrittenBits()  const { return m_byteOccupancy * 8 + m_partialByteBits; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:() const
X265_NS::Bitstream::getNumberOfWrittenBytes	../../source/common/bitstream.h	/^    uint32_t getNumberOfWrittenBytes() const { return m_byteOccupancy; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:() const
X265_NS::Bitstream::m_byteAlloc	../../source/common/bitstream.h	/^    uint32_t m_byteAlloc;$/;"	m	class:X265_NS::Bitstream	access:private
X265_NS::Bitstream::m_byteOccupancy	../../source/common/bitstream.h	/^    uint32_t m_byteOccupancy;$/;"	m	class:X265_NS::Bitstream	access:private
X265_NS::Bitstream::m_fifo	../../source/common/bitstream.h	/^    uint8_t *m_fifo;$/;"	m	class:X265_NS::Bitstream	access:private
X265_NS::Bitstream::m_partialByte	../../source/common/bitstream.h	/^    uint8_t  m_partialByte;$/;"	m	class:X265_NS::Bitstream	access:private
X265_NS::Bitstream::m_partialByteBits	../../source/common/bitstream.h	/^    uint32_t m_partialByteBits;$/;"	m	class:X265_NS::Bitstream	access:private
X265_NS::Bitstream::push_back	../../source/common/bitstream.h	/^    void     push_back(uint8_t val);$/;"	p	class:X265_NS::Bitstream	access:private	signature:(uint8_t val)
X265_NS::Bitstream::resetBits	../../source/common/bitstream.h	/^    void     resetBits()                     { m_partialByteBits = m_byteOccupancy = 0; m_partialByte = 0; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:()
X265_NS::Bitstream::write	../../source/common/bitstream.h	/^    void     write(uint32_t val, uint32_t numBits);$/;"	p	class:X265_NS::Bitstream	access:public	signature:(uint32_t val, uint32_t numBits)
X265_NS::Bitstream::writeAlignOne	../../source/common/bitstream.h	/^    void     writeAlignOne();      \/\/ insert one bits until the bitstream is byte-aligned$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
X265_NS::Bitstream::writeAlignZero	../../source/common/bitstream.h	/^    void     writeAlignZero();     \/\/ insert zero bits until the bitstream is byte-aligned$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
X265_NS::Bitstream::writeByte	../../source/common/bitstream.h	/^    void     writeByte(uint32_t val);$/;"	p	class:X265_NS::Bitstream	access:public	signature:(uint32_t val)
X265_NS::Bitstream::writeByteAlignment	../../source/common/bitstream.h	/^    void     writeByteAlignment(); \/\/ insert 1 bit, then pad to byte-align with zero$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
X265_NS::Bitstream::~Bitstream	../../source/common/bitstream.h	/^    ~Bitstream()                             { X265_FREE(m_fifo); }$/;"	f	class:X265_NS::Bitstream	access:public	signature:()
X265_NS::BondedTaskGroup	../../source/common/threadpool.h	/^class BondedTaskGroup$/;"	c	namespace:X265_NS
X265_NS::BondedTaskGroup::BondedTaskGroup	../../source/common/threadpool.h	/^    BondedTaskGroup()  { m_bondedPeerCount = m_jobTotal = m_jobAcquired = 0; }$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:()
X265_NS::BondedTaskGroup::m_bondedPeerCount	../../source/common/threadpool.h	/^    int               m_bondedPeerCount;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
X265_NS::BondedTaskGroup::m_exitedPeerCount	../../source/common/threadpool.h	/^    ThreadSafeInteger m_exitedPeerCount;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
X265_NS::BondedTaskGroup::m_jobAcquired	../../source/common/threadpool.h	/^    int               m_jobAcquired;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
X265_NS::BondedTaskGroup::m_jobTotal	../../source/common/threadpool.h	/^    int               m_jobTotal;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
X265_NS::BondedTaskGroup::m_lock	../../source/common/threadpool.h	/^    Lock              m_lock;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
X265_NS::BondedTaskGroup::processTasks	../../source/common/threadpool.h	/^    virtual void processTasks(int workerThreadId) = 0;$/;"	p	class:X265_NS::BondedTaskGroup	access:public	signature:(int workerThreadId)
X265_NS::BondedTaskGroup::tryBondPeers	../../source/common/threadpool.h	/^    int tryBondPeers(JobProvider& jp, int maxPeers)$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:(JobProvider& jp, int maxPeers)
X265_NS::BondedTaskGroup::tryBondPeers	../../source/common/threadpool.h	/^    int tryBondPeers(ThreadPool& pool, int maxPeers)$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:(ThreadPool& pool, int maxPeers)
X265_NS::BondedTaskGroup::waitForExit	../../source/common/threadpool.h	/^    void waitForExit()$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:()
X265_NS::BondedTaskGroup::~BondedTaskGroup	../../source/common/threadpool.h	/^    ~BondedTaskGroup() { waitForExit(); }$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:()
X265_NS::CHROMA_420_12x16	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_16x12	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_16x16	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_16x32	../../source/common/primitives.h	/^    CHROMA_420_32x16, CHROMA_420_16x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_16x4	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_16x8	../../source/common/primitives.h	/^    CHROMA_420_16x8,  CHROMA_420_8x16,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_24x32	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_2x2	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_2x4	../../source/common/primitives.h	/^    CHROMA_420_4x2,   CHROMA_420_2x4,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_2x8	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_32x16	../../source/common/primitives.h	/^    CHROMA_420_32x16, CHROMA_420_16x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_32x24	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_32x32	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_32x8	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_4x16	../../source/common/primitives.h	/^    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_4x2	../../source/common/primitives.h	/^    CHROMA_420_4x2,   CHROMA_420_2x4,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_4x4	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_4x8	../../source/common/primitives.h	/^    CHROMA_420_8x4,   CHROMA_420_4x8,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_6x8	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_8x16	../../source/common/primitives.h	/^    CHROMA_420_16x8,  CHROMA_420_8x16,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_8x2	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_8x32	../../source/common/primitives.h	/^    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_8x4	../../source/common/primitives.h	/^    CHROMA_420_8x4,   CHROMA_420_4x8,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_8x6	../../source/common/primitives.h	/^    CHROMA_420_8x6,   CHROMA_420_6x8,   CHROMA_420_8x2,  CHROMA_420_2x8,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_420_8x8	../../source/common/primitives.h	/^    CHROMA_420_2x2,   CHROMA_420_4x4,   CHROMA_420_8x8,  CHROMA_420_16x16, CHROMA_420_32x32,$/;"	e	enum:X265_NS::ChromaPU420
X265_NS::CHROMA_422_12x32	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_16x16	../../source/common/primitives.h	/^    CHROMA_422_16x16, CHROMA_422_8x32,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_16x24	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_16x32	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_16x64	../../source/common/primitives.h	/^    CHROMA_422_32x32, CHROMA_422_16x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_16x8	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_24x64	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_2x16	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_2x4	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_2x8	../../source/common/primitives.h	/^    CHROMA_422_4x4,   CHROMA_422_2x8,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_32x16	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_32x32	../../source/common/primitives.h	/^    CHROMA_422_32x32, CHROMA_422_16x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_32x48	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_32x64	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_4x16	../../source/common/primitives.h	/^    CHROMA_422_8x8,   CHROMA_422_4x16,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_4x32	../../source/common/primitives.h	/^    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8,  CHROMA_422_4x32,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_4x4	../../source/common/primitives.h	/^    CHROMA_422_4x4,   CHROMA_422_2x8,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_4x8	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_6x16	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_8x12	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_8x16	../../source/common/primitives.h	/^    CHROMA_422_2x4,   CHROMA_422_4x8,   CHROMA_422_8x16,  CHROMA_422_16x32, CHROMA_422_32x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_8x32	../../source/common/primitives.h	/^    CHROMA_422_16x16, CHROMA_422_8x32,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_8x4	../../source/common/primitives.h	/^    CHROMA_422_8x12,  CHROMA_422_6x16,  CHROMA_422_8x4,   CHROMA_422_2x16,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_8x64	../../source/common/primitives.h	/^    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CHROMA_422_8x8	../../source/common/primitives.h	/^    CHROMA_422_8x8,   CHROMA_422_4x16,$/;"	e	enum:X265_NS::ChromaPU422
X265_NS::CONTEXT_NUMBER_OF_TYPES	../../source/common/common.h	/^    CONTEXT_NUMBER_OF_TYPES = 3$/;"	e	enum:X265_NS::SignificanceMapContextType
X265_NS::CONTEXT_TYPE_4x4	../../source/common/common.h	/^    CONTEXT_TYPE_4x4 = 0,$/;"	e	enum:X265_NS::SignificanceMapContextType
X265_NS::CONTEXT_TYPE_8x8	../../source/common/common.h	/^    CONTEXT_TYPE_8x8 = 1,$/;"	e	enum:X265_NS::SignificanceMapContextType
X265_NS::CONTEXT_TYPE_NxN	../../source/common/common.h	/^    CONTEXT_TYPE_NxN = 2,$/;"	e	enum:X265_NS::SignificanceMapContextType
X265_NS::CTURow	../../source/encoder/frameencoder.h	/^struct CTURow$/;"	s	namespace:X265_NS
X265_NS::CTURow::active	../../source/encoder/frameencoder.h	/^    volatile bool     active;$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::avgQPComputed	../../source/encoder/frameencoder.h	/^    volatile uint32_t avgQPComputed;$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::bufferedEntropy	../../source/encoder/frameencoder.h	/^    Entropy           bufferedEntropy;  \/* store CTU2 context for next row CTU0 *\/$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::busy	../../source/encoder/frameencoder.h	/^    volatile bool     busy;$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::completed	../../source/encoder/frameencoder.h	/^    volatile uint32_t completed;$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::init	../../source/encoder/frameencoder.h	/^    void init(Entropy& initContext, unsigned int sid)$/;"	f	struct:X265_NS::CTURow	access:public	signature:(Entropy& initContext, unsigned int sid)
X265_NS::CTURow::lock	../../source/encoder/frameencoder.h	/^    Lock              lock;$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::rowGoOnCoder	../../source/encoder/frameencoder.h	/^    Entropy           rowGoOnCoder;     \/* store context between CTUs, code bitstream if !SAO *\/$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::rowStats	../../source/encoder/frameencoder.h	/^    FrameStats        rowStats;$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CTURow::sliceId	../../source/encoder/frameencoder.h	/^    unsigned int      sliceId;          \/* store current row slice id *\/$/;"	m	struct:X265_NS::CTURow	access:public
X265_NS::CUData	../../source/common/cudata.h	/^class CUData$/;"	c	namespace:X265_NS
X265_NS::CUData::BytesPerPartition	../../source/common/cudata.h	/^    enum { BytesPerPartition = 21 };  \/\/ combined sizeof() of all per-part data$/;"	e	enum:X265_NS::CUData::__anon8
X265_NS::CUData::CUData	../../source/common/cudata.h	/^    CUData();$/;"	p	class:X265_NS::CUData	access:public	signature:()
X265_NS::CUData::TMVP_UNIT_MASK	../../source/common/cudata.h	/^    enum { TMVP_UNIT_MASK = 0xF0 };  \/\/ mask for mapping index to into a compressed (reference) MV field$/;"	e	enum:X265_NS::CUData::__anon9
X265_NS::CUData::calcCTUGeoms	../../source/common/cudata.h	/^    static void calcCTUGeoms(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS]);$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS])
X265_NS::CUData::clearCbf	../../source/common/cudata.h	/^    void     clearCbf()                            { m_partSet(m_cbf[0], 0); if (m_chromaFormat != X265_CSP_I400) { m_partSet(m_cbf[1], 0); m_partSet(m_cbf[2], 0);} }$/;"	f	class:X265_NS::CUData	access:public	signature:()
X265_NS::CUData::clipMv	../../source/common/cudata.h	/^    void     clipMv(MV& outMV) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(MV& outMV) const
X265_NS::CUData::copyFromPic	../../source/common/cudata.h	/^    void     copyFromPic(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp = true);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp = true)
X265_NS::CUData::copyPartFrom	../../source/common/cudata.h	/^    void     copyPartFrom(const CUData& cu, const CUGeom& childGeom, uint32_t subPartIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& cu, const CUGeom& childGeom, uint32_t subPartIdx)
X265_NS::CUData::copyToPic	../../source/common/cudata.h	/^    void     copyToPic(uint32_t depth) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t depth) const
X265_NS::CUData::deriveCenterIdx	../../source/common/cudata.h	/^    uint32_t deriveCenterIdx(uint32_t puIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx) const
X265_NS::CUData::deriveLeftBottomIdx	../../source/common/cudata.h	/^    uint32_t deriveLeftBottomIdx(uint32_t puIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx) const
X265_NS::CUData::deriveLeftRightTopIdx	../../source/common/cudata.h	/^    void     deriveLeftRightTopIdx(uint32_t puIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const
X265_NS::CUData::deriveRightBottomIdx	../../source/common/cudata.h	/^    uint32_t deriveRightBottomIdx(uint32_t puIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx) const
X265_NS::CUData::getAllowedChromaDir	../../source/common/cudata.h	/^    void     getAllowedChromaDir(uint32_t absPartIdx, uint32_t* modeList) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t* modeList) const
X265_NS::CUData::getBestRefIdx	../../source/common/cudata.h	/^    uint32_t getBestRefIdx(uint32_t subPartIdx) const { return ((m_interDir[subPartIdx] & 1) << m_refIdx[0][subPartIdx]) | $/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t subPartIdx) const
X265_NS::CUData::getCbf	../../source/common/cudata.h	/^    uint8_t  getCbf(uint32_t absPartIdx, TextType ttype, uint32_t tuDepth) const { return (m_cbf[ttype][absPartIdx] >> tuDepth) & 0x1; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, TextType ttype, uint32_t tuDepth) const
X265_NS::CUData::getColMVP	../../source/common/cudata.h	/^    bool getColMVP(MV& outMV, int& outRefIdx, int picList, int cuAddr, int absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(MV& outMV, int& outRefIdx, int picList, int cuAddr, int absPartIdx) const
X265_NS::CUData::getCollocatedMV	../../source/common/cudata.h	/^    bool getCollocatedMV(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const
X265_NS::CUData::getCtxSkipFlag	../../source/common/cudata.h	/^    uint32_t getCtxSkipFlag(uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
X265_NS::CUData::getCtxSplitFlag	../../source/common/cudata.h	/^    uint32_t getCtxSplitFlag(uint32_t absPartIdx, uint32_t depth) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t depth) const
X265_NS::CUData::getDirectPMV	../../source/common/cudata.h	/^    bool getDirectPMV(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const
X265_NS::CUData::getIndirectPMV	../../source/common/cudata.h	/^    bool getIndirectPMV(MV& outMV, InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(MV& outMV, InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx) const
X265_NS::CUData::getInterMergeCandidates	../../source/common/cudata.h	/^    uint32_t getInterMergeCandidates(uint32_t absPartIdx, uint32_t puIdx, MVField (*candMvField)[2], uint8_t* candDir) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t puIdx, MVField (*candMvField)[2], uint8_t* candDir) const
X265_NS::CUData::getInterNeighbourMV	../../source/common/cudata.h	/^    void getInterNeighbourMV(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const
X265_NS::CUData::getInterTUQtDepthRange	../../source/common/cudata.h	/^    void     getInterTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
X265_NS::CUData::getIntraDirLumaPredictor	../../source/common/cudata.h	/^    int      getIntraDirLumaPredictor(uint32_t absPartIdx, uint32_t* intraDirPred) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t* intraDirPred) const
X265_NS::CUData::getIntraTUQtDepthRange	../../source/common/cudata.h	/^    void     getIntraTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
X265_NS::CUData::getLastCodedQP	../../source/common/cudata.h	/^    int8_t getLastCodedQP(uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t absPartIdx) const
X265_NS::CUData::getLastValidPartIdx	../../source/common/cudata.h	/^    int  getLastValidPartIdx(int absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(int absPartIdx) const
X265_NS::CUData::getMvField	../../source/common/cudata.h	/^    void     getMvField(const CUData* cu, uint32_t absPartIdx, int picList, MVField& mvField) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData* cu, uint32_t absPartIdx, int picList, MVField& mvField) const
X265_NS::CUData::getNeighbourMV	../../source/common/cudata.h	/^    void     getNeighbourMV(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const
X265_NS::CUData::getNumPartInter	../../source/common/cudata.h	/^    uint32_t getNumPartInter(uint32_t absPartIdx) const              { return nbPartsTable[(int)m_partSize[absPartIdx]]; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
X265_NS::CUData::getPMV	../../source/common/cudata.h	/^    int      getPMV(InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx, MV* amvpCand, MV* pmv) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx, MV* amvpCand, MV* pmv) const
X265_NS::CUData::getPUAbove	../../source/common/cudata.h	/^    const CUData* getPUAbove(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const
X265_NS::CUData::getPUAboveLeft	../../source/common/cudata.h	/^    const CUData* getPUAboveLeft(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const
X265_NS::CUData::getPUAboveRight	../../source/common/cudata.h	/^    const CUData* getPUAboveRight(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const
X265_NS::CUData::getPUAboveRightAdi	../../source/common/cudata.h	/^    const CUData* getPUAboveRightAdi(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
X265_NS::CUData::getPUBelowLeft	../../source/common/cudata.h	/^    const CUData* getPUBelowLeft(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const
X265_NS::CUData::getPUBelowLeftAdi	../../source/common/cudata.h	/^    const CUData* getPUBelowLeftAdi(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
X265_NS::CUData::getPULeft	../../source/common/cudata.h	/^    const CUData* getPULeft(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const
X265_NS::CUData::getPUOffset	../../source/common/cudata.h	/^    uint32_t getPUOffset(uint32_t puIdx, uint32_t absPartIdx) const { return (partAddrTable[(int)m_partSize[absPartIdx]][puIdx] << (m_slice->m_param->unitSizeDepth - m_cuDepth[absPartIdx]) * 2) >> 4; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t puIdx, uint32_t absPartIdx) const
X265_NS::CUData::getPartIndexAndSize	../../source/common/cudata.h	/^    void     getPartIndexAndSize(uint32_t puIdx, uint32_t& absPartIdx, int& puWidth, int& puHeight) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t puIdx, uint32_t& absPartIdx, int& puWidth, int& puHeight) const
X265_NS::CUData::getQpMinCuAbove	../../source/common/cudata.h	/^    const CUData* getQpMinCuAbove(uint32_t& aPartUnitIdx, uint32_t currAbsIdxInCTU) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& aPartUnitIdx, uint32_t currAbsIdxInCTU) const
X265_NS::CUData::getQpMinCuLeft	../../source/common/cudata.h	/^    const CUData* getQpMinCuLeft(uint32_t& lPartUnitIdx, uint32_t currAbsIdxInCTU) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& lPartUnitIdx, uint32_t currAbsIdxInCTU) const
X265_NS::CUData::getQtRootCbf	../../source/common/cudata.h	/^    bool     getQtRootCbf(uint32_t absPartIdx) const                             { return (m_cbf[0][absPartIdx] || ((m_chromaFormat != X265_CSP_I400) && (m_cbf[1][absPartIdx] || m_cbf[2][absPartIdx]))); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
X265_NS::CUData::getRefQP	../../source/common/cudata.h	/^    int8_t   getRefQP(uint32_t currAbsIdxInCTU) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t currAbsIdxInCTU) const
X265_NS::CUData::getSCUAddr	../../source/common/cudata.h	/^    uint32_t getSCUAddr() const                  { return (m_cuAddr << m_slice->m_param->unitSizeDepth * 2) + m_absIdxInCTU; }$/;"	f	class:X265_NS::CUData	access:public	signature:() const
X265_NS::CUData::getTUEntropyCodingParameters	../../source/common/cudata.h	/^    void     getTUEntropyCodingParameters(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const
X265_NS::CUData::hasEqualMotion	../../source/common/cudata.h	/^    bool hasEqualMotion(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const
X265_NS::CUData::initCTU	../../source/common/cudata.h	/^    void     initCTU(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCUInSlice);$/;"	p	class:X265_NS::CUData	access:public	signature:(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCUInSlice)
X265_NS::CUData::initLosslessCU	../../source/common/cudata.h	/^    void     initLosslessCU(const CUData& cu, const CUGeom& cuGeom);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& cu, const CUGeom& cuGeom)
X265_NS::CUData::initSubCU	../../source/common/cudata.h	/^    void     initSubCU(const CUData& ctu, const CUGeom& cuGeom, int qp);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& ctu, const CUGeom& cuGeom, int qp)
X265_NS::CUData::initialize	../../source/common/cudata.h	/^    void     initialize(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance)
X265_NS::CUData::isBipredRestriction	../../source/common/cudata.h	/^    bool     isBipredRestriction() const          { return m_log2CUSize[0] == 3 && m_partSize[0] != SIZE_2Nx2N; }$/;"	f	class:X265_NS::CUData	access:public	signature:() const
X265_NS::CUData::isDiffMER	../../source/common/cudata.h	/^    bool isDiffMER(int xN, int yN, int xP, int yP) const { return ((xN >> 2) != (xP >> 2)) || ((yN >> 2) != (yP >> 2)); }$/;"	f	class:X265_NS::CUData	access:protected	signature:(int xN, int yN, int xP, int yP) const
X265_NS::CUData::isInter	../../source/common/cudata.h	/^    bool     isInter(uint32_t absPartIdx) const   { return !!(m_predMode[absPartIdx] & MODE_INTER); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
X265_NS::CUData::isIntra	../../source/common/cudata.h	/^    bool     isIntra(uint32_t absPartIdx) const   { return m_predMode[absPartIdx] == MODE_INTRA; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
X265_NS::CUData::isSkipped	../../source/common/cudata.h	/^    bool     isSkipped(uint32_t absPartIdx) const { return m_predMode[absPartIdx] == MODE_SKIP; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
X265_NS::CUData::m_absIdxInCTU	../../source/common/cudata.h	/^    uint32_t      m_absIdxInCTU;      \/\/ address of CU within its CTU in Z scan order$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_bFirstRowInSlice	../../source/common/cudata.h	/^    uint8_t      m_bFirstRowInSlice;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_bLastCuInSlice	../../source/common/cudata.h	/^    uint8_t      m_bLastCuInSlice;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_bLastRowInSlice	../../source/common/cudata.h	/^    uint8_t      m_bLastRowInSlice;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cbf	../../source/common/cudata.h	/^    uint8_t*      m_cbf[3];           \/\/ array of coded block flags (CBF) per plane$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_chromaFormat	../../source/common/cudata.h	/^    uint32_t      m_chromaFormat;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_chromaIntraDir	../../source/common/cudata.h	/^    uint8_t*      m_chromaIntraDir;   \/\/ array of intra directions (chroma)$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuAbove	../../source/common/cudata.h	/^    const CUData* m_cuAbove;          \/\/ pointer to above neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuAboveLeft	../../source/common/cudata.h	/^    const CUData* m_cuAboveLeft;      \/\/ pointer to above-left neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuAboveRight	../../source/common/cudata.h	/^    const CUData* m_cuAboveRight;     \/\/ pointer to above-right neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuAddr	../../source/common/cudata.h	/^    uint32_t      m_cuAddr;           \/\/ address of CTU within the picture in raster order$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuDepth	../../source/common/cudata.h	/^    uint8_t*      m_cuDepth;          \/\/ array of depths$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuLeft	../../source/common/cudata.h	/^    const CUData* m_cuLeft;           \/\/ pointer to left neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuPelX	../../source/common/cudata.h	/^    uint32_t      m_cuPelX;           \/\/ CU position within the picture, in pixels (X)$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_cuPelY	../../source/common/cudata.h	/^    uint32_t      m_cuPelY;           \/\/ CU position within the picture, in pixels (Y)$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_distortion	../../source/common/cudata.h	/^    sse_t*        m_distortion;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_encData	../../source/common/cudata.h	/^    FrameData*    m_encData;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_fAc_den	../../source/common/cudata.h	/^    uint64_t      m_fAc_den[3];$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_fDc_den	../../source/common/cudata.h	/^    uint64_t      m_fDc_den[3];$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_hChromaShift	../../source/common/cudata.h	/^    uint32_t      m_hChromaShift;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_interDir	../../source/common/cudata.h	/^    uint8_t*      m_interDir;         \/\/ array of inter directions$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_log2CUSize	../../source/common/cudata.h	/^    uint8_t*      m_log2CUSize;       \/\/ array of cu log2Size TODO: seems redundant to depth$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_lumaIntraDir	../../source/common/cudata.h	/^    uint8_t*      m_lumaIntraDir;     \/\/ array of intra directions (luma)$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_meanQP	../../source/common/cudata.h	/^    double m_meanQP;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_mergeFlag	../../source/common/cudata.h	/^    uint8_t*      m_mergeFlag;        \/\/ array of merge flags$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_mv	../../source/common/cudata.h	/^    MV*           m_mv[2];            \/\/ array of motion vectors per list$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_mvd	../../source/common/cudata.h	/^    MV*           m_mvd[2];           \/\/ array of coded motion vector deltas per list$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_mvpIdx	../../source/common/cudata.h	/^    uint8_t*      m_mvpIdx[2];        \/\/ array of motion vector predictor candidates or merge candidate indices [0]$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_numPartitions	../../source/common/cudata.h	/^    uint32_t      m_numPartitions;    \/\/ maximum number of 4x4 partitions within this CU$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_partCopy	../../source/common/cudata.h	/^    cucopy_t      m_partCopy;         \/\/ pointer to function that copies m_numPartitions elements$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_partSet	../../source/common/cudata.h	/^    cubcast_t     m_partSet;          \/\/ pointer to function that sets m_numPartitions elements$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_partSize	../../source/common/cudata.h	/^    uint8_t*      m_partSize;         \/\/ array of partition sizes$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_predMode	../../source/common/cudata.h	/^    uint8_t*      m_predMode;         \/\/ array of prediction modes$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_qp	../../source/common/cudata.h	/^    int8_t*       m_qp;               \/\/ array of QP values$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_refIdx	../../source/common/cudata.h	/^    int8_t*       m_refIdx[2];        \/\/ array of motion reference indices per list$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_refTuDepth	../../source/common/cudata.h	/^    int8_t        m_refTuDepth[NUM_TU_DEPTH];   \/\/ TU depth of CU at depths 0, 1 and 2$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_slice	../../source/common/cudata.h	/^    const Slice*  m_slice;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_subPartCopy	../../source/common/cudata.h	/^    cucopy_t      m_subPartCopy;      \/\/ pointer to function that copies m_numPartitions\/4 elements, may be NULL$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_subPartSet	../../source/common/cudata.h	/^    cubcast_t     m_subPartSet;       \/\/ pointer to function that sets m_numPartitions\/4 elements, may be NULL$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_tqBypass	../../source/common/cudata.h	/^    uint8_t*      m_tqBypass;         \/\/ array of CU lossless flags$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_trCoeff	../../source/common/cudata.h	/^    coeff_t*      m_trCoeff[3];       \/\/ transformed coefficient buffer per plane$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_transformSkip	../../source/common/cudata.h	/^    uint8_t*      m_transformSkip[3]; \/\/ array of transform skipping flags per plane$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_tuDepth	../../source/common/cudata.h	/^    uint8_t*      m_tuDepth;          \/\/ array of transform indices$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_vChromaShift	../../source/common/cudata.h	/^    uint32_t      m_vChromaShift;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::m_vbvAffected	../../source/common/cudata.h	/^    bool          m_vbvAffected;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::s_numPartInCUSize	../../source/common/cudata.h	/^    uint32_t  s_numPartInCUSize;$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::s_partSet	../../source/common/cudata.h	/^    cubcast_t s_partSet[NUM_FULL_DEPTH]; \/\/ pointer to broadcast set functions per absolute depth$/;"	m	class:X265_NS::CUData	access:public
X265_NS::CUData::scaleMvByPOCDist	../../source/common/cudata.h	/^    MV scaleMvByPOCDist(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const
X265_NS::CUData::setAllPU	../../source/common/cudata.h	/^    void setAllPU(T *p, const T& val, int absPartIdx, int puIdx);$/;"	p	class:X265_NS::CUData	access:protected	signature:(T *p, const T& val, int absPartIdx, int puIdx)
X265_NS::CUData::setCbfPartRange	../../source/common/cudata.h	/^    void     setCbfPartRange(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes) { memset(m_cbf[ttype] + absPartIdx, cbf, coveredPartIdxes); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes)
X265_NS::CUData::setCbfSubParts	../../source/common/cudata.h	/^    void     setCbfSubParts(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t depth) { s_partSet[depth](m_cbf[ttype] + absPartIdx, cbf); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::setChromIntraDirSubParts	../../source/common/cudata.h	/^    void     setChromIntraDirSubParts(uint8_t dir, uint32_t absPartIdx, uint32_t depth)       { s_partSet[depth](m_chromaIntraDir + absPartIdx, dir); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::setEmptyPart	../../source/common/cudata.h	/^    void     setEmptyPart(const CUGeom& childGeom, uint32_t subPartIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUGeom& childGeom, uint32_t subPartIdx)
X265_NS::CUData::setLumaIntraDirSubParts	../../source/common/cudata.h	/^    void     setLumaIntraDirSubParts(uint8_t dir, uint32_t absPartIdx, uint32_t depth)        { s_partSet[depth](m_lumaIntraDir + absPartIdx, dir); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::setPUInterDir	../../source/common/cudata.h	/^    void     setPUInterDir(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx)
X265_NS::CUData::setPUMv	../../source/common/cudata.h	/^    void     setPUMv(int list, const MV& mv, int absPartIdx, int puIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(int list, const MV& mv, int absPartIdx, int puIdx)
X265_NS::CUData::setPURefIdx	../../source/common/cudata.h	/^    void     setPURefIdx(int list, int8_t refIdx, int absPartIdx, int puIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(int list, int8_t refIdx, int absPartIdx, int puIdx)
X265_NS::CUData::setPartSizeSubParts	../../source/common/cudata.h	/^    void     setPartSizeSubParts(PartSize size)    { m_partSet(m_partSize, (uint8_t)size); }$/;"	f	class:X265_NS::CUData	access:public	signature:(PartSize size)
X265_NS::CUData::setPredModeSubParts	../../source/common/cudata.h	/^    void     setPredModeSubParts(PredMode mode)    { m_partSet(m_predMode, (uint8_t)mode); }$/;"	f	class:X265_NS::CUData	access:public	signature:(PredMode mode)
X265_NS::CUData::setQPSubCUs	../../source/common/cudata.h	/^    bool     setQPSubCUs(int8_t qp, uint32_t absPartIdx, uint32_t depth);$/;"	p	class:X265_NS::CUData	access:public	signature:(int8_t qp, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::setQPSubParts	../../source/common/cudata.h	/^    void     setQPSubParts(int8_t qp, uint32_t absPartIdx, uint32_t depth)                    { s_partSet[depth]((uint8_t*)m_qp + absPartIdx, (uint8_t)qp); }$/;"	f	class:X265_NS::CUData	access:public	signature:(int8_t qp, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::setTUDepthSubParts	../../source/common/cudata.h	/^    void     setTUDepthSubParts(uint8_t tuDepth, uint32_t absPartIdx, uint32_t depth)         { s_partSet[depth](m_tuDepth + absPartIdx, tuDepth); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t tuDepth, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::setTransformSkipPartRange	../../source/common/cudata.h	/^    void     setTransformSkipPartRange(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes) { memset(m_transformSkip[ttype] + absPartIdx, tskip, coveredPartIdxes); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes)
X265_NS::CUData::setTransformSkipSubParts	../../source/common/cudata.h	/^    void     setTransformSkipSubParts(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t depth) { s_partSet[depth](m_transformSkip[ttype] + absPartIdx, tskip); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t depth)
X265_NS::CUData::updatePic	../../source/common/cudata.h	/^    void     updatePic(uint32_t depth, int picCsp) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t depth, int picCsp) const
X265_NS::CUDataMemPool	../../source/common/cudata.h	/^struct CUDataMemPool$/;"	s	namespace:X265_NS
X265_NS::CUDataMemPool::CUDataMemPool	../../source/common/cudata.h	/^    CUDataMemPool() { charMemBlock = NULL; trCoeffMemBlock = NULL; mvMemBlock = NULL; distortionMemBlock = NULL; }$/;"	f	struct:X265_NS::CUDataMemPool	access:public	signature:()
X265_NS::CUDataMemPool::charMemBlock	../../source/common/cudata.h	/^    uint8_t* charMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
X265_NS::CUDataMemPool::create	../../source/common/cudata.h	/^    bool create(uint32_t depth, uint32_t csp, uint32_t numInstances, const x265_param& param)$/;"	f	struct:X265_NS::CUDataMemPool	access:public	signature:(uint32_t depth, uint32_t csp, uint32_t numInstances, const x265_param& param)
X265_NS::CUDataMemPool::destroy	../../source/common/cudata.h	/^    void destroy()$/;"	f	struct:X265_NS::CUDataMemPool	access:public	signature:()
X265_NS::CUDataMemPool::distortionMemBlock	../../source/common/cudata.h	/^    sse_t*   distortionMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
X265_NS::CUDataMemPool::mvMemBlock	../../source/common/cudata.h	/^    MV*      mvMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
X265_NS::CUDataMemPool::trCoeffMemBlock	../../source/common/cudata.h	/^    coeff_t* trCoeffMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
X265_NS::CUGeom	../../source/common/cudata.h	/^struct CUGeom$/;"	s	namespace:X265_NS
X265_NS::CUGeom::INTRA	../../source/common/cudata.h	/^        INTRA           = 1<<0, \/\/ CU is intra predicted$/;"	e	enum:X265_NS::CUGeom::__anon5
X265_NS::CUGeom::LEAF	../../source/common/cudata.h	/^        LEAF            = 1<<3, \/\/ CU is a leaf node of the CTU$/;"	e	enum:X265_NS::CUGeom::__anon5
X265_NS::CUGeom::MAX_GEOMS	../../source/common/cudata.h	/^    enum { MAX_GEOMS = 85 };$/;"	e	enum:X265_NS::CUGeom::__anon6
X265_NS::CUGeom::PRESENT	../../source/common/cudata.h	/^        PRESENT         = 1<<1, \/\/ CU is not completely outside the frame$/;"	e	enum:X265_NS::CUGeom::__anon5
X265_NS::CUGeom::SPLIT	../../source/common/cudata.h	/^        SPLIT           = 1<<4, \/\/ CU is currently split in four child CUs.$/;"	e	enum:X265_NS::CUGeom::__anon5
X265_NS::CUGeom::SPLIT_MANDATORY	../../source/common/cudata.h	/^        SPLIT_MANDATORY = 1<<2, \/\/ CU split is mandatory if CU is inside frame and can be split$/;"	e	enum:X265_NS::CUGeom::__anon5
X265_NS::CUGeom::absPartIdx	../../source/common/cudata.h	/^    uint32_t absPartIdx;    \/\/ Part index of this CU in terms of 4x4 blocks.$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUGeom::childOffset	../../source/common/cudata.h	/^    uint32_t childOffset;   \/\/ offset of the first child CU from current CU$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUGeom::depth	../../source/common/cudata.h	/^    uint32_t depth;         \/\/ depth of this CU relative from CTU$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUGeom::flags	../../source/common/cudata.h	/^    uint32_t flags;         \/\/ CU flags.$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUGeom::geomRecurId	../../source/common/cudata.h	/^    uint32_t geomRecurId;   \/\/ Unique geom id from 0 to MAX_GEOMS - 1 for every depth$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUGeom::log2CUSize	../../source/common/cudata.h	/^    uint32_t log2CUSize;    \/\/ Log of the CU size.$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUGeom::numPartitions	../../source/common/cudata.h	/^    uint32_t numPartitions; \/\/ Number of 4x4 blocks in the CU$/;"	m	struct:X265_NS::CUGeom	access:public
X265_NS::CUStats	../../source/encoder/search.h	/^struct CUStats$/;"	s	namespace:X265_NS
X265_NS::CUStats::CUStats	../../source/encoder/search.h	/^    CUStats() { clear(); }$/;"	f	struct:X265_NS::CUStats	access:public	signature:()
X265_NS::CUStats::accumulate	../../source/encoder/search.h	/^    void accumulate(CUStats& other, x265_param& param)$/;"	f	struct:X265_NS::CUStats	access:public	signature:(CUStats& other, x265_param& param)
X265_NS::CUStats::clear	../../source/encoder/search.h	/^    void clear()$/;"	f	struct:X265_NS::CUStats	access:public	signature:()
X265_NS::CUStats::countInterRDO	../../source/encoder/search.h	/^    uint64_t countInterRDO[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countIntraAnalysis	../../source/encoder/search.h	/^    uint64_t countIntraAnalysis;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countIntraRDO	../../source/encoder/search.h	/^    uint64_t countIntraRDO[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countLoopFilter	../../source/encoder/search.h	/^    uint64_t countLoopFilter;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countMotionEstimate	../../source/encoder/search.h	/^    uint64_t countMotionEstimate;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countPMEMasters	../../source/encoder/search.h	/^    uint64_t countPMEMasters;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countPMETasks	../../source/encoder/search.h	/^    uint64_t countPMETasks;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countPModeMasters	../../source/encoder/search.h	/^    uint64_t countPModeMasters;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countPModeTasks	../../source/encoder/search.h	/^    uint64_t countPModeTasks;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::countWeightAnalyze	../../source/encoder/search.h	/^    uint64_t countWeightAnalyze;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::interRDOElapsedTime	../../source/encoder/search.h	/^    int64_t  interRDOElapsedTime[NUM_CU_DEPTH]; \/\/ elapsed worker time in inter RDO per CU depth$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::intraAnalysisElapsedTime	../../source/encoder/search.h	/^    int64_t  intraAnalysisElapsedTime;          \/\/ elapsed worker time in intra sa8d analysis$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::intraRDOElapsedTime	../../source/encoder/search.h	/^    int64_t  intraRDOElapsedTime[NUM_CU_DEPTH]; \/\/ elapsed worker time in intra RDO per CU depth$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::loopFilterElapsedTime	../../source/encoder/search.h	/^    int64_t  loopFilterElapsedTime;             \/\/ elapsed worker time in deblock and SAO and PSNR\/SSIM$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::motionEstimationElapsedTime	../../source/encoder/search.h	/^    int64_t  motionEstimationElapsedTime;       \/\/ elapsed worker time in predInterSearch()$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::pmeBlockTime	../../source/encoder/search.h	/^    int64_t  pmeBlockTime;                      \/\/ elapsed worker time blocked for pme batch completion$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::pmeTime	../../source/encoder/search.h	/^    int64_t  pmeTime;                           \/\/ elapsed worker time processing ME slave jobs$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::pmodeBlockTime	../../source/encoder/search.h	/^    int64_t  pmodeBlockTime;                    \/\/ elapsed worker time blocked for pmode batch completion$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::pmodeTime	../../source/encoder/search.h	/^    int64_t  pmodeTime;                         \/\/ elapsed worker time processing pmode slave jobs$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::skippedIntraCU	../../source/encoder/search.h	/^    uint32_t skippedIntraCU[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::skippedMotionReferences	../../source/encoder/search.h	/^    uint32_t skippedMotionReferences[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::totalCTUTime	../../source/encoder/search.h	/^    int64_t  totalCTUTime;                      \/\/ elapsed worker time in compressCTU (includes pmode master)$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::totalCTUs	../../source/encoder/search.h	/^    uint64_t totalCTUs;$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::totalIntraCU	../../source/encoder/search.h	/^    uint32_t totalIntraCU[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::totalMotionReferences	../../source/encoder/search.h	/^    uint32_t totalMotionReferences[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::CUStats::weightAnalyzeTime	../../source/encoder/search.h	/^    int64_t  weightAnalyzeTime;                 \/\/ elapsed worker time analyzing reference weights$/;"	m	struct:X265_NS::CUStats	access:public
X265_NS::ChromaCU420	../../source/common/primitives.h	/^enum ChromaCU420$/;"	g	namespace:X265_NS
X265_NS::ChromaCU422	../../source/common/primitives.h	/^enum ChromaCU422$/;"	g	namespace:X265_NS
X265_NS::ChromaPU420	../../source/common/primitives.h	/^enum ChromaPU420$/;"	g	namespace:X265_NS
X265_NS::ChromaPU422	../../source/common/primitives.h	/^enum ChromaPU422$/;"	g	namespace:X265_NS
X265_NS::ChromaQPMappingTableSize	../../source/common/constants.h	/^enum { ChromaQPMappingTableSize = 70 };$/;"	e	enum:X265_NS::__anon22
X265_NS::ConditionVariable	../../source/common/winxp.h	/^} ConditionVariable;$/;"	t	namespace:X265_NS	typeref:struct:X265_NS::__anon21
X265_NS::CostEstimateGroup	../../source/encoder/slicetype.h	/^class CostEstimateGroup : public BondedTaskGroup$/;"	c	namespace:X265_NS	inherits:BondedTaskGroup
X265_NS::CostEstimateGroup::Coop	../../source/encoder/slicetype.h	/^    struct Coop$/;"	s	class:X265_NS::CostEstimateGroup	access:public
X265_NS::CostEstimateGroup::Coop::b	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
X265_NS::CostEstimateGroup::Coop::bDoSearch	../../source/encoder/slicetype.h	/^        bool bDoSearch[2];$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
X265_NS::CostEstimateGroup::Coop::p0	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
X265_NS::CostEstimateGroup::Coop::p1	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
X265_NS::CostEstimateGroup::CostEstimateGroup	../../source/encoder/slicetype.h	/^    CostEstimateGroup(Lookahead& l, Lowres** f) : m_lookahead(l), m_frames(f), m_batchMode(false) {}$/;"	f	class:X265_NS::CostEstimateGroup	access:public	signature:(Lookahead& l, Lowres** f)
X265_NS::CostEstimateGroup::Estimate	../../source/encoder/slicetype.h	/^    struct Estimate$/;"	s	class:X265_NS::CostEstimateGroup	access:public
X265_NS::CostEstimateGroup::Estimate::b	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Estimate	access:public
X265_NS::CostEstimateGroup::Estimate::p0	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Estimate	access:public
X265_NS::CostEstimateGroup::Estimate::p1	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Estimate	access:public
X265_NS::CostEstimateGroup::MAX_BATCH_SIZE	../../source/encoder/slicetype.h	/^    enum { MAX_BATCH_SIZE = 512 };$/;"	e	enum:X265_NS::CostEstimateGroup::__anon17
X265_NS::CostEstimateGroup::MAX_COOP_SLICES	../../source/encoder/slicetype.h	/^    enum { MAX_COOP_SLICES = 32 };$/;"	e	enum:X265_NS::CostEstimateGroup::__anon16
X265_NS::CostEstimateGroup::Slice	../../source/encoder/slicetype.h	/^    struct Slice$/;"	s	class:X265_NS::CostEstimateGroup	access:public
X265_NS::CostEstimateGroup::Slice::costEst	../../source/encoder/slicetype.h	/^        int  costEst;$/;"	m	struct:X265_NS::CostEstimateGroup::Slice	access:public
X265_NS::CostEstimateGroup::Slice::costEstAq	../../source/encoder/slicetype.h	/^        int  costEstAq;$/;"	m	struct:X265_NS::CostEstimateGroup::Slice	access:public
X265_NS::CostEstimateGroup::Slice::intraMbs	../../source/encoder/slicetype.h	/^        int  intraMbs;$/;"	m	struct:X265_NS::CostEstimateGroup::Slice	access:public
X265_NS::CostEstimateGroup::add	../../source/encoder/slicetype.h	/^    void add(int p0, int p1, int b);$/;"	p	class:X265_NS::CostEstimateGroup	access:public	signature:(int p0, int p1, int b)
X265_NS::CostEstimateGroup::estimateCUCost	../../source/encoder/slicetype.h	/^    void    estimateCUCost(LookaheadTLD& tld, int cux, int cuy, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(LookaheadTLD& tld, int cux, int cuy, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice)
X265_NS::CostEstimateGroup::estimateFrameCost	../../source/encoder/slicetype.h	/^    int64_t estimateFrameCost(LookaheadTLD& tld, int p0, int p1, int b, bool intraPenalty);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(LookaheadTLD& tld, int p0, int p1, int b, bool intraPenalty)
X265_NS::CostEstimateGroup::finishBatch	../../source/encoder/slicetype.h	/^    void finishBatch();$/;"	p	class:X265_NS::CostEstimateGroup	access:public	signature:()
X265_NS::CostEstimateGroup::m_batchMode	../../source/encoder/slicetype.h	/^    bool       m_batchMode;$/;"	m	class:X265_NS::CostEstimateGroup	access:public
X265_NS::CostEstimateGroup::m_coop	../../source/encoder/slicetype.h	/^    } m_coop;$/;"	m	class:X265_NS::CostEstimateGroup	typeref:struct:X265_NS::CostEstimateGroup::Coop	access:public
X265_NS::CostEstimateGroup::m_estimates	../../source/encoder/slicetype.h	/^    } m_estimates[MAX_BATCH_SIZE];$/;"	m	class:X265_NS::CostEstimateGroup	typeref:struct:X265_NS::CostEstimateGroup::Estimate	access:public
X265_NS::CostEstimateGroup::m_frames	../../source/encoder/slicetype.h	/^    Lowres**   m_frames;$/;"	m	class:X265_NS::CostEstimateGroup	access:public
X265_NS::CostEstimateGroup::m_lookahead	../../source/encoder/slicetype.h	/^    Lookahead& m_lookahead;$/;"	m	class:X265_NS::CostEstimateGroup	access:public
X265_NS::CostEstimateGroup::m_slice	../../source/encoder/slicetype.h	/^    } m_slice[MAX_COOP_SLICES];$/;"	m	class:X265_NS::CostEstimateGroup	typeref:struct:X265_NS::CostEstimateGroup::Slice	access:public
X265_NS::CostEstimateGroup::operator =	../../source/encoder/slicetype.h	/^    CostEstimateGroup& operator=(const CostEstimateGroup&);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(const CostEstimateGroup&)
X265_NS::CostEstimateGroup::processTasks	../../source/encoder/slicetype.h	/^    void    processTasks(int workerThreadID);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(int workerThreadID)
X265_NS::CostEstimateGroup::s_merange	../../source/encoder/slicetype.h	/^    static const int s_merange = 16;$/;"	m	class:X265_NS::CostEstimateGroup	access:protected
X265_NS::CostEstimateGroup::singleCost	../../source/encoder/slicetype.h	/^    int64_t singleCost(int p0, int p1, int b, bool intraPenalty = false);$/;"	p	class:X265_NS::CostEstimateGroup	access:public	signature:(int p0, int p1, int b, bool intraPenalty = false)
X265_NS::DONT_SPLIT	../../source/encoder/entropy.h	/^    DONT_SPLIT            = 0,$/;"	e	enum:X265_NS::SplitType
X265_NS::DPB	../../source/encoder/dpb.h	/^class DPB$/;"	c	namespace:X265_NS
X265_NS::DPB::DPB	../../source/encoder/dpb.h	/^    DPB(x265_param *param)$/;"	f	class:X265_NS::DPB	access:public	signature:(x265_param *param)
X265_NS::DPB::applyReferencePictureSet	../../source/encoder/dpb.h	/^    void applyReferencePictureSet(RPS *rps, int curPoc);$/;"	p	class:X265_NS::DPB	access:protected	signature:(RPS *rps, int curPoc)
X265_NS::DPB::arrangeLongtermPicturesInRPS	../../source/encoder/dpb.h	/^    void arrangeLongtermPicturesInRPS(int cirPoc, RPS * rps);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int cirPoc, RPS * rps)
X265_NS::DPB::computeRPS	../../source/encoder/dpb.h	/^    void computeRPS(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer)
X265_NS::DPB::decodingRefreshMarking	../../source/encoder/dpb.h	/^    void decodingRefreshMarking(int pocCurr, NalUnitType nalUnitType);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int pocCurr, NalUnitType nalUnitType)
X265_NS::DPB::getLSB	../../source/encoder/dpb.h	/^    int  getLSB(int poc, int maxLSB);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int poc, int maxLSB)
X265_NS::DPB::getNalUnitType	../../source/encoder/dpb.h	/^    NalUnitType getNalUnitType(int curPoc, bool bIsKeyFrame);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int curPoc, bool bIsKeyFrame)
X265_NS::DPB::m_associatedIRAPPOC	../../source/encoder/dpb.h	/^    int                m_associatedIRAPPOC;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_associatedIRAPStationCURatio	../../source/encoder/dpb.h	/^    double             m_associatedIRAPStationCURatio;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_associatedPreIRAPPOC	../../source/encoder/dpb.h	/^    int                m_associatedPreIRAPPOC;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_associatedPreIRAPStationCURatio	../../source/encoder/dpb.h	/^    double             m_associatedPreIRAPStationCURatio;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_bDiscardLTR	../../source/encoder/dpb.h	/^    bool               m_bDiscardLTR;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_bLTRAvailable	../../source/encoder/dpb.h	/^    bool               m_bLTRAvailable;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_bLowCorrIframe	../../source/encoder/dpb.h	/^    bool               m_bLowCorrIframe;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_bOpenGOP	../../source/encoder/dpb.h	/^    int                m_bOpenGOP;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_bRefreshPending	../../source/encoder/dpb.h	/^    bool               m_bRefreshPending;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_bTemporalSublayer	../../source/encoder/dpb.h	/^    bool               m_bTemporalSublayer;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_frameDataFreeList	../../source/encoder/dpb.h	/^    FrameData*         m_frameDataFreeList;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_freeList	../../source/encoder/dpb.h	/^    PicList            m_freeList;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_lastIDR	../../source/encoder/dpb.h	/^    int                m_lastIDR;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_maxNumReferences	../../source/encoder/dpb.h	/^    int                m_maxNumReferences;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_picList	../../source/encoder/dpb.h	/^    PicList            m_picList;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::m_pocCRA	../../source/encoder/dpb.h	/^    int                m_pocCRA;$/;"	m	class:X265_NS::DPB	access:public
X265_NS::DPB::prepareEncode	../../source/encoder/dpb.h	/^    void prepareEncode(Frame*);$/;"	p	class:X265_NS::DPB	access:public	signature:(Frame*)
X265_NS::DPB::recycleUnreferenced	../../source/encoder/dpb.h	/^    void recycleUnreferenced();$/;"	p	class:X265_NS::DPB	access:public	signature:()
X265_NS::DPB::~DPB	../../source/encoder/dpb.h	/^    ~DPB();$/;"	p	class:X265_NS::DPB	access:public	signature:()
X265_NS::Deblock	../../source/common/deblock.h	/^class Deblock$/;"	c	namespace:X265_NS
X265_NS::Deblock::EDGE_HOR	../../source/common/deblock.h	/^    enum { EDGE_VER, EDGE_HOR };$/;"	e	enum:X265_NS::Deblock::__anon4
X265_NS::Deblock::EDGE_VER	../../source/common/deblock.h	/^    enum { EDGE_VER, EDGE_HOR };$/;"	e	enum:X265_NS::Deblock::__anon4
X265_NS::Deblock::deblockCTU	../../source/common/deblock.h	/^    static void deblockCTU(const CUData* ctu, const CUGeom& cuGeom, int32_t dir);$/;"	p	class:X265_NS::Deblock	access:public	signature:(const CUData* ctu, const CUGeom& cuGeom, int32_t dir)
X265_NS::Deblock::deblockCU	../../source/common/deblock.h	/^    static void deblockCU(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[])
X265_NS::Deblock::edgeFilterChroma	../../source/common/deblock.h	/^    static void edgeFilterChroma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
X265_NS::Deblock::edgeFilterLuma	../../source/common/deblock.h	/^    static void edgeFilterLuma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
X265_NS::Deblock::getBoundaryStrength	../../source/common/deblock.h	/^    static uint8_t getBoundaryStrength(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[])
X265_NS::Deblock::s_betaTable	../../source/common/deblock.h	/^    static const uint8_t s_betaTable[52];$/;"	m	class:X265_NS::Deblock	access:protected
X265_NS::Deblock::s_tcTable	../../source/common/deblock.h	/^    static const uint8_t s_tcTable[54];$/;"	m	class:X265_NS::Deblock	access:protected
X265_NS::Deblock::setEdgefilterMultiple	../../source/common/deblock.h	/^    static void setEdgefilterMultiple(uint32_t absPartIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(uint32_t absPartIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits)
X265_NS::Deblock::setEdgefilterPU	../../source/common/deblock.h	/^    static void setEdgefilterPU(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits)
X265_NS::Deblock::setEdgefilterTU	../../source/common/deblock.h	/^    static void setEdgefilterTU(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[])
X265_NS::EncStats	../../source/encoder/encoder.h	/^struct EncStats$/;"	s	namespace:X265_NS
X265_NS::EncStats::EncStats	../../source/encoder/encoder.h	/^    EncStats()$/;"	f	struct:X265_NS::EncStats	access:public	signature:()
X265_NS::EncStats::addBits	../../source/encoder/encoder.h	/^    void addBits(uint64_t bits);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(uint64_t bits)
X265_NS::EncStats::addPsnr	../../source/encoder/encoder.h	/^    void addPsnr(double psnrY, double psnrU, double psnrV);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(double psnrY, double psnrU, double psnrV)
X265_NS::EncStats::addQP	../../source/encoder/encoder.h	/^    void addQP(double aveQp);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(double aveQp)
X265_NS::EncStats::addSsim	../../source/encoder/encoder.h	/^    void addSsim(double ssim);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(double ssim)
X265_NS::EncStats::m_accBits	../../source/encoder/encoder.h	/^    uint64_t      m_accBits;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_globalSsim	../../source/encoder/encoder.h	/^    double        m_globalSsim;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_maxCLL	../../source/encoder/encoder.h	/^    uint16_t      m_maxCLL;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_maxFALL	../../source/encoder/encoder.h	/^    double        m_maxFALL;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_numPics	../../source/encoder/encoder.h	/^    uint32_t      m_numPics;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_psnrSumU	../../source/encoder/encoder.h	/^    double        m_psnrSumU;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_psnrSumV	../../source/encoder/encoder.h	/^    double        m_psnrSumV;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_psnrSumY	../../source/encoder/encoder.h	/^    double        m_psnrSumY;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::EncStats::m_totalQp	../../source/encoder/encoder.h	/^    double        m_totalQp;$/;"	m	struct:X265_NS::EncStats	access:public
X265_NS::Encoder	../../source/encoder/encoder.h	/^class Encoder : public x265_encoder$/;"	c	namespace:X265_NS	inherits:x265_encoder
X265_NS::Encoder::Encoder	../../source/encoder/encoder.h	/^    Encoder();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::allocAnalysis	../../source/encoder/encoder.h	/^    void allocAnalysis(x265_analysis_data* analysis);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* analysis)
X265_NS::Encoder::allocAnalysis2Pass	../../source/encoder/encoder.h	/^    void allocAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis, int sliceType)
X265_NS::Encoder::analyseRefIdx	../../source/encoder/encoder.h	/^    void analyseRefIdx(int *numRefIdx);$/;"	p	class:X265_NS::Encoder	access:public	signature:(int *numRefIdx)
X265_NS::Encoder::calcRefreshInterval	../../source/encoder/encoder.h	/^    void calcRefreshInterval(Frame* frameEnc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(Frame* frameEnc)
X265_NS::Encoder::cim	../../source/encoder/encoder.h	/^    uint8_t                 **cim;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::computeSPSRPSIndex	../../source/encoder/encoder.h	/^    bool computeSPSRPSIndex();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::configure	../../source/encoder/encoder.h	/^    void configure(x265_param *param);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_param *param)
X265_NS::Encoder::copyCtuInfo	../../source/encoder/encoder.h	/^    void copyCtuInfo(x265_ctu_info_t** frameCtuInfo, int poc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_ctu_info_t** frameCtuInfo, int poc)
X265_NS::Encoder::create	../../source/encoder/encoder.h	/^    void create();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::destroy	../../source/encoder/encoder.h	/^    void destroy();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::encode	../../source/encoder/encoder.h	/^    int encode(const x265_picture* pic, x265_picture *pic_out);$/;"	p	class:X265_NS::Encoder	access:public	signature:(const x265_picture* pic, x265_picture *pic_out)
X265_NS::Encoder::fetchStats	../../source/encoder/encoder.h	/^    void fetchStats(x265_stats* stats, size_t statsSizeBytes);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_stats* stats, size_t statsSizeBytes)
X265_NS::Encoder::finishFrameStats	../../source/encoder/encoder.h	/^    void finishFrameStats(Frame* pic, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(Frame* pic, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc)
X265_NS::Encoder::freeAnalysis	../../source/encoder/encoder.h	/^    void freeAnalysis(x265_analysis_data* analysis);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* analysis)
X265_NS::Encoder::freeAnalysis2Pass	../../source/encoder/encoder.h	/^    void freeAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis, int sliceType)
X265_NS::Encoder::getStreamHeaders	../../source/encoder/encoder.h	/^    void getStreamHeaders(NALList& list, Entropy& sbacCoder, Bitstream& bs);$/;"	p	class:X265_NS::Encoder	access:public	signature:(NALList& list, Entropy& sbacCoder, Bitstream& bs)
X265_NS::Encoder::initPPS	../../source/encoder/encoder.h	/^    void initPPS(PPS *pps);$/;"	p	class:X265_NS::Encoder	access:protected	signature:(PPS *pps)
X265_NS::Encoder::initRefIdx	../../source/encoder/encoder.h	/^    void initRefIdx();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::initSPS	../../source/encoder/encoder.h	/^    void initSPS(SPS *sps);$/;"	p	class:X265_NS::Encoder	access:protected	signature:(SPS *sps)
X265_NS::Encoder::initVPS	../../source/encoder/encoder.h	/^    void initVPS(VPS *vps);$/;"	p	class:X265_NS::Encoder	access:protected	signature:(VPS *vps)
X265_NS::Encoder::m_aborted	../../source/encoder/encoder.h	/^    bool               m_aborted;          \/\/ fatal error detected$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analysisFile	../../source/encoder/encoder.h	/^    FILE*              m_analysisFile;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analysisFileIn	../../source/encoder/encoder.h	/^    FILE*              m_analysisFileIn;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analysisFileOut	../../source/encoder/encoder.h	/^    FILE*              m_analysisFileOut;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analyzeAll	../../source/encoder/encoder.h	/^    EncStats           m_analyzeAll;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analyzeB	../../source/encoder/encoder.h	/^    EncStats           m_analyzeB;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analyzeI	../../source/encoder/encoder.h	/^    EncStats           m_analyzeI;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_analyzeP	../../source/encoder/encoder.h	/^    EncStats           m_analyzeP;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_bQueuedIntraRefresh	../../source/encoder/encoder.h	/^    int                m_bQueuedIntraRefresh;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_bToneMap	../../source/encoder/encoder.h	/^    int                     m_bToneMap; \/\/ Enables tone-mapping$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_bZeroLatency	../../source/encoder/encoder.h	/^    bool               m_bZeroLatency;     \/\/ x265_encoder_encode() returns NALs for the input picture, zero lag$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_bframeDelay	../../source/encoder/encoder.h	/^    int                m_bframeDelay;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_bframeDelayTime	../../source/encoder/encoder.h	/^    int64_t            m_bframeDelayTime;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_cB	../../source/encoder/encoder.h	/^    double                m_cB;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_cR	../../source/encoder/encoder.h	/^    double                m_cR;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_conformanceMode	../../source/encoder/encoder.h	/^    int                m_conformanceMode;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_conformanceWindow	../../source/encoder/encoder.h	/^    Window             m_conformanceWindow;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_countEmergency	../../source/encoder/encoder.h	/^    uint32_t           m_countEmergency[MAX_NUM_TR_CATEGORIES];$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_curEncoder	../../source/encoder/encoder.h	/^    int                m_curEncoder;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_dpb	../../source/encoder/encoder.h	/^    DPB*               m_dpb;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_emitCLLSEI	../../source/encoder/encoder.h	/^    bool               m_emitCLLSEI;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_encodeStartTime	../../source/encoder/encoder.h	/^    int64_t            m_encodeStartTime;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_encodedFrameNum	../../source/encoder/encoder.h	/^    int                m_encodedFrameNum;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_exportedPic	../../source/encoder/encoder.h	/^    Frame*             m_exportedPic;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_firstPts	../../source/encoder/encoder.h	/^    int64_t            m_firstPts;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_frameEncoder	../../source/encoder/encoder.h	/^    FrameEncoder*      m_frameEncoder[X265_MAX_FRAME_THREADS];$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_hdr10plus_api	../../source/encoder/encoder.h	/^    const hdr10plus_api     *m_hdr10plus_api;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_iBitsCostSum	../../source/encoder/encoder.h	/^    int64_t            m_iBitsCostSum[QP_MAX_MAX + 1];$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_iFrameNum	../../source/encoder/encoder.h	/^    int                m_iFrameNum;   $/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_iPPSQpMinus26	../../source/encoder/encoder.h	/^    int                m_iPPSQpMinus26;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_lastBPSEI	../../source/encoder/encoder.h	/^    int                m_lastBPSEI;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_latestParam	../../source/encoder/encoder.h	/^    x265_param*        m_latestParam;     \/\/ Holds latest param during a reconfigure$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_lookahead	../../source/encoder/encoder.h	/^    Lookahead*         m_lookahead;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_nalList	../../source/encoder/encoder.h	/^    NALList            m_nalList;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_numChromaWPBiFrames	../../source/encoder/encoder.h	/^    int                m_numChromaWPBiFrames; \/\/ number of B frames with weighted chroma reference$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_numChromaWPFrames	../../source/encoder/encoder.h	/^    int                m_numChromaWPFrames;  \/\/ number of P frames with weighted chroma reference$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_numDelayedPic	../../source/encoder/encoder.h	/^    uint32_t           m_numDelayedPic;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_numLumaWPBiFrames	../../source/encoder/encoder.h	/^    int                m_numLumaWPBiFrames;  \/\/ number of B frames with weighted luma reference$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_numLumaWPFrames	../../source/encoder/encoder.h	/^    int                m_numLumaWPFrames;    \/\/ number of P frames with weighted luma reference$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_numPools	../../source/encoder/encoder.h	/^    int                m_numPools;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_offsetEmergency	../../source/encoder/encoder.h	/^    uint16_t           (*m_offsetEmergency)[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS];$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_outputCount	../../source/encoder/encoder.h	/^    int                m_outputCount;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_param	../../source/encoder/encoder.h	/^    x265_param*        m_param;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_pocLast	../../source/encoder/encoder.h	/^    int                m_pocLast;         \/\/ time index (POC)$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_pps	../../source/encoder/encoder.h	/^    PPS                m_pps;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_prevReorderedPts	../../source/encoder/encoder.h	/^    int64_t            m_prevReorderedPts[MAX_TLAYER];$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_prevTonemapPayload	../../source/encoder/encoder.h	/^    x265_sei_payload        m_prevTonemapPayload;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_rateControl	../../source/encoder/encoder.h	/^    RateControl*       m_rateControl;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_reconfigure	../../source/encoder/encoder.h	/^    bool               m_reconfigure;      \/\/ Encoder reconfigure in progress$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_reconfigureRc	../../source/encoder/encoder.h	/^    bool               m_reconfigureRc;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_refIdxLastGOP	../../source/encoder/encoder.h	/^    RefIdxLastGOP      m_refIdxLastGOP;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_residualSumEmergency	../../source/encoder/encoder.h	/^    uint32_t           m_residualSumEmergency[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS];$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_rpsInSpsCount	../../source/encoder/encoder.h	/^    int                m_rpsInSpsCount;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_rpsInSpsLock	../../source/encoder/encoder.h	/^    Lock               m_rpsInSpsLock;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_scalingList	../../source/encoder/encoder.h	/^    ScalingList        m_scalingList;      \/\/ quantization matrix information$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_sliceQpLock	../../source/encoder/encoder.h	/^    Lock               m_sliceQpLock;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_sliceRefIdxLock	../../source/encoder/encoder.h	/^    Lock               m_sliceRefIdxLock;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_sps	../../source/encoder/encoder.h	/^    SPS                m_sps;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_threadPool	../../source/encoder/encoder.h	/^    ThreadPool*        m_threadPool;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::m_vps	../../source/encoder/encoder.h	/^    VPS                m_vps;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::numCimInfo	../../source/encoder/encoder.h	/^    int                     numCimInfo;$/;"	m	class:X265_NS::Encoder	access:public
X265_NS::Encoder::printReconfigureParams	../../source/encoder/encoder.h	/^    void printReconfigureParams();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::printSummary	../../source/encoder/encoder.h	/^    void printSummary();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::readAnalysis2PassFile	../../source/encoder/encoder.h	/^    void readAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, int poc, int sliceType);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis2Pass, int poc, int sliceType)
X265_NS::Encoder::readAnalysisFile	../../source/encoder/encoder.h	/^    void readAnalysisFile(x265_analysis_data* analysis, int poc, const x265_picture* picIn);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* analysis, int poc, const x265_picture* picIn)
X265_NS::Encoder::reconfigureParam	../../source/encoder/encoder.h	/^    int reconfigureParam(x265_param* encParam, x265_param* param);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_param* encParam, x265_param* param)
X265_NS::Encoder::statsString	../../source/encoder/encoder.h	/^    char* statsString(EncStats&, char*);$/;"	p	class:X265_NS::Encoder	access:public	signature:(EncStats&, char*)
X265_NS::Encoder::stopJobs	../../source/encoder/encoder.h	/^    void stopJobs();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::updateRefIdx	../../source/encoder/encoder.h	/^    void updateRefIdx();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
X265_NS::Encoder::updateVbvPlan	../../source/encoder/encoder.h	/^    void updateVbvPlan(RateControl* rc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(RateControl* rc)
X265_NS::Encoder::writeAnalysis2PassFile	../../source/encoder/encoder.h	/^    void writeAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype)
X265_NS::Encoder::writeAnalysisFile	../../source/encoder/encoder.h	/^    void writeAnalysisFile(x265_analysis_data* pic, FrameData &curEncData);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* pic, FrameData &curEncData)
X265_NS::Encoder::~Encoder	../../source/encoder/encoder.h	/^    ~Encoder()$/;"	f	class:X265_NS::Encoder	access:public	signature:()
X265_NS::EncoderPrimitives	../../source/common/primitives.h	/^struct EncoderPrimitives$/;"	s	namespace:X265_NS
X265_NS::EncoderPrimitives::CU	../../source/common/primitives.h	/^    struct CU$/;"	s	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::CU::add_ps	../../source/common/primitives.h	/^        pixel_add_ps_t  add_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::blockfill_s	../../source/common/primitives.h	/^        blockfill_s_t   blockfill_s;   \/\/ block fill, for DC transforms$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::calcresidual	../../source/common/primitives.h	/^        calcresidual_t  calcresidual;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::copy_cnt	../../source/common/primitives.h	/^        copy_cnt_t      copy_cnt;      \/\/ copy coeff while counting non-zero$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::copy_pp	../../source/common/primitives.h	/^        copy_pp_t       copy_pp;       \/\/ alias to pu[].copy_pp$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::copy_ps	../../source/common/primitives.h	/^        copy_ps_t       copy_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::copy_sp	../../source/common/primitives.h	/^        copy_sp_t       copy_sp;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::copy_ss	../../source/common/primitives.h	/^        copy_ss_t       copy_ss;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::count_nonzero	../../source/common/primitives.h	/^        count_nonzero_t count_nonzero;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::cpy1Dto2D_shl	../../source/common/primitives.h	/^        cpy1Dto2D_shl_t cpy1Dto2D_shl;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::cpy1Dto2D_shr	../../source/common/primitives.h	/^        cpy1Dto2D_shr_t cpy1Dto2D_shr;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::cpy2Dto1D_shl	../../source/common/primitives.h	/^        cpy2Dto1D_shl_t cpy2Dto1D_shl;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::cpy2Dto1D_shr	../../source/common/primitives.h	/^        cpy2Dto1D_shr_t cpy2Dto1D_shr;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::dct	../../source/common/primitives.h	/^        dct_t           dct;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::idct	../../source/common/primitives.h	/^        idct_t          idct;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::intra_filter	../../source/common/primitives.h	/^        intra_filter_t  intra_filter;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::intra_pred	../../source/common/primitives.h	/^        intra_pred_t    intra_pred[NUM_INTRA_MODE];$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::intra_pred_allangs	../../source/common/primitives.h	/^        intra_allangs_t intra_pred_allangs;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::psy_cost_pp	../../source/common/primitives.h	/^        pixelcmp_t      psy_cost_pp;   \/\/ difference in AC energy between two pixel blocks$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::sa8d	../../source/common/primitives.h	/^        pixelcmp_t      sa8d;          \/\/ Sum of Transformed Differences (8x8 Hadamard), uses satd for 4x4 intra TU$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::ssd_s	../../source/common/primitives.h	/^        pixel_ssd_s_t   ssd_s;         \/\/ Sum of Square Error (residual coeff to self)$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::sse_pp	../../source/common/primitives.h	/^        pixel_sse_t     sse_pp;        \/\/ Sum of Square Error (pixel, pixel) fenc alignment not assumed$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::sse_ss	../../source/common/primitives.h	/^        pixel_sse_ss_t  sse_ss;        \/\/ Sum of Square Error (short, short) fenc alignment not assumed$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::sub_ps	../../source/common/primitives.h	/^        pixel_sub_ps_t  sub_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::transpose	../../source/common/primitives.h	/^        transpose_t     transpose;     \/\/ transpose pixel block; for use with intra all-angs$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::CU::var	../../source/common/primitives.h	/^        var_t           var;           \/\/ block internal variance$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::Chroma	../../source/common/primitives.h	/^    struct Chroma$/;"	s	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma	../../source/common/primitives.h	/^        struct CUChroma$/;"	s	struct:X265_NS::EncoderPrimitives::Chroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::add_ps	../../source/common/primitives.h	/^            pixel_add_ps_t add_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::copy_pp	../../source/common/primitives.h	/^            copy_pp_t      copy_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::copy_ps	../../source/common/primitives.h	/^            copy_ps_t      copy_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::copy_sp	../../source/common/primitives.h	/^            copy_sp_t      copy_sp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::copy_ss	../../source/common/primitives.h	/^            copy_ss_t      copy_ss;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::sa8d	../../source/common/primitives.h	/^            pixelcmp_t     sa8d;    \/\/ if chroma CU is not multiple of 8x8, will use satd$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::sse_pp	../../source/common/primitives.h	/^            pixel_sse_t    sse_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::CUChroma::sub_ps	../../source/common/primitives.h	/^            pixel_sub_ps_t sub_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma	../../source/common/primitives.h	/^        struct PUChroma$/;"	s	struct:X265_NS::EncoderPrimitives::Chroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::addAvg	../../source/common/primitives.h	/^            addAvg_t     addAvg;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::copy_pp	../../source/common/primitives.h	/^            copy_pp_t    copy_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::filter_hpp	../../source/common/primitives.h	/^            filter_pp_t  filter_hpp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::filter_hps	../../source/common/primitives.h	/^            filter_hps_t filter_hps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::filter_vpp	../../source/common/primitives.h	/^            filter_pp_t  filter_vpp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::filter_vps	../../source/common/primitives.h	/^            filter_ps_t  filter_vps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::filter_vsp	../../source/common/primitives.h	/^            filter_sp_t  filter_vsp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::filter_vss	../../source/common/primitives.h	/^            filter_ss_t  filter_vss;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::p2s	../../source/common/primitives.h	/^            filter_p2s_t p2s;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::PUChroma::satd	../../source/common/primitives.h	/^            pixelcmp_t   satd;      \/\/ if chroma PU is not multiple of 4x4, will be NULL$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::cu	../../source/common/primitives.h	/^        cu[NUM_CU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma	typeref:struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
X265_NS::EncoderPrimitives::Chroma::pu	../../source/common/primitives.h	/^        pu[NUM_PU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma	typeref:struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
X265_NS::EncoderPrimitives::PU	../../source/common/primitives.h	/^    struct PU$/;"	s	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::PU::addAvg	../../source/common/primitives.h	/^        addAvg_t       addAvg;      \/\/ bidir motion compensation, uses 16bit values$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::ads	../../source/common/primitives.h	/^        pixelcmp_ads_t ads;         \/\/ Absolute Differences sum$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::convert_p2s	../../source/common/primitives.h	/^        filter_p2s_t   convert_p2s;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::copy_pp	../../source/common/primitives.h	/^        copy_pp_t      copy_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_hpp	../../source/common/primitives.h	/^        filter_pp_t    luma_hpp;    \/\/ 8-tap luma motion compensation interpolation filters$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_hps	../../source/common/primitives.h	/^        filter_hps_t   luma_hps;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_hvpp	../../source/common/primitives.h	/^        filter_hv_pp_t luma_hvpp;   \/\/ combines hps + vsp$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_vpp	../../source/common/primitives.h	/^        filter_pp_t    luma_vpp;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_vps	../../source/common/primitives.h	/^        filter_ps_t    luma_vps;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_vsp	../../source/common/primitives.h	/^        filter_sp_t    luma_vsp;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::luma_vss	../../source/common/primitives.h	/^        filter_ss_t    luma_vss;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::pixelavg_pp	../../source/common/primitives.h	/^        pixelavg_pp_t  pixelavg_pp; \/\/ quick bidir using pixels (borrowed from x264)$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::sad	../../source/common/primitives.h	/^        pixelcmp_t     sad;         \/\/ Sum of Absolute Differences$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::sad_x3	../../source/common/primitives.h	/^        pixelcmp_x3_t  sad_x3;      \/\/ Sum of Absolute Differences, 3 mv offsets at once$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::sad_x4	../../source/common/primitives.h	/^        pixelcmp_x4_t  sad_x4;      \/\/ Sum of Absolute Differences, 4 mv offsets at once$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::PU::satd	../../source/common/primitives.h	/^        pixelcmp_t     satd;        \/\/ Sum of Absolute Transformed Differences (4x4 Hadamard)$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::chroma	../../source/common/primitives.h	/^    chroma[X265_CSP_COUNT];$/;"	m	struct:X265_NS::EncoderPrimitives	typeref:struct:X265_NS::EncoderPrimitives::Chroma	access:public
X265_NS::EncoderPrimitives::costC1C2Flag	../../source/common/primitives.h	/^    costC1C2Flag_t        costC1C2Flag;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::costCoeffNxN	../../source/common/primitives.h	/^    costCoeffNxN_t        costCoeffNxN;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::costCoeffRemain	../../source/common/primitives.h	/^    costCoeffRemain_t     costCoeffRemain;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::cu	../../source/common/primitives.h	/^    cu[NUM_CU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives	typeref:struct:X265_NS::EncoderPrimitives::CU	access:public
X265_NS::EncoderPrimitives::denoiseDct	../../source/common/primitives.h	/^    denoiseDct_t          denoiseDct;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::dequant_normal	../../source/common/primitives.h	/^    dequant_normal_t      dequant_normal;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::dequant_scaling	../../source/common/primitives.h	/^    dequant_scaling_t     dequant_scaling;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::dst4x4	../../source/common/primitives.h	/^    dct_t                 dst4x4;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::extendRowBorder	../../source/common/primitives.h	/^    extendCURowBorder_t   extendRowBorder;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::findPosFirstLast	../../source/common/primitives.h	/^    findPosFirstLast_t    findPosFirstLast;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::fix8Pack	../../source/common/primitives.h	/^    cutree_fix8_pack      fix8Pack;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::fix8Unpack	../../source/common/primitives.h	/^    cutree_fix8_unpack    fix8Unpack;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::frameInitLowres	../../source/common/primitives.h	/^    downscale_t           frameInitLowres;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::idst4x4	../../source/common/primitives.h	/^    idct_t                idst4x4;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::integral_inith	../../source/common/primitives.h	/^    integralh_t            integral_inith[NUM_INTEGRAL_SIZE];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::integral_initv	../../source/common/primitives.h	/^    integralv_t            integral_initv[NUM_INTEGRAL_SIZE];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::nquant	../../source/common/primitives.h	/^    nquant_t              nquant;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::pelFilterChroma	../../source/common/primitives.h	/^    pelFilterChroma_t     pelFilterChroma[2];     \/\/ EDGE_VER = 0, EDGE_HOR = 1$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::pelFilterLumaStrong	../../source/common/primitives.h	/^    pelFilterLumaStrong_t pelFilterLumaStrong[2]; \/\/ EDGE_VER = 0, EDGE_HOR = 1$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::planeClipAndMax	../../source/common/primitives.h	/^    planeClipAndMax_t     planeClipAndMax;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::planecopy_cp	../../source/common/primitives.h	/^    planecopy_cp_t        planecopy_cp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::planecopy_sp	../../source/common/primitives.h	/^    planecopy_sp_t        planecopy_sp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::planecopy_sp_shl	../../source/common/primitives.h	/^    planecopy_sp_t        planecopy_sp_shl;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::propagateCost	../../source/common/primitives.h	/^    cutree_propagate_cost propagateCost;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::pu	../../source/common/primitives.h	/^    pu[NUM_PU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives	typeref:struct:X265_NS::EncoderPrimitives::PU	access:public
X265_NS::EncoderPrimitives::quant	../../source/common/primitives.h	/^    quant_t               quant;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuOrgB0	../../source/common/primitives.h	/^    saoCuOrgB0_t          saoCuOrgB0;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuOrgE0	../../source/common/primitives.h	/^    saoCuOrgE0_t          saoCuOrgE0;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuOrgE1	../../source/common/primitives.h	/^    saoCuOrgE1_t          saoCuOrgE1, saoCuOrgE1_2Rows;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuOrgE1_2Rows	../../source/common/primitives.h	/^    saoCuOrgE1_t          saoCuOrgE1, saoCuOrgE1_2Rows;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuOrgE2	../../source/common/primitives.h	/^    saoCuOrgE2_t          saoCuOrgE2[2];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuOrgE3	../../source/common/primitives.h	/^    saoCuOrgE3_t          saoCuOrgE3[2];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuStatsBO	../../source/common/primitives.h	/^    saoCuStatsBO_t        saoCuStatsBO;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuStatsE0	../../source/common/primitives.h	/^    saoCuStatsE0_t        saoCuStatsE0;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuStatsE1	../../source/common/primitives.h	/^    saoCuStatsE1_t        saoCuStatsE1;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuStatsE2	../../source/common/primitives.h	/^    saoCuStatsE2_t        saoCuStatsE2;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::saoCuStatsE3	../../source/common/primitives.h	/^    saoCuStatsE3_t        saoCuStatsE3;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::scale1D_128to64	../../source/common/primitives.h	/^    scale1D_t             scale1D_128to64;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::scale2D_64to32	../../source/common/primitives.h	/^    scale2D_t             scale2D_64to32;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::scanPosLast	../../source/common/primitives.h	/^    scanPosLast_t         scanPosLast;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::sign	../../source/common/primitives.h	/^    sign_t                sign;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::ssim_4x4x2_core	../../source/common/primitives.h	/^    ssim_4x4x2_core_t     ssim_4x4x2_core;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::ssim_end_4	../../source/common/primitives.h	/^    ssim_end4_t           ssim_end_4;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::weight_pp	../../source/common/primitives.h	/^    weightp_pp_t          weight_pp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::EncoderPrimitives::weight_sp	../../source/common/primitives.h	/^    weightp_sp_t          weight_sp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
X265_NS::Entropy	../../source/encoder/entropy.h	/^class Entropy : public SyntaxElementWriter$/;"	c	namespace:X265_NS	inherits:SyntaxElementWriter
X265_NS::Entropy::Entropy	../../source/encoder/entropy.cpp	/^Entropy::Entropy()$/;"	f	class:X265_NS::Entropy	signature:()
X265_NS::Entropy::Entropy	../../source/encoder/entropy.h	/^    Entropy();$/;"	p	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::bitsCodeBin	../../source/encoder/entropy.h	/^    inline uint32_t bitsCodeBin(uint32_t binValue, uint32_t ctxModel) const$/;"	f	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue, uint32_t ctxModel) const
X265_NS::Entropy::bitsInterMode	../../source/encoder/entropy.cpp	/^uint32_t Entropy::bitsInterMode(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const
X265_NS::Entropy::bitsInterMode	../../source/encoder/entropy.h	/^    uint32_t bitsInterMode(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const
X265_NS::Entropy::bitsIntraMode	../../source/encoder/entropy.h	/^    uint32_t bitsIntraMode(const CUData& cu, uint32_t absPartIdx) const$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx) const
X265_NS::Entropy::bitsIntraModeMPM	../../source/encoder/entropy.h	/^    inline uint32_t bitsIntraModeMPM(const uint32_t preds[3], uint32_t dir) const { return bitsCodeBin(1, m_contextState[OFF_ADI_CTX]) + (dir == preds[0] ? 1 : 2); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const uint32_t preds[3], uint32_t dir) const
X265_NS::Entropy::bitsIntraModeNonMPM	../../source/encoder/entropy.h	/^    inline uint32_t bitsIntraModeNonMPM() const { return bitsCodeBin(0, m_contextState[OFF_ADI_CTX]) + 5; }$/;"	f	class:X265_NS::Entropy	access:public	signature:() const
X265_NS::Entropy::codeAUD	../../source/encoder/entropy.cpp	/^void Entropy::codeAUD(const Slice& slice)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice)
X265_NS::Entropy::codeAUD	../../source/encoder/entropy.h	/^    void codeAUD(const Slice& slice);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Slice& slice)
X265_NS::Entropy::codeCUTransquantBypassFlag	../../source/encoder/entropy.h	/^    inline void codeCUTransquantBypassFlag(uint32_t symbol)               { encodeBin(symbol, m_contextState[OFF_TQUANT_BYPASS_FLAG_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t symbol)
X265_NS::Entropy::codeCoeff	../../source/encoder/entropy.cpp	/^void Entropy::codeCoeff(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2])$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2])
X265_NS::Entropy::codeCoeff	../../source/encoder/entropy.h	/^    void codeCoeff(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2])
X265_NS::Entropy::codeCoeffNxN	../../source/encoder/entropy.cpp	/^void Entropy::codeCoeffNxN(const CUData& cu, const coeff_t* coeff, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, const coeff_t* coeff, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype)
X265_NS::Entropy::codeCoeffNxN	../../source/encoder/entropy.h	/^    void codeCoeffNxN(const CUData& cu, const coeff_t* coef, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, const coeff_t* coef, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype)
X265_NS::Entropy::codeDeltaQP	../../source/encoder/entropy.cpp	/^void Entropy::codeDeltaQP(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeDeltaQP	../../source/encoder/entropy.h	/^    void codeDeltaQP(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeHrdParameters	../../source/encoder/entropy.cpp	/^void Entropy::codeHrdParameters(const HRDInfo& hrd, int maxSubTLayers)$/;"	f	class:X265_NS::Entropy	signature:(const HRDInfo& hrd, int maxSubTLayers)
X265_NS::Entropy::codeHrdParameters	../../source/encoder/entropy.h	/^    void codeHrdParameters(const HRDInfo& hrd, int maxSubTLayers);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const HRDInfo& hrd, int maxSubTLayers)
X265_NS::Entropy::codeInterDir	../../source/encoder/entropy.cpp	/^void Entropy::codeInterDir(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeInterDir	../../source/encoder/entropy.h	/^    void codeInterDir(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeIntraDirChroma	../../source/encoder/entropy.cpp	/^void Entropy::codeIntraDirChroma(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode)
X265_NS::Entropy::codeIntraDirChroma	../../source/encoder/entropy.h	/^    void codeIntraDirChroma(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode)
X265_NS::Entropy::codeIntraDirLumaAng	../../source/encoder/entropy.cpp	/^void Entropy::codeIntraDirLumaAng(const CUData& cu, uint32_t absPartIdx, bool isMultiple)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, bool isMultiple)
X265_NS::Entropy::codeIntraDirLumaAng	../../source/encoder/entropy.h	/^    void codeIntraDirLumaAng(const CUData& cu, uint32_t absPartIdx, bool isMultiple);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, bool isMultiple)
X265_NS::Entropy::codeLastSignificantXY	../../source/encoder/entropy.h	/^    void codeLastSignificantXY(uint32_t posx, uint32_t posy, uint32_t log2TrSize, bool bIsLuma, uint32_t scanIdx);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t posx, uint32_t posy, uint32_t log2TrSize, bool bIsLuma, uint32_t scanIdx)
X265_NS::Entropy::codeMVPIdx	../../source/encoder/entropy.h	/^    inline void codeMVPIdx(uint32_t symbol)                          { encodeBin(symbol, m_contextState[OFF_MVP_IDX_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t symbol)
X265_NS::Entropy::codeMergeFlag	../../source/encoder/entropy.h	/^    inline void codeMergeFlag(const CUData& cu, uint32_t absPartIdx) { encodeBin(cu.m_mergeFlag[absPartIdx], m_contextState[OFF_MERGE_FLAG_EXT_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeMergeIndex	../../source/encoder/entropy.cpp	/^void Entropy::codeMergeIndex(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeMergeIndex	../../source/encoder/entropy.h	/^    void codeMergeIndex(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeMvd	../../source/encoder/entropy.cpp	/^void Entropy::codeMvd(const CUData& cu, uint32_t absPartIdx, int list)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, int list)
X265_NS::Entropy::codeMvd	../../source/encoder/entropy.h	/^    void codeMvd(const CUData& cu, uint32_t absPartIdx, int list);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, int list)
X265_NS::Entropy::codePPS	../../source/encoder/entropy.cpp	/^void Entropy::codePPS( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 )$/;"	f	class:X265_NS::Entropy	signature:( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 )
X265_NS::Entropy::codePPS	../../source/encoder/entropy.h	/^    void codePPS( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 );$/;"	p	class:X265_NS::Entropy	access:public	signature:( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 )
X265_NS::Entropy::codePUWise	../../source/encoder/entropy.cpp	/^void Entropy::codePUWise(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codePUWise	../../source/encoder/entropy.h	/^    void codePUWise(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codePartSize	../../source/encoder/entropy.cpp	/^void Entropy::codePartSize(const CUData& cu, uint32_t absPartIdx, uint32_t depth)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth)
X265_NS::Entropy::codePartSize	../../source/encoder/entropy.h	/^    void codePartSize(const CUData& cu, uint32_t absPartIdx, uint32_t depth);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth)
X265_NS::Entropy::codePredInfo	../../source/encoder/entropy.cpp	/^void Entropy::codePredInfo(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codePredInfo	../../source/encoder/entropy.h	/^    void codePredInfo(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codePredMode	../../source/encoder/entropy.h	/^    inline void codePredMode(int predMode)                                { encodeBin(predMode == MODE_INTRA ? 1 : 0, m_contextState[OFF_PRED_MODE_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(int predMode)
X265_NS::Entropy::codePredWeightTable	../../source/encoder/entropy.cpp	/^void Entropy::codePredWeightTable(const Slice& slice)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice)
X265_NS::Entropy::codePredWeightTable	../../source/encoder/entropy.h	/^    void codePredWeightTable(const Slice& slice);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const Slice& slice)
X265_NS::Entropy::codeProfileTier	../../source/encoder/entropy.cpp	/^void Entropy::codeProfileTier(const ProfileTierLevel& ptl, int maxTempSubLayers)$/;"	f	class:X265_NS::Entropy	signature:(const ProfileTierLevel& ptl, int maxTempSubLayers)
X265_NS::Entropy::codeProfileTier	../../source/encoder/entropy.h	/^    void codeProfileTier(const ProfileTierLevel& ptl, int maxTempSubLayers);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const ProfileTierLevel& ptl, int maxTempSubLayers)
X265_NS::Entropy::codeQtCbfChroma	../../source/encoder/entropy.cpp	/^void Entropy::codeQtCbfChroma(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel)
X265_NS::Entropy::codeQtCbfChroma	../../source/encoder/entropy.h	/^    inline void codeQtCbfChroma(uint32_t cbf, uint32_t tuDepth)           { encodeBin(cbf, m_contextState[OFF_QT_CBF_CTX + 2 + tuDepth]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf, uint32_t tuDepth)
X265_NS::Entropy::codeQtCbfChroma	../../source/encoder/entropy.h	/^    void codeQtCbfChroma(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel)
X265_NS::Entropy::codeQtCbfLuma	../../source/encoder/entropy.h	/^    inline void codeQtCbfLuma(uint32_t cbf, uint32_t tuDepth)             { encodeBin(cbf, m_contextState[OFF_QT_CBF_CTX + !tuDepth]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf, uint32_t tuDepth)
X265_NS::Entropy::codeQtRootCbf	../../source/encoder/entropy.h	/^    inline void codeQtRootCbf(uint32_t cbf)                               { encodeBin(cbf, m_contextState[OFF_QT_ROOT_CBF_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf)
X265_NS::Entropy::codeQtRootCbfZero	../../source/encoder/entropy.h	/^    inline void codeQtRootCbfZero() { encodeBin(0, m_contextState[OFF_QT_ROOT_CBF_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::codeRefFrmIdx	../../source/encoder/entropy.cpp	/^void Entropy::codeRefFrmIdx(const CUData& cu, uint32_t absPartIdx, int list)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, int list)
X265_NS::Entropy::codeRefFrmIdx	../../source/encoder/entropy.h	/^    void codeRefFrmIdx(const CUData& cu, uint32_t absPartIdx, int list);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, int list)
X265_NS::Entropy::codeRefFrmIdxPU	../../source/encoder/entropy.cpp	/^void Entropy::codeRefFrmIdxPU(const CUData& cu, uint32_t absPartIdx, int list)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, int list)
X265_NS::Entropy::codeRefFrmIdxPU	../../source/encoder/entropy.h	/^    void codeRefFrmIdxPU(const CUData& cu, uint32_t absPartIdx, int list);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, int list)
X265_NS::Entropy::codeSPS	../../source/encoder/entropy.cpp	/^void Entropy::codeSPS(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl)$/;"	f	class:X265_NS::Entropy	signature:(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl)
X265_NS::Entropy::codeSPS	../../source/encoder/entropy.h	/^    void codeSPS(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl)
X265_NS::Entropy::codeSaoMaxUvlc	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoMaxUvlc(uint32_t code, uint32_t maxSymbol)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t code, uint32_t maxSymbol)
X265_NS::Entropy::codeSaoMaxUvlc	../../source/encoder/entropy.h	/^    void codeSaoMaxUvlc(uint32_t code, uint32_t maxSymbol);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t code, uint32_t maxSymbol)
X265_NS::Entropy::codeSaoMerge	../../source/encoder/entropy.h	/^    inline void codeSaoMerge(uint32_t code)                          { encodeBin(code, m_contextState[OFF_SAO_MERGE_FLAG_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t code)
X265_NS::Entropy::codeSaoOffset	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoOffset(const SaoCtuParam& ctuParam, int plane)$/;"	f	class:X265_NS::Entropy	signature:(const SaoCtuParam& ctuParam, int plane)
X265_NS::Entropy::codeSaoOffset	../../source/encoder/entropy.h	/^    void codeSaoOffset(const SaoCtuParam& ctuParam, int plane);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const SaoCtuParam& ctuParam, int plane)
X265_NS::Entropy::codeSaoOffsetBO	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoOffsetBO(int *offset, int bandPos, int plane)$/;"	f	class:X265_NS::Entropy	signature:(int *offset, int bandPos, int plane)
X265_NS::Entropy::codeSaoOffsetBO	../../source/encoder/entropy.h	/^    void codeSaoOffsetBO(int *offset, int bandPos, int plane);$/;"	p	class:X265_NS::Entropy	access:public	signature:(int *offset, int bandPos, int plane)
X265_NS::Entropy::codeSaoOffsetEO	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoOffsetEO(int *offset, int typeIdx, int plane)$/;"	f	class:X265_NS::Entropy	signature:(int *offset, int typeIdx, int plane)
X265_NS::Entropy::codeSaoOffsetEO	../../source/encoder/entropy.h	/^    void codeSaoOffsetEO(int *offset, int typeIdx, int plane);$/;"	p	class:X265_NS::Entropy	access:public	signature:(int *offset, int typeIdx, int plane)
X265_NS::Entropy::codeSaoType	../../source/encoder/entropy.h	/^    inline void codeSaoType(uint32_t code)                           { encodeBin(code, m_contextState[OFF_SAO_TYPE_IDX_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t code)
X265_NS::Entropy::codeScalingList	../../source/encoder/entropy.cpp	/^void Entropy::codeScalingList(const ScalingList& scalingList)$/;"	f	class:X265_NS::Entropy	signature:(const ScalingList& scalingList)
X265_NS::Entropy::codeScalingList	../../source/encoder/entropy.cpp	/^void Entropy::codeScalingList(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId)$/;"	f	class:X265_NS::Entropy	signature:(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId)
X265_NS::Entropy::codeScalingList	../../source/encoder/entropy.h	/^    void codeScalingList(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId)
X265_NS::Entropy::codeScalingList	../../source/encoder/entropy.h	/^    void codeScalingList(const ScalingList&);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const ScalingList&)
X265_NS::Entropy::codeShortTermRefPicSet	../../source/encoder/entropy.cpp	/^void Entropy::codeShortTermRefPicSet(const RPS& rps, int idx)$/;"	f	class:X265_NS::Entropy	signature:(const RPS& rps, int idx)
X265_NS::Entropy::codeShortTermRefPicSet	../../source/encoder/entropy.h	/^    void codeShortTermRefPicSet(const RPS& rps, int idx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const RPS& rps, int idx)
X265_NS::Entropy::codeSkipFlag	../../source/encoder/entropy.h	/^    inline void codeSkipFlag(const CUData& cu, uint32_t absPartIdx)  { encodeBin(cu.isSkipped(absPartIdx), m_contextState[OFF_SKIP_FLAG_CTX + cu.getCtxSkipFlag(absPartIdx)]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
X265_NS::Entropy::codeSliceHeader	../../source/encoder/entropy.cpp	/^void Entropy::codeSliceHeader(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp)
X265_NS::Entropy::codeSliceHeader	../../source/encoder/entropy.h	/^    void codeSliceHeader(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp)
X265_NS::Entropy::codeSliceHeaderWPPEntryPoints	../../source/encoder/entropy.cpp	/^void Entropy::codeSliceHeaderWPPEntryPoints(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset)$/;"	f	class:X265_NS::Entropy	signature:(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset)
X265_NS::Entropy::codeSliceHeaderWPPEntryPoints	../../source/encoder/entropy.h	/^    void codeSliceHeaderWPPEntryPoints(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset)
X265_NS::Entropy::codeSplitFlag	../../source/encoder/entropy.h	/^    inline void codeSplitFlag(const CUData& cu, uint32_t absPartIdx, uint32_t depth) { encodeBin(cu.m_cuDepth[absPartIdx] > depth, m_contextState[OFF_SPLIT_FLAG_CTX + cu.getCtxSplitFlag(absPartIdx, depth)]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth)
X265_NS::Entropy::codeTransformSkipFlags	../../source/encoder/entropy.h	/^    inline void codeTransformSkipFlags(uint32_t transformSkip, TextType ttype) { encodeBin(transformSkip, m_contextState[OFF_TRANSFORMSKIP_FLAG_CTX + (ttype ? NUM_TRANSFORMSKIP_FLAG_CTX : 0)]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t transformSkip, TextType ttype)
X265_NS::Entropy::codeTransformSubdivFlag	../../source/encoder/entropy.h	/^    inline void codeTransformSubdivFlag(uint32_t symbol, uint32_t ctx)    { encodeBin(symbol, m_contextState[OFF_TRANS_SUBDIV_FLAG_CTX + ctx]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t symbol, uint32_t ctx)
X265_NS::Entropy::codeVPS	../../source/encoder/entropy.cpp	/^void Entropy::codeVPS(const VPS& vps)$/;"	f	class:X265_NS::Entropy	signature:(const VPS& vps)
X265_NS::Entropy::codeVPS	../../source/encoder/entropy.h	/^    void codeVPS(const VPS& vps);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const VPS& vps)
X265_NS::Entropy::codeVUI	../../source/encoder/entropy.cpp	/^void Entropy::codeVUI(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo)$/;"	f	class:X265_NS::Entropy	signature:(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo)
X265_NS::Entropy::codeVUI	../../source/encoder/entropy.h	/^    void codeVUI(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo)
X265_NS::Entropy::copyContextsFrom	../../source/encoder/entropy.cpp	/^void Entropy::copyContextsFrom(const Entropy& src)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& src)
X265_NS::Entropy::copyContextsFrom	../../source/encoder/entropy.h	/^    void copyContextsFrom(const Entropy& src);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const Entropy& src)
X265_NS::Entropy::copyFrom	../../source/encoder/entropy.cpp	/^void Entropy::copyFrom(const Entropy& src)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& src)
X265_NS::Entropy::copyFrom	../../source/encoder/entropy.h	/^    void copyFrom(const Entropy& src);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const Entropy& src)
X265_NS::Entropy::copyState	../../source/encoder/entropy.cpp	/^void Entropy::copyState(const Entropy& other)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& other)
X265_NS::Entropy::copyState	../../source/encoder/entropy.h	/^    void copyState(const Entropy& other);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Entropy& other)
X265_NS::Entropy::encodeBin	../../source/encoder/entropy.cpp	/^void Entropy::encodeBin(uint32_t binValue, uint8_t &ctxModel)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValue, uint8_t &ctxModel)
X265_NS::Entropy::encodeBin	../../source/encoder/entropy.h	/^    void encodeBin(uint32_t binValue, uint8_t& ctxModel);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue, uint8_t& ctxModel)
X265_NS::Entropy::encodeBinEP	../../source/encoder/entropy.cpp	/^void Entropy::encodeBinEP(uint32_t binValue)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValue)
X265_NS::Entropy::encodeBinEP	../../source/encoder/entropy.h	/^    void encodeBinEP(uint32_t binValue);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue)
X265_NS::Entropy::encodeBinTrm	../../source/encoder/entropy.cpp	/^void Entropy::encodeBinTrm(uint32_t binValue)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValue)
X265_NS::Entropy::encodeBinTrm	../../source/encoder/entropy.h	/^    void encodeBinTrm(uint32_t binValue);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue)
X265_NS::Entropy::encodeBinsEP	../../source/encoder/entropy.cpp	/^void Entropy::encodeBinsEP(uint32_t binValues, int numBins)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValues, int numBins)
X265_NS::Entropy::encodeBinsEP	../../source/encoder/entropy.h	/^    void encodeBinsEP(uint32_t binValues, int numBins);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValues, int numBins)
X265_NS::Entropy::encodeCTU	../../source/encoder/entropy.cpp	/^void Entropy::encodeCTU(const CUData& ctu, const CUGeom& cuGeom)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& ctu, const CUGeom& cuGeom)
X265_NS::Entropy::encodeCTU	../../source/encoder/entropy.h	/^    void encodeCTU(const CUData& cu, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, const CUGeom& cuGeom)
X265_NS::Entropy::encodeCU	../../source/encoder/entropy.cpp	/^void Entropy::encodeCU(const CUData& ctu, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& ctu, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP)
X265_NS::Entropy::encodeCU	../../source/encoder/entropy.h	/^    void encodeCU(const CUData& ctu, const CUGeom &cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& ctu, const CUGeom &cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP)
X265_NS::Entropy::encodeTransform	../../source/encoder/entropy.cpp	/^void Entropy::encodeTransform(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize,$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize, bool& bCodeDQP, const uint32_t depthRange[2])
X265_NS::Entropy::encodeTransform	../../source/encoder/entropy.h	/^    void encodeTransform(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize,$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize, bool& bCodeDQP, const uint32_t depthRange[2])
X265_NS::Entropy::encodeTransformLuma	../../source/encoder/entropy.cpp	/^void Entropy::encodeTransformLuma(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize,$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize, bool& bCodeDQP, const uint32_t depthRange[2])
X265_NS::Entropy::encodeTransformLuma	../../source/encoder/entropy.h	/^    void encodeTransformLuma(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize,$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize, bool& bCodeDQP, const uint32_t depthRange[2])
X265_NS::Entropy::estBit	../../source/encoder/entropy.cpp	/^void Entropy::estBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
X265_NS::Entropy::estBit	../../source/encoder/entropy.h	/^    void estBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
X265_NS::Entropy::estCBFBit	../../source/encoder/entropy.cpp	/^void Entropy::estCBFBit(EstBitsSbac& estBitsSbac) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac) const
X265_NS::Entropy::estCBFBit	../../source/encoder/entropy.h	/^    void estCBFBit(EstBitsSbac& estBitsSbac) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac) const
X265_NS::Entropy::estSignificantCoeffGroupMapBit	../../source/encoder/entropy.cpp	/^void Entropy::estSignificantCoeffGroupMapBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
X265_NS::Entropy::estSignificantCoeffGroupMapBit	../../source/encoder/entropy.h	/^    void estSignificantCoeffGroupMapBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
X265_NS::Entropy::estSignificantCoefficientsBit	../../source/encoder/entropy.cpp	/^void Entropy::estSignificantCoefficientsBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
X265_NS::Entropy::estSignificantCoefficientsBit	../../source/encoder/entropy.h	/^    void estSignificantCoefficientsBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
X265_NS::Entropy::estSignificantMapBit	../../source/encoder/entropy.cpp	/^void Entropy::estSignificantMapBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
X265_NS::Entropy::estSignificantMapBit	../../source/encoder/entropy.h	/^    void estSignificantMapBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
X265_NS::Entropy::estimateCbfBits	../../source/encoder/entropy.h	/^    inline uint32_t estimateCbfBits(uint32_t cbf, TextType ttype, uint32_t tuDepth) const { return bitsCodeBin(cbf, m_contextState[OFF_QT_CBF_CTX + ctxCbf[ttype][tuDepth]]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf, TextType ttype, uint32_t tuDepth) const
X265_NS::Entropy::finish	../../source/encoder/entropy.cpp	/^void Entropy::finish()$/;"	f	class:X265_NS::Entropy	signature:()
X265_NS::Entropy::finish	../../source/encoder/entropy.h	/^    void finish();$/;"	p	class:X265_NS::Entropy	access:private	signature:()
X265_NS::Entropy::finishCU	../../source/encoder/entropy.cpp	/^void Entropy::finishCU(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bCodeDQP)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bCodeDQP)
X265_NS::Entropy::finishCU	../../source/encoder/entropy.h	/^    void finishCU(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bEncodeDQP);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bEncodeDQP)
X265_NS::Entropy::finishSlice	../../source/encoder/entropy.h	/^    void finishSlice()                 { encodeBinTrm(1); finish(); dynamic_cast<Bitstream*>(m_bitIf)->writeByteAlignment(); }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::getNumberOfWrittenBits	../../source/encoder/entropy.h	/^    uint32_t getNumberOfWrittenBits()$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::load	../../source/encoder/entropy.h	/^    void load(const Entropy& src)            { copyFrom(src); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const Entropy& src)
X265_NS::Entropy::loadContexts	../../source/encoder/entropy.h	/^    void loadContexts(const Entropy& src)    { copyContextsFrom(src); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const Entropy& src)
X265_NS::Entropy::loadIntraDirModeLuma	../../source/encoder/entropy.cpp	/^void Entropy::loadIntraDirModeLuma(const Entropy& src)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& src)
X265_NS::Entropy::loadIntraDirModeLuma	../../source/encoder/entropy.h	/^    void loadIntraDirModeLuma(const Entropy& src);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Entropy& src)
X265_NS::Entropy::m_bitsLeft	../../source/encoder/entropy.h	/^    int           m_bitsLeft;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_bufferedByte	../../source/encoder/entropy.h	/^    uint32_t      m_bufferedByte;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_contextState	../../source/encoder/entropy.h	/^    uint8_t       m_contextState[160]; \/\/ MAX_OFF_CTX_MOD + padding$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_estBitsSbac	../../source/encoder/entropy.h	/^    EstBitsSbac   m_estBitsSbac;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_fracBits	../../source/encoder/entropy.h	/^    uint64_t      m_fracBits;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_low	../../source/encoder/entropy.h	/^    uint32_t      m_low;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_meanQP	../../source/encoder/entropy.h	/^    double        m_meanQP;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_numBufferedBytes	../../source/encoder/entropy.h	/^    int           m_numBufferedBytes;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_pad	../../source/encoder/entropy.h	/^    uint64_t      m_pad;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_range	../../source/encoder/entropy.h	/^    uint32_t      m_range;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::m_valid	../../source/encoder/entropy.h	/^    bool m_valid;$/;"	m	class:X265_NS::Entropy	access:public
X265_NS::Entropy::markInvalid	../../source/encoder/entropy.h	/^    void markInvalid()                 { m_valid = false; }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::markValid	../../source/encoder/entropy.h	/^    void markValid()                   { m_valid = true; }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::markValid	../../source/encoder/entropy.h	/^    void markValid()                   { }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::resetBits	../../source/encoder/entropy.cpp	/^void Entropy::resetBits()$/;"	f	class:X265_NS::Entropy	signature:()
X265_NS::Entropy::resetBits	../../source/encoder/entropy.h	/^    void resetBits();$/;"	p	class:X265_NS::Entropy	access:public	signature:()
X265_NS::Entropy::resetEntropy	../../source/encoder/entropy.cpp	/^void Entropy::resetEntropy(const Slice& slice)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice)
X265_NS::Entropy::resetEntropy	../../source/encoder/entropy.h	/^    void resetEntropy(const Slice& slice);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Slice& slice)
X265_NS::Entropy::setBitstream	../../source/encoder/entropy.h	/^    void setBitstream(Bitstream* p)    { m_bitIf = p; }$/;"	f	class:X265_NS::Entropy	access:public	signature:(Bitstream* p)
X265_NS::Entropy::start	../../source/encoder/entropy.cpp	/^void Entropy::start()$/;"	f	class:X265_NS::Entropy	signature:()
X265_NS::Entropy::start	../../source/encoder/entropy.h	/^    void start();$/;"	p	class:X265_NS::Entropy	access:private	signature:()
X265_NS::Entropy::store	../../source/encoder/entropy.h	/^    void store(Entropy& dest) const          { dest.copyFrom(*this); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(Entropy& dest) const
X265_NS::Entropy::writeCoefRemainExGolomb	../../source/encoder/entropy.cpp	/^void Entropy::writeCoefRemainExGolomb(uint32_t codeNumber, uint32_t absGoRice)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t codeNumber, uint32_t absGoRice)
X265_NS::Entropy::writeCoefRemainExGolomb	../../source/encoder/entropy.h	/^    void writeCoefRemainExGolomb(uint32_t symbol, const uint32_t absGoRice);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t symbol, const uint32_t absGoRice)
X265_NS::Entropy::writeEpExGolomb	../../source/encoder/entropy.cpp	/^void Entropy::writeEpExGolomb(uint32_t symbol, uint32_t count)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t symbol, uint32_t count)
X265_NS::Entropy::writeEpExGolomb	../../source/encoder/entropy.h	/^    void writeEpExGolomb(uint32_t symbol, uint32_t count);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t symbol, uint32_t count)
X265_NS::Entropy::writeOut	../../source/encoder/entropy.cpp	/^void Entropy::writeOut()$/;"	f	class:X265_NS::Entropy	signature:()
X265_NS::Entropy::writeOut	../../source/encoder/entropy.h	/^    void writeOut();$/;"	p	class:X265_NS::Entropy	access:private	signature:()
X265_NS::Entropy::writeUnaryMaxSymbol	../../source/encoder/entropy.cpp	/^void Entropy::writeUnaryMaxSymbol(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol)
X265_NS::Entropy::writeUnaryMaxSymbol	../../source/encoder/entropy.h	/^    void writeUnaryMaxSymbol(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol)
X265_NS::Entropy::zeroFract	../../source/encoder/entropy.h	/^    void zeroFract()                   { m_fracBits = 0; }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
X265_NS::EstBitsSbac	../../source/encoder/entropy.h	/^struct EstBitsSbac$/;"	s	namespace:X265_NS
X265_NS::EstBitsSbac::blockCbpBits	../../source/encoder/entropy.h	/^    int blockCbpBits[NUM_QT_CBF_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::EstBitsSbac::blockRootCbpBits	../../source/encoder/entropy.h	/^    int blockRootCbpBits[2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::EstBitsSbac::greaterOneBits	../../source/encoder/entropy.h	/^    int greaterOneBits[NUM_ONE_FLAG_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::EstBitsSbac::lastBits	../../source/encoder/entropy.h	/^    int lastBits[2][10];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::EstBitsSbac::levelAbsBits	../../source/encoder/entropy.h	/^    int levelAbsBits[NUM_ABS_FLAG_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::EstBitsSbac::significantBits	../../source/encoder/entropy.h	/^    int significantBits[2][NUM_SIG_FLAG_CTX];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::EstBitsSbac::significantCoeffGroupBits	../../source/encoder/entropy.h	/^    int significantCoeffGroupBits[NUM_SIG_CG_FLAG_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
X265_NS::Event	../../source/common/threading.h	/^class Event$/;"	c	namespace:X265_NS
X265_NS::Event::Event	../../source/common/threading.h	/^    Event()$/;"	f	class:X265_NS::Event	access:public	signature:()
X265_NS::Event::handle	../../source/common/threading.h	/^    HANDLE handle;$/;"	m	class:X265_NS::Event	access:protected
X265_NS::Event::timedWait	../../source/common/threading.h	/^    bool timedWait(uint32_t milliseconds)$/;"	f	class:X265_NS::Event	access:public	signature:(uint32_t milliseconds)
X265_NS::Event::trigger	../../source/common/threading.h	/^    void trigger()$/;"	f	class:X265_NS::Event	access:public	signature:()
X265_NS::Event::wait	../../source/common/threading.h	/^    void wait()$/;"	f	class:X265_NS::Event	access:public	signature:()
X265_NS::Event::~Event	../../source/common/threading.h	/^    ~Event()$/;"	f	class:X265_NS::Event	access:public	signature:()
X265_NS::Frame	../../source/common/frame.h	/^class Frame$/;"	c	namespace:X265_NS
X265_NS::Frame::Frame	../../source/common/frame.h	/^    Frame();$/;"	p	class:X265_NS::Frame	access:public	signature:()
X265_NS::Frame::allocEncodeData	../../source/common/frame.h	/^    bool allocEncodeData(x265_param *param, const SPS& sps);$/;"	p	class:X265_NS::Frame	access:public	signature:(x265_param *param, const SPS& sps)
X265_NS::Frame::create	../../source/common/frame.h	/^    bool create(x265_param *param, float* quantOffsets);$/;"	p	class:X265_NS::Frame	access:public	signature:(x265_param *param, float* quantOffsets)
X265_NS::Frame::destroy	../../source/common/frame.h	/^    void destroy();$/;"	p	class:X265_NS::Frame	access:public	signature:()
X265_NS::Frame::m_addOnCtuInfo	../../source/common/frame.h	/^    uint8_t**              m_addOnCtuInfo;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_addOnDepth	../../source/common/frame.h	/^    uint8_t**              m_addOnDepth;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_addOnPrevChange	../../source/common/frame.h	/^    int**                  m_addOnPrevChange;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_analysis2Pass	../../source/common/frame.h	/^    x265_analysis_2Pass    m_analysis2Pass;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_analysisData	../../source/common/frame.h	/^    x265_analysis_data     m_analysisData;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_bChromaExtended	../../source/common/frame.h	/^    bool                   m_bChromaExtended;    \/\/ orig chroma planes motion extended for weight analysis$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_copied	../../source/common/frame.h	/^    Event                  m_copied;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_countRefEncoders	../../source/common/frame.h	/^    volatile uint32_t      m_countRefEncoders;   \/\/ count of FrameEncoder threads monitoring m_reconRowCount$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_ctuInfo	../../source/common/frame.h	/^    x265_ctu_info_t**      m_ctuInfo;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_dts	../../source/common/frame.h	/^    int64_t                m_dts;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_encData	../../source/common/frame.h	/^    FrameData*             m_encData;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_encodeOrder	../../source/common/frame.h	/^    int                    m_encodeOrder;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_encodeStartTime	../../source/common/frame.h	/^    int64_t                m_encodeStartTime;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_fencPic	../../source/common/frame.h	/^    PicYuv*                m_fencPic;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_forceqp	../../source/common/frame.h	/^    int32_t                m_forceqp;            \/\/ Force to use the qp specified in qp file$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_lowres	../../source/common/frame.h	/^    Lowres                 m_lowres;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_lowresInit	../../source/common/frame.h	/^    bool                   m_lowresInit;         \/\/ lowres init complete (pre-analysis)$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_next	../../source/common/frame.h	/^    Frame*                 m_next;               \/\/ PicList doubly linked list pointers$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_numRows	../../source/common/frame.h	/^    int32_t                m_numRows;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_param	../../source/common/frame.h	/^    x265_param*            m_param;              \/\/ Points to the latest param set for the frame.$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_poc	../../source/common/frame.h	/^    int                    m_poc;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_prev	../../source/common/frame.h	/^    Frame*                 m_prev;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_prevCtuInfoChange	../../source/common/frame.h	/^    int*                   m_prevCtuInfoChange;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_pts	../../source/common/frame.h	/^    int64_t                m_pts;                \/\/ user provided presentation time stamp$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_quantOffsets	../../source/common/frame.h	/^    float*                 m_quantOffsets;       \/\/ points to quantOffsets in x265_picture$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_rcData	../../source/common/frame.h	/^    RcStats*               m_rcData;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_reconColCount	../../source/common/frame.h	/^    ThreadSafeInteger*     m_reconColCount;      \/\/ count of CTU cols completely reconstructed and extended for motion reference$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_reconPic	../../source/common/frame.h	/^    PicYuv*                m_reconPic;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_reconRowFlag	../../source/common/frame.h	/^    ThreadSafeInteger*     m_reconRowFlag;       \/\/ flag of CTU rows completely reconstructed and extended for motion reference$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_reconfigureRc	../../source/common/frame.h	/^    bool                   m_reconfigureRc;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_reorderedPts	../../source/common/frame.h	/^    int64_t                m_reorderedPts;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_userData	../../source/common/frame.h	/^    void*                  m_userData;           \/\/ user provided pointer passed in with this picture$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::m_userSEI	../../source/common/frame.h	/^    x265_sei               m_userSEI;$/;"	m	class:X265_NS::Frame	access:public
X265_NS::Frame::reinit	../../source/common/frame.h	/^    void reinit(const SPS& sps);$/;"	p	class:X265_NS::Frame	access:public	signature:(const SPS& sps)
X265_NS::FrameData	../../source/common/framedata.h	/^class FrameData$/;"	c	namespace:X265_NS
X265_NS::FrameData::FrameData	../../source/common/framedata.h	/^    FrameData();$/;"	p	class:X265_NS::FrameData	access:public	signature:()
X265_NS::FrameData::PeriodicIR	../../source/common/framedata.h	/^    struct PeriodicIR$/;"	s	class:X265_NS::FrameData	access:public
X265_NS::FrameData::PeriodicIR::framesSinceLastPir	../../source/common/framedata.h	/^        int        framesSinceLastPir;$/;"	m	struct:X265_NS::FrameData::PeriodicIR	access:public
X265_NS::FrameData::PeriodicIR::pirEndCol	../../source/common/framedata.h	/^        uint32_t   pirEndCol;$/;"	m	struct:X265_NS::FrameData::PeriodicIR	access:public
X265_NS::FrameData::PeriodicIR::pirStartCol	../../source/common/framedata.h	/^        uint32_t   pirStartCol;$/;"	m	struct:X265_NS::FrameData::PeriodicIR	access:public
X265_NS::FrameData::RCStatCU	../../source/common/framedata.h	/^    struct RCStatCU$/;"	s	class:X265_NS::FrameData	access:public
X265_NS::FrameData::RCStatCU::avgCost	../../source/common/framedata.h	/^        uint64_t avgCost[4];    \/* stores the avg cost of CU's in frame for each depth *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
X265_NS::FrameData::RCStatCU::baseQp	../../source/common/framedata.h	/^        double   baseQp;        \/* Qp of Cu set from RateControl\/Vbv (only used by frame encoder) *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
X265_NS::FrameData::RCStatCU::count	../../source/common/framedata.h	/^        uint32_t count[4];      \/* count and avgCost only used by Analysis at RD0..4 *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
X265_NS::FrameData::RCStatCU::intraVbvCost	../../source/common/framedata.h	/^        uint32_t intraVbvCost;  \/* sum of lowres intra costs for 16x16 sub-blocks *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
X265_NS::FrameData::RCStatCU::totalBits	../../source/common/framedata.h	/^        uint32_t totalBits;     \/* total bits to encode this CTU *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
X265_NS::FrameData::RCStatCU::vbvCost	../../source/common/framedata.h	/^        uint32_t vbvCost;       \/* sum of lowres costs for 16x16 sub-blocks *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
X265_NS::FrameData::RCStatRow	../../source/common/framedata.h	/^    struct RCStatRow$/;"	s	class:X265_NS::FrameData	access:public
X265_NS::FrameData::RCStatRow::encodedBits	../../source/common/framedata.h	/^        uint32_t encodedBits;   \/* sum of 'totalBits' of encoded CTUs *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::intraSatdForVbv	../../source/common/framedata.h	/^        uint32_t intraSatdForVbv; \/* sum of lowres (estimated) intra costs for entire row *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::numEncodedCUs	../../source/common/framedata.h	/^        uint32_t numEncodedCUs; \/* ctuAddr of last encoded CTU in row *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::rowIntraSatd	../../source/common/framedata.h	/^        uint32_t rowIntraSatd;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::rowQp	../../source/common/framedata.h	/^        double   rowQp;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::rowQpScale	../../source/common/framedata.h	/^        double   rowQpScale;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::rowSatd	../../source/common/framedata.h	/^        uint32_t rowSatd;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::satdForVbv	../../source/common/framedata.h	/^        uint32_t satdForVbv;    \/* sum of lowres (estimated) costs for entire row *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::sumQpAq	../../source/common/framedata.h	/^        double   sumQpAq;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::RCStatRow::sumQpRc	../../source/common/framedata.h	/^        double   sumQpRc;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
X265_NS::FrameData::create	../../source/common/framedata.h	/^    bool create(const x265_param& param, const SPS& sps, int csp);$/;"	p	class:X265_NS::FrameData	access:public	signature:(const x265_param& param, const SPS& sps, int csp)
X265_NS::FrameData::destroy	../../source/common/framedata.h	/^    void destroy();$/;"	p	class:X265_NS::FrameData	access:public	signature:()
X265_NS::FrameData::getPicCTU	../../source/common/framedata.h	/^    inline CUData* getPicCTU(uint32_t ctuAddr) { return &m_picCTU[ctuAddr]; }$/;"	f	class:X265_NS::FrameData	access:public	signature:(uint32_t ctuAddr)
X265_NS::FrameData::m_avgQpAq	../../source/common/framedata.h	/^    double         m_avgQpAq;    \/* avg QP as decided by AQ in addition to rate-control *\/$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_avgQpRc	../../source/common/framedata.h	/^    double         m_avgQpRc;    \/* avg QP as decided by rate-control *\/$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_bHasReferences	../../source/common/framedata.h	/^    bool           m_bHasReferences;   \/* used during DPB\/RPS updates *\/$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_cuMemPool	../../source/common/framedata.h	/^    CUDataMemPool  m_cuMemPool;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_cuStat	../../source/common/framedata.h	/^    RCStatCU*      m_cuStat;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_frameEncoderID	../../source/common/framedata.h	/^    int            m_frameEncoderID;   \/* the ID of the FrameEncoder encoding this frame *\/$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_frameStats	../../source/common/framedata.h	/^    FrameStats     m_frameStats; \/\/ stats of current frame for multi-pass encodes$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_freeListNext	../../source/common/framedata.h	/^    FrameData*     m_freeListNext;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_jobProvider	../../source/common/framedata.h	/^    JobProvider*   m_jobProvider;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_meBuffer	../../source/common/framedata.h	/^    uint32_t*              m_meBuffer[INTEGRAL_PLANE_NUM];$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_meIntegral	../../source/common/framedata.h	/^    uint32_t*              m_meIntegral[INTEGRAL_PLANE_NUM];       \/\/ 12 integral planes for 32x32, 32x24, 32x8, 24x32, 16x16, 16x12, 16x4, 12x16, 8x32, 8x8, 4x16 and 4x4.$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_param	../../source/common/framedata.h	/^    const x265_param* m_param;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_picCTU	../../source/common/framedata.h	/^    CUData*        m_picCTU;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_picCsp	../../source/common/framedata.h	/^    int            m_picCsp;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_pir	../../source/common/framedata.h	/^    PeriodicIR     m_pir;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_rateFactor	../../source/common/framedata.h	/^    double         m_rateFactor; \/* calculated based on the Frame QP *\/$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_reconPic	../../source/common/framedata.h	/^    PicYuv*        m_reconPic;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_rowStat	../../source/common/framedata.h	/^    RCStatRow*     m_rowStat;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_saoParam	../../source/common/framedata.h	/^    SAOParam*      m_saoParam;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_slice	../../source/common/framedata.h	/^    Slice*         m_slice;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_spsrps	../../source/common/framedata.h	/^    RPS*           m_spsrps;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::m_spsrpsIdx	../../source/common/framedata.h	/^    int            m_spsrpsIdx;$/;"	m	class:X265_NS::FrameData	access:public
X265_NS::FrameData::reinit	../../source/common/framedata.h	/^    void reinit(const SPS& sps);$/;"	p	class:X265_NS::FrameData	access:public	signature:(const SPS& sps)
X265_NS::FrameEncoder	../../source/encoder/frameencoder.h	/^class FrameEncoder : public WaveFront, public Thread$/;"	c	namespace:X265_NS	inherits:WaveFront,Thread
X265_NS::FrameEncoder::FrameEncoder	../../source/encoder/frameencoder.cpp	/^FrameEncoder::FrameEncoder()$/;"	f	class:X265_NS::FrameEncoder	signature:()
X265_NS::FrameEncoder::FrameEncoder	../../source/encoder/frameencoder.h	/^    FrameEncoder();$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:()
X265_NS::FrameEncoder::WeightAnalysis	../../source/encoder/frameencoder.h	/^    class WeightAnalysis : public BondedTaskGroup$/;"	c	class:X265_NS::FrameEncoder	inherits:BondedTaskGroup	access:public
X265_NS::FrameEncoder::WeightAnalysis::WeightAnalysis	../../source/encoder/frameencoder.h	/^        WeightAnalysis(FrameEncoder& fe) : master(fe) {}$/;"	f	class:X265_NS::FrameEncoder::WeightAnalysis	access:public	signature:(FrameEncoder& fe)
X265_NS::FrameEncoder::WeightAnalysis::master	../../source/encoder/frameencoder.h	/^        FrameEncoder& master;$/;"	m	class:X265_NS::FrameEncoder::WeightAnalysis	access:public
X265_NS::FrameEncoder::WeightAnalysis::operator =	../../source/encoder/frameencoder.h	/^        WeightAnalysis operator=(const WeightAnalysis&);$/;"	p	class:X265_NS::FrameEncoder::WeightAnalysis	access:protected	signature:(const WeightAnalysis&)
X265_NS::FrameEncoder::WeightAnalysis::processTasks	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::WeightAnalysis::processTasks(int \/* workerThreadId *\/)$/;"	f	class:X265_NS::FrameEncoder::WeightAnalysis	signature:(int )
X265_NS::FrameEncoder::WeightAnalysis::processTasks	../../source/encoder/frameencoder.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::FrameEncoder::WeightAnalysis	access:public	signature:(int workerThreadId)
X265_NS::FrameEncoder::collectCTUStatistics	../../source/encoder/frameencoder.cpp	/^int FrameEncoder::collectCTUStatistics(const CUData& ctu, FrameStats* log)$/;"	f	class:X265_NS::FrameEncoder	signature:(const CUData& ctu, FrameStats* log)
X265_NS::FrameEncoder::collectCTUStatistics	../../source/encoder/frameencoder.h	/^    int  collectCTUStatistics(const CUData& ctu, FrameStats* frameLog);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(const CUData& ctu, FrameStats* frameLog)
X265_NS::FrameEncoder::compressFrame	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::compressFrame()$/;"	f	class:X265_NS::FrameEncoder	signature:()
X265_NS::FrameEncoder::compressFrame	../../source/encoder/frameencoder.h	/^    void compressFrame();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
X265_NS::FrameEncoder::destroy	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::destroy()$/;"	f	class:X265_NS::FrameEncoder	signature:()
X265_NS::FrameEncoder::destroy	../../source/encoder/frameencoder.h	/^    void destroy();$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:()
X265_NS::FrameEncoder::enableRowEncoder	../../source/encoder/frameencoder.h	/^    void enableRowEncoder(int row)  { WaveFront::enableRow(row * 2 + 0); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
X265_NS::FrameEncoder::enableRowFilter	../../source/encoder/frameencoder.h	/^    void enableRowFilter(int row)   { WaveFront::enableRow(row * 2 + 1); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
X265_NS::FrameEncoder::encodeSlice	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::encodeSlice(uint32_t sliceAddr)$/;"	f	class:X265_NS::FrameEncoder	signature:(uint32_t sliceAddr)
X265_NS::FrameEncoder::encodeSlice	../../source/encoder/frameencoder.h	/^    void encodeSlice(uint32_t sliceAddr);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(uint32_t sliceAddr)
X265_NS::FrameEncoder::enqueueRowEncoder	../../source/encoder/frameencoder.h	/^    void enqueueRowEncoder(int row) { WaveFront::enqueueRow(row * 2 + 0); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
X265_NS::FrameEncoder::enqueueRowFilter	../../source/encoder/frameencoder.h	/^    void enqueueRowFilter(int row)  { WaveFront::enqueueRow(row * 2 + 1); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
X265_NS::FrameEncoder::getEncodedPicture	../../source/encoder/frameencoder.cpp	/^Frame *FrameEncoder::getEncodedPicture(NALList& output)$/;"	f	class:X265_NS::FrameEncoder	signature:(NALList& output)
X265_NS::FrameEncoder::getEncodedPicture	../../source/encoder/frameencoder.h	/^    Frame *getEncodedPicture(NALList& list);$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:(NALList& list)
X265_NS::FrameEncoder::init	../../source/encoder/frameencoder.cpp	/^bool FrameEncoder::init(Encoder *top, int numRows, int numCols)$/;"	f	class:X265_NS::FrameEncoder	signature:(Encoder *top, int numRows, int numCols)
X265_NS::FrameEncoder::init	../../source/encoder/frameencoder.h	/^    virtual bool init(Encoder *top, int numRows, int numCols);$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:(Encoder *top, int numRows, int numCols)
X265_NS::FrameEncoder::initializeGeoms	../../source/encoder/frameencoder.cpp	/^bool FrameEncoder::initializeGeoms()$/;"	f	class:X265_NS::FrameEncoder	signature:()
X265_NS::FrameEncoder::initializeGeoms	../../source/encoder/frameencoder.h	/^    bool initializeGeoms();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
X265_NS::FrameEncoder::m_SSDU	../../source/encoder/frameencoder.h	/^    uint64_t                 m_SSDU;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_SSDV	../../source/encoder/frameencoder.h	/^    uint64_t                 m_SSDV;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_SSDY	../../source/encoder/frameencoder.h	/^    uint64_t                 m_SSDY;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_accessUnitBits	../../source/encoder/frameencoder.h	/^    uint64_t                 m_accessUnitBits;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_activeWorkerCount	../../source/encoder/frameencoder.h	/^    volatile int             m_activeWorkerCount;        \/\/ count of workers currently encoding or filtering CTUs$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_activeWorkerCountSamples	../../source/encoder/frameencoder.h	/^    volatile int             m_activeWorkerCountSamples; \/\/ count of times m_activeWorkerCount was sampled (think vbv restarts)$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_allRowsAvailableTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_allRowsAvailableTime;     \/\/ timestamp when all reference dependencies are resolved$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_bAllRowsStop	../../source/encoder/frameencoder.h	/^    volatile bool            m_bAllRowsStop;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_backupStreams	../../source/encoder/frameencoder.h	/^    Bitstream*               m_backupStreams;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_bs	../../source/encoder/frameencoder.h	/^    Bitstream                m_bs;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_checksum	../../source/encoder/frameencoder.h	/^    uint32_t                 m_checksum[3];$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_completionCount	../../source/encoder/frameencoder.h	/^    volatile int             m_completionCount;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_completionEvent	../../source/encoder/frameencoder.h	/^    Event                    m_completionEvent;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_countRowBlocks	../../source/encoder/frameencoder.h	/^    volatile int             m_countRowBlocks;           \/\/ count of workers forced to abandon a row because of top dependency$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_crc	../../source/encoder/frameencoder.h	/^    uint32_t                 m_crc[3];$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_ctuGeomMap	../../source/encoder/frameencoder.h	/^    uint32_t*                m_ctuGeomMap;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_cuGeoms	../../source/encoder/frameencoder.h	/^    CUGeom*                  m_cuGeoms;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_cuStats	../../source/encoder/frameencoder.h	/^    CUStats                  m_cuStats;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_done	../../source/encoder/frameencoder.h	/^    Event                    m_done;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_enable	../../source/encoder/frameencoder.h	/^    Event                    m_enable;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_endCompressTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_endCompressTime;          \/\/ timestamp after all CTUs are compressed$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_endFrameTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_endFrameTime;             \/\/ timestamp after RCEnd, NR updates, etc$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_entropyCoder	../../source/encoder/frameencoder.h	/^    Entropy                  m_entropyCoder;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_filterRowDelay	../../source/encoder/frameencoder.h	/^    uint32_t                 m_filterRowDelay;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_filterRowDelayCus	../../source/encoder/frameencoder.h	/^    uint32_t                 m_filterRowDelayCus;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_frame	../../source/encoder/frameencoder.h	/^    Frame*                   m_frame;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_frameFilter	../../source/encoder/frameencoder.h	/^    FrameFilter              m_frameFilter;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_initSliceContext	../../source/encoder/frameencoder.h	/^    Entropy                  m_initSliceContext;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_localTldIdx	../../source/encoder/frameencoder.h	/^    int                      m_localTldIdx;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_mref	../../source/encoder/frameencoder.h	/^    MotionReference          m_mref[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_nalList	../../source/encoder/frameencoder.h	/^    NALList                  m_nalList;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_nr	../../source/encoder/frameencoder.h	/^    NoiseReduction*          m_nr;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_numCols	../../source/encoder/frameencoder.h	/^    uint32_t                 m_numCols;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_numRows	../../source/encoder/frameencoder.h	/^    uint32_t                 m_numRows;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_outStreams	../../source/encoder/frameencoder.h	/^    Bitstream*               m_outStreams;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_param	../../source/encoder/frameencoder.h	/^    x265_param*              m_param;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_prevOutputTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_prevOutputTime;           \/\/ timestamp when prev frame was retrieved by API thread$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_rce	../../source/encoder/frameencoder.h	/^    RateControlEntry         m_rce;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_reconfigure	../../source/encoder/frameencoder.h	/^    bool                     m_reconfigure; \/* reconfigure in progress *\/$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_refLagRows	../../source/encoder/frameencoder.h	/^    uint32_t                 m_refLagRows;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_row0WaitTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_row0WaitTime;             \/\/ timestamp when row 0 is allowed to start$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_rows	../../source/encoder/frameencoder.h	/^    CTURow*                  m_rows;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_seiReconPictureDigest	../../source/encoder/frameencoder.h	/^    SEIDecodedPictureHash    m_seiReconPictureDigest;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_sliceAddrBits	../../source/encoder/frameencoder.h	/^    uint16_t                 m_sliceAddrBits;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_sliceBaseRow	../../source/encoder/frameencoder.h	/^    uint32_t*                m_sliceBaseRow;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_sliceGroupSize	../../source/encoder/frameencoder.h	/^    uint16_t                 m_sliceGroupSize;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_slicetypeWaitTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_slicetypeWaitTime;        \/\/ total elapsed time waiting for decided frame$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_ssim	../../source/encoder/frameencoder.h	/^    double                   m_ssim;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_ssimCnt	../../source/encoder/frameencoder.h	/^    uint32_t                 m_ssimCnt;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_stallStartTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_stallStartTime;           \/\/ timestamp when worker count becomes 0$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_startCompressTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_startCompressTime;        \/\/ timestamp when frame encoder is given a frame$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_state	../../source/encoder/frameencoder.h	/^    MD5Context               m_state[3];$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_substreamSizes	../../source/encoder/frameencoder.h	/^    uint32_t*                m_substreamSizes;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_threadActive	../../source/encoder/frameencoder.h	/^    volatile bool            m_threadActive;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_tld	../../source/encoder/frameencoder.h	/^    ThreadLocalData*         m_tld; \/* for --no-wpp *\/$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_top	../../source/encoder/frameencoder.h	/^    Encoder*                 m_top;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_totalActiveWorkerCount	../../source/encoder/frameencoder.h	/^    volatile int             m_totalActiveWorkerCount;   \/\/ sum of m_activeWorkerCount sampled at end of each CTU$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_totalNoWorkerTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_totalNoWorkerTime;        \/\/ total elapsed time without any active worker threads$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_totalWorkerElapsedTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_totalWorkerElapsedTime;   \/\/ total elapsed time spent by worker threads processing CTUs$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::m_vbvResetTriggerRow	../../source/encoder/frameencoder.h	/^    volatile int             m_vbvResetTriggerRow;$/;"	m	class:X265_NS::FrameEncoder	access:public
X265_NS::FrameEncoder::noiseReductionUpdate	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::noiseReductionUpdate()$/;"	f	class:X265_NS::FrameEncoder	signature:()
X265_NS::FrameEncoder::noiseReductionUpdate	../../source/encoder/frameencoder.h	/^    void noiseReductionUpdate();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
X265_NS::FrameEncoder::processRow	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::processRow(int row, int threadId)$/;"	f	class:X265_NS::FrameEncoder	signature:(int row, int threadId)
X265_NS::FrameEncoder::processRow	../../source/encoder/frameencoder.h	/^    virtual void processRow(int row, int threadId);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(int row, int threadId)
X265_NS::FrameEncoder::processRowEncoder	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::processRowEncoder(int intRow, ThreadLocalData& tld)$/;"	f	class:X265_NS::FrameEncoder	signature:(int intRow, ThreadLocalData& tld)
X265_NS::FrameEncoder::processRowEncoder	../../source/encoder/frameencoder.h	/^    virtual void processRowEncoder(int row, ThreadLocalData& tld);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(int row, ThreadLocalData& tld)
X265_NS::FrameEncoder::startCompressFrame	../../source/encoder/frameencoder.cpp	/^bool FrameEncoder::startCompressFrame(Frame* curFrame)$/;"	f	class:X265_NS::FrameEncoder	signature:(Frame* curFrame)
X265_NS::FrameEncoder::startCompressFrame	../../source/encoder/frameencoder.h	/^    bool startCompressFrame(Frame* curFrame);$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:(Frame* curFrame)
X265_NS::FrameEncoder::threadMain	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::threadMain()$/;"	f	class:X265_NS::FrameEncoder	signature:()
X265_NS::FrameEncoder::threadMain	../../source/encoder/frameencoder.h	/^    void threadMain();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
X265_NS::FrameEncoder::~FrameEncoder	../../source/encoder/frameencoder.h	/^    virtual ~FrameEncoder() {}$/;"	f	class:X265_NS::FrameEncoder	access:public	signature:()
X265_NS::FrameFilter	../../source/encoder/framefilter.h	/^class FrameFilter$/;"	c	namespace:X265_NS
X265_NS::FrameFilter::FrameFilter	../../source/encoder/framefilter.h	/^    FrameFilter()$/;"	f	class:X265_NS::FrameFilter	access:public	signature:()
X265_NS::FrameFilter::ParallelFilter	../../source/encoder/framefilter.h	/^    class ParallelFilter : public BondedTaskGroup, public Deblock$/;"	c	class:X265_NS::FrameFilter	inherits:BondedTaskGroup,Deblock	access:public
X265_NS::FrameFilter::ParallelFilter::ParallelFilter	../../source/encoder/framefilter.h	/^        ParallelFilter()$/;"	f	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:()
X265_NS::FrameFilter::ParallelFilter::copySaoAboveRef	../../source/encoder/framefilter.h	/^        void copySaoAboveRef(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col)
X265_NS::FrameFilter::ParallelFilter::getCUHeight	../../source/encoder/framefilter.h	/^        uint32_t getCUHeight() const$/;"	f	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:() const
X265_NS::FrameFilter::ParallelFilter::m_allowedCol	../../source/encoder/framefilter.h	/^        ThreadSafeInteger   m_allowedCol;       \/* The column that processed from Encode pipeline *\/$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_encData	../../source/encoder/framefilter.h	/^        FrameData*          m_encData;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_frameFilter	../../source/encoder/framefilter.h	/^        FrameFilter*        m_frameFilter;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_lastCol	../../source/encoder/framefilter.h	/^        ThreadSafeInteger   m_lastCol;          \/* The column that next to process *\/$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_lastDeblocked	../../source/encoder/framefilter.h	/^        ThreadSafeInteger   m_lastDeblocked;   \/* The column that finished all of Deblock stages  *\/$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_prevRow	../../source/encoder/framefilter.h	/^        ParallelFilter*     m_prevRow;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_row	../../source/encoder/framefilter.h	/^        int                 m_row;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_rowAddr	../../source/encoder/framefilter.h	/^        uint32_t            m_rowAddr;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_rowHeight	../../source/encoder/framefilter.h	/^        uint32_t            m_rowHeight;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::m_sao	../../source/encoder/framefilter.h	/^        SAO                 m_sao;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
X265_NS::FrameFilter::ParallelFilter::operator =	../../source/encoder/framefilter.h	/^        ParallelFilter operator=(const ParallelFilter&);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:protected	signature:(const ParallelFilter&)
X265_NS::FrameFilter::ParallelFilter::processPostCu	../../source/encoder/framefilter.h	/^        void processPostCu(int col) const;$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(int col) const
X265_NS::FrameFilter::ParallelFilter::processSaoCTU	../../source/encoder/framefilter.h	/^        void processSaoCTU(SAOParam *saoParam, int col);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(SAOParam *saoParam, int col)
X265_NS::FrameFilter::ParallelFilter::processTasks	../../source/encoder/framefilter.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(int workerThreadId)
X265_NS::FrameFilter::ParallelFilter::~ParallelFilter	../../source/encoder/framefilter.h	/^        ~ParallelFilter()$/;"	f	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:()
X265_NS::FrameFilter::computeMEIntegral	../../source/encoder/framefilter.h	/^    void computeMEIntegral(int row);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(int row)
X265_NS::FrameFilter::destroy	../../source/encoder/framefilter.h	/^    void destroy();$/;"	p	class:X265_NS::FrameFilter	access:public	signature:()
X265_NS::FrameFilter::getCUWidth	../../source/encoder/framefilter.h	/^    uint32_t getCUWidth(int colNum) const$/;"	f	class:X265_NS::FrameFilter	access:public	signature:(int colNum) const
X265_NS::FrameFilter::init	../../source/encoder/framefilter.h	/^    void init(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols)
X265_NS::FrameFilter::integralCompleted	../../source/encoder/framefilter.h	/^    ThreadSafeInteger integralCompleted;     \/* check if integral calculation is completed in this row *\/$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_frame	../../source/encoder/framefilter.h	/^    Frame*        m_frame;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_frameEncoder	../../source/encoder/framefilter.h	/^    FrameEncoder* m_frameEncoder;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_hChromaShift	../../source/encoder/framefilter.h	/^    int           m_hChromaShift;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_lastHeight	../../source/encoder/framefilter.h	/^    int           m_lastHeight;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_lastWidth	../../source/encoder/framefilter.h	/^    int           m_lastWidth;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_numCols	../../source/encoder/framefilter.h	/^    int           m_numCols;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_numRows	../../source/encoder/framefilter.h	/^    int           m_numRows;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_pad	../../source/encoder/framefilter.h	/^    int           m_pad[2];$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_parallelFilter	../../source/encoder/framefilter.h	/^    ParallelFilter*     m_parallelFilter;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_param	../../source/encoder/framefilter.h	/^    x265_param*   m_param;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_saoRowDelay	../../source/encoder/framefilter.h	/^    int           m_saoRowDelay;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_ssimBuf	../../source/encoder/framefilter.h	/^    void*         m_ssimBuf;        \/* Temp storage for ssim computation *\/$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::m_vChromaShift	../../source/encoder/framefilter.h	/^    int           m_vChromaShift;$/;"	m	class:X265_NS::FrameFilter	access:public
X265_NS::FrameFilter::processPostRow	../../source/encoder/framefilter.h	/^    void processPostRow(int row);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(int row)
X265_NS::FrameFilter::processRow	../../source/encoder/framefilter.h	/^    void processRow(int row);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(int row)
X265_NS::FrameFilter::start	../../source/encoder/framefilter.h	/^    void start(Frame *pic, Entropy& initState);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(Frame *pic, Entropy& initState)
X265_NS::FrameStats	../../source/common/framedata.h	/^struct FrameStats$/;"	s	namespace:X265_NS
X265_NS::FrameStats::FrameStats	../../source/common/framedata.h	/^    FrameStats()$/;"	f	struct:X265_NS::FrameStats	access:public	signature:()
X265_NS::FrameStats::avgChromaDistortion	../../source/common/framedata.h	/^    double      avgChromaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::avgLumaDistortion	../../source/common/framedata.h	/^    double      avgLumaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::avgPsyEnergy	../../source/common/framedata.h	/^    double      avgPsyEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::avgResEnergy	../../source/common/framedata.h	/^    double      avgResEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::avgSsimEnergy	../../source/common/framedata.h	/^    double      avgSsimEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::chromaDistortion	../../source/common/framedata.h	/^    uint64_t    chromaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cnt4x4	../../source/common/framedata.h	/^    uint64_t    cnt4x4;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntAmp	../../source/common/framedata.h	/^    uint64_t    cntAmp[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntInter	../../source/common/framedata.h	/^    uint64_t    cntInter[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntInterPu	../../source/common/framedata.h	/^    uint64_t    cntInterPu[NUM_CU_DEPTH][INTER_MODES - 1];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntIntra	../../source/common/framedata.h	/^    uint64_t    cntIntra[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntIntraNxN	../../source/common/framedata.h	/^    uint64_t    cntIntraNxN;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntIntraPu	../../source/common/framedata.h	/^    uint64_t    cntIntraPu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntMergeCu	../../source/common/framedata.h	/^    uint64_t    cntMergeCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntMergePu	../../source/common/framedata.h	/^    uint64_t    cntMergePu[NUM_CU_DEPTH][INTER_MODES - 1];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntSkipCu	../../source/common/framedata.h	/^    uint64_t    cntSkipCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cntSkipPu	../../source/common/framedata.h	/^    uint64_t    cntSkipPu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::coeffBits	../../source/common/framedata.h	/^    int         coeffBits; \/* Texture bits (DCT coefs) *\/$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cuInterDistribution	../../source/common/framedata.h	/^    uint64_t    cuInterDistribution[NUM_CU_DEPTH][INTER_MODES];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::cuIntraDistribution	../../source/common/framedata.h	/^    uint64_t    cuIntraDistribution[NUM_CU_DEPTH][INTRA_MODES];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::inter8x8Cnt	../../source/common/framedata.h	/^    int         inter8x8Cnt;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::intra8x8Cnt	../../source/common/framedata.h	/^    int         intra8x8Cnt;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::ipCostRatio	../../source/common/framedata.h	/^    double      ipCostRatio;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::lumaDistortion	../../source/common/framedata.h	/^    uint64_t    lumaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::miscBits	../../source/common/framedata.h	/^    int         miscBits;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::mvBits	../../source/common/framedata.h	/^    int         mvBits;    \/* MV bits (MV+Ref+Block Type) *\/$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percent8x8Inter	../../source/common/framedata.h	/^    double      percent8x8Inter;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percent8x8Intra	../../source/common/framedata.h	/^    double      percent8x8Intra;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percent8x8Skip	../../source/common/framedata.h	/^    double      percent8x8Skip;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percentInterDistribution	../../source/common/framedata.h	/^    double      percentInterDistribution[NUM_CU_DEPTH][3];           \/\/ 2Nx2N, RECT, AMP modes percentage$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percentIntraDistribution	../../source/common/framedata.h	/^    double      percentIntraDistribution[NUM_CU_DEPTH][INTRA_MODES];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percentIntraNxN	../../source/common/framedata.h	/^    double      percentIntraNxN;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percentMergeCu	../../source/common/framedata.h	/^    double      percentMergeCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::percentSkipCu	../../source/common/framedata.h	/^    double      percentSkipCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::psyEnergy	../../source/common/framedata.h	/^    uint64_t    psyEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::resEnergy	../../source/common/framedata.h	/^    uint64_t    resEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::skip8x8Cnt	../../source/common/framedata.h	/^    int         skip8x8Cnt;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::ssimEnergy	../../source/common/framedata.h	/^    int64_t     ssimEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::totalCtu	../../source/common/framedata.h	/^    uint64_t    totalCtu;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::totalCu	../../source/common/framedata.h	/^    uint64_t    totalCu;$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::FrameStats::totalPu	../../source/common/framedata.h	/^    uint64_t    totalPu[NUM_CU_DEPTH + 1];$/;"	m	struct:X265_NS::FrameStats	access:public
X265_NS::HRDInfo	../../source/common/slice.h	/^struct HRDInfo$/;"	s	namespace:X265_NS
X265_NS::HRDInfo::HRDInfo	../../source/common/slice.h	/^    HRDInfo()$/;"	f	struct:X265_NS::HRDInfo	access:public	signature:()
X265_NS::HRDInfo::bitRateScale	../../source/common/slice.h	/^    uint32_t bitRateScale;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::bitRateValue	../../source/common/slice.h	/^    uint32_t bitRateValue;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::cbrFlag	../../source/common/slice.h	/^    bool     cbrFlag;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::cpbRemovalDelayLength	../../source/common/slice.h	/^    uint32_t cpbRemovalDelayLength;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::cpbSizeScale	../../source/common/slice.h	/^    uint32_t cpbSizeScale;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::cpbSizeValue	../../source/common/slice.h	/^    uint32_t cpbSizeValue;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::dpbOutputDelayLength	../../source/common/slice.h	/^    uint32_t dpbOutputDelayLength;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDInfo::initialCpbRemovalDelayLength	../../source/common/slice.h	/^    uint32_t initialCpbRemovalDelayLength;$/;"	m	struct:X265_NS::HRDInfo	access:public
X265_NS::HRDTiming	../../source/encoder/ratecontrol.h	/^struct HRDTiming$/;"	s	namespace:X265_NS
X265_NS::HRDTiming::cpbFinalAT	../../source/encoder/ratecontrol.h	/^    double cpbFinalAT;$/;"	m	struct:X265_NS::HRDTiming	access:public
X265_NS::HRDTiming::cpbInitialAT	../../source/encoder/ratecontrol.h	/^    double cpbInitialAT;$/;"	m	struct:X265_NS::HRDTiming	access:public
X265_NS::HRDTiming::cpbRemovalTime	../../source/encoder/ratecontrol.h	/^    double cpbRemovalTime;$/;"	m	struct:X265_NS::HRDTiming	access:public
X265_NS::HRDTiming::dpbOutputTime	../../source/encoder/ratecontrol.h	/^    double dpbOutputTime;$/;"	m	struct:X265_NS::HRDTiming	access:public
X265_NS::INIT_ABS_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_ABS_FLAG[3][NUM_ABS_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_CHROMA_PRED_MODE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_CHROMA_PRED_MODE[3][NUM_CHROMA_PRED_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_CU_TRANSQUANT_BYPASS_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_CU_TRANSQUANT_BYPASS_FLAG[3][NUM_TQUANT_BYPASS_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_DQP	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_DQP[3][NUM_DELTA_QP_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_INTER_DIR	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_INTER_DIR[3][NUM_INTER_DIR_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_INTRA_PRED_MODE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_INTRA_PRED_MODE[3][NUM_ADI_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_LAST	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_LAST[3][NUM_CTX_LAST_FLAG_XY] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_MERGE_FLAG_EXT	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MERGE_FLAG_EXT[3][NUM_MERGE_FLAG_EXT_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_MERGE_IDX_EXT	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MERGE_IDX_EXT[3][NUM_MERGE_IDX_EXT_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_MVD	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MVD[3][NUM_MV_RES_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_MVP_IDX	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_MVP_IDX[3][NUM_MVP_IDX_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_ONE_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_ONE_FLAG[3][NUM_ONE_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_PART_SIZE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_PART_SIZE[3][NUM_PART_SIZE_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_PRED_MODE	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_PRED_MODE[3][NUM_PRED_MODE_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_QT_CBF	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_QT_CBF[3][NUM_QT_CBF_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_QT_ROOT_CBF	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_QT_ROOT_CBF[3][NUM_QT_ROOT_CBF_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_REF_PIC	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_REF_PIC[3][NUM_REF_NO_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_SAO_MERGE_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SAO_MERGE_FLAG[3][NUM_SAO_MERGE_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_SAO_TYPE_IDX	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SAO_TYPE_IDX[3][NUM_SAO_TYPE_IDX_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_SIG_CG_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SIG_CG_FLAG[3][2 * NUM_SIG_CG_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_SIG_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SIG_FLAG[3][NUM_SIG_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_SKIP_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SKIP_FLAG[3][NUM_SKIP_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_SPLIT_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_SPLIT_FLAG[3][NUM_SPLIT_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_TRANSFORMSKIP_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_TRANSFORMSKIP_FLAG[3][2 * NUM_TRANSFORMSKIP_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INIT_TRANS_SUBDIV_FLAG	../../source/encoder/entropy.cpp	/^static const uint8_t INIT_TRANS_SUBDIV_FLAG[3][NUM_TRANS_SUBDIV_FLAG_CTX] =$/;"	m	namespace:X265_NS	file:
X265_NS::INTEGRAL_12	../../source/common/primitives.h	/^    INTEGRAL_12,$/;"	e	enum:X265_NS::IntegralSize
X265_NS::INTEGRAL_16	../../source/common/primitives.h	/^    INTEGRAL_16,$/;"	e	enum:X265_NS::IntegralSize
X265_NS::INTEGRAL_24	../../source/common/primitives.h	/^    INTEGRAL_24,$/;"	e	enum:X265_NS::IntegralSize
X265_NS::INTEGRAL_32	../../source/common/primitives.h	/^    INTEGRAL_32,$/;"	e	enum:X265_NS::IntegralSize
X265_NS::INTEGRAL_4	../../source/common/primitives.h	/^    INTEGRAL_4,$/;"	e	enum:X265_NS::IntegralSize
X265_NS::INTEGRAL_8	../../source/common/primitives.h	/^    INTEGRAL_8,$/;"	e	enum:X265_NS::IntegralSize
X265_NS::INVALID_SLICE_PRIORITY	../../source/common/threadpool.h	/^enum { INVALID_SLICE_PRIORITY = 10 }; \/\/ a value larger than any X265_TYPE_* macro$/;"	e	enum:X265_NS::__anon20
X265_NS::I_SLICE	../../source/common/slice.h	/^    I_SLICE$/;"	e	enum:X265_NS::SliceType
X265_NS::InputFile	../../source/input/input.h	/^class InputFile$/;"	c	namespace:X265_NS
X265_NS::InputFile::InputFile	../../source/input/input.h	/^    InputFile()           {}$/;"	f	class:X265_NS::InputFile	access:public	signature:()
X265_NS::InputFile::getHeight	../../source/input/input.h	/^    virtual int getHeight() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
X265_NS::InputFile::getName	../../source/input/input.h	/^    virtual const char *getName() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
X265_NS::InputFile::getWidth	../../source/input/input.h	/^    virtual int getWidth() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
X265_NS::InputFile::isEof	../../source/input/input.h	/^    virtual bool isEof() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
X265_NS::InputFile::isFail	../../source/input/input.h	/^    virtual bool isFail() = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:()
X265_NS::InputFile::open	../../source/input/input.h	/^    static InputFile* open(InputFileInfo& info, bool bForceY4m);$/;"	p	class:X265_NS::InputFile	access:public	signature:(InputFileInfo& info, bool bForceY4m)
X265_NS::InputFile::readPicture	../../source/input/input.h	/^    virtual bool readPicture(x265_picture& pic) = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:(x265_picture& pic)
X265_NS::InputFile::release	../../source/input/input.h	/^    virtual void release() = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:()
X265_NS::InputFile::startReader	../../source/input/input.h	/^    virtual void startReader() = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:()
X265_NS::InputFile::~InputFile	../../source/input/input.h	/^    virtual ~InputFile()  {}$/;"	f	class:X265_NS::InputFile	access:protected	signature:()
X265_NS::InputFileInfo	../../source/input/input.h	/^struct InputFileInfo$/;"	s	namespace:X265_NS
X265_NS::InputFileInfo::csp	../../source/input/input.h	/^    int csp;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::depth	../../source/input/input.h	/^    int depth;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::filename	../../source/input/input.h	/^    const char *filename;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::fpsDenom	../../source/input/input.h	/^    int fpsDenom;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::fpsNum	../../source/input/input.h	/^    int fpsNum;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::frameCount	../../source/input/input.h	/^    int frameCount;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::height	../../source/input/input.h	/^    int height;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::sarHeight	../../source/input/input.h	/^    int sarHeight;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::sarWidth	../../source/input/input.h	/^    int sarWidth;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::skipFrames	../../source/input/input.h	/^    int skipFrames;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::timebaseDenom	../../source/input/input.h	/^    int timebaseDenom;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::timebaseNum	../../source/input/input.h	/^    int timebaseNum;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::InputFileInfo::width	../../source/input/input.h	/^    int width;$/;"	m	struct:X265_NS::InputFileInfo	access:public
X265_NS::IntegralSize	../../source/common/primitives.h	/^enum IntegralSize$/;"	g	namespace:X265_NS
X265_NS::InterNeighbourMV	../../source/common/cudata.h	/^struct InterNeighbourMV$/;"	s	namespace:X265_NS
X265_NS::InterNeighbourMV::__anon7::refIdx	../../source/common/cudata.h	/^    union { int16_t refIdx[2]; int32_t unifiedRef; };$/;"	m	union:X265_NS::InterNeighbourMV::__anon7	access:public
X265_NS::InterNeighbourMV::__anon7::unifiedRef	../../source/common/cudata.h	/^    union { int16_t refIdx[2]; int32_t unifiedRef; };$/;"	m	union:X265_NS::InterNeighbourMV::__anon7	access:public
X265_NS::InterNeighbourMV::cuAddr	../../source/common/cudata.h	/^    uint32_t cuAddr[2];$/;"	m	struct:X265_NS::InterNeighbourMV	access:public
X265_NS::InterNeighbourMV::mv	../../source/common/cudata.h	/^    MV mv[2];$/;"	m	struct:X265_NS::InterNeighbourMV	access:public
X265_NS::JobProvider	../../source/common/threadpool.h	/^class JobProvider$/;"	c	namespace:X265_NS
X265_NS::JobProvider::JobProvider	../../source/common/threadpool.h	/^    JobProvider()$/;"	f	class:X265_NS::JobProvider	access:public	signature:()
X265_NS::JobProvider::findJob	../../source/common/threadpool.h	/^    virtual void findJob(int workerThreadId) = 0;$/;"	p	class:X265_NS::JobProvider	access:public	signature:(int workerThreadId)
X265_NS::JobProvider::m_helpWanted	../../source/common/threadpool.h	/^    bool          m_helpWanted;$/;"	m	class:X265_NS::JobProvider	access:public
X265_NS::JobProvider::m_isFrameEncoder	../../source/common/threadpool.h	/^    bool          m_isFrameEncoder; \/* rather ugly hack, but nothing better presents itself *\/$/;"	m	class:X265_NS::JobProvider	access:public
X265_NS::JobProvider::m_jpId	../../source/common/threadpool.h	/^    int           m_jpId;$/;"	m	class:X265_NS::JobProvider	access:public
X265_NS::JobProvider::m_ownerBitmap	../../source/common/threadpool.h	/^    sleepbitmap_t m_ownerBitmap;$/;"	m	class:X265_NS::JobProvider	access:public
X265_NS::JobProvider::m_pool	../../source/common/threadpool.h	/^    ThreadPool*   m_pool;$/;"	m	class:X265_NS::JobProvider	access:public
X265_NS::JobProvider::m_sliceType	../../source/common/threadpool.h	/^    int           m_sliceType;$/;"	m	class:X265_NS::JobProvider	access:public
X265_NS::JobProvider::tryWakeOne	../../source/common/threadpool.cpp	/^void JobProvider::tryWakeOne()$/;"	f	class:X265_NS::JobProvider	signature:()
X265_NS::JobProvider::tryWakeOne	../../source/common/threadpool.h	/^    void tryWakeOne();$/;"	p	class:X265_NS::JobProvider	access:public	signature:()
X265_NS::JobProvider::~JobProvider	../../source/common/threadpool.h	/^    virtual ~JobProvider() {}$/;"	f	class:X265_NS::JobProvider	access:public	signature:()
X265_NS::LUMA_12x16	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_16x12	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_16x16	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_16x32	../../source/common/primitives.h	/^    LUMA_32x16, LUMA_16x32,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_16x4	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_16x64	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_16x8	../../source/common/primitives.h	/^    LUMA_16x8,  LUMA_8x16,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_24x32	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_32x16	../../source/common/primitives.h	/^    LUMA_32x16, LUMA_16x32,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_32x24	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_32x32	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_32x64	../../source/common/primitives.h	/^    LUMA_64x32, LUMA_32x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_32x8	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_48x64	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_4x16	../../source/common/primitives.h	/^    LUMA_16x12, LUMA_12x16, LUMA_16x4,  LUMA_4x16,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_4x4	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_4x8	../../source/common/primitives.h	/^    LUMA_8x4,   LUMA_4x8,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_64x16	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_64x32	../../source/common/primitives.h	/^    LUMA_64x32, LUMA_32x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_64x48	../../source/common/primitives.h	/^    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_64x64	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_8x16	../../source/common/primitives.h	/^    LUMA_16x8,  LUMA_8x16,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_8x32	../../source/common/primitives.h	/^    LUMA_32x24, LUMA_24x32, LUMA_32x8,  LUMA_8x32,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_8x4	../../source/common/primitives.h	/^    LUMA_8x4,   LUMA_4x8,$/;"	e	enum:X265_NS::LumaPU
X265_NS::LUMA_8x8	../../source/common/primitives.h	/^    LUMA_4x4,   LUMA_8x8,   LUMA_16x16, LUMA_32x32, LUMA_64x64,$/;"	e	enum:X265_NS::LumaPU
X265_NS::Level	../../source/common/slice.h	/^namespace Level {$/;"	n	namespace:X265_NS
X265_NS::Level::HIGH	../../source/common/slice.h	/^        HIGH = 1,$/;"	e	enum:X265_NS::Level::Tier
X265_NS::Level::LEVEL1	../../source/common/slice.h	/^        LEVEL1 = 30,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL2	../../source/common/slice.h	/^        LEVEL2 = 60,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL2_1	../../source/common/slice.h	/^        LEVEL2_1 = 63,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL3	../../source/common/slice.h	/^        LEVEL3 = 90,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL3_1	../../source/common/slice.h	/^        LEVEL3_1 = 93,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL4	../../source/common/slice.h	/^        LEVEL4 = 120,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL4_1	../../source/common/slice.h	/^        LEVEL4_1 = 123,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL5	../../source/common/slice.h	/^        LEVEL5 = 150,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL5_1	../../source/common/slice.h	/^        LEVEL5_1 = 153,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL5_2	../../source/common/slice.h	/^        LEVEL5_2 = 156,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL6	../../source/common/slice.h	/^        LEVEL6 = 180,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL6_1	../../source/common/slice.h	/^        LEVEL6_1 = 183,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL6_2	../../source/common/slice.h	/^        LEVEL6_2 = 186,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::LEVEL8_5	../../source/common/slice.h	/^        LEVEL8_5 = 255,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::MAIN	../../source/common/slice.h	/^        MAIN = 0,$/;"	e	enum:X265_NS::Level::Tier
X265_NS::Level::NONE	../../source/common/slice.h	/^        NONE = 0,$/;"	e	enum:X265_NS::Level::Name
X265_NS::Level::Name	../../source/common/slice.h	/^    enum Name$/;"	g	namespace:X265_NS::Level
X265_NS::Level::Tier	../../source/common/slice.h	/^    enum Tier$/;"	g	namespace:X265_NS::Level
X265_NS::LevelSpec	../../source/encoder/level.cpp	/^} LevelSpec;$/;"	t	namespace:X265_NS	typeref:struct:X265_NS::__anon13	file:
X265_NS::Lock	../../source/common/threading.h	/^class Lock$/;"	c	namespace:X265_NS
X265_NS::Lock::Lock	../../source/common/threading.h	/^    Lock()$/;"	f	class:X265_NS::Lock	access:public	signature:()
X265_NS::Lock::acquire	../../source/common/threading.h	/^    void acquire()$/;"	f	class:X265_NS::Lock	access:public	signature:()
X265_NS::Lock::handle	../../source/common/threading.h	/^    CRITICAL_SECTION handle;$/;"	m	class:X265_NS::Lock	access:protected
X265_NS::Lock::release	../../source/common/threading.h	/^    void release()$/;"	f	class:X265_NS::Lock	access:public	signature:()
X265_NS::Lock::~Lock	../../source/common/threading.h	/^    ~Lock()$/;"	f	class:X265_NS::Lock	access:public	signature:()
X265_NS::Lookahead	../../source/encoder/slicetype.h	/^class Lookahead : public JobProvider$/;"	c	namespace:X265_NS	inherits:JobProvider
X265_NS::Lookahead::Lookahead	../../source/encoder/slicetype.h	/^    Lookahead(x265_param *param, ThreadPool *pool);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(x265_param *param, ThreadPool *pool)
X265_NS::Lookahead::addPicture	../../source/encoder/slicetype.h	/^    void    addPicture(Frame&, int sliceType);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(Frame&, int sliceType)
X265_NS::Lookahead::analyzeSlicetypeTrellis	../../source/encoder/slicetype.h	/^    void    analyzeSlicetypeTrellis(Lowres **frames, int length, char(*best_paths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, \/*bool *pbStrongP,*\/ int &iLastUsed);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int length, char(*best_paths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, int &iLastUsed)
X265_NS::Lookahead::checkLookaheadQueue	../../source/encoder/slicetype.h	/^    void    checkLookaheadQueue(int &frameCnt);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(int &frameCnt)
X265_NS::Lookahead::create	../../source/encoder/slicetype.h	/^    bool    create();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
X265_NS::Lookahead::cuTree	../../source/encoder/slicetype.h	/^    void    cuTree(Lowres **frames, int numframes, bool bintra);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int numframes, bool bintra)
X265_NS::Lookahead::cuTreeFinish	../../source/encoder/slicetype.h	/^    void    cuTreeFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance)
X265_NS::Lookahead::cuTreeNonrefbFinish	../../source/encoder/slicetype.h	/^    void    cuTreeNonrefbFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance)
X265_NS::Lookahead::destroy	../../source/encoder/slicetype.h	/^    void    destroy();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
X265_NS::Lookahead::estimateCUPropagate	../../source/encoder/slicetype.h	/^    void    estimateCUPropagate(Lowres **frames, double average_duration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip=false);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, double average_duration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip=false)
X265_NS::Lookahead::findJob	../../source/encoder/slicetype.h	/^    void    findJob(int workerThreadID);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(int workerThreadID)
X265_NS::Lookahead::flush	../../source/encoder/slicetype.h	/^    void    flush();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
X265_NS::Lookahead::frameCostRecalculate	../../source/encoder/slicetype.h	/^    int64_t frameCostRecalculate(Lowres **frames, int p0, int p1, int b);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int p0, int p1, int b)
X265_NS::Lookahead::getDecidedPicture	../../source/encoder/slicetype.h	/^    Frame*  getDecidedPicture();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
X265_NS::Lookahead::getEstimatedPictureCost	../../source/encoder/slicetype.h	/^    void    getEstimatedPictureCost(Frame *pic);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(Frame *pic)
X265_NS::Lookahead::getWorkerStats	../../source/encoder/slicetype.h	/^    void          getWorkerStats(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount)
X265_NS::Lookahead::m_8x8Blocks	../../source/encoder/slicetype.h	/^    int           m_8x8Blocks;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_8x8Height	../../source/encoder/slicetype.h	/^    int           m_8x8Height;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_8x8Width	../../source/encoder/slicetype.h	/^    int           m_8x8Width;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_bAdaptiveQuant	../../source/encoder/slicetype.h	/^    bool          m_bAdaptiveQuant;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_bBatchFrameCosts	../../source/encoder/slicetype.h	/^    bool          m_bBatchFrameCosts;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_bBatchMotionSearch	../../source/encoder/slicetype.h	/^    bool          m_bBatchMotionSearch;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_countPreLookahead	../../source/encoder/slicetype.h	/^    uint64_t      m_countPreLookahead;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_countSlicetypeDecide	../../source/encoder/slicetype.h	/^    uint64_t      m_countSlicetypeDecide;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_cuCount	../../source/encoder/slicetype.h	/^    int           m_cuCount;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_cuTreeStrength	../../source/encoder/slicetype.h	/^    double        m_cuTreeStrength;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_filled	../../source/encoder/slicetype.h	/^    bool          m_filled;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_fullQueueSize	../../source/encoder/slicetype.h	/^    int           m_fullQueueSize;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_histogram	../../source/encoder/slicetype.h	/^    int           m_histogram[X265_BFRAME_MAX + 1];$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_inputLock	../../source/encoder/slicetype.h	/^    Lock          m_inputLock;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_inputQueue	../../source/encoder/slicetype.h	/^    PicList       m_inputQueue;      \/\/ input pictures in order received$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_isActive	../../source/encoder/slicetype.h	/^    bool          m_isActive;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_isSceneTransition	../../source/encoder/slicetype.h	/^    bool          m_isSceneTransition;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_lastKeyframe	../../source/encoder/slicetype.h	/^    int           m_lastKeyframe;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_lastNonB	../../source/encoder/slicetype.h	/^    Lowres*       m_lastNonB;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_numCoopSlices	../../source/encoder/slicetype.h	/^    int           m_numCoopSlices;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_numPools	../../source/encoder/slicetype.h	/^    int           m_numPools;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_numRowsPerSlice	../../source/encoder/slicetype.h	/^    int           m_numRowsPerSlice;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_outputLock	../../source/encoder/slicetype.h	/^    Lock          m_outputLock;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_outputQueue	../../source/encoder/slicetype.h	/^    PicList       m_outputQueue;     \/\/ pictures to be encoded, in encode order$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_outputSignal	../../source/encoder/slicetype.h	/^    Event         m_outputSignal;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_outputSignalRequired	../../source/encoder/slicetype.h	/^    bool          m_outputSignalRequired;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_param	../../source/encoder/slicetype.h	/^    x265_param*   m_param;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_preLookaheadElapsedTime	../../source/encoder/slicetype.h	/^    int64_t       m_preLookaheadElapsedTime;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_rateControl	../../source/encoder/slicetype.h	/^    RateControl*  m_rateControl;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_scratch	../../source/encoder/slicetype.h	/^    int*          m_scratch;         \/\/ temp buffer for cutree propagate$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_sliceTypeBusy	../../source/encoder/slicetype.h	/^    bool          m_sliceTypeBusy;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_slicetypeDecideElapsedTime	../../source/encoder/slicetype.h	/^    int64_t       m_slicetypeDecideElapsedTime;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_stationCuCost	../../source/encoder/slicetype.h	/^    uint64_t      m_stationCuCost;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_stationCuNum	../../source/encoder/slicetype.h	/^    uint64_t      m_stationCuNum;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_tld	../../source/encoder/slicetype.h	/^    LookaheadTLD* m_tld;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::m_totalCuNum	../../source/encoder/slicetype.h	/^    uint64_t      m_totalCuNum;$/;"	m	class:X265_NS::Lookahead	access:public
X265_NS::Lookahead::pyramidCutreeFinish	../../source/encoder/slicetype.h	/^    void    pyramidCutreeFinish(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb)
X265_NS::Lookahead::pyramidEstimateCUPropagate	../../source/encoder/slicetype.h	/^    void    pyramidEstimateCUPropagate(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip = false);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip = false)
X265_NS::Lookahead::pyramidEstimateFrameCost	../../source/encoder/slicetype.h	/^    void    pyramidEstimateFrameCost(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost=NULL);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost=NULL)
X265_NS::Lookahead::pyramidInsertBref	../../source/encoder/slicetype.h	/^    void    pyramidInsertBref(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum)
X265_NS::Lookahead::pyramidRatecontrolEstimateMinigop	../../source/encoder/slicetype.h	/^    void    pyramidRatecontrolEstimateMinigop(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt)
X265_NS::Lookahead::pyramidSetFrameOrderForEncode	../../source/encoder/slicetype.h	/^    void    pyramidSetFrameOrderForEncode(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx)
X265_NS::Lookahead::scenecut	../../source/encoder/slicetype.h	/^    bool    scenecut(Lowres **frames, int numFrames);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int numFrames)
X265_NS::Lookahead::slicetypeAnalyse	../../source/encoder/slicetype.h	/^    void    slicetypeAnalyse(Lowres **frames, bool bKeyframe);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, bool bKeyframe)
X265_NS::Lookahead::slicetypeDecide	../../source/encoder/slicetype.h	/^    void    slicetypeDecide();$/;"	p	class:X265_NS::Lookahead	access:protected	signature:()
X265_NS::Lookahead::stopJobs	../../source/encoder/slicetype.h	/^    void    stopJobs();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
X265_NS::Lookahead::vbvFrameCost	../../source/encoder/slicetype.h	/^    int64_t vbvFrameCost(Lowres **frames, int p0, int p1, int b);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int p0, int p1, int b)
X265_NS::Lookahead::vbvLookahead	../../source/encoder/slicetype.h	/^    void    vbvLookahead(Lowres **frames, int numFrames, int keyframes);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int numFrames, int keyframes)
X265_NS::LookaheadTLD	../../source/encoder/slicetype.h	/^struct LookaheadTLD$/;"	s	namespace:X265_NS
X265_NS::LookaheadTLD::LookaheadTLD	../../source/encoder/slicetype.h	/^    LookaheadTLD()$/;"	f	struct:X265_NS::LookaheadTLD	access:public	signature:()
X265_NS::LookaheadTLD::acEnergyCu	../../source/encoder/slicetype.h	/^    uint32_t acEnergyCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize)
X265_NS::LookaheadTLD::allocWeightedRef	../../source/encoder/slicetype.h	/^    bool     allocWeightedRef(Lowres& fenc);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Lowres& fenc)
X265_NS::LookaheadTLD::batchElapsedTime	../../source/encoder/slicetype.h	/^    int64_t         batchElapsedTime;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::calcAdaptiveQuantFrame	../../source/encoder/slicetype.h	/^    void calcAdaptiveQuantFrame(Frame *curFrame, x265_param* param);$/;"	p	struct:X265_NS::LookaheadTLD	access:public	signature:(Frame *curFrame, x265_param* param)
X265_NS::LookaheadTLD::coopSliceElapsedTime	../../source/encoder/slicetype.h	/^    int64_t         coopSliceElapsedTime;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::countBatches	../../source/encoder/slicetype.h	/^    uint64_t        countBatches;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::countCoopSlices	../../source/encoder/slicetype.h	/^    uint64_t        countCoopSlices;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::heightInCU	../../source/encoder/slicetype.h	/^    int             heightInCU;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::init	../../source/encoder/slicetype.h	/^    void init(int w, int h, int n)$/;"	f	struct:X265_NS::LookaheadTLD	access:public	signature:(int w, int h, int n)
X265_NS::LookaheadTLD::lowresIntraEstimate	../../source/encoder/slicetype.h	/^    void lowresIntraEstimate(Lowres& fenc, uint32_t qgSize);$/;"	p	struct:X265_NS::LookaheadTLD	access:public	signature:(Lowres& fenc, uint32_t qgSize)
X265_NS::LookaheadTLD::lumaSumCu	../../source/encoder/slicetype.h	/^    uint32_t lumaSumCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize)
X265_NS::LookaheadTLD::me	../../source/encoder/slicetype.h	/^    MotionEstimate  me;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::ncu	../../source/encoder/slicetype.h	/^    int             ncu;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::paddedLines	../../source/encoder/slicetype.h	/^    int             paddedLines;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::wbuffer	../../source/encoder/slicetype.h	/^    pixel*          wbuffer[4];$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::weightCostLuma	../../source/encoder/slicetype.h	/^    uint32_t weightCostLuma(Lowres& fenc, Lowres& ref, WeightParam& wp);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Lowres& fenc, Lowres& ref, WeightParam& wp)
X265_NS::LookaheadTLD::weightsAnalyse	../../source/encoder/slicetype.h	/^    void weightsAnalyse(Lowres& fenc, Lowres& ref);$/;"	p	struct:X265_NS::LookaheadTLD	access:public	signature:(Lowres& fenc, Lowres& ref)
X265_NS::LookaheadTLD::widthInCU	../../source/encoder/slicetype.h	/^    int             widthInCU;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
X265_NS::LookaheadTLD::~LookaheadTLD	../../source/encoder/slicetype.h	/^    ~LookaheadTLD() { X265_FREE(wbuffer[0]); }$/;"	f	struct:X265_NS::LookaheadTLD	access:public	signature:()
X265_NS::Lowres	../../source/common/lowres.h	/^struct Lowres : public ReferencePlanes$/;"	s	namespace:X265_NS	inherits:ReferencePlanes
X265_NS::Lowres::bKeyframe	../../source/common/lowres.h	/^    bool   bKeyframe;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bLastMiniGopBFrame	../../source/common/lowres.h	/^    bool   bLastMiniGopBFrame;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bLowresCnt	../../source/common/lowres.h	/^    int       bLowresCnt;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bLowresCostSum	../../source/common/lowres.h	/^    int64_t   bLowresCostSum;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bPframeAnteriorIframe	../../source/common/lowres.h	/^    bool   bPframeAnteriorIframe;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bPotentialScenecutAfterPattern	../../source/common/lowres.h	/^    bool   bPotentialScenecutAfterPattern;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bScenecut	../../source/common/lowres.h	/^    bool   bScenecut;        \/\/ Set to false if the frame cannot possibly be part of a real scenecut.$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bfLowresCnt	../../source/common/lowres.h	/^    int       bfLowresCnt;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bfLowresCostSum	../../source/common/lowres.h	/^    int64_t   bfLowresCostSum;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::bframes	../../source/common/lowres.h	/^    int       bframes;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::blockVariance	../../source/common/lowres.h	/^    uint32_t* blockVariance;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::buffer	../../source/common/lowres.h	/^    pixel *buffer[4];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::costEst	../../source/common/lowres.h	/^    int64_t   costEst[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::costEstAq	../../source/common/lowres.h	/^    int64_t   costEstAq[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::create	../../source/common/lowres.h	/^    bool create(PicYuv *origPic, int _bframes, bool bAqEnabled, uint32_t qgSize);$/;"	p	struct:X265_NS::Lowres	access:public	signature:(PicYuv *origPic, int _bframes, bool bAqEnabled, uint32_t qgSize)
X265_NS::Lowres::destroy	../../source/common/lowres.h	/^    void destroy();$/;"	p	struct:X265_NS::Lowres	access:public	signature:()
X265_NS::Lowres::frameNum	../../source/common/lowres.h	/^    int    frameNum;         \/\/ Presentation frame number$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::frameVariance	../../source/common/lowres.h	/^    uint64_t  frameVariance;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::hcQpOffset	../../source/common/lowres.h	/^    double hcQpOffset;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::indB	../../source/common/lowres.h	/^    int       indB;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::init	../../source/common/lowres.h	/^    void init(PicYuv *origPic, int poc);$/;"	p	struct:X265_NS::Lowres	access:public	signature:(PicYuv *origPic, int poc)
X265_NS::Lowres::intraCost	../../source/common/lowres.h	/^    int32_t*  intraCost;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::intraMbs	../../source/common/lowres.h	/^    int       intraMbs[X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::intraMode	../../source/common/lowres.h	/^    uint8_t*  intraMode;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::invQscaleFactor	../../source/common/lowres.h	/^    int*      invQscaleFactor; \/\/ qScale values for qp Aq Offsets$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::invQscaleFactor8x8	../../source/common/lowres.h	/^    int*      invQscaleFactor8x8; \/\/ temporary buffer for qg-size 8$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::ipCostRatio	../../source/common/lowres.h	/^    double ipCostRatio;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::leadingBframes	../../source/common/lowres.h	/^    int    leadingBframes;   \/\/ number of leading B frames for P or I$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::lines	../../source/common/lowres.h	/^    int    lines;            \/\/ height of lowres frame in pixel lines$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::lowresCostForRc	../../source/common/lowres.h	/^    uint16_t* lowresCostForRc;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::lowresCosts	../../source/common/lowres.h	/^    uint16_t(*lowresCosts[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2]);$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::lowresMvCosts	../../source/common/lowres.h	/^    int32_t*  lowresMvCosts[2][X265_BFRAME_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::lowresMvs	../../source/common/lowres.h	/^    MV*       lowresMvs[2][X265_BFRAME_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::maxBlocksInCol	../../source/common/lowres.h	/^    uint32_t  maxBlocksInCol;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::maxBlocksInColFullRes	../../source/common/lowres.h	/^    uint32_t  maxBlocksInColFullRes;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::maxBlocksInRow	../../source/common/lowres.h	/^    uint32_t  maxBlocksInRow;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::maxBlocksInRowFullRes	../../source/common/lowres.h	/^    uint32_t  maxBlocksInRowFullRes;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::miniGopBCost	../../source/common/lowres.h	/^    int64_t   miniGopBCost[MAX_TLAYER];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::miniGopBCostAq	../../source/common/lowres.h	/^    int64_t   miniGopBCostAq[MAX_TLAYER];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::miniGopNum	../../source/common/lowres.h	/^    int       miniGopNum;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::miniGopPCost	../../source/common/lowres.h	/^    int64_t   miniGopPCost;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::miniGopPCostAq	../../source/common/lowres.h	/^    int64_t   miniGopPCostAq;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::pLowresCnt	../../source/common/lowres.h	/^    int       pLowresCnt;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::pLowresCostSum	../../source/common/lowres.h	/^    int64_t   pLowresCostSum;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::pbFactor	../../source/common/lowres.h	/^    double pbFactor;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::pbQpOffset	../../source/common/lowres.h	/^    double pbQpOffset;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::plannedSatd	../../source/common/lowres.h	/^    int64_t   plannedSatd[X265_LOOKAHEAD_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::plannedType	../../source/common/lowres.h	/^    int       plannedType[X265_LOOKAHEAD_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::propagateCost	../../source/common/lowres.h	/^    uint16_t* propagateCost;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::propagateRatio	../../source/common/lowres.h	/^    double propagateRatio;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::qpAqOffset	../../source/common/lowres.h	/^    double*   qpAqOffset;      \/\/ AQ QP offset values for each 16x16 CU$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::qpCuTreeOffset	../../source/common/lowres.h	/^    double*   qpCuTreeOffset;  \/\/ cuTree QP offset values for each 16x16 CU$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::qpCuTreeOffsetPure	../../source/common/lowres.h	/^    double*   qpCuTreeOffsetPure;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::qpOffsetAvg	../../source/common/lowres.h	/^    double qpOffsetAvg;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::qpOffsetCutreeAvg	../../source/common/lowres.h	/^    double qpOffsetCutreeAvg;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::rowSatds	../../source/common/lowres.h	/^    int32_t*  rowSatds[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::satdCost	../../source/common/lowres.h	/^    int64_t   satdCost;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::sliceType	../../source/common/lowres.h	/^    int    sliceType;        \/\/ Slice type decided by lookahead$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::sliceTypeTmp	../../source/common/lowres.h	/^    int    sliceTypeTmp;     \/\/ used for init QP estimation$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::stationCURatio	../../source/common/lowres.h	/^    double stationCURatio;$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::temporalLayer	../../source/common/lowres.h	/^    int    temporalLayer;    \/\/temporal layer id for hierarchical B structure$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::weightedCostDelta	../../source/common/lowres.h	/^    double    weightedCostDelta[X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::weightedRef	../../source/common/lowres.h	/^    ReferencePlanes weightedRef[X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::width	../../source/common/lowres.h	/^    int    width;            \/\/ width of lowres frame in pixels$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::wp_ssd	../../source/common/lowres.h	/^    uint64_t  wp_ssd[3];       \/\/ This is different than SSDY, this is sum(pixel^2) - sum(pixel)^2 for entire frame$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::Lowres::wp_sum	../../source/common/lowres.h	/^    uint64_t  wp_sum[3];$/;"	m	struct:X265_NS::Lowres	access:public
X265_NS::LumaCU	../../source/common/primitives.h	/^enum LumaCU \/\/ can be indexed using log2n(width)-2$/;"	g	namespace:X265_NS
X265_NS::LumaPU	../../source/common/primitives.h	/^enum LumaPU$/;"	g	namespace:X265_NS
X265_NS::MAX_NUM_COMPONENT	../../source/common/common.h	/^    MAX_NUM_COMPONENT = 3$/;"	e	enum:X265_NS::TextType
X265_NS::MAX_NUM_SAO_TYPE	../../source/encoder/sao.h	/^    MAX_NUM_SAO_TYPE$/;"	e	enum:X265_NS::SAOType
X265_NS::MAX_POOL_THREADS	../../source/common/threadpool.h	/^enum { MAX_POOL_THREADS = sizeof(sleepbitmap_t) * 8 };$/;"	e	enum:X265_NS::__anon19
X265_NS::MD5	../../source/common/md5.h	/^class MD5$/;"	c	namespace:X265_NS
X265_NS::MD5::MD5	../../source/common/md5.h	/^    MD5()$/;"	f	class:X265_NS::MD5	access:public	signature:()
X265_NS::MD5::finalize	../../source/common/md5.h	/^    void finalize(unsigned char digest[16])$/;"	f	class:X265_NS::MD5	access:public	signature:(unsigned char digest[16])
X265_NS::MD5::m_state	../../source/common/md5.h	/^    MD5Context m_state;$/;"	m	class:X265_NS::MD5	access:private
X265_NS::MD5::update	../../source/common/md5.h	/^    void update(unsigned char *buf, unsigned len)$/;"	f	class:X265_NS::MD5	access:public	signature:(unsigned char *buf, unsigned len)
X265_NS::MD5Context	../../source/common/md5.h	/^typedef struct MD5Context$/;"	s	namespace:X265_NS
X265_NS::MD5Context	../../source/common/md5.h	/^} MD5Context;$/;"	t	namespace:X265_NS	typeref:struct:X265_NS::MD5Context
X265_NS::MD5Context::bits	../../source/common/md5.h	/^    uint32_t bits[2];$/;"	m	struct:X265_NS::MD5Context	access:public
X265_NS::MD5Context::buf	../../source/common/md5.h	/^    uint32_t buf[4];$/;"	m	struct:X265_NS::MD5Context	access:public
X265_NS::MD5Context::in	../../source/common/md5.h	/^    unsigned char in[64];$/;"	m	struct:X265_NS::MD5Context	access:public
X265_NS::MD5Final	../../source/common/md5.cpp	/^void MD5Final(MD5Context *ctx, uint8_t *digest)$/;"	f	namespace:X265_NS	signature:(MD5Context *ctx, uint8_t *digest)
X265_NS::MD5Final	../../source/common/md5.h	/^void MD5Final(MD5Context *ctx, uint8_t *digest);$/;"	p	namespace:X265_NS	signature:(MD5Context *ctx, uint8_t *digest)
X265_NS::MD5Init	../../source/common/md5.cpp	/^void MD5Init(MD5Context *ctx)$/;"	f	namespace:X265_NS	signature:(MD5Context *ctx)
X265_NS::MD5Init	../../source/common/md5.h	/^void MD5Init(MD5Context *context);$/;"	p	namespace:X265_NS	signature:(MD5Context *context)
X265_NS::MD5Transform	../../source/common/md5.cpp	/^void MD5Transform(uint32_t *buf, uint32_t *in)$/;"	f	namespace:X265_NS	signature:(uint32_t *buf, uint32_t *in)
X265_NS::MD5Transform	../../source/common/md5.cpp	/^void MD5Transform(uint32_t *buf, uint32_t *in);$/;"	p	namespace:X265_NS	file:	signature:(uint32_t *buf, uint32_t *in)
X265_NS::MD5Update	../../source/common/md5.cpp	/^void MD5Update(MD5Context *ctx, uint8_t *buf, uint32_t len)$/;"	f	namespace:X265_NS	signature:(MD5Context *ctx, uint8_t *buf, uint32_t len)
X265_NS::MD5Update	../../source/common/md5.h	/^void MD5Update(MD5Context *context, unsigned char *buf, uint32_t len);$/;"	p	namespace:X265_NS	signature:(MD5Context *context, unsigned char *buf, uint32_t len)
X265_NS::MD_ABOVE	../../source/common/cudata.h	/^    MD_ABOVE,       \/\/ MVP of above block$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MD_ABOVE_LEFT	../../source/common/cudata.h	/^    MD_ABOVE_LEFT,  \/\/ MVP of above left block$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MD_ABOVE_RIGHT	../../source/common/cudata.h	/^    MD_ABOVE_RIGHT, \/\/ MVP of above right block$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MD_BELOW_LEFT	../../source/common/cudata.h	/^    MD_BELOW_LEFT,  \/\/ MVP of below left block$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MD_COLLOCATED_CT	../../source/common/cudata.h	/^    MD_COLLOCATED_CT$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MD_COLLOCATED_RB	../../source/common/cudata.h	/^    MD_COLLOCATED_RB,   \/\/ MVP of temporal neighbour$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MD_LEFT	../../source/common/cudata.h	/^    MD_LEFT = 0,    \/\/ MVP of left block$/;"	e	enum:X265_NS::MVP_DIR
X265_NS::MODE_INTER	../../source/common/cudata.h	/^    MODE_INTER = (1 << 0),$/;"	e	enum:X265_NS::PredMode
X265_NS::MODE_INTRA	../../source/common/cudata.h	/^    MODE_INTRA = (1 << 1),$/;"	e	enum:X265_NS::PredMode
X265_NS::MODE_NONE	../../source/common/cudata.h	/^    MODE_NONE  = 0,$/;"	e	enum:X265_NS::PredMode
X265_NS::MODE_SKIP	../../source/common/cudata.h	/^    MODE_SKIP  = (1 << 2) | MODE_INTER$/;"	e	enum:X265_NS::PredMode
X265_NS::MV	../../source/common/mv.h	/^struct MV$/;"	s	namespace:X265_NS
X265_NS::MV::MV	../../source/common/mv.h	/^    MV()                                       {}$/;"	f	struct:X265_NS::MV	access:public	signature:()
X265_NS::MV::MV	../../source/common/mv.h	/^    MV(int16_t _x, int16_t _y) : x(_x), y(_y)  {}$/;"	f	struct:X265_NS::MV	access:public	signature:(int16_t _x, int16_t _y)
X265_NS::MV::MV	../../source/common/mv.h	/^    MV(int32_t w) : word(w)                    {}$/;"	f	struct:X265_NS::MV	access:public	signature:(int32_t w)
X265_NS::MV::__anon11::__anon12::x	../../source/common/mv.h	/^        struct { int16_t x, y; };$/;"	m	struct:X265_NS::MV::__anon11::__anon12	access:public
X265_NS::MV::__anon11::__anon12::y	../../source/common/mv.h	/^        struct { int16_t x, y; };$/;"	m	struct:X265_NS::MV::__anon11::__anon12	access:public
X265_NS::MV::__anon11::word	../../source/common/mv.h	/^        int32_t word;$/;"	m	union:X265_NS::MV::__anon11	access:public
X265_NS::MV::checkRange	../../source/common/mv.h	/^    bool checkRange(const MV& _min, const MV& _max) const$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& _min, const MV& _max) const
X265_NS::MV::clipped	../../source/common/mv.h	/^    MV clipped(const MV& _min, const MV& _max) const$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& _min, const MV& _max) const
X265_NS::MV::isSubpel	../../source/common/mv.h	/^    bool inline isSubpel() const               { return (this->word & 0x00030003) != 0; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
X265_NS::MV::mvmax	../../source/common/mv.h	/^    MV mvmax(const MV& m) const                { return MV(x < m.x ? m.x : x, y < m.y ? m.y : y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& m) const
X265_NS::MV::mvmin	../../source/common/mv.h	/^    MV mvmin(const MV& m) const                { return MV(x > m.x ? m.x : x, y > m.y ? m.y : y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& m) const
X265_NS::MV::notZero	../../source/common/mv.h	/^    bool inline notZero() const                { return this->word != 0; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
X265_NS::MV::operator !	../../source/common/mv.h	/^    bool operator !() const                    { return !word; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
X265_NS::MV::operator !=	../../source/common/mv.h	/^    bool operator !=(const MV& other) const    { return word != other.word; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
X265_NS::MV::operator *	../../source/common/mv.h	/^    MV operator *(int16_t i) const             { return MV(x * i, y * i); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int16_t i) const
X265_NS::MV::operator +	../../source/common/mv.h	/^    MV operator +(const MV& other) const       { return MV(x + other.x, y + other.y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
X265_NS::MV::operator +=	../../source/common/mv.h	/^    MV& operator +=(const MV& other)           { x += other.x; y += other.y; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other)
X265_NS::MV::operator -	../../source/common/mv.h	/^    MV operator -(const MV& other) const       { return MV(x - other.x, y - other.y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
X265_NS::MV::operator -=	../../source/common/mv.h	/^    MV& operator -=(const MV& other)           { x -= other.x; y -= other.y; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other)
X265_NS::MV::operator <<	../../source/common/mv.h	/^    MV operator <<(int i) const                { return MV(x * (1 << i), y * (1 << i)); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i) const
X265_NS::MV::operator <<	../../source/common/mv.h	/^    MV operator <<(int i) const                { return MV(x << i, y << i); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i) const
X265_NS::MV::operator <<=	../../source/common/mv.h	/^    MV& operator <<=(int i)                    { x *= (1 << i); y *= (1 << i); return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i)
X265_NS::MV::operator <<=	../../source/common/mv.h	/^    MV& operator <<=(int i)                    { x <<= i; y <<= i; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i)
X265_NS::MV::operator =	../../source/common/mv.h	/^    MV& operator =(uint32_t w)                 { word = w; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(uint32_t w)
X265_NS::MV::operator ==	../../source/common/mv.h	/^    bool operator ==(const MV& other) const    { return word == other.word; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
X265_NS::MV::operator >>	../../source/common/mv.h	/^    MV operator >>(int i) const                { return MV(x >> i, y >> i); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i) const
X265_NS::MV::operator >>=	../../source/common/mv.h	/^    MV& operator >>=(int i)                    { x >>= i; y >>= i; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i)
X265_NS::MV::roundToFPel	../../source/common/mv.h	/^    MV roundToFPel() const                     { return MV((x + 2) >> 2, (y + 2) >> 2); }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
X265_NS::MV::toQPel	../../source/common/mv.h	/^    MV toQPel() const                          { return *this << 2; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
X265_NS::MVField	../../source/common/cudata.h	/^struct MVField$/;"	s	namespace:X265_NS
X265_NS::MVField::mv	../../source/common/cudata.h	/^    MV  mv;$/;"	m	struct:X265_NS::MVField	access:public
X265_NS::MVField::refIdx	../../source/common/cudata.h	/^    int refIdx;$/;"	m	struct:X265_NS::MVField	access:public
X265_NS::MVP_DIR	../../source/common/cudata.h	/^enum MVP_DIR$/;"	g	namespace:X265_NS
X265_NS::Mode	../../source/encoder/search.h	/^struct Mode$/;"	s	namespace:X265_NS
X265_NS::Mode::MAX_INTER_PARTS	../../source/encoder/search.h	/^    enum { MAX_INTER_PARTS = 2 };$/;"	e	enum:X265_NS::Mode::__anon1
X265_NS::Mode::addSubCosts	../../source/encoder/search.h	/^    void addSubCosts(const Mode& subMode)$/;"	f	struct:X265_NS::Mode	access:public	signature:(const Mode& subMode)
X265_NS::Mode::amvpCand	../../source/encoder/search.h	/^    MV         amvpCand[2][MAX_NUM_REF][AMVP_NUM_CANDS];$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::bestME	../../source/encoder/search.h	/^    MotionData bestME[MAX_INTER_PARTS][2];$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::bestMEPerRef	../../source/encoder/search.h	/^    MotionData bestMEPerRef[MAX_INTER_PARTS][MAX_NUM_REF][2];$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::chromaDistortion	../../source/encoder/search.h	/^    sse_t   chromaDistortion;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::coeffBits	../../source/encoder/search.h	/^    uint32_t    coeffBits;  \/\/ Texture bits (DCT Coeffs)$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::contexts	../../source/encoder/search.h	/^    Entropy    contexts;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::cu	../../source/encoder/search.h	/^    CUData     cu;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::distortion	../../source/encoder/search.h	/^    sse_t  distortion; \/\/ sum of partition SSE distortion$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::fencYuv	../../source/encoder/search.h	/^    const Yuv* fencYuv;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::initCosts	../../source/encoder/search.h	/^    void initCosts()$/;"	f	struct:X265_NS::Mode	access:public	signature:()
X265_NS::Mode::interNeighbours	../../source/encoder/search.h	/^    InterNeighbourMV interNeighbours[7];$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::lumaDistortion	../../source/encoder/search.h	/^    sse_t   lumaDistortion;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::mvBits	../../source/encoder/search.h	/^    uint32_t    mvBits;     \/\/ Mv bits + Ref + block type (or intra mode)$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::predYuv	../../source/encoder/search.h	/^    Yuv        predYuv;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::psyEnergy	../../source/encoder/search.h	/^    uint32_t    psyEnergy;  \/\/ sum of partition psycho-visual energy difference$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::rdCost	../../source/encoder/search.h	/^    uint64_t    rdCost;     \/\/ sum of partition (psy) RD costs          (sse(fenc, recon) + lambda2 * bits)$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::reconYuv	../../source/encoder/search.h	/^    Yuv        reconYuv;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::resEnergy	../../source/encoder/search.h	/^    sse_t   resEnergy;  \/\/ sum of partition residual energy after motion prediction$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::sa8dBits	../../source/encoder/search.h	/^    uint32_t    sa8dBits;   \/\/ signal bits used in sa8dCost calculation$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::sa8dCost	../../source/encoder/search.h	/^    uint64_t    sa8dCost;   \/\/ sum of partition sa8d distortion costs   (sa8d(fenc, pred) + lambda * bits)$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::ssimEnergy	../../source/encoder/search.h	/^    uint32_t    ssimEnergy;$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::Mode::totalBits	../../source/encoder/search.h	/^    uint32_t    totalBits;  \/\/ sum of partition bits (mv + coeff)$/;"	m	struct:X265_NS::Mode	access:public
X265_NS::MotionData	../../source/encoder/search.h	/^struct MotionData$/;"	s	namespace:X265_NS
X265_NS::MotionData::MotionData	../../source/encoder/search.h	/^    MotionData()$/;"	f	struct:X265_NS::MotionData	access:public	signature:()
X265_NS::MotionData::bits	../../source/encoder/search.h	/^    int      bits;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionData::cost	../../source/encoder/search.h	/^    uint32_t cost;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionData::mv	../../source/encoder/search.h	/^    MV       mv;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionData::mvCost	../../source/encoder/search.h	/^    uint32_t mvCost;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionData::mvp	../../source/encoder/search.h	/^    MV       mvp;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionData::mvpIdx	../../source/encoder/search.h	/^    int      mvpIdx;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionData::ref	../../source/encoder/search.h	/^    int8_t   ref;$/;"	m	struct:X265_NS::MotionData	access:public
X265_NS::MotionEstimate	../../source/encoder/motion.h	/^class MotionEstimate : public BitCost$/;"	c	namespace:X265_NS	inherits:BitCost
X265_NS::MotionEstimate::COST_MAX	../../source/encoder/motion.h	/^    static const int COST_MAX = 1 << 28;$/;"	m	class:X265_NS::MotionEstimate	access:public
X265_NS::MotionEstimate::MotionEstimate	../../source/encoder/motion.h	/^    MotionEstimate();$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:()
X265_NS::MotionEstimate::StarPatternSearch	../../source/encoder/motion.h	/^    inline void StarPatternSearch(ReferencePlanes *ref,$/;"	p	class:X265_NS::MotionEstimate	access:protected	signature:(ReferencePlanes *ref, const MV & mvmin, const MV & mvmax, MV & bmv, int & bcost, int & bPointNr, int & bDistance, int earlyExitIters, int merange)
X265_NS::MotionEstimate::absPartIdx	../../source/encoder/motion.h	/^    int absPartIdx;  \/\/ part index of PU, including CU offset within CTU$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::ads	../../source/encoder/motion.h	/^    pixelcmp_ads_t ads;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::bChromaSATD	../../source/encoder/motion.h	/^    bool bChromaSATD;$/;"	m	class:X265_NS::MotionEstimate	access:public
X265_NS::MotionEstimate::blockOffset	../../source/encoder/motion.h	/^    intptr_t blockOffset;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::blockheight	../../source/encoder/motion.h	/^    int blockheight;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::blockwidth	../../source/encoder/motion.h	/^    int blockwidth;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::bufChromaSATD	../../source/encoder/motion.h	/^    inline int bufChromaSATD(const Yuv& refYuv, int puPartIdx)$/;"	f	class:X265_NS::MotionEstimate	access:public	signature:(const Yuv& refYuv, int puPartIdx)
X265_NS::MotionEstimate::bufSAD	../../source/encoder/motion.h	/^    inline int bufSAD(const pixel* fref, intptr_t stride)  { return sad(fencPUYuv.m_buf[0], FENC_STRIDE, fref, stride); }$/;"	f	class:X265_NS::MotionEstimate	access:public	signature:(const pixel* fref, intptr_t stride)
X265_NS::MotionEstimate::bufSATD	../../source/encoder/motion.h	/^    inline int bufSATD(const pixel* fref, intptr_t stride) { return satd(fencPUYuv.m_buf[0], FENC_STRIDE, fref, stride); }$/;"	f	class:X265_NS::MotionEstimate	access:public	signature:(const pixel* fref, intptr_t stride)
X265_NS::MotionEstimate::chromaSatd	../../source/encoder/motion.h	/^    pixelcmp_t chromaSatd;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::ctuAddr	../../source/encoder/motion.h	/^    int ctuAddr;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::fencPUYuv	../../source/encoder/motion.h	/^    Yuv fencPUYuv;$/;"	m	class:X265_NS::MotionEstimate	access:public
X265_NS::MotionEstimate::hpelIterationCount	../../source/encoder/motion.h	/^    static int hpelIterationCount(int subme);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(int subme)
X265_NS::MotionEstimate::init	../../source/encoder/motion.h	/^    void init(int csp);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(int csp)
X265_NS::MotionEstimate::initScales	../../source/encoder/motion.h	/^    static void initScales();$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:()
X265_NS::MotionEstimate::integral	../../source/encoder/motion.h	/^    uint32_t* integral[INTEGRAL_PLANE_NUM];$/;"	m	class:X265_NS::MotionEstimate	access:public
X265_NS::MotionEstimate::motionEstimate	../../source/encoder/motion.h	/^    int motionEstimate(ReferencePlanes* ref, const MV & mvmin, const MV & mvmax, const MV & qmvp, int numCandidates, const MV * mvc, int merange, MV & outQMv, uint32_t maxSlices, pixel *srcReferencePlane = 0);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(ReferencePlanes* ref, const MV & mvmin, const MV & mvmax, const MV & qmvp, int numCandidates, const MV * mvc, int merange, MV & outQMv, uint32_t maxSlices, pixel *srcReferencePlane = 0)
X265_NS::MotionEstimate::operator =	../../source/encoder/motion.h	/^    MotionEstimate& operator =(const MotionEstimate&);$/;"	p	class:X265_NS::MotionEstimate	access:protected	signature:(const MotionEstimate&)
X265_NS::MotionEstimate::partEnum	../../source/encoder/motion.h	/^    int partEnum;$/;"	m	class:X265_NS::MotionEstimate	access:public
X265_NS::MotionEstimate::refineMV	../../source/encoder/motion.h	/^    void refineMV(ReferencePlanes* ref, const MV& mvmin, const MV& mvmax, const MV& qmvp, MV& outQMv);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(ReferencePlanes* ref, const MV& mvmin, const MV& mvmax, const MV& qmvp, MV& outQMv)
X265_NS::MotionEstimate::sad	../../source/encoder/motion.h	/^    pixelcmp_t sad;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::sad_x3	../../source/encoder/motion.h	/^    pixelcmp_x3_t sad_x3;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::sad_x4	../../source/encoder/motion.h	/^    pixelcmp_x4_t sad_x4;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::satd	../../source/encoder/motion.h	/^    pixelcmp_t satd;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::searchMethod	../../source/encoder/motion.h	/^    int searchMethod;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::setSourcePU	../../source/encoder/motion.h	/^    void setSourcePU(const Yuv& srcFencYuv, int ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int searchMethod, const int subpelRefine, bool bChroma);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(const Yuv& srcFencYuv, int ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int searchMethod, const int subpelRefine, bool bChroma)
X265_NS::MotionEstimate::setSourcePU	../../source/encoder/motion.h	/^    void setSourcePU(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int searchMethod, const int subpelRefine);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int searchMethod, const int subpelRefine)
X265_NS::MotionEstimate::subpelCompare	../../source/encoder/motion.h	/^    int subpelCompare(ReferencePlanes* ref, const MV &qmv, pixelcmp_t);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(ReferencePlanes* ref, const MV &qmv, pixelcmp_t)
X265_NS::MotionEstimate::subpelRefine	../../source/encoder/motion.h	/^    int subpelRefine;$/;"	m	class:X265_NS::MotionEstimate	access:protected
X265_NS::MotionEstimate::~MotionEstimate	../../source/encoder/motion.h	/^    ~MotionEstimate();$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:()
X265_NS::MotionReference	../../source/encoder/reference.h	/^class MotionReference : public ReferencePlanes$/;"	c	namespace:X265_NS	inherits:ReferencePlanes
X265_NS::MotionReference::MotionReference	../../source/encoder/reference.h	/^    MotionReference();$/;"	p	class:X265_NS::MotionReference	access:public	signature:()
X265_NS::MotionReference::applyWeight	../../source/encoder/reference.h	/^    void applyWeight(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId);$/;"	p	class:X265_NS::MotionReference	access:public	signature:(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId)
X265_NS::MotionReference::init	../../source/encoder/reference.h	/^    int  init(PicYuv*, WeightParam* wp, const x265_param& p);$/;"	p	class:X265_NS::MotionReference	access:public	signature:(PicYuv*, WeightParam* wp, const x265_param& p)
X265_NS::MotionReference::numInterpPlanes	../../source/encoder/reference.h	/^    int         numInterpPlanes;$/;"	m	class:X265_NS::MotionReference	access:public
X265_NS::MotionReference::numSliceWeightedRows	../../source/encoder/reference.h	/^    uint32_t*   numSliceWeightedRows;$/;"	m	class:X265_NS::MotionReference	access:public
X265_NS::MotionReference::operator =	../../source/encoder/reference.h	/^    MotionReference& operator =(const MotionReference&);$/;"	p	class:X265_NS::MotionReference	access:protected	signature:(const MotionReference&)
X265_NS::MotionReference::weightBuffer	../../source/encoder/reference.h	/^    pixel*      weightBuffer[3];$/;"	m	class:X265_NS::MotionReference	access:public
X265_NS::MotionReference::~MotionReference	../../source/encoder/reference.h	/^    ~MotionReference();$/;"	p	class:X265_NS::MotionReference	access:public	signature:()
X265_NS::NALList	../../source/encoder/nal.h	/^class NALList$/;"	c	namespace:X265_NS
X265_NS::NALList::MAX_NAL_UNITS	../../source/encoder/nal.h	/^    static const int MAX_NAL_UNITS = 16;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::NALList	../../source/encoder/nal.h	/^    NALList();$/;"	p	class:X265_NS::NALList	access:public	signature:()
X265_NS::NALList::m_allocSize	../../source/encoder/nal.h	/^    uint32_t    m_allocSize;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_annexB	../../source/encoder/nal.h	/^    bool        m_annexB;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_buffer	../../source/encoder/nal.h	/^    uint8_t*    m_buffer;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_extraAllocSize	../../source/encoder/nal.h	/^    uint32_t    m_extraAllocSize;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_extraBuffer	../../source/encoder/nal.h	/^    uint8_t*    m_extraBuffer;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_extraOccupancy	../../source/encoder/nal.h	/^    uint32_t    m_extraOccupancy;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_nal	../../source/encoder/nal.h	/^    x265_nal    m_nal[MAX_NAL_UNITS];$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_numNal	../../source/encoder/nal.h	/^    uint32_t    m_numNal;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::m_occupancy	../../source/encoder/nal.h	/^    uint32_t    m_occupancy;$/;"	m	class:X265_NS::NALList	access:public
X265_NS::NALList::serialize	../../source/encoder/nal.h	/^    void serialize(NalUnitType nalUnitType, const Bitstream& bs);$/;"	p	class:X265_NS::NALList	access:public	signature:(NalUnitType nalUnitType, const Bitstream& bs)
X265_NS::NALList::serializeSubstreams	../../source/encoder/nal.h	/^    uint32_t serializeSubstreams(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams);$/;"	p	class:X265_NS::NALList	access:public	signature:(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams)
X265_NS::NALList::takeContents	../../source/encoder/nal.h	/^    void takeContents(NALList& other);$/;"	p	class:X265_NS::NALList	access:public	signature:(NALList& other)
X265_NS::NALList::~NALList	../../source/encoder/nal.h	/^    ~NALList() { X265_FREE(m_buffer); X265_FREE(m_extraBuffer); }$/;"	f	class:X265_NS::NALList	access:public	signature:()
X265_NS::NUMBER_OF_SPLIT_MODES	../../source/encoder/entropy.h	/^    NUMBER_OF_SPLIT_MODES = 3$/;"	e	enum:X265_NS::SplitType
X265_NS::NUM_CU_SIZES	../../source/common/primitives.h	/^    NUM_CU_SIZES$/;"	e	enum:X265_NS::LumaCU
X265_NS::NUM_INTEGRAL_SIZE	../../source/common/primitives.h	/^    NUM_INTEGRAL_SIZE$/;"	e	enum:X265_NS::IntegralSize
X265_NS::NUM_PU_SIZES	../../source/common/primitives.h	/^    NUM_PU_SIZES$/;"	e	enum:X265_NS::LumaPU
X265_NS::NUM_SCAN_TYPE	../../source/common/common.h	/^    NUM_SCAN_TYPE = 3$/;"	e	enum:X265_NS::ScanType
X265_NS::NUM_SIZES	../../source/common/cudata.h	/^    NUM_SIZES$/;"	e	enum:X265_NS::PartSize
X265_NS::NUM_TR_SIZE	../../source/common/primitives.h	/^enum { NUM_TR_SIZE = 4 }; \/\/ TU are 4x4, 8x8, 16x16, and 32x32$/;"	e	enum:X265_NS::__anon18
X265_NS::NoiseReduction	../../source/common/quant.h	/^struct NoiseReduction$/;"	s	namespace:X265_NS
X265_NS::NoiseReduction::ALIGN_VAR_16	../../source/common/quant.h	/^    ALIGN_VAR_16(uint32_t, nrResidualSum[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS]);$/;"	p	struct:X265_NS::NoiseReduction	access:public	signature:(uint32_t, nrResidualSum[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS])
X265_NS::NoiseReduction::count	../../source/common/quant.h	/^    uint32_t *count;$/;"	m	struct:X265_NS::NoiseReduction	access:public
X265_NS::NoiseReduction::nrCount	../../source/common/quant.h	/^    uint32_t nrCount[MAX_NUM_TR_CATEGORIES];$/;"	m	struct:X265_NS::NoiseReduction	access:public
X265_NS::NoiseReduction::nrOffsetDenoise	../../source/common/quant.h	/^    uint16_t nrOffsetDenoise[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS];$/;"	m	struct:X265_NS::NoiseReduction	access:public
X265_NS::NoiseReduction::offset	../../source/common/quant.h	/^    uint16_t (*offset)[MAX_NUM_TR_COEFFS];$/;"	m	struct:X265_NS::NoiseReduction	access:public
X265_NS::NoiseReduction::residualSum	../../source/common/quant.h	/^    uint32_t (*residualSum)[MAX_NUM_TR_COEFFS];$/;"	m	struct:X265_NS::NoiseReduction	access:public
X265_NS::OutputFile	../../source/output/output.h	/^class OutputFile$/;"	c	namespace:X265_NS
X265_NS::OutputFile::OutputFile	../../source/output/output.h	/^    OutputFile() {}$/;"	f	class:X265_NS::OutputFile	access:public	signature:()
X265_NS::OutputFile::closeFile	../../source/output/output.h	/^    virtual void closeFile(int64_t largest_pts, int64_t second_largest_pts) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(int64_t largest_pts, int64_t second_largest_pts)
X265_NS::OutputFile::getName	../../source/output/output.h	/^    virtual const char* getName() const = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:() const
X265_NS::OutputFile::isFail	../../source/output/output.h	/^    virtual bool isFail() const = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:() const
X265_NS::OutputFile::needPTS	../../source/output/output.h	/^    virtual bool needPTS() const = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:() const
X265_NS::OutputFile::open	../../source/output/output.h	/^    static OutputFile* open(const char* fname, InputFileInfo& inputInfo);$/;"	p	class:X265_NS::OutputFile	access:public	signature:(const char* fname, InputFileInfo& inputInfo)
X265_NS::OutputFile::release	../../source/output/output.h	/^    virtual void release() = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:()
X265_NS::OutputFile::setParam	../../source/output/output.h	/^    virtual void setParam(x265_param* param) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(x265_param* param)
X265_NS::OutputFile::writeFrame	../../source/output/output.h	/^    virtual int writeFrame(const x265_nal* nal, uint32_t nalcount, x265_picture& pic) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(const x265_nal* nal, uint32_t nalcount, x265_picture& pic)
X265_NS::OutputFile::writeHeaders	../../source/output/output.h	/^    virtual int writeHeaders(const x265_nal* nal, uint32_t nalcount) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(const x265_nal* nal, uint32_t nalcount)
X265_NS::OutputFile::~OutputFile	../../source/output/output.h	/^    virtual ~OutputFile() {}$/;"	f	class:X265_NS::OutputFile	access:protected	signature:()
X265_NS::PPS	../../source/common/slice.h	/^struct PPS$/;"	s	namespace:X265_NS
X265_NS::PPS::bConstrainedIntraPred	../../source/common/slice.h	/^    bool     bConstrainedIntraPred;  \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bDeblockingFilterControlPresent	../../source/common/slice.h	/^    bool     bDeblockingFilterControlPresent;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bEntropyCodingSyncEnabled	../../source/common/slice.h	/^    bool     bEntropyCodingSyncEnabled; \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bPicDisableDeblockingFilter	../../source/common/slice.h	/^    bool     bPicDisableDeblockingFilter;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bSignHideEnabled	../../source/common/slice.h	/^    bool     bSignHideEnabled;          \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bTransformSkipEnabled	../../source/common/slice.h	/^    bool     bTransformSkipEnabled;     \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bTransquantBypassEnabled	../../source/common/slice.h	/^    bool     bTransquantBypassEnabled;  \/\/ Indicates presence of cu_transquant_bypass_flag in CUs.$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bUseDQP	../../source/common/slice.h	/^    bool     bUseDQP;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bUseWeightPred	../../source/common/slice.h	/^    bool     bUseWeightPred;         \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::bUseWeightedBiPred	../../source/common/slice.h	/^    bool     bUseWeightedBiPred;     \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::chromaQpOffset	../../source/common/slice.h	/^    int      chromaQpOffset[2];      \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::deblockingFilterBetaOffsetDiv2	../../source/common/slice.h	/^    int      deblockingFilterBetaOffsetDiv2;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::deblockingFilterTcOffsetDiv2	../../source/common/slice.h	/^    int      deblockingFilterTcOffsetDiv2;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::maxCuDQPDepth	../../source/common/slice.h	/^    uint32_t maxCuDQPDepth;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::numRefIdxDefault	../../source/common/slice.h	/^    int      numRefIdxDefault[2];$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::PPS::pps_slice_chroma_qp_offsets_present_flag	../../source/common/slice.h	/^    bool     pps_slice_chroma_qp_offsets_present_flag;$/;"	m	struct:X265_NS::PPS	access:public
X265_NS::P_SLICE	../../source/common/slice.h	/^    P_SLICE,$/;"	e	enum:X265_NS::SliceType
X265_NS::PartSize	../../source/common/cudata.h	/^enum PartSize$/;"	g	namespace:X265_NS
X265_NS::PicList	../../source/common/piclist.h	/^class PicList$/;"	c	namespace:X265_NS
X265_NS::PicList::PicList	../../source/common/piclist.h	/^    PicList()$/;"	f	class:X265_NS::PicList	access:public	signature:()
X265_NS::PicList::empty	../../source/common/piclist.h	/^    bool empty() const    { return !m_count;  }$/;"	f	class:X265_NS::PicList	access:public	signature:() const
X265_NS::PicList::first	../../source/common/piclist.h	/^    Frame* first()        { return m_start;   }$/;"	f	class:X265_NS::PicList	access:public	signature:()
X265_NS::PicList::getPOC	../../source/common/piclist.h	/^    Frame* getPOC(int poc);$/;"	p	class:X265_NS::PicList	access:public	signature:(int poc)
X265_NS::PicList::last	../../source/common/piclist.h	/^    Frame* last()         { return m_end;     }$/;"	f	class:X265_NS::PicList	access:public	signature:()
X265_NS::PicList::m_count	../../source/common/piclist.h	/^    int      m_count;$/;"	m	class:X265_NS::PicList	access:protected
X265_NS::PicList::m_end	../../source/common/piclist.h	/^    Frame*   m_end;$/;"	m	class:X265_NS::PicList	access:protected
X265_NS::PicList::m_start	../../source/common/piclist.h	/^    Frame*   m_start;$/;"	m	class:X265_NS::PicList	access:protected
X265_NS::PicList::operator bool	../../source/common/piclist.h	/^    operator bool() const { return !!m_count; }$/;"	f	class:X265_NS::PicList	access:public	signature:() const
X265_NS::PicList::popBack	../../source/common/piclist.h	/^    Frame* popBack();$/;"	p	class:X265_NS::PicList	access:public	signature:()
X265_NS::PicList::popFront	../../source/common/piclist.h	/^    Frame* popFront();$/;"	p	class:X265_NS::PicList	access:public	signature:()
X265_NS::PicList::pushBack	../../source/common/piclist.h	/^    void pushBack(Frame& pic);$/;"	p	class:X265_NS::PicList	access:public	signature:(Frame& pic)
X265_NS::PicList::pushFront	../../source/common/piclist.h	/^    void pushFront(Frame& pic);$/;"	p	class:X265_NS::PicList	access:public	signature:(Frame& pic)
X265_NS::PicList::remove	../../source/common/piclist.h	/^    void remove(Frame& pic);$/;"	p	class:X265_NS::PicList	access:public	signature:(Frame& pic)
X265_NS::PicList::size	../../source/common/piclist.h	/^    int size()            { return m_count;   }$/;"	f	class:X265_NS::PicList	access:public	signature:()
X265_NS::PicYuv	../../source/common/picyuv.h	/^class PicYuv$/;"	c	namespace:X265_NS
X265_NS::PicYuv::PicYuv	../../source/common/picyuv.h	/^    PicYuv();$/;"	p	class:X265_NS::PicYuv	access:public	signature:()
X265_NS::PicYuv::copyFromPicture	../../source/common/picyuv.h	/^    void  copyFromPicture(const x265_picture&, const x265_param& param, int padx, int pady);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(const x265_picture&, const x265_param& param, int padx, int pady)
X265_NS::PicYuv::create	../../source/common/picyuv.h	/^    bool  create(x265_param* param, pixel *pixelbuf = NULL);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(x265_param* param, pixel *pixelbuf = NULL)
X265_NS::PicYuv::createOffsets	../../source/common/picyuv.h	/^    bool  createOffsets(const SPS& sps);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(const SPS& sps)
X265_NS::PicYuv::destroy	../../source/common/picyuv.h	/^    void  destroy();$/;"	p	class:X265_NS::PicYuv	access:public	signature:()
X265_NS::PicYuv::getCbAddr	../../source/common/picyuv.h	/^    const pixel* getCbAddr(uint32_t ctuAddr) const             { return m_picOrg[1] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr) const
X265_NS::PicYuv::getCbAddr	../../source/common/picyuv.h	/^    const pixel* getCbAddr(uint32_t ctuAddr, uint32_t absPartIdx) const   { return m_picOrg[1] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
X265_NS::PicYuv::getCbAddr	../../source/common/picyuv.h	/^    pixel*  getCbAddr(uint32_t ctuAddr)                        { return m_picOrg[1] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr)
X265_NS::PicYuv::getCbAddr	../../source/common/picyuv.h	/^    pixel*  getCbAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return m_picOrg[1] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::PicYuv::getChromaAddr	../../source/common/picyuv.h	/^    const pixel* getChromaAddr(uint32_t chromaId, uint32_t ctuAddr) const { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr) const
X265_NS::PicYuv::getChromaAddr	../../source/common/picyuv.h	/^    const pixel* getChromaAddr(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx) const { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx) const
X265_NS::PicYuv::getChromaAddr	../../source/common/picyuv.h	/^    pixel*  getChromaAddr(uint32_t chromaId, uint32_t ctuAddr) { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr)
X265_NS::PicYuv::getChromaAddr	../../source/common/picyuv.h	/^    pixel*  getChromaAddr(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx) { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::PicYuv::getChromaAddrOffset	../../source/common/picyuv.h	/^    intptr_t getChromaAddrOffset(uint32_t ctuAddr, uint32_t absPartIdx) const { return m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
X265_NS::PicYuv::getCrAddr	../../source/common/picyuv.h	/^    const pixel* getCrAddr(uint32_t ctuAddr) const             { return m_picOrg[2] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr) const
X265_NS::PicYuv::getCrAddr	../../source/common/picyuv.h	/^    const pixel* getCrAddr(uint32_t ctuAddr, uint32_t absPartIdx) const   { return m_picOrg[2] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
X265_NS::PicYuv::getCrAddr	../../source/common/picyuv.h	/^    pixel*  getCrAddr(uint32_t ctuAddr)                        { return m_picOrg[2] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr)
X265_NS::PicYuv::getCrAddr	../../source/common/picyuv.h	/^    pixel*  getCrAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return m_picOrg[2] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::PicYuv::getLumaAddr	../../source/common/picyuv.h	/^    const pixel* getLumaAddr(uint32_t ctuAddr) const           { return m_picOrg[0] + m_cuOffsetY[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr) const
X265_NS::PicYuv::getLumaAddr	../../source/common/picyuv.h	/^    const pixel* getLumaAddr(uint32_t ctuAddr, uint32_t absPartIdx) const { return m_picOrg[0] + m_cuOffsetY[ctuAddr] + m_buOffsetY[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
X265_NS::PicYuv::getLumaAddr	../../source/common/picyuv.h	/^    pixel*  getLumaAddr(uint32_t ctuAddr)                      { return m_picOrg[0] + m_cuOffsetY[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr)
X265_NS::PicYuv::getLumaAddr	../../source/common/picyuv.h	/^    pixel*  getLumaAddr(uint32_t ctuAddr, uint32_t absPartIdx) { return m_picOrg[0] + m_cuOffsetY[ctuAddr] + m_buOffsetY[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::PicYuv::getLumaBufLen	../../source/common/picyuv.h	/^    int   getLumaBufLen(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp)
X265_NS::PicYuv::getPlaneAddr	../../source/common/picyuv.h	/^    const pixel* getPlaneAddr(uint32_t plane, uint32_t ctuAddr) const     { return m_picOrg[plane] + (plane ? m_cuOffsetC[ctuAddr] : m_cuOffsetY[ctuAddr]); }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t plane, uint32_t ctuAddr) const
X265_NS::PicYuv::getPlaneAddr	../../source/common/picyuv.h	/^    pixel*  getPlaneAddr(uint32_t plane, uint32_t ctuAddr)     { return m_picOrg[plane] + (plane ? m_cuOffsetC[ctuAddr] : m_cuOffsetY[ctuAddr]); }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t plane, uint32_t ctuAddr)
X265_NS::PicYuv::m_avgChromaULevel	../../source/common/picyuv.h	/^    double  m_avgChromaULevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_avgChromaVLevel	../../source/common/picyuv.h	/^    double  m_avgChromaVLevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_avgLumaLevel	../../source/common/picyuv.h	/^    double  m_avgLumaLevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_buOffsetC	../../source/common/picyuv.h	/^    intptr_t* m_buOffsetC;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_buOffsetY	../../source/common/picyuv.h	/^    intptr_t* m_buOffsetY;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_chromaMarginX	../../source/common/picyuv.h	/^    uint32_t m_chromaMarginX;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_chromaMarginY	../../source/common/picyuv.h	/^    uint32_t m_chromaMarginY;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_cuOffsetC	../../source/common/picyuv.h	/^    intptr_t* m_cuOffsetC;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_cuOffsetY	../../source/common/picyuv.h	/^    intptr_t* m_cuOffsetY;  \/* these four buffers are owned by the top-level encoder *\/$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_hChromaShift	../../source/common/picyuv.h	/^    uint32_t m_hChromaShift;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_lumaMarginX	../../source/common/picyuv.h	/^    uint32_t m_lumaMarginX;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_lumaMarginY	../../source/common/picyuv.h	/^    uint32_t m_lumaMarginY;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_maxChromaULevel	../../source/common/picyuv.h	/^    pixel   m_maxChromaULevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_maxChromaVLevel	../../source/common/picyuv.h	/^    pixel   m_maxChromaVLevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_maxLumaLevel	../../source/common/picyuv.h	/^    pixel   m_maxLumaLevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_minChromaULevel	../../source/common/picyuv.h	/^    pixel   m_minChromaULevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_minChromaVLevel	../../source/common/picyuv.h	/^    pixel   m_minChromaVLevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_minLumaLevel	../../source/common/picyuv.h	/^    pixel   m_minLumaLevel;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_param	../../source/common/picyuv.h	/^    x265_param *m_param;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_picBuf	../../source/common/picyuv.h	/^    pixel*   m_picBuf[3];  \/\/ full allocated buffers, including margins$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_picCsp	../../source/common/picyuv.h	/^    uint32_t m_picCsp;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_picHeight	../../source/common/picyuv.h	/^    uint32_t m_picHeight;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_picOrg	../../source/common/picyuv.h	/^    pixel*   m_picOrg[3];  \/\/ pointers to plane starts$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_picWidth	../../source/common/picyuv.h	/^    uint32_t m_picWidth;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_stride	../../source/common/picyuv.h	/^    intptr_t m_stride;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_strideC	../../source/common/picyuv.h	/^    intptr_t m_strideC;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PicYuv::m_vChromaShift	../../source/common/picyuv.h	/^    uint32_t m_vChromaShift;$/;"	m	class:X265_NS::PicYuv	access:public
X265_NS::PreLookaheadGroup	../../source/encoder/slicetype.h	/^class PreLookaheadGroup : public BondedTaskGroup$/;"	c	namespace:X265_NS	inherits:BondedTaskGroup
X265_NS::PreLookaheadGroup::PreLookaheadGroup	../../source/encoder/slicetype.h	/^    PreLookaheadGroup(Lookahead& l) : m_lookahead(l) {}$/;"	f	class:X265_NS::PreLookaheadGroup	access:public	signature:(Lookahead& l)
X265_NS::PreLookaheadGroup::m_lookahead	../../source/encoder/slicetype.h	/^    Lookahead& m_lookahead;$/;"	m	class:X265_NS::PreLookaheadGroup	access:public
X265_NS::PreLookaheadGroup::m_preframes	../../source/encoder/slicetype.h	/^    Frame* m_preframes[X265_LOOKAHEAD_MAX];$/;"	m	class:X265_NS::PreLookaheadGroup	access:public
X265_NS::PreLookaheadGroup::operator =	../../source/encoder/slicetype.h	/^    PreLookaheadGroup& operator=(const PreLookaheadGroup&);$/;"	p	class:X265_NS::PreLookaheadGroup	access:protected	signature:(const PreLookaheadGroup&)
X265_NS::PreLookaheadGroup::processTasks	../../source/encoder/slicetype.h	/^    void processTasks(int workerThreadID);$/;"	p	class:X265_NS::PreLookaheadGroup	access:public	signature:(int workerThreadID)
X265_NS::PredMode	../../source/common/cudata.h	/^enum PredMode$/;"	g	namespace:X265_NS
X265_NS::Predict	../../source/common/predict.h	/^class Predict$/;"	c	namespace:X265_NS
X265_NS::Predict::ADI_BUF_STRIDE	../../source/common/predict.h	/^    enum { ADI_BUF_STRIDE = (2 * MAX_CU_SIZE + 1 + 15) }; \/\/ alignment to 16 bytes$/;"	e	enum:X265_NS::Predict::__anon30
X265_NS::Predict::IntraNeighbors	../../source/common/predict.h	/^    struct IntraNeighbors$/;"	s	class:X265_NS::Predict	access:public
X265_NS::Predict::IntraNeighbors::aboveUnits	../../source/common/predict.h	/^        int      aboveUnits;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::bNeighborFlags	../../source/common/predict.h	/^        bool     bNeighborFlags[4 * MAX_NUM_SPU_W + 1];$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::leftUnits	../../source/common/predict.h	/^        int      leftUnits;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::log2TrSize	../../source/common/predict.h	/^        int      log2TrSize;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::numIntraNeighbor	../../source/common/predict.h	/^        int      numIntraNeighbor;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::totalUnits	../../source/common/predict.h	/^        int      totalUnits;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::unitHeight	../../source/common/predict.h	/^        int      unitHeight;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::IntraNeighbors::unitWidth	../../source/common/predict.h	/^        int      unitWidth;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
X265_NS::Predict::Predict	../../source/common/predict.h	/^    Predict();$/;"	p	class:X265_NS::Predict	access:public	signature:()
X265_NS::Predict::WeightValues	../../source/common/predict.h	/^    struct WeightValues$/;"	s	class:X265_NS::Predict	access:public
X265_NS::Predict::WeightValues::o	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
X265_NS::Predict::WeightValues::offset	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
X265_NS::Predict::WeightValues::round	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
X265_NS::Predict::WeightValues::shift	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
X265_NS::Predict::WeightValues::w	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
X265_NS::Predict::addWeightBi	../../source/common/predict.h	/^    void addWeightBi(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const
X265_NS::Predict::addWeightUni	../../source/common/predict.h	/^    void addWeightUni(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const
X265_NS::Predict::allocBuffers	../../source/common/predict.h	/^    bool allocBuffers(int csp);$/;"	p	class:X265_NS::Predict	access:public	signature:(int csp)
X265_NS::Predict::fillReferenceSamples	../../source/common/predict.h	/^    static void fillReferenceSamples(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258]);$/;"	p	class:X265_NS::Predict	access:public	signature:(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258])
X265_NS::Predict::initAdiPattern	../../source/common/predict.h	/^    void initAdiPattern(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode)
X265_NS::Predict::initAdiPatternChroma	../../source/common/predict.h	/^    void initAdiPatternChroma(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId)
X265_NS::Predict::initIntraNeighbors	../../source/common/predict.h	/^    static void initIntraNeighbors(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *IntraNeighbors);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *IntraNeighbors)
X265_NS::Predict::intraNeighbourBuf	../../source/common/predict.h	/^    pixel     intraNeighbourBuf[2][258];$/;"	m	class:X265_NS::Predict	access:public
X265_NS::Predict::isAboveAvailable	../../source/common/predict.h	/^    static int  isAboveAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags)
X265_NS::Predict::isAboveLeftAvailable	../../source/common/predict.h	/^    static bool isAboveLeftAvailable(const CUData& cu, uint32_t partIdxLT);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLT)
X265_NS::Predict::isAboveRightAvailable	../../source/common/predict.h	/^    static int  isAboveRightAvailable(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits)
X265_NS::Predict::isBelowLeftAvailable	../../source/common/predict.h	/^    static int  isBelowLeftAvailable(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits)
X265_NS::Predict::isLeftAvailable	../../source/common/predict.h	/^    static int  isLeftAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags)
X265_NS::Predict::m_csp	../../source/common/predict.h	/^    int       m_csp;$/;"	m	class:X265_NS::Predict	access:public
X265_NS::Predict::m_hChromaShift	../../source/common/predict.h	/^    int       m_hChromaShift;$/;"	m	class:X265_NS::Predict	access:public
X265_NS::Predict::m_predShortYuv	../../source/common/predict.h	/^    ShortYuv  m_predShortYuv[2]; \/* temporary storage for weighted prediction *\/$/;"	m	class:X265_NS::Predict	access:public
X265_NS::Predict::m_vChromaShift	../../source/common/predict.h	/^    int       m_vChromaShift;$/;"	m	class:X265_NS::Predict	access:public
X265_NS::Predict::motionCompensation	../../source/common/predict.h	/^    void motionCompensation(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
X265_NS::Predict::motionCompensationIterate	../../source/common/predict.h	/^    void motionCompensationIterate(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma);$/;"	p	class:X265_NS::Predict	access:public	signature:(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
X265_NS::Predict::predInterChromaPixel	../../source/common/predict.h	/^    void predInterChromaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
X265_NS::Predict::predInterChromaShort	../../source/common/predict.h	/^    void predInterChromaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
X265_NS::Predict::predInterLumaPixel	../../source/common/predict.h	/^    void predInterLumaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
X265_NS::Predict::predInterLumaShort	../../source/common/predict.h	/^    void predInterLumaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
X265_NS::Predict::predIntraChromaAng	../../source/common/predict.h	/^    void predIntraChromaAng(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSizeC);$/;"	p	class:X265_NS::Predict	access:public	signature:(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSizeC)
X265_NS::Predict::predIntraLumaAng	../../source/common/predict.h	/^    void predIntraLumaAng(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSize);$/;"	p	class:X265_NS::Predict	access:public	signature:(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSize)
X265_NS::Predict::~Predict	../../source/common/predict.h	/^    ~Predict();$/;"	p	class:X265_NS::Predict	access:public	signature:()
X265_NS::PredictionUnit	../../source/common/predict.h	/^struct PredictionUnit$/;"	s	namespace:X265_NS
X265_NS::PredictionUnit::PredictionUnit	../../source/common/predict.h	/^    PredictionUnit(const CUData& cu, const CUGeom& cuGeom, int puIdx);$/;"	p	struct:X265_NS::PredictionUnit	access:public	signature:(const CUData& cu, const CUGeom& cuGeom, int puIdx)
X265_NS::PredictionUnit::ctuAddr	../../source/common/predict.h	/^    uint32_t     ctuAddr;      \/\/ raster index of current CTU within its picture$/;"	m	struct:X265_NS::PredictionUnit	access:public
X265_NS::PredictionUnit::cuAbsPartIdx	../../source/common/predict.h	/^    uint32_t     cuAbsPartIdx; \/\/ z-order offset of current CU within its CTU$/;"	m	struct:X265_NS::PredictionUnit	access:public
X265_NS::PredictionUnit::height	../../source/common/predict.h	/^    int          height;$/;"	m	struct:X265_NS::PredictionUnit	access:public
X265_NS::PredictionUnit::puAbsPartIdx	../../source/common/predict.h	/^    uint32_t     puAbsPartIdx; \/\/ z-order offset of current PU with its CU$/;"	m	struct:X265_NS::PredictionUnit	access:public
X265_NS::PredictionUnit::width	../../source/common/predict.h	/^    int          width;$/;"	m	struct:X265_NS::PredictionUnit	access:public
X265_NS::Predictor	../../source/encoder/ratecontrol.h	/^struct Predictor$/;"	s	namespace:X265_NS
X265_NS::Predictor::coeff	../../source/encoder/ratecontrol.h	/^    double coeff;$/;"	m	struct:X265_NS::Predictor	access:public
X265_NS::Predictor::coeffMin	../../source/encoder/ratecontrol.h	/^    double coeffMin;$/;"	m	struct:X265_NS::Predictor	access:public
X265_NS::Predictor::count	../../source/encoder/ratecontrol.h	/^    double count;$/;"	m	struct:X265_NS::Predictor	access:public
X265_NS::Predictor::decay	../../source/encoder/ratecontrol.h	/^    double decay;$/;"	m	struct:X265_NS::Predictor	access:public
X265_NS::Predictor::offset	../../source/encoder/ratecontrol.h	/^    double offset;$/;"	m	struct:X265_NS::Predictor	access:public
X265_NS::Profile	../../source/common/slice.h	/^namespace Profile {$/;"	n	namespace:X265_NS
X265_NS::Profile::HIGHTHROUGHPUTREXT	../../source/common/slice.h	/^        HIGHTHROUGHPUTREXT = 5$/;"	e	enum:X265_NS::Profile::Name
X265_NS::Profile::MAIN	../../source/common/slice.h	/^        MAIN = 1,$/;"	e	enum:X265_NS::Profile::Name
X265_NS::Profile::MAIN10	../../source/common/slice.h	/^        MAIN10 = 2,$/;"	e	enum:X265_NS::Profile::Name
X265_NS::Profile::MAINREXT	../../source/common/slice.h	/^        MAINREXT = 4,$/;"	e	enum:X265_NS::Profile::Name
X265_NS::Profile::MAINSTILLPICTURE	../../source/common/slice.h	/^        MAINSTILLPICTURE = 3,$/;"	e	enum:X265_NS::Profile::Name
X265_NS::Profile::NONE	../../source/common/slice.h	/^        NONE = 0,$/;"	e	enum:X265_NS::Profile::Name
X265_NS::Profile::Name	../../source/common/slice.h	/^    enum Name$/;"	g	namespace:X265_NS::Profile
X265_NS::ProfileTierLevel	../../source/common/slice.h	/^struct ProfileTierLevel$/;"	s	namespace:X265_NS
X265_NS::ProfileTierLevel::bitDepthConstraint	../../source/common/slice.h	/^    uint32_t bitDepthConstraint;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::chromaFormatConstraint	../../source/common/slice.h	/^    int      chromaFormatConstraint;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::frameOnlyConstraintFlag	../../source/common/slice.h	/^    bool     frameOnlyConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::interlacedSourceFlag	../../source/common/slice.h	/^    bool     interlacedSourceFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::intraConstraintFlag	../../source/common/slice.h	/^    bool     intraConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::levelIdc	../../source/common/slice.h	/^    int      levelIdc;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::lowerBitRateConstraintFlag	../../source/common/slice.h	/^    bool     lowerBitRateConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::maxLumaSrForLevel	../../source/common/slice.h	/^    uint32_t maxLumaSrForLevel;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::minCrForLevel	../../source/common/slice.h	/^    uint32_t minCrForLevel;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::nonPackedConstraintFlag	../../source/common/slice.h	/^    bool     nonPackedConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::onePictureOnlyConstraintFlag	../../source/common/slice.h	/^    bool     onePictureOnlyConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::profileCompatibilityFlag	../../source/common/slice.h	/^    bool     profileCompatibilityFlag[32];$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::profileIdc	../../source/common/slice.h	/^    int      profileIdc;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::progressiveSourceFlag	../../source/common/slice.h	/^    bool     progressiveSourceFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::ProfileTierLevel::tierFlag	../../source/common/slice.h	/^    bool     tierFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
X265_NS::QUAD_SPLIT	../../source/encoder/entropy.h	/^    QUAD_SPLIT            = 2,$/;"	e	enum:X265_NS::SplitType
X265_NS::QpParam	../../source/common/quant.h	/^struct QpParam$/;"	s	namespace:X265_NS
X265_NS::QpParam::QpParam	../../source/common/quant.h	/^    QpParam() : qp(MAX_INT) {}$/;"	f	struct:X265_NS::QpParam	access:public	signature:()
X265_NS::QpParam::lambda	../../source/common/quant.h	/^    int32_t lambda;  \/* FIX8, dynamic range is 18-bits in Main and 20-bits in Main10 *\/$/;"	m	struct:X265_NS::QpParam	access:public
X265_NS::QpParam::lambda2	../../source/common/quant.h	/^    int64_t lambda2; \/* FIX8 *\/$/;"	m	struct:X265_NS::QpParam	access:public
X265_NS::QpParam::per	../../source/common/quant.h	/^    int per;$/;"	m	struct:X265_NS::QpParam	access:public
X265_NS::QpParam::qp	../../source/common/quant.h	/^    int qp;$/;"	m	struct:X265_NS::QpParam	access:public
X265_NS::QpParam::rem	../../source/common/quant.h	/^    int rem;$/;"	m	struct:X265_NS::QpParam	access:public
X265_NS::QpParam::setQpParam	../../source/common/quant.h	/^    void setQpParam(int qpScaled)$/;"	f	struct:X265_NS::QpParam	access:public	signature:(int qpScaled)
X265_NS::Quant	../../source/common/quant.h	/^class Quant$/;"	c	namespace:X265_NS
X265_NS::Quant::IEP_RATE	../../source/common/quant.h	/^    enum { IEP_RATE = 32768 }; \/* FIX15 cost of an equal probable bit *\/$/;"	e	enum:X265_NS::Quant::__anon3
X265_NS::Quant::Quant	../../source/common/quant.h	/^    Quant();$/;"	p	class:X265_NS::Quant	access:public	signature:()
X265_NS::Quant::allocNoiseReduction	../../source/common/quant.h	/^    bool allocNoiseReduction(const x265_param& param);$/;"	p	class:X265_NS::Quant	access:public	signature:(const x265_param& param)
X265_NS::Quant::calcPatternSigCtx	../../source/common/quant.h	/^    static uint32_t calcPatternSigCtx(uint64_t sigCoeffGroupFlag64, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)$/;"	f	class:X265_NS::Quant	access:public	signature:(uint64_t sigCoeffGroupFlag64, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)
X265_NS::Quant::getSigCoeffGroupCtxInc	../../source/common/quant.h	/^    static uint32_t getSigCoeffGroupCtxInc(uint64_t cgGroupMask, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)$/;"	f	class:X265_NS::Quant	access:public	signature:(uint64_t cgGroupMask, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)
X265_NS::Quant::getSigCtxInc	../../source/common/quant.h	/^    static uint32_t getSigCtxInc(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma, uint32_t firstSignificanceMapContext);$/;"	p	class:X265_NS::Quant	access:public	signature:(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma, uint32_t firstSignificanceMapContext)
X265_NS::Quant::init	../../source/common/quant.h	/^    bool init(double psyScale, const ScalingList& scalingList, Entropy& entropy);$/;"	p	class:X265_NS::Quant	access:public	signature:(double psyScale, const ScalingList& scalingList, Entropy& entropy)
X265_NS::Quant::invtransformNxN	../../source/common/quant.h	/^    void invtransformNxN(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff,$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff, uint32_t log2TrSize, TextType ttype, bool bIntra, bool useTransformSkip, uint32_t numSig)
X265_NS::Quant::m_entropyCoder	../../source/common/quant.h	/^    Entropy*           m_entropyCoder;$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_fencDctCoeff	../../source/common/quant.h	/^    int16_t*           m_fencDctCoeff;$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_fencShortBuf	../../source/common/quant.h	/^    int16_t*           m_fencShortBuf;$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_frameNr	../../source/common/quant.h	/^    NoiseReduction*    m_frameNr; \/\/ Array of NR structures, one for each frameEncoder$/;"	m	class:X265_NS::Quant	access:public
X265_NS::Quant::m_nr	../../source/common/quant.h	/^    NoiseReduction*    m_nr;$/;"	m	class:X265_NS::Quant	access:public
X265_NS::Quant::m_psyRdoqScale	../../source/common/quant.h	/^    int32_t            m_psyRdoqScale;  \/\/ dynamic range [0,50] * 256 = 14-bits$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_qpParam	../../source/common/quant.h	/^    QpParam            m_qpParam[3];$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_rdoqLevel	../../source/common/quant.h	/^    int                m_rdoqLevel;$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_resiDctCoeff	../../source/common/quant.h	/^    int16_t*           m_resiDctCoeff;$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::m_scalingList	../../source/common/quant.h	/^    const ScalingList* m_scalingList;$/;"	m	class:X265_NS::Quant	access:protected
X265_NS::Quant::rdoQuant	../../source/common/quant.h	/^    uint32_t rdoQuant(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy);$/;"	p	class:X265_NS::Quant	access:protected	signature:(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy)
X265_NS::Quant::rdoQuant_func	../../source/common/quant.h	/^    static rdoQuant_t rdoQuant_func[NUM_CU_DEPTH];$/;"	m	class:X265_NS::Quant	access:private
X265_NS::Quant::rdoQuant_t	../../source/common/quant.h	/^    typedef uint32_t (Quant::*rdoQuant_t)(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy);$/;"	t	class:X265_NS::Quant	access:public
X265_NS::Quant::setChromaQP	../../source/common/quant.h	/^    void setChromaQP(int qpin, TextType ttype, int chFmt);$/;"	p	class:X265_NS::Quant	access:protected	signature:(int qpin, TextType ttype, int chFmt)
X265_NS::Quant::setQPforQuant	../../source/common/quant.h	/^    void setQPforQuant(const CUData& ctu, int qp);$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& ctu, int qp)
X265_NS::Quant::signBitHidingHDQ	../../source/common/quant.h	/^    uint32_t signBitHidingHDQ(int16_t* qcoeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codingParameters, uint32_t log2TrSize);$/;"	p	class:X265_NS::Quant	access:protected	signature:(int16_t* qcoeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codingParameters, uint32_t log2TrSize)
X265_NS::Quant::ssimDistortion	../../source/common/quant.h	/^    uint64_t ssimDistortion(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride,$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx)
X265_NS::Quant::transformNxN	../../source/common/quant.h	/^    uint32_t transformNxN(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride, coeff_t* coeff,$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride, coeff_t* coeff, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx, bool useTransformSkip)
X265_NS::Quant::~Quant	../../source/common/quant.h	/^    ~Quant();$/;"	p	class:X265_NS::Quant	access:public	signature:()
X265_NS::RAWOutput	../../source/output/raw.h	/^class RAWOutput : public OutputFile$/;"	c	namespace:X265_NS	inherits:OutputFile
X265_NS::RAWOutput::RAWOutput	../../source/output/raw.h	/^    RAWOutput(const char* fname, InputFileInfo&);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(const char* fname, InputFileInfo&)
X265_NS::RAWOutput::b_fail	../../source/output/raw.h	/^    bool b_fail;$/;"	m	class:X265_NS::RAWOutput	access:protected
X265_NS::RAWOutput::closeFile	../../source/output/raw.h	/^    void closeFile(int64_t largest_pts, int64_t second_largest_pts);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(int64_t largest_pts, int64_t second_largest_pts)
X265_NS::RAWOutput::getName	../../source/output/raw.h	/^    const char* getName() const { return "raw"; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:() const
X265_NS::RAWOutput::isFail	../../source/output/raw.h	/^    bool isFail() const { return b_fail; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:() const
X265_NS::RAWOutput::needPTS	../../source/output/raw.h	/^    bool needPTS() const { return false; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:() const
X265_NS::RAWOutput::ofs	../../source/output/raw.h	/^    FILE* ofs;$/;"	m	class:X265_NS::RAWOutput	access:protected
X265_NS::RAWOutput::release	../../source/output/raw.h	/^    void release() { delete this; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:()
X265_NS::RAWOutput::setParam	../../source/output/raw.h	/^    void setParam(x265_param* param);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(x265_param* param)
X265_NS::RAWOutput::writeFrame	../../source/output/raw.h	/^    int writeFrame(const x265_nal* nal, uint32_t nalcount, x265_picture&);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(const x265_nal* nal, uint32_t nalcount, x265_picture&)
X265_NS::RAWOutput::writeHeaders	../../source/output/raw.h	/^    int writeHeaders(const x265_nal* nal, uint32_t nalcount);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(const x265_nal* nal, uint32_t nalcount)
X265_NS::RDCost	../../source/encoder/rdcost.h	/^class RDCost$/;"	c	namespace:X265_NS
X265_NS::RDCost::calcPsyRdCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcPsyRdCost(sse_t distortion, uint32_t bits, uint32_t psycost) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(sse_t distortion, uint32_t bits, uint32_t psycost) const
X265_NS::RDCost::calcRdCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcRdCost(sse_t distortion, uint32_t bits) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(sse_t distortion, uint32_t bits) const
X265_NS::RDCost::calcRdSADCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcRdSADCost(uint32_t sadCost, uint32_t bits) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint32_t sadCost, uint32_t bits) const
X265_NS::RDCost::calcSsimRdCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcSsimRdCost(uint64_t distortion, uint32_t bits, uint32_t ssimCost) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint64_t distortion, uint32_t bits, uint32_t ssimCost) const
X265_NS::RDCost::getCost	../../source/encoder/rdcost.h	/^    inline uint32_t getCost(uint32_t bits) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint32_t bits) const
X265_NS::RDCost::m_chromaDistWeight	../../source/encoder/rdcost.h	/^    uint32_t  m_chromaDistWeight[2];$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::m_lambda	../../source/encoder/rdcost.h	/^    uint64_t  m_lambda;$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::m_lambda2	../../source/encoder/rdcost.h	/^    uint64_t  m_lambda2;$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::m_psyRd	../../source/encoder/rdcost.h	/^    uint32_t  m_psyRd;$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::m_psyRdBase	../../source/encoder/rdcost.h	/^    uint32_t  m_psyRdBase;$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::m_qp	../../source/encoder/rdcost.h	/^    int       m_qp; \/* QP used to configure lambda, may be higher than QP_MAX_SPEC but <= QP_MAX_MAX *\/$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::m_ssimRd	../../source/encoder/rdcost.h	/^    uint32_t  m_ssimRd;$/;"	m	class:X265_NS::RDCost	access:public
X265_NS::RDCost::psyCost	../../source/encoder/rdcost.h	/^    inline int psyCost(int size, const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(int size, const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride) const
X265_NS::RDCost::scaleChromaDist	../../source/encoder/rdcost.h	/^    inline sse_t scaleChromaDist(uint32_t plane, sse_t dist) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint32_t plane, sse_t dist) const
X265_NS::RDCost::setLambda	../../source/encoder/rdcost.h	/^    void setLambda(double lambda2, double lambda)$/;"	f	class:X265_NS::RDCost	access:public	signature:(double lambda2, double lambda)
X265_NS::RDCost::setPsyRdScale	../../source/encoder/rdcost.h	/^    void setPsyRdScale(double scale)                { m_psyRdBase = (uint32_t)floor(65536.0 * scale * 0.33); }$/;"	f	class:X265_NS::RDCost	access:public	signature:(double scale)
X265_NS::RDCost::setQP	../../source/encoder/rdcost.h	/^    void setQP(const Slice& slice, int qp)$/;"	f	class:X265_NS::RDCost	access:public	signature:(const Slice& slice, int qp)
X265_NS::RDCost::setSsimRd	../../source/encoder/rdcost.h	/^    void setSsimRd(int ssimRd) { m_ssimRd = ssimRd; };$/;"	f	class:X265_NS::RDCost	access:public	signature:(int ssimRd)
X265_NS::RPS	../../source/common/slice.h	/^struct RPS$/;"	s	namespace:X265_NS
X265_NS::RPS::RPS	../../source/common/slice.h	/^    RPS()$/;"	f	struct:X265_NS::RPS	access:public	signature:()
X265_NS::RPS::bUsed	../../source/common/slice.h	/^    bool bUsed[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::blongtermPicsDeltaPocMSBPresent	../../source/common/slice.h	/^    bool blongtermPicsDeltaPocMSBPresent;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::deltaPOC	../../source/common/slice.h	/^    int  deltaPOC[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::longtermPicsDeltaPocMSBCycle	../../source/common/slice.h	/^    int  longtermPicsDeltaPocMSBCycle;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::longtermPicsLSB	../../source/common/slice.h	/^    int  longtermPicsLSB;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::numberOfLongTermPictures	../../source/common/slice.h	/^    int  numberOfLongTermPictures;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::numberOfNegativePictures	../../source/common/slice.h	/^    int  numberOfNegativePictures;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::numberOfPictures	../../source/common/slice.h	/^    int  numberOfPictures;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::numberOfPositivePictures	../../source/common/slice.h	/^    int  numberOfPositivePictures;$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::poc	../../source/common/slice.h	/^    int  poc[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPS::sortDeltaPOC	../../source/common/slice.h	/^    void sortDeltaPOC(unsigned int maxDecPicBuffer );$/;"	p	struct:X265_NS::RPS	access:public	signature:(unsigned int maxDecPicBuffer )
X265_NS::RPS::temporalLayer	../../source/common/slice.h	/^    int  temporalLayer[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
X265_NS::RPSListNode	../../source/encoder/encoder.h	/^struct RPSListNode$/;"	s	namespace:X265_NS
X265_NS::RPSListNode::count	../../source/encoder/encoder.h	/^    int count;$/;"	m	struct:X265_NS::RPSListNode	access:public
X265_NS::RPSListNode::idx	../../source/encoder/encoder.h	/^    int idx;$/;"	m	struct:X265_NS::RPSListNode	access:public
X265_NS::RPSListNode::next	../../source/encoder/encoder.h	/^    RPSListNode* next;$/;"	m	struct:X265_NS::RPSListNode	access:public
X265_NS::RPSListNode::prior	../../source/encoder/encoder.h	/^    RPSListNode* prior;$/;"	m	struct:X265_NS::RPSListNode	access:public
X265_NS::RPSListNode::rps	../../source/encoder/encoder.h	/^    RPS* rps;$/;"	m	struct:X265_NS::RPSListNode	access:public
X265_NS::RQTData	../../source/encoder/search.h	/^struct RQTData$/;"	s	namespace:X265_NS
X265_NS::RQTData::bidirPredYuv	../../source/encoder/search.h	/^    Yuv      bidirPredYuv[2];$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::coeffRQT	../../source/encoder/search.h	/^    coeff_t* coeffRQT[3];  \/* coeff storage for entire CTU for each RQT layer *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::cur	../../source/encoder/search.h	/^    Entropy  cur;     \/* starting context for current CU *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::reconQtYuv	../../source/encoder/search.h	/^    Yuv      reconQtYuv;   \/* recon storage for entire CTU for each RQT layer (intra) *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::resiQtYuv	../../source/encoder/search.h	/^    ShortYuv resiQtYuv;    \/* residual storage for entire CTU for each RQT layer (inter) *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::rqtRoot	../../source/encoder/search.h	/^    Entropy  rqtRoot;      \/* residual quad-tree start context *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::rqtTemp	../../source/encoder/search.h	/^    Entropy  rqtTemp;      \/* residual quad-tree temp context *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::rqtTest	../../source/encoder/search.h	/^    Entropy  rqtTest;      \/* residual quad-tree test context *\/$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::tmpPredYuv	../../source/encoder/search.h	/^    Yuv      tmpPredYuv;$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RQTData::tmpResiYuv	../../source/encoder/search.h	/^    ShortYuv tmpResiYuv;$/;"	m	struct:X265_NS::RQTData	access:public
X265_NS::RateControl	../../source/encoder/ratecontrol.h	/^class RateControl$/;"	c	namespace:X265_NS
X265_NS::RateControl::RateControl	../../source/encoder/ratecontrol.h	/^    RateControl(x265_param& p);$/;"	p	class:X265_NS::RateControl	access:public	signature:(x265_param& p)
X265_NS::RateControl::__anon19::qpBufValid	../../source/encoder/ratecontrol.h	/^        uint8_t qpBufValid;      \/* In order to handle pyramid reordering, QP buffer acts as a stack.$/;"	m	struct:X265_NS::RateControl::__anon19	access:public
X265_NS::RateControl::__anon19::qpBuffer	../../source/encoder/ratecontrol.h	/^        uint16_t *qpBuffer[MAX_TLAYER+1];$/;"	m	struct:X265_NS::RateControl::__anon19	access:public
X265_NS::RateControl::accumPQpUpdate	../../source/encoder/ratecontrol.h	/^    void   accumPQpUpdate();$/;"	p	class:X265_NS::RateControl	access:protected	signature:()
X265_NS::RateControl::analyseABR2Pass	../../source/encoder/ratecontrol.h	/^    bool   analyseABR2Pass(uint64_t allAvailableBits);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(uint64_t allAvailableBits)
X265_NS::RateControl::checkAndResetABR	../../source/encoder/ratecontrol.h	/^    void   checkAndResetABR(RateControlEntry* rce, bool isFrameDone);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(RateControlEntry* rce, bool isFrameDone)
X265_NS::RateControl::clipQscale	../../source/encoder/ratecontrol.h	/^    double clipQscale(Frame* pic, RateControlEntry* rce, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame* pic, RateControlEntry* rce, double q)
X265_NS::RateControl::countExpectedBits	../../source/encoder/ratecontrol.h	/^    double countExpectedBits(int startPos, int framesCount);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int startPos, int framesCount)
X265_NS::RateControl::cuTreeReadFor2Pass	../../source/encoder/ratecontrol.h	/^    bool cuTreeReadFor2Pass(Frame* curFrame);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame)
X265_NS::RateControl::destroy	../../source/encoder/ratecontrol.h	/^    void destroy();$/;"	p	class:X265_NS::RateControl	access:public	signature:()
X265_NS::RateControl::estIQscale	../../source/encoder/ratecontrol.h	/^    double estIQscale(double rate, double lowresSatd);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double rate, double lowresSatd)
X265_NS::RateControl::estimateBRate	../../source/encoder/ratecontrol.h	/^    double estimateBRate(double lowresSatd, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double lowresSatd, double q)
X265_NS::RateControl::estimateIRate	../../source/encoder/ratecontrol.h	/^    double estimateIRate(double lowresSatd, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double lowresSatd, double q)
X265_NS::RateControl::estimatePRate	../../source/encoder/ratecontrol.h	/^    double estimatePRate(double lowresSatd, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double lowresSatd, double q)
X265_NS::RateControl::findUnderflow	../../source/encoder/ratecontrol.h	/^    bool   findUnderflow(double *fills, int *t0, int *t1, int over, int framesCount);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double *fills, int *t0, int *t1, int over, int framesCount)
X265_NS::RateControl::fixUnderflow	../../source/encoder/ratecontrol.h	/^    bool   fixUnderflow(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax)
X265_NS::RateControl::getDiffLimitedQScale	../../source/encoder/ratecontrol.h	/^    double getDiffLimitedQScale(RateControlEntry *rce, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(RateControlEntry *rce, double q)
X265_NS::RateControl::getInitQScale	../../source/encoder/ratecontrol.h	/^    double getInitQScale(Frame *curFrame, RateControlEntry *rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame *curFrame, RateControlEntry *rce)
X265_NS::RateControl::getPredictorType	../../source/encoder/ratecontrol.h	/^    int    getPredictorType(int lowresSliceType, int sliceType);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int lowresSliceType, int sliceType)
X265_NS::RateControl::getQScale	../../source/encoder/ratecontrol.h	/^    double getQScale(RateControlEntry *rce, double rateFactor);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(RateControlEntry *rce, double rateFactor)
X265_NS::RateControl::getQScaleI	../../source/encoder/ratecontrol.h	/^    double getQScaleI(Frame *curFrame, RateControlEntry *rce, double rateFactor);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor)
X265_NS::RateControl::getQScaleP	../../source/encoder/ratecontrol.h	/^    double getQScaleP(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool& bHighDiscrepency);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool& bHighDiscrepency)
X265_NS::RateControl::getZone	../../source/encoder/ratecontrol.h	/^    x265_zone* getZone();$/;"	p	class:X265_NS::RateControl	access:protected	signature:()
X265_NS::RateControl::hrdFullness	../../source/encoder/ratecontrol.h	/^    void hrdFullness(SEIBufferingPeriod* sei);$/;"	p	class:X265_NS::RateControl	access:public	signature:(SEIBufferingPeriod* sei)
X265_NS::RateControl::init	../../source/encoder/ratecontrol.h	/^    bool init(const SPS& sps);$/;"	p	class:X265_NS::RateControl	access:public	signature:(const SPS& sps)
X265_NS::RateControl::initFramePredictors	../../source/encoder/ratecontrol.h	/^    void   initFramePredictors();$/;"	p	class:X265_NS::RateControl	access:protected	signature:()
X265_NS::RateControl::initHRD	../../source/encoder/ratecontrol.h	/^    void initHRD(SPS& sps);$/;"	p	class:X265_NS::RateControl	access:public	signature:(SPS& sps)
X265_NS::RateControl::initPass2	../../source/encoder/ratecontrol.h	/^    bool   initPass2();$/;"	p	class:X265_NS::RateControl	access:public	signature:()
X265_NS::RateControl::m_2pass	../../source/encoder/ratecontrol.h	/^    bool    m_2pass;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_accumPNorm	../../source/encoder/ratecontrol.h	/^    double  m_accumPNorm;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_accumPQp	../../source/encoder/ratecontrol.h	/^    double  m_accumPQp;          \/* for determining I-frame quant *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_adjWeight	../../source/encoder/ratecontrol.h	/^    double  m_adjWeight;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_amortizeFraction	../../source/encoder/ratecontrol.h	/^    double m_amortizeFraction;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::m_amortizeFrames	../../source/encoder/ratecontrol.h	/^    int    m_amortizeFrames;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::m_avgPFrameQp	../../source/encoder/ratecontrol.h	/^    double m_avgPFrameQp;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bTerminated	../../source/encoder/ratecontrol.h	/^    bool    m_bTerminated;       \/* set true when encoder is closing *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bframeBits	../../source/encoder/ratecontrol.h	/^    int64_t m_bframeBits;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bitrate	../../source/encoder/ratecontrol.h	/^    double m_bitrate;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufPeriodSEI	../../source/encoder/ratecontrol.h	/^    SEIBufferingPeriod m_bufPeriodSEI;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufferExcess	../../source/encoder/ratecontrol.h	/^    double m_bufferExcess;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufferFill	../../source/encoder/ratecontrol.h	/^    double m_bufferFill;       \/* planned buffer, if all in-progress frames hit their bit budget *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufferFillActual	../../source/encoder/ratecontrol.h	/^    double m_bufferFillActual;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufferFillFinal	../../source/encoder/ratecontrol.h	/^    double m_bufferFillFinal;  \/* real buffer as of the last finished frame *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufferRate	../../source/encoder/ratecontrol.h	/^    double m_bufferRate;       \/* # of bits added to buffer_fill after each frame *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_bufferSize	../../source/encoder/ratecontrol.h	/^    double m_bufferSize;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrPartSumB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrPartSumB[MAX_TLAYER];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrRatioB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrRatioB[MAX_TLAYER];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrRatioP	../../source/encoder/ratecontrol.h	/^    double  m_cplxrRatioP;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrSum	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSum;          \/* sum of bits*qscale\/rceq *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrSumB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumB[MAX_TLAYER];         \/* sum of bits*adjqscale of B frames *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrSumLowresB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumLowresB[MAX_TLAYER];   \/* sum of complex of low resolution B frames *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrSumLowresP	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumLowresP;   \/* sum of complex of low resolution P frames *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cplxrSumP	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumP;         \/* sum of bits*adjqscale of P frames *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cuTreeStats	../../source/encoder/ratecontrol.h	/^    } m_cuTreeStats;$/;"	m	class:X265_NS::RateControl	typeref:struct:X265_NS::RateControl::__anon19	access:public
X265_NS::RateControl::m_curBsliceAccumNum	../../source/encoder/ratecontrol.h	/^    int     m_curBsliceAccumNum;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_curSlice	../../source/encoder/ratecontrol.h	/^    Slice*      m_curSlice;      \/* all info about the current frame *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_currentSatd	../../source/encoder/ratecontrol.h	/^    int64_t m_currentSatd;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cutreeStatFileIn	../../source/encoder/ratecontrol.h	/^    FILE*   m_cutreeStatFileIn;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_cutreeStatFileOut	../../source/encoder/ratecontrol.h	/^    FILE*   m_cutreeStatFileOut;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_encOrder	../../source/encoder/ratecontrol.h	/^    int     *m_encOrder;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_encodedBits	../../source/encoder/ratecontrol.h	/^    int64_t m_encodedBits;      \/* bits used for encoded frames (without ammortization) *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_encodedBitsWindow	../../source/encoder/ratecontrol.h	/^    int64_t m_encodedBitsWindow[50];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_expectedBitsSum	../../source/encoder/ratecontrol.h	/^    double  m_expectedBitsSum;   \/* sum of qscale2bits after rceq, ratefactor, and overflow, only includes finished frames *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_finalFrameCount	../../source/encoder/ratecontrol.h	/^    int     m_finalFrameCount;   \/* set when encoder begins flushing *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_fps	../../source/encoder/ratecontrol.h	/^    double  m_fps;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_frameDuration	../../source/encoder/ratecontrol.h	/^    double m_frameDuration;     \/* current frame duration in seconds *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_framesDone	../../source/encoder/ratecontrol.h	/^    int     m_framesDone;        \/* # of frames passed through RateCotrol already *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_framesDoneGlobal	../../source/encoder/ratecontrol.h	/^    int     m_framesDoneGlobal;   \/* total # of frames passed through RateCotrol *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_ipOffset	../../source/encoder/ratecontrol.h	/^    double  m_ipOffset;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isAbr	../../source/encoder/ratecontrol.h	/^    bool   m_isAbr;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isAbrReset	../../source/encoder/ratecontrol.h	/^    bool   m_isAbrReset;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isCbr	../../source/encoder/ratecontrol.h	/^    bool   m_isCbr;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isFirstMiniGop	../../source/encoder/ratecontrol.h	/^    bool   m_isFirstMiniGop;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isGopReEncoded	../../source/encoder/ratecontrol.h	/^    bool    m_isGopReEncoded;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isGrainEnabled	../../source/encoder/ratecontrol.h	/^    bool   m_isGrainEnabled;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isNextGop	../../source/encoder/ratecontrol.h	/^    bool   m_isNextGop;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isPatternPresent	../../source/encoder/ratecontrol.h	/^    bool    m_isPatternPresent;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isQpModified	../../source/encoder/ratecontrol.h	/^    bool    m_isQpModified;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isSceneTransition	../../source/encoder/ratecontrol.h	/^    bool    m_isSceneTransition;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isVbv	../../source/encoder/ratecontrol.h	/^    bool   m_isVbv;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_isWeakCorr	../../source/encoder/ratecontrol.h	/^    bool   m_isWeakCorr;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_keepQ	../../source/encoder/ratecontrol.h	/^    bool    m_keepQ;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastAbrResetPoc	../../source/encoder/ratecontrol.h	/^    int    m_lastAbrResetPoc;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastAccumPNorm	../../source/encoder/ratecontrol.h	/^    double  m_lastAccumPNorm;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastBsliceSatdCost	../../source/encoder/ratecontrol.h	/^    int64_t m_lastBsliceSatdCost;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastNonBPictType	../../source/encoder/ratecontrol.h	/^    int     m_lastNonBPictType;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastPFrame	../../source/encoder/ratecontrol.h	/^    Frame*  m_lastPFrame;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastPredictorReset	../../source/encoder/ratecontrol.h	/^    int     m_lastPredictorReset;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastQScaleFor	../../source/encoder/ratecontrol.h	/^    double  m_lastQScaleFor[3];  \/* last qscale for a specific pict type, used for max_diff & ipb factor stuff *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastRceq	../../source/encoder/ratecontrol.h	/^    double  m_lastRceq;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lastRemovedSatdCost	../../source/encoder/ratecontrol.h	/^    int64_t m_lastRemovedSatdCost;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_leadingNoBSatd	../../source/encoder/ratecontrol.h	/^    int64_t m_leadingNoBSatd;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lmax	../../source/encoder/ratecontrol.h	/^    double  m_lmax[3];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lmin	../../source/encoder/ratecontrol.h	/^    double  m_lmin[3];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_lstep	../../source/encoder/ratecontrol.h	/^    double  m_lstep;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_miniGopNum	../../source/encoder/ratecontrol.h	/^    int     m_miniGopNum;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_movingAvgSum	../../source/encoder/ratecontrol.h	/^    double  m_movingAvgSum;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_ncu	../../source/encoder/ratecontrol.h	/^    int         m_ncu;           \/* number of CUs in a frame *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_noise	../../source/encoder/ratecontrol.h	/^    int    m_noise;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_nominalRemovalTime	../../source/encoder/ratecontrol.h	/^    double  m_nominalRemovalTime;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_numBframesInPattern	../../source/encoder/ratecontrol.h	/^    int     m_numBframesInPattern;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_numEntries	../../source/encoder/ratecontrol.h	/^    int     m_numEntries;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_param	../../source/encoder/ratecontrol.h	/^    x265_param* m_param;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_partialResidualCost	../../source/encoder/ratecontrol.h	/^    int    m_partialResidualCost;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::m_partialResidualFrames	../../source/encoder/ratecontrol.h	/^    int    m_partialResidualFrames;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::m_pbOffset	../../source/encoder/ratecontrol.h	/^    double  m_pbOffset;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_pred	../../source/encoder/ratecontrol.h	/^    Predictor m_pred[4];       \/* Slice predictors to preidct bits for each Slice type - I,P,Bref and B *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_predType	../../source/encoder/ratecontrol.h	/^    int     m_predType;       \/* Type of slice predictors to be used - depends on the slice type *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_predictedBits	../../source/encoder/ratecontrol.h	/^    int64_t m_predictedBits;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_prevCpbFinalAT	../../source/encoder/ratecontrol.h	/^    double  m_prevCpbFinalAT;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_propCoeff	../../source/encoder/ratecontrol.h	/^    double  m_propCoeff;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_qCompress	../../source/encoder/ratecontrol.h	/^    double  m_qCompress;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_qScaleForFramePlannedSize	../../source/encoder/ratecontrol.h	/^    double  m_qScaleForFramePlannedSize;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_qp	../../source/encoder/ratecontrol.h	/^    int         m_qp;            \/* updated qp for current frame *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_qpConstant	../../source/encoder/ratecontrol.h	/^    int     m_qpConstant[3];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_qpToEncodedBits	../../source/encoder/ratecontrol.h	/^    double  m_qpToEncodedBits[QP_MAX_MAX + 1];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_rateFactorConstant	../../source/encoder/ratecontrol.h	/^    double m_rateFactorConstant;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_rateFactorMaxDecrement	../../source/encoder/ratecontrol.h	/^    double m_rateFactorMaxDecrement; \/* don't allow RF below (this value). *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_rateFactorMaxIncrement	../../source/encoder/ratecontrol.h	/^    double m_rateFactorMaxIncrement; \/* Don't allow RF above (CRF + this value). *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_rateTolerance	../../source/encoder/ratecontrol.h	/^    double m_rateTolerance;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_rce2Pass	../../source/encoder/ratecontrol.h	/^    RateControlEntry* m_rce2Pass;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_reencode	../../source/encoder/ratecontrol.h	/^    int     m_reencode;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_residualCost	../../source/encoder/ratecontrol.h	/^    int    m_residualCost;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::m_residualFrames	../../source/encoder/ratecontrol.h	/^    int    m_residualFrames;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::m_satdCostWindow	../../source/encoder/ratecontrol.h	/^    int64_t m_satdCostWindow[50];$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_shortTermCplxCount	../../source/encoder/ratecontrol.h	/^    double  m_shortTermCplxCount;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_shortTermCplxSum	../../source/encoder/ratecontrol.h	/^    double  m_shortTermCplxSum;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_singleFrameVbv	../../source/encoder/ratecontrol.h	/^    bool   m_singleFrameVbv;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_sliceType	../../source/encoder/ratecontrol.h	/^    SliceType   m_sliceType;     \/* Current frame type *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_sliderPos	../../source/encoder/ratecontrol.h	/^    int     m_sliderPos;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_start	../../source/encoder/ratecontrol.h	/^    int     m_start;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_startEndOrder	../../source/encoder/ratecontrol.h	/^    ThreadSafeInteger m_startEndOrder;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_statFileOut	../../source/encoder/ratecontrol.h	/^    FILE*   m_statFileOut;$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_totalBits	../../source/encoder/ratecontrol.h	/^    int64_t m_totalBits;        \/* total bits used for already encoded frames (after ammortization) *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_vbvMaxRate	../../source/encoder/ratecontrol.h	/^    double m_vbvMaxRate;       \/* in kbps *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::m_wantedBitsWindow	../../source/encoder/ratecontrol.h	/^    double  m_wantedBitsWindow;  \/* target bitrate * window *\/$/;"	m	class:X265_NS::RateControl	access:public
X265_NS::RateControl::predictRowsSizeSum	../../source/encoder/ratecontrol.h	/^    double predictRowsSizeSum(Frame* pic, RateControlEntry* rce, double qpm, int32_t& encodedBits);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame* pic, RateControlEntry* rce, double qpm, int32_t& encodedBits)
X265_NS::RateControl::predictSize	../../source/encoder/ratecontrol.h	/^    double predictSize(Predictor *p, double q, double var);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Predictor *p, double q, double var)
X265_NS::RateControl::rateControlEnd	../../source/encoder/ratecontrol.h	/^    int  rateControlEnd(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler)
X265_NS::RateControl::rateControlSliceType	../../source/encoder/ratecontrol.h	/^    int  rateControlSliceType(int frameNum);$/;"	p	class:X265_NS::RateControl	access:public	signature:(int frameNum)
X265_NS::RateControl::rateControlStart	../../source/encoder/ratecontrol.h	/^    int  rateControlStart(Frame* curFrame, RateControlEntry* rce, Encoder* enc);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, RateControlEntry* rce, Encoder* enc)
X265_NS::RateControl::rateControlUpdateStats	../../source/encoder/ratecontrol.h	/^    void rateControlUpdateStats(RateControlEntry* rce);$/;"	p	class:X265_NS::RateControl	access:public	signature:(RateControlEntry* rce)
X265_NS::RateControl::rateEstimateQscale	../../source/encoder/ratecontrol.h	/^    double rateEstimateQscale(Frame* curFrame, RateControlEntry *rce, Encoder *enc);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame* curFrame, RateControlEntry *rce, Encoder *enc)
X265_NS::RateControl::reconfigureRC	../../source/encoder/ratecontrol.h	/^    void reconfigureRC();$/;"	p	class:X265_NS::RateControl	access:public	signature:()
X265_NS::RateControl::rowVbvRateControl	../../source/encoder/ratecontrol.h	/^    int  rowVbvRateControl(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv)
X265_NS::RateControl::s_defaultStatFileName	../../source/encoder/ratecontrol.h	/^    static const char* s_defaultStatFileName;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::s_slidingWindowFrames	../../source/encoder/ratecontrol.h	/^    static const int   s_slidingWindowFrames;$/;"	m	class:X265_NS::RateControl	access:protected
X265_NS::RateControl::setFinalFrameCount	../../source/encoder/ratecontrol.h	/^    void setFinalFrameCount(int count);$/;"	p	class:X265_NS::RateControl	access:public	signature:(int count)
X265_NS::RateControl::splitbUsed	../../source/encoder/ratecontrol.h	/^    void   splitbUsed(char deltapoc[], RateControlEntry *rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(char deltapoc[], RateControlEntry *rce)
X265_NS::RateControl::splitdeltaPOC	../../source/encoder/ratecontrol.h	/^    void   splitdeltaPOC(char deltapoc[], RateControlEntry *rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(char deltapoc[], RateControlEntry *rce)
X265_NS::RateControl::terminate	../../source/encoder/ratecontrol.h	/^    void terminate();          \/* un-block all waiting functions so encoder may close *\/$/;"	p	class:X265_NS::RateControl	access:public	signature:()
X265_NS::RateControl::tuneAbrQScaleFromFeedback	../../source/encoder/ratecontrol.h	/^    double tuneAbrQScaleFromFeedback(double qScale);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double qScale)
X265_NS::RateControl::tuneQScaleForGrain	../../source/encoder/ratecontrol.h	/^    double tuneQScaleForGrain(double rcOverflow);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double rcOverflow)
X265_NS::RateControl::updatePredictor	../../source/encoder/ratecontrol.h	/^    void   updatePredictor(Predictor *p, double q, double var, double bits);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Predictor *p, double q, double var, double bits)
X265_NS::RateControl::updateVbv	../../source/encoder/ratecontrol.h	/^    int    updateVbv(int64_t bits, RateControlEntry* rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int64_t bits, RateControlEntry* rce)
X265_NS::RateControl::updateVbvPlan	../../source/encoder/ratecontrol.h	/^    void   updateVbvPlan(Encoder* enc);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Encoder* enc)
X265_NS::RateControl::vbv2Pass	../../source/encoder/ratecontrol.h	/^    bool   vbv2Pass(uint64_t allAvailableBits, int frameCount, int startPos);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(uint64_t allAvailableBits, int frameCount, int startPos)
X265_NS::RateControl::writeRateControlFrameStats	../../source/encoder/ratecontrol.h	/^    int writeRateControlFrameStats(Frame* curFrame, RateControlEntry* rce);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, RateControlEntry* rce)
X265_NS::RateControlEntry	../../source/encoder/ratecontrol.h	/^struct RateControlEntry$/;"	s	namespace:X265_NS
X265_NS::RateControlEntry::amortizeFraction	../../source/encoder/ratecontrol.h	/^    double  amortizeFraction;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::amortizeFrames	../../source/encoder/ratecontrol.h	/^    double  amortizeFrames;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::bLastMiniGopBFrame	../../source/encoder/ratecontrol.h	/^    bool    bLastMiniGopBFrame;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::bframes	../../source/encoder/ratecontrol.h	/^    int     bframes;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::blurredComplexity	../../source/encoder/ratecontrol.h	/^    double  blurredComplexity;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::bufferFill	../../source/encoder/ratecontrol.h	/^    double  bufferFill;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::bufferRate	../../source/encoder/ratecontrol.h	/^    double  bufferRate;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::clippedDuration	../../source/encoder/ratecontrol.h	/^    double  clippedDuration;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::coeffBits	../../source/encoder/ratecontrol.h	/^    int      coeffBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::encodeOrder	../../source/encoder/ratecontrol.h	/^    int     encodeOrder;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::expectedBits	../../source/encoder/ratecontrol.h	/^    uint64_t expectedBits; \/* total expected bits up to the current frame (current one excluded) *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::expectedVbv	../../source/encoder/ratecontrol.h	/^    double   expectedVbv;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::frameDuration	../../source/encoder/ratecontrol.h	/^    double  frameDuration;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::frameSizeEstimated	../../source/encoder/ratecontrol.h	/^    double  frameSizeEstimated; \/* hold frameSize, updated from cu level vbv rc *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::frameSizeMaximum	../../source/encoder/ratecontrol.h	/^    double  frameSizeMaximum;   \/* max frame Size according to minCR restrictions and level of the video *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::frameSizePlanned	../../source/encoder/ratecontrol.h	/^    double  frameSizePlanned;  \/* frame Size decided by RateCotrol before encoding the frame *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::hrdTiming	../../source/encoder/ratecontrol.h	/^    HRDTiming        *hrdTiming;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::iBpRateRatio	../../source/encoder/ratecontrol.h	/^    double  iBpRateRatio;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::iCuCount	../../source/encoder/ratecontrol.h	/^    double   iCuCount;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::isActive	../../source/encoder/ratecontrol.h	/^    bool    isActive;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::isIdr	../../source/encoder/ratecontrol.h	/^    bool     isIdr;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::isKeyBslice	../../source/encoder/ratecontrol.h	/^    bool     isKeyBslice;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::keptAsRef	../../source/encoder/ratecontrol.h	/^    bool     keptAsRef;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::lastSatd	../../source/encoder/ratecontrol.h	/^    int64_t lastSatd;      \/* Contains the picture cost of the previous frame, required for resetAbr and VBV *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::leadingNoBSatd	../../source/encoder/ratecontrol.h	/^    int64_t leadingNoBSatd;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::miscBits	../../source/encoder/ratecontrol.h	/^    int      miscBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::movingAvgSum	../../source/encoder/ratecontrol.h	/^    double  movingAvgSum;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::mvBits	../../source/encoder/ratecontrol.h	/^    int      mvBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::newQScale	../../source/encoder/ratecontrol.h	/^    double   newQScale;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::newQp	../../source/encoder/ratecontrol.h	/^    double   newQp;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::pCuCount	../../source/encoder/ratecontrol.h	/^    double   pCuCount;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::pbFactor	../../source/encoder/ratecontrol.h	/^    double  pbFactor;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::pbQpOffset	../../source/encoder/ratecontrol.h	/^    double   pbQpOffset;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::picTimingSEI	../../source/encoder/ratecontrol.h	/^    SEIPictureTiming *picTimingSEI;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::poc	../../source/encoder/ratecontrol.h	/^    int     poc;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::qRceq	../../source/encoder/ratecontrol.h	/^    double  qRceq;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::qScale	../../source/encoder/ratecontrol.h	/^    double   qScale;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::qpAq	../../source/encoder/ratecontrol.h	/^    double  qpAq;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::qpNoVbv	../../source/encoder/ratecontrol.h	/^    double  qpNoVbv;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::qpPrev	../../source/encoder/ratecontrol.h	/^    double  qpPrev;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::qpaRc	../../source/encoder/ratecontrol.h	/^    double  qpaRc;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rowCplxrSum	../../source/encoder/ratecontrol.h	/^    double  rowCplxrSum;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rowPred	../../source/encoder/ratecontrol.h	/^    Predictor* rowPred[2];$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rowPreds	../../source/encoder/ratecontrol.h	/^    Predictor  rowPreds[3][2];$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rowTotalBits	../../source/encoder/ratecontrol.h	/^    int64_t rowTotalBits;  \/* update cplxrsum and totalbits at the end of 2 rows *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rowWantedBits	../../source/encoder/ratecontrol.h	/^    double  rowWantedBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rpsData	../../source/encoder/ratecontrol.h	/^    RPS      rpsData;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::rpsIdx	../../source/encoder/ratecontrol.h	/^    int      rpsIdx;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::scenecut	../../source/encoder/ratecontrol.h	/^    bool     scenecut;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::skipCuCount	../../source/encoder/ratecontrol.h	/^    double   skipCuCount;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::sliceType	../../source/encoder/ratecontrol.h	/^    int     sliceType;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RateControlEntry::temporalLayer	../../source/encoder/ratecontrol.h	/^    int      temporalLayer;$/;"	m	struct:X265_NS::RateControlEntry	access:public
X265_NS::RcStats	../../source/common/frame.h	/^struct RcStats$/;"	s	namespace:X265_NS
X265_NS::RcStats::bufferFillFinal	../../source/common/frame.h	/^    double   bufferFillFinal;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::coeff	../../source/common/frame.h	/^    double   coeff[4];$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::coeffBits	../../source/common/frame.h	/^    int      coeffBits;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::count	../../source/common/frame.h	/^    double   count[4];$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::cplxrSum	../../source/common/frame.h	/^    double   cplxrSum;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::cumulativePNorm	../../source/common/frame.h	/^    double   cumulativePNorm;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::cumulativePQp	../../source/common/frame.h	/^    double   cumulativePQp;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::encodeOrder	../../source/common/frame.h	/^    int      encodeOrder;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::encodedBits	../../source/common/frame.h	/^    int64_t  encodedBits;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::iCuCount	../../source/common/frame.h	/^    double   iCuCount;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::keptAsRef	../../source/common/frame.h	/^    int      keptAsRef;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::lastQScaleFor	../../source/common/frame.h	/^    double   lastQScaleFor[3];$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::miscBits	../../source/common/frame.h	/^    int      miscBits;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::mvBits	../../source/common/frame.h	/^    int      mvBits;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::newQScale	../../source/common/frame.h	/^    double   newQScale;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::offset	../../source/common/frame.h	/^    double   offset[4];$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::pCuCount	../../source/common/frame.h	/^    double   pCuCount;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::poc	../../source/common/frame.h	/^    int      poc;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::qRceq	../../source/common/frame.h	/^    double   qRceq;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::qScale	../../source/common/frame.h	/^    double   qScale;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::qpAq	../../source/common/frame.h	/^    double   qpAq;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::qpNoVbv	../../source/common/frame.h	/^    double   qpNoVbv;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::qpaRc	../../source/common/frame.h	/^    double   qpaRc;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::shortTermCplxCount	../../source/common/frame.h	/^    double   shortTermCplxCount;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::shortTermCplxSum	../../source/common/frame.h	/^    double   shortTermCplxSum;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::skipCuCount	../../source/common/frame.h	/^    double   skipCuCount;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::sliceType	../../source/common/frame.h	/^    int      sliceType;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::totalBits	../../source/common/frame.h	/^    int64_t  totalBits;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::RcStats::wantedBitsWindow	../../source/common/frame.h	/^    double   wantedBitsWindow;$/;"	m	struct:X265_NS::RcStats	access:public
X265_NS::ReconFile	../../source/output/output.h	/^class ReconFile$/;"	c	namespace:X265_NS
X265_NS::ReconFile::ReconFile	../../source/output/output.h	/^    ReconFile()           {}$/;"	f	class:X265_NS::ReconFile	access:public	signature:()
X265_NS::ReconFile::getName	../../source/output/output.h	/^    virtual const char *getName() const = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:() const
X265_NS::ReconFile::isFail	../../source/output/output.h	/^    virtual bool isFail() const = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:() const
X265_NS::ReconFile::open	../../source/output/output.h	/^    static ReconFile* open(const char *fname, int width, int height, uint32_t bitdepth,$/;"	p	class:X265_NS::ReconFile	access:public	signature:(const char *fname, int width, int height, uint32_t bitdepth, uint32_t fpsNum, uint32_t fpsDenom, int csp)
X265_NS::ReconFile::release	../../source/output/output.h	/^    virtual void release() = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:()
X265_NS::ReconFile::writePicture	../../source/output/output.h	/^    virtual bool writePicture(const x265_picture& pic) = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:(const x265_picture& pic)
X265_NS::ReconFile::~ReconFile	../../source/output/output.h	/^    virtual ~ReconFile()  {}$/;"	f	class:X265_NS::ReconFile	access:protected	signature:()
X265_NS::ReconPlay	../../source/output/reconplay.h	/^class ReconPlay : public Thread$/;"	c	namespace:X265_NS	inherits:Thread
X265_NS::ReconPlay::RECON_BUF_SIZE	../../source/output/reconplay.h	/^    enum { RECON_BUF_SIZE = 40 };$/;"	e	enum:X265_NS::ReconPlay::__anon1
X265_NS::ReconPlay::ReconPlay	../../source/output/reconplay.h	/^    ReconPlay(const char* commandLine, x265_param& param);$/;"	p	class:X265_NS::ReconPlay	access:public	signature:(const char* commandLine, x265_param& param)
X265_NS::ReconPlay::colorSpace	../../source/output/reconplay.h	/^    int    colorSpace;     \/* color space of frame *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::frameData	../../source/output/reconplay.h	/^    pixel* frameData[RECON_BUF_SIZE];$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::frameSize	../../source/output/reconplay.h	/^    size_t frameSize;      \/* size of one frame in pixels *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::height	../../source/output/reconplay.h	/^    int    height;         \/* height of frame *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::outputFrame	../../source/output/reconplay.h	/^    bool outputFrame();$/;"	p	class:X265_NS::ReconPlay	access:protected	signature:()
X265_NS::ReconPlay::outputPipe	../../source/output/reconplay.h	/^    FILE*  outputPipe;     \/* The output pipe for player *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::pipeValid	../../source/output/reconplay.h	/^    static bool pipeValid;$/;"	m	class:X265_NS::ReconPlay	access:public
X265_NS::ReconPlay::poc	../../source/output/reconplay.h	/^    int    poc[RECON_BUF_SIZE];$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::readCount	../../source/output/reconplay.h	/^    ThreadSafeInteger readCount;$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::threadActive	../../source/output/reconplay.h	/^    bool   threadActive;   \/* worker thread is active *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::threadMain	../../source/output/reconplay.h	/^    void threadMain();$/;"	p	class:X265_NS::ReconPlay	access:protected	signature:()
X265_NS::ReconPlay::width	../../source/output/reconplay.h	/^    int    width;          \/* width of frame *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::writeCount	../../source/output/reconplay.h	/^    ThreadSafeInteger writeCount;$/;"	m	class:X265_NS::ReconPlay	access:protected
X265_NS::ReconPlay::writePicture	../../source/output/reconplay.h	/^    bool writePicture(const x265_picture& pic);$/;"	p	class:X265_NS::ReconPlay	access:public	signature:(const x265_picture& pic)
X265_NS::ReconPlay::~ReconPlay	../../source/output/reconplay.h	/^    virtual ~ReconPlay();$/;"	p	class:X265_NS::ReconPlay	access:public	signature:()
X265_NS::RefIdxLastGOP	../../source/encoder/encoder.h	/^struct RefIdxLastGOP$/;"	s	namespace:X265_NS
X265_NS::RefIdxLastGOP::numRefIdxDefault	../../source/encoder/encoder.h	/^    int numRefIdxDefault[2];$/;"	m	struct:X265_NS::RefIdxLastGOP	access:public
X265_NS::RefIdxLastGOP::numRefIdxl0	../../source/encoder/encoder.h	/^    int numRefIdxl0[MAX_NUM_REF_IDX];$/;"	m	struct:X265_NS::RefIdxLastGOP	access:public
X265_NS::RefIdxLastGOP::numRefIdxl1	../../source/encoder/encoder.h	/^    int numRefIdxl1[MAX_NUM_REF_IDX];$/;"	m	struct:X265_NS::RefIdxLastGOP	access:public
X265_NS::ReferencePlanes	../../source/common/lowres.h	/^struct ReferencePlanes$/;"	s	namespace:X265_NS
X265_NS::ReferencePlanes::ReferencePlanes	../../source/common/lowres.h	/^    ReferencePlanes() { memset(this, 0, sizeof(ReferencePlanes)); }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:()
X265_NS::ReferencePlanes::__anon1::offset	../../source/common/lowres.h	/^        int      offset;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
X265_NS::ReferencePlanes::__anon1::round	../../source/common/lowres.h	/^        int      round;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
X265_NS::ReferencePlanes::__anon1::shift	../../source/common/lowres.h	/^        int      shift;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
X265_NS::ReferencePlanes::__anon1::weight	../../source/common/lowres.h	/^        int      weight;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
X265_NS::ReferencePlanes::chromaStride	../../source/common/lowres.h	/^    intptr_t chromaStride;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::fpelPlane	../../source/common/lowres.h	/^    pixel*   fpelPlane[3];$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::getCbAddr	../../source/common/lowres.h	/^    pixel* getCbAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return fpelPlane[1] + reconPic->m_cuOffsetC[ctuAddr] + reconPic->m_buOffsetC[absPartIdx]; }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::ReferencePlanes::getCrAddr	../../source/common/lowres.h	/^    pixel* getCrAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return fpelPlane[2] + reconPic->m_cuOffsetC[ctuAddr] + reconPic->m_buOffsetC[absPartIdx]; }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::ReferencePlanes::getLumaAddr	../../source/common/lowres.h	/^    pixel* getLumaAddr(uint32_t ctuAddr, uint32_t absPartIdx) { return fpelPlane[0] + reconPic->m_cuOffsetY[ctuAddr] + reconPic->m_buOffsetY[absPartIdx]; }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
X265_NS::ReferencePlanes::isLowres	../../source/common/lowres.h	/^    bool     isLowres;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::isWeighted	../../source/common/lowres.h	/^    bool     isWeighted;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::lowresMC	../../source/common/lowres.h	/^    inline pixel *lowresMC(intptr_t blockOffset, const MV& qmv, pixel *buf, intptr_t& outstride)$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(intptr_t blockOffset, const MV& qmv, pixel *buf, intptr_t& outstride)
X265_NS::ReferencePlanes::lowresPlane	../../source/common/lowres.h	/^    pixel*   lowresPlane[4];$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::lowresQPelCost	../../source/common/lowres.h	/^    inline int lowresQPelCost(pixel *fenc, intptr_t blockOffset, const MV& qmv, pixelcmp_t comp)$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(pixel *fenc, intptr_t blockOffset, const MV& qmv, pixelcmp_t comp)
X265_NS::ReferencePlanes::lumaStride	../../source/common/lowres.h	/^    intptr_t lumaStride;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::reconPic	../../source/common/lowres.h	/^    PicYuv*  reconPic;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
X265_NS::ReferencePlanes::w	../../source/common/lowres.h	/^    } w[3];$/;"	m	struct:X265_NS::ReferencePlanes	typeref:struct:X265_NS::ReferencePlanes::__anon1	access:public
X265_NS::SAO	../../source/encoder/sao.h	/^class SAO$/;"	c	namespace:X265_NS
X265_NS::SAO::MAX_NUM_SAO_CLASS	../../source/encoder/sao.h	/^    enum { MAX_NUM_SAO_CLASS = 32 };$/;"	e	enum:X265_NS::SAO::__anon7
X265_NS::SAO::NUM_EDGETYPE	../../source/encoder/sao.h	/^    enum { NUM_EDGETYPE = 5 };$/;"	e	enum:X265_NS::SAO::__anon10
X265_NS::SAO::NUM_PLANE	../../source/encoder/sao.h	/^    enum { NUM_PLANE = 3 };$/;"	e	enum:X265_NS::SAO::__anon11
X265_NS::SAO::OFFSET_THRESH	../../source/encoder/sao.h	/^    enum { OFFSET_THRESH = 1 << X265_MIN(X265_DEPTH - 5, 5) };$/;"	e	enum:X265_NS::SAO::__anon9
X265_NS::SAO::SAO	../../source/encoder/sao.cpp	/^SAO::SAO()$/;"	f	class:X265_NS::SAO	signature:()
X265_NS::SAO::SAO	../../source/encoder/sao.h	/^    SAO();$/;"	p	class:X265_NS::SAO	access:public	signature:()
X265_NS::SAO::SAOContexts	../../source/encoder/sao.h	/^    struct SAOContexts$/;"	s	class:X265_NS::SAO	access:public
X265_NS::SAO::SAOContexts::cur	../../source/encoder/sao.h	/^        Entropy cur;$/;"	m	struct:X265_NS::SAO::SAOContexts	access:public
X265_NS::SAO::SAOContexts::next	../../source/encoder/sao.h	/^        Entropy next;$/;"	m	struct:X265_NS::SAO::SAOContexts	access:public
X265_NS::SAO::SAOContexts::temp	../../source/encoder/sao.h	/^        Entropy temp;$/;"	m	struct:X265_NS::SAO::SAOContexts	access:public
X265_NS::SAO::SAO_BIT_INC	../../source/encoder/sao.h	/^    enum { SAO_BIT_INC = 0 }; \/* in HM12.0, it wrote as X265_MAX(X265_DEPTH - 10, 0) *\/$/;"	e	enum:X265_NS::SAO::__anon8
X265_NS::SAO::SAO_BO_BITS	../../source/encoder/sao.h	/^    enum { SAO_BO_BITS  = 5 };$/;"	e	enum:X265_NS::SAO::__anon6
X265_NS::SAO::SAO_DEPTHRATE_SIZE	../../source/encoder/sao.h	/^    enum { SAO_DEPTHRATE_SIZE = 4 };$/;"	e	enum:X265_NS::SAO::__anon12
X265_NS::SAO::SAO_MAX_DEPTH	../../source/encoder/sao.h	/^    enum { SAO_MAX_DEPTH = 4 };$/;"	e	enum:X265_NS::SAO::__anon5
X265_NS::SAO::allocSaoParam	../../source/encoder/sao.cpp	/^void SAO::allocSaoParam(SAOParam* saoParam) const$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam) const
X265_NS::SAO::allocSaoParam	../../source/encoder/sao.h	/^    void allocSaoParam(SAOParam* saoParam) const;$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam) const
X265_NS::SAO::applyPixelOffsets	../../source/encoder/sao.cpp	/^void SAO::applyPixelOffsets(int addr, int typeIdx, int plane)$/;"	f	class:X265_NS::SAO	signature:(int addr, int typeIdx, int plane)
X265_NS::SAO::applyPixelOffsets	../../source/encoder/sao.h	/^    void applyPixelOffsets(int addr, int typeIdx, int plane);$/;"	p	class:X265_NS::SAO	access:public	signature:(int addr, int typeIdx, int plane)
X265_NS::SAO::calcSaoRdoCost	../../source/encoder/sao.cpp	/^inline int64_t SAO::calcSaoRdoCost(int64_t distortion, uint32_t bits, int64_t lambda)$/;"	f	class:X265_NS::SAO	signature:(int64_t distortion, uint32_t bits, int64_t lambda)
X265_NS::SAO::calcSaoRdoCost	../../source/encoder/sao.h	/^    int64_t calcSaoRdoCost(int64_t distortion, uint32_t bits, int64_t lambda);$/;"	p	class:X265_NS::SAO	access:public	signature:(int64_t distortion, uint32_t bits, int64_t lambda)
X265_NS::SAO::calcSaoStatsCTU	../../source/encoder/sao.cpp	/^void SAO::calcSaoStatsCTU(int addr, int plane)$/;"	f	class:X265_NS::SAO	signature:(int addr, int plane)
X265_NS::SAO::calcSaoStatsCTU	../../source/encoder/sao.h	/^    void calcSaoStatsCTU(int addr, int plane);$/;"	p	class:X265_NS::SAO	access:public	signature:(int addr, int plane)
X265_NS::SAO::calcSaoStatsCu_BeforeDblk	../../source/encoder/sao.cpp	/^void SAO::calcSaoStatsCu_BeforeDblk(Frame* frame, int idxX, int idxY)$/;"	f	class:X265_NS::SAO	signature:(Frame* frame, int idxX, int idxY)
X265_NS::SAO::calcSaoStatsCu_BeforeDblk	../../source/encoder/sao.h	/^    void calcSaoStatsCu_BeforeDblk(Frame* pic, int idxX, int idxY);$/;"	p	class:X265_NS::SAO	access:public	signature:(Frame* pic, int idxX, int idxY)
X265_NS::SAO::create	../../source/encoder/sao.cpp	/^bool SAO::create(x265_param* param, int initCommon)$/;"	f	class:X265_NS::SAO	signature:(x265_param* param, int initCommon)
X265_NS::SAO::create	../../source/encoder/sao.h	/^    bool create(x265_param* param, int initCommon);$/;"	p	class:X265_NS::SAO	access:public	signature:(x265_param* param, int initCommon)
X265_NS::SAO::createFromRootNode	../../source/encoder/sao.cpp	/^void SAO::createFromRootNode(SAO* root)$/;"	f	class:X265_NS::SAO	signature:(SAO* root)
X265_NS::SAO::createFromRootNode	../../source/encoder/sao.h	/^    void createFromRootNode(SAO *root);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAO *root)
X265_NS::SAO::destroy	../../source/encoder/sao.cpp	/^void SAO::destroy(int destoryCommon)$/;"	f	class:X265_NS::SAO	signature:(int destoryCommon)
X265_NS::SAO::destroy	../../source/encoder/sao.h	/^    void destroy(int destoryCommon);$/;"	p	class:X265_NS::SAO	access:public	signature:(int destoryCommon)
X265_NS::SAO::estIterOffset	../../source/encoder/sao.cpp	/^void SAO::estIterOffset(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses)$/;"	f	class:X265_NS::SAO	signature:(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses)
X265_NS::SAO::estIterOffset	../../source/encoder/sao.h	/^    void estIterOffset(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses);$/;"	p	class:X265_NS::SAO	access:public	signature:(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses)
X265_NS::SAO::generateChromaOffsets	../../source/encoder/sao.cpp	/^void SAO::generateChromaOffsets(SaoCtuParam* ctuParam[3], int idxY, int idxX)$/;"	f	class:X265_NS::SAO	signature:(SaoCtuParam* ctuParam[3], int idxY, int idxX)
X265_NS::SAO::generateChromaOffsets	../../source/encoder/sao.h	/^    void generateChromaOffsets(SaoCtuParam* ctuParam[3], int idxY, int idxX);$/;"	p	class:X265_NS::SAO	access:public	signature:(SaoCtuParam* ctuParam[3], int idxY, int idxX)
X265_NS::SAO::generateLumaOffsets	../../source/encoder/sao.cpp	/^void SAO::generateLumaOffsets(SaoCtuParam* ctuParam, int idxY, int idxX)$/;"	f	class:X265_NS::SAO	signature:(SaoCtuParam* ctuParam, int idxY, int idxX)
X265_NS::SAO::generateLumaOffsets	../../source/encoder/sao.h	/^    void generateLumaOffsets(SaoCtuParam* ctuParam, int idxY, int idxX);$/;"	p	class:X265_NS::SAO	access:public	signature:(SaoCtuParam* ctuParam, int idxY, int idxX)
X265_NS::SAO::int32_t	../../source/encoder/sao.h	/^    typedef int32_t (PerClass[MAX_NUM_SAO_TYPE][MAX_NUM_SAO_CLASS]);$/;"	t	class:X265_NS::SAO	access:public
X265_NS::SAO::int32_t	../../source/encoder/sao.h	/^    typedef int32_t (PerPlane[NUM_PLANE][MAX_NUM_SAO_TYPE][MAX_NUM_SAO_CLASS]);$/;"	t	class:X265_NS::SAO	access:public
X265_NS::SAO::m_chromaFormat	../../source/encoder/sao.h	/^    int         m_chromaFormat;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_clipTable	../../source/encoder/sao.h	/^    pixel*      m_clipTable;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_clipTableBase	../../source/encoder/sao.h	/^    pixel*      m_clipTableBase;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_count	../../source/encoder/sao.h	/^    PerPlane    m_count;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_countPreDblk	../../source/encoder/sao.h	/^    PerPlane*   m_countPreDblk;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_depthSaoRate	../../source/encoder/sao.h	/^    double*     m_depthSaoRate;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_entropyCoder	../../source/encoder/sao.h	/^    Entropy     m_entropyCoder;$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::m_frame	../../source/encoder/sao.h	/^    Frame*      m_frame;$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::m_hChromaShift	../../source/encoder/sao.h	/^    int         m_hChromaShift;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_numCuInHeight	../../source/encoder/sao.h	/^    int         m_numCuInHeight;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_numCuInWidth	../../source/encoder/sao.h	/^    int         m_numCuInWidth;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_numNoSao	../../source/encoder/sao.h	/^    int         m_numNoSao[2];$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::m_offset	../../source/encoder/sao.h	/^    PerPlane    m_offset;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_offsetBo	../../source/encoder/sao.h	/^    int8_t      m_offsetBo[NUM_PLANE][MAX_NUM_SAO_CLASS];$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_offsetEo	../../source/encoder/sao.h	/^    int8_t      m_offsetEo[NUM_PLANE][NUM_EDGETYPE];$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_offsetOrg	../../source/encoder/sao.h	/^    PerPlane    m_offsetOrg;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_offsetOrgPreDblk	../../source/encoder/sao.h	/^    PerPlane*   m_offsetOrgPreDblk;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_param	../../source/encoder/sao.h	/^    x265_param* m_param;$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::m_rdContexts	../../source/encoder/sao.h	/^    SAOContexts m_rdContexts;$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::m_refDepth	../../source/encoder/sao.h	/^    int         m_refDepth;$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::m_tmpL1	../../source/encoder/sao.h	/^    pixel*      m_tmpL1[3];$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_tmpL2	../../source/encoder/sao.h	/^    pixel*      m_tmpL2[3];$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_tmpU	../../source/encoder/sao.h	/^    pixel*      m_tmpU[3];$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::m_vChromaShift	../../source/encoder/sao.h	/^    int         m_vChromaShift;$/;"	m	class:X265_NS::SAO	access:protected
X265_NS::SAO::processSaoUnitRow	../../source/encoder/sao.h	/^    void processSaoUnitRow(SaoCtuParam* ctuParam, int idxY, int plane);$/;"	p	class:X265_NS::SAO	access:public	signature:(SaoCtuParam* ctuParam, int idxY, int plane)
X265_NS::SAO::rdoSaoUnitCu	../../source/encoder/sao.cpp	/^void SAO::rdoSaoUnitCu(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr)$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr)
X265_NS::SAO::rdoSaoUnitCu	../../source/encoder/sao.h	/^    void rdoSaoUnitCu(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr)
X265_NS::SAO::rdoSaoUnitRowEnd	../../source/encoder/sao.cpp	/^void SAO::rdoSaoUnitRowEnd(const SAOParam* saoParam, int numctus)$/;"	f	class:X265_NS::SAO	signature:(const SAOParam* saoParam, int numctus)
X265_NS::SAO::rdoSaoUnitRowEnd	../../source/encoder/sao.h	/^    void rdoSaoUnitRowEnd(const SAOParam* saoParam, int numctus);$/;"	p	class:X265_NS::SAO	access:public	signature:(const SAOParam* saoParam, int numctus)
X265_NS::SAO::resetStats	../../source/encoder/sao.cpp	/^void SAO::resetStats()$/;"	f	class:X265_NS::SAO	signature:()
X265_NS::SAO::resetStats	../../source/encoder/sao.h	/^    void resetStats();$/;"	p	class:X265_NS::SAO	access:public	signature:()
X265_NS::SAO::s_eoTable	../../source/encoder/sao.cpp	/^const uint32_t SAO::s_eoTable[NUM_EDGETYPE] =$/;"	m	class:X265_NS::SAO	file:
X265_NS::SAO::s_eoTable	../../source/encoder/sao.h	/^    static const uint32_t s_eoTable[NUM_EDGETYPE];$/;"	m	class:X265_NS::SAO	access:public
X265_NS::SAO::saoChromaComponentParamDist	../../source/encoder/sao.cpp	/^void SAO::saoChromaComponentParamDist(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)
X265_NS::SAO::saoChromaComponentParamDist	../../source/encoder/sao.h	/^    void saoChromaComponentParamDist(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost)
X265_NS::SAO::saoLumaComponentParamDist	../../source/encoder/sao.cpp	/^void SAO::saoLumaComponentParamDist(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)
X265_NS::SAO::saoLumaComponentParamDist	../../source/encoder/sao.h	/^    void saoLumaComponentParamDist(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost)
X265_NS::SAO::saoStatsInitialOffset	../../source/encoder/sao.cpp	/^void SAO::saoStatsInitialOffset(int addr, int planes)$/;"	f	class:X265_NS::SAO	signature:(int addr, int planes)
X265_NS::SAO::saoStatsInitialOffset	../../source/encoder/sao.h	/^    void saoStatsInitialOffset(int addr, int planes);$/;"	p	class:X265_NS::SAO	access:public	signature:(int addr, int planes)
X265_NS::SAO::startSlice	../../source/encoder/sao.cpp	/^void SAO::startSlice(Frame* frame, Entropy& initState)$/;"	f	class:X265_NS::SAO	signature:(Frame* frame, Entropy& initState)
X265_NS::SAO::startSlice	../../source/encoder/sao.h	/^    void startSlice(Frame* pic, Entropy& initState);$/;"	p	class:X265_NS::SAO	access:public	signature:(Frame* pic, Entropy& initState)
X265_NS::SAOParam	../../source/common/common.h	/^struct SAOParam$/;"	s	namespace:X265_NS
X265_NS::SAOParam::SAOParam	../../source/common/common.h	/^    SAOParam()$/;"	f	struct:X265_NS::SAOParam	access:public	signature:()
X265_NS::SAOParam::bSaoFlag	../../source/common/common.h	/^    bool         bSaoFlag[2];$/;"	m	struct:X265_NS::SAOParam	access:public
X265_NS::SAOParam::ctuParam	../../source/common/common.h	/^    SaoCtuParam* ctuParam[3];$/;"	m	struct:X265_NS::SAOParam	access:public
X265_NS::SAOParam::numCuInWidth	../../source/common/common.h	/^    int          numCuInWidth;$/;"	m	struct:X265_NS::SAOParam	access:public
X265_NS::SAOParam::~SAOParam	../../source/common/common.h	/^    ~SAOParam()$/;"	f	struct:X265_NS::SAOParam	access:public	signature:()
X265_NS::SAOType	../../source/encoder/sao.h	/^enum SAOType$/;"	g	namespace:X265_NS
X265_NS::SAO_BO	../../source/encoder/sao.h	/^    SAO_BO,$/;"	e	enum:X265_NS::SAOType
X265_NS::SAO_EO_0	../../source/encoder/sao.h	/^    SAO_EO_0 = 0,$/;"	e	enum:X265_NS::SAOType
X265_NS::SAO_EO_1	../../source/encoder/sao.h	/^    SAO_EO_1,$/;"	e	enum:X265_NS::SAOType
X265_NS::SAO_EO_2	../../source/encoder/sao.h	/^    SAO_EO_2,$/;"	e	enum:X265_NS::SAOType
X265_NS::SAO_EO_3	../../source/encoder/sao.h	/^    SAO_EO_3,$/;"	e	enum:X265_NS::SAOType
X265_NS::SAO_MERGE_LEFT	../../source/common/common.h	/^    SAO_MERGE_LEFT,$/;"	e	enum:X265_NS::SaoMergeMode
X265_NS::SAO_MERGE_NONE	../../source/common/common.h	/^    SAO_MERGE_NONE,$/;"	e	enum:X265_NS::SaoMergeMode
X265_NS::SAO_MERGE_UP	../../source/common/common.h	/^    SAO_MERGE_UP$/;"	e	enum:X265_NS::SaoMergeMode
X265_NS::SAO_NUM_OFFSET	../../source/common/common.h	/^enum { SAO_NUM_OFFSET = 4 };$/;"	e	enum:X265_NS::__anon16
X265_NS::SCAN_DIAG	../../source/common/common.h	/^    SCAN_DIAG = 0,     \/\/ up-right diagonal scan$/;"	e	enum:X265_NS::ScanType
X265_NS::SCAN_HOR	../../source/common/common.h	/^    SCAN_HOR = 1,      \/\/ horizontal first scan$/;"	e	enum:X265_NS::ScanType
X265_NS::SCAN_VER	../../source/common/common.h	/^    SCAN_VER = 2,      \/\/ vertical first scan$/;"	e	enum:X265_NS::ScanType
X265_NS::SEI	../../source/encoder/sei.h	/^class SEI : public SyntaxElementWriter$/;"	c	namespace:X265_NS	inherits:SyntaxElementWriter
X265_NS::SEI::m_payloadSize	../../source/encoder/sei.h	/^    uint32_t        m_payloadSize;$/;"	m	class:X265_NS::SEI	access:protected
X265_NS::SEI::m_payloadType	../../source/encoder/sei.h	/^    SEIPayloadType  m_payloadType;$/;"	m	class:X265_NS::SEI	access:protected
X265_NS::SEI::setSize	../../source/encoder/sei.h	/^    void setSize(uint32_t size);$/;"	p	class:X265_NS::SEI	access:public	signature:(uint32_t size)
X265_NS::SEI::write	../../source/encoder/sei.h	/^    void write(Bitstream& bs, const SPS& sps);$/;"	p	class:X265_NS::SEI	access:public	signature:(Bitstream& bs, const SPS& sps)
X265_NS::SEI::writeByteAlign	../../source/encoder/sei.h	/^    void writeByteAlign();$/;"	p	class:X265_NS::SEI	access:protected	signature:()
X265_NS::SEI::writeSEI	../../source/encoder/sei.h	/^    virtual void writeSEI(const SPS&) = 0;$/;"	p	class:X265_NS::SEI	access:protected	signature:(const SPS&)
X265_NS::SEI::~SEI	../../source/encoder/sei.h	/^    virtual ~SEI() {}$/;"	f	class:X265_NS::SEI	access:public	signature:()
X265_NS::SEIActiveParameterSets	../../source/encoder/sei.h	/^class SEIActiveParameterSets : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIActiveParameterSets::SEIActiveParameterSets	../../source/encoder/sei.h	/^    SEIActiveParameterSets()$/;"	f	class:X265_NS::SEIActiveParameterSets	access:public	signature:()
X265_NS::SEIActiveParameterSets::m_noParamSetUpdateFlag	../../source/encoder/sei.h	/^    bool m_noParamSetUpdateFlag;$/;"	m	class:X265_NS::SEIActiveParameterSets	access:public
X265_NS::SEIActiveParameterSets::m_selfContainedCvsFlag	../../source/encoder/sei.h	/^    bool m_selfContainedCvsFlag;$/;"	m	class:X265_NS::SEIActiveParameterSets	access:public
X265_NS::SEIActiveParameterSets::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIActiveParameterSets	access:public	signature:(const SPS&)
X265_NS::SEIBufferingPeriod	../../source/encoder/sei.h	/^class SEIBufferingPeriod : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIBufferingPeriod::SEIBufferingPeriod	../../source/encoder/sei.h	/^    SEIBufferingPeriod()$/;"	f	class:X265_NS::SEIBufferingPeriod	access:public	signature:()
X265_NS::SEIBufferingPeriod::m_auCpbRemovalDelayDelta	../../source/encoder/sei.h	/^    uint32_t m_auCpbRemovalDelayDelta;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
X265_NS::SEIBufferingPeriod::m_cpbDelayOffset	../../source/encoder/sei.h	/^    bool     m_cpbDelayOffset;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
X265_NS::SEIBufferingPeriod::m_dpbDelayOffset	../../source/encoder/sei.h	/^    bool     m_dpbDelayOffset;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
X265_NS::SEIBufferingPeriod::m_initialCpbRemovalDelay	../../source/encoder/sei.h	/^    uint32_t m_initialCpbRemovalDelay;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
X265_NS::SEIBufferingPeriod::m_initialCpbRemovalDelayOffset	../../source/encoder/sei.h	/^    uint32_t m_initialCpbRemovalDelayOffset;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
X265_NS::SEIBufferingPeriod::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS& sps)$/;"	f	class:X265_NS::SEIBufferingPeriod	access:public	signature:(const SPS& sps)
X265_NS::SEIContentLightLevel	../../source/encoder/sei.h	/^class SEIContentLightLevel : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIContentLightLevel::SEIContentLightLevel	../../source/encoder/sei.h	/^    SEIContentLightLevel()$/;"	f	class:X265_NS::SEIContentLightLevel	access:public	signature:()
X265_NS::SEIContentLightLevel::max_content_light_level	../../source/encoder/sei.h	/^    uint16_t max_content_light_level;$/;"	m	class:X265_NS::SEIContentLightLevel	access:public
X265_NS::SEIContentLightLevel::max_pic_average_light_level	../../source/encoder/sei.h	/^    uint16_t max_pic_average_light_level;$/;"	m	class:X265_NS::SEIContentLightLevel	access:public
X265_NS::SEIContentLightLevel::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIContentLightLevel	access:public	signature:(const SPS&)
X265_NS::SEICreativeIntentMeta	../../source/encoder/sei.h	/^class SEICreativeIntentMeta : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEICreativeIntentMeta::SEICreativeIntentMeta	../../source/encoder/sei.h	/^    SEICreativeIntentMeta()$/;"	f	class:X265_NS::SEICreativeIntentMeta	access:public	signature:()
X265_NS::SEICreativeIntentMeta::cim	../../source/encoder/sei.h	/^    uint8_t *cim;$/;"	m	class:X265_NS::SEICreativeIntentMeta	access:public
X265_NS::SEICreativeIntentMeta::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEICreativeIntentMeta	access:public	signature:(const SPS&)
X265_NS::SEIDecodedPictureHash	../../source/encoder/sei.h	/^class SEIDecodedPictureHash : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIDecodedPictureHash::CHECKSUM	../../source/encoder/sei.h	/^        CHECKSUM,$/;"	e	enum:X265_NS::SEIDecodedPictureHash::Method
X265_NS::SEIDecodedPictureHash::CRC	../../source/encoder/sei.h	/^        CRC,$/;"	e	enum:X265_NS::SEIDecodedPictureHash::Method
X265_NS::SEIDecodedPictureHash::MD5	../../source/encoder/sei.h	/^        MD5,$/;"	e	enum:X265_NS::SEIDecodedPictureHash::Method
X265_NS::SEIDecodedPictureHash::Method	../../source/encoder/sei.h	/^    enum Method$/;"	g	class:X265_NS::SEIDecodedPictureHash	access:public
X265_NS::SEIDecodedPictureHash::SEIDecodedPictureHash	../../source/encoder/sei.h	/^    SEIDecodedPictureHash()$/;"	f	class:X265_NS::SEIDecodedPictureHash	access:public	signature:()
X265_NS::SEIDecodedPictureHash::m_digest	../../source/encoder/sei.h	/^    uint8_t m_digest[3][16];$/;"	m	class:X265_NS::SEIDecodedPictureHash	access:public
X265_NS::SEIDecodedPictureHash::m_method	../../source/encoder/sei.h	/^    } m_method;$/;"	m	class:X265_NS::SEIDecodedPictureHash	typeref:enum:X265_NS::SEIDecodedPictureHash::Method	access:public
X265_NS::SEIDecodedPictureHash::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS& sps)$/;"	f	class:X265_NS::SEIDecodedPictureHash	access:public	signature:(const SPS& sps)
X265_NS::SEIMasteringDisplayColorVolume	../../source/encoder/sei.h	/^class SEIMasteringDisplayColorVolume : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIMasteringDisplayColorVolume::SEIMasteringDisplayColorVolume	../../source/encoder/sei.h	/^    SEIMasteringDisplayColorVolume()$/;"	f	class:X265_NS::SEIMasteringDisplayColorVolume	access:public	signature:()
X265_NS::SEIMasteringDisplayColorVolume::displayPrimaryX	../../source/encoder/sei.h	/^    uint16_t displayPrimaryX[3];$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
X265_NS::SEIMasteringDisplayColorVolume::displayPrimaryY	../../source/encoder/sei.h	/^    uint16_t displayPrimaryY[3];$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
X265_NS::SEIMasteringDisplayColorVolume::maxDisplayMasteringLuminance	../../source/encoder/sei.h	/^    uint32_t maxDisplayMasteringLuminance;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
X265_NS::SEIMasteringDisplayColorVolume::minDisplayMasteringLuminance	../../source/encoder/sei.h	/^    uint32_t minDisplayMasteringLuminance;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
X265_NS::SEIMasteringDisplayColorVolume::parse	../../source/encoder/sei.h	/^    bool parse(const char* value)$/;"	f	class:X265_NS::SEIMasteringDisplayColorVolume	access:public	signature:(const char* value)
X265_NS::SEIMasteringDisplayColorVolume::whitePointX	../../source/encoder/sei.h	/^    uint16_t whitePointX, whitePointY;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
X265_NS::SEIMasteringDisplayColorVolume::whitePointY	../../source/encoder/sei.h	/^    uint16_t whitePointX, whitePointY;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
X265_NS::SEIMasteringDisplayColorVolume::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIMasteringDisplayColorVolume	access:public	signature:(const SPS&)
X265_NS::SEIPictureTiming	../../source/encoder/sei.h	/^class SEIPictureTiming : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIPictureTiming::SEIPictureTiming	../../source/encoder/sei.h	/^    SEIPictureTiming()$/;"	f	class:X265_NS::SEIPictureTiming	access:public	signature:()
X265_NS::SEIPictureTiming::m_auCpbRemovalDelay	../../source/encoder/sei.h	/^    uint32_t  m_auCpbRemovalDelay;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
X265_NS::SEIPictureTiming::m_duplicateFlag	../../source/encoder/sei.h	/^    bool      m_duplicateFlag;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
X265_NS::SEIPictureTiming::m_picDpbOutputDelay	../../source/encoder/sei.h	/^    uint32_t  m_picDpbOutputDelay;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
X265_NS::SEIPictureTiming::m_picStruct	../../source/encoder/sei.h	/^    uint32_t  m_picStruct;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
X265_NS::SEIPictureTiming::m_sourceScanType	../../source/encoder/sei.h	/^    uint32_t  m_sourceScanType;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
X265_NS::SEIPictureTiming::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS& sps)$/;"	f	class:X265_NS::SEIPictureTiming	access:public	signature:(const SPS& sps)
X265_NS::SEIRecoveryPoint	../../source/encoder/sei.h	/^class SEIRecoveryPoint : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIRecoveryPoint::m_brokenLinkFlag	../../source/encoder/sei.h	/^    bool m_brokenLinkFlag;$/;"	m	class:X265_NS::SEIRecoveryPoint	access:public
X265_NS::SEIRecoveryPoint::m_exactMatchingFlag	../../source/encoder/sei.h	/^    bool m_exactMatchingFlag;$/;"	m	class:X265_NS::SEIRecoveryPoint	access:public
X265_NS::SEIRecoveryPoint::m_recoveryPocCnt	../../source/encoder/sei.h	/^    int  m_recoveryPocCnt;$/;"	m	class:X265_NS::SEIRecoveryPoint	access:public
X265_NS::SEIRecoveryPoint::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIRecoveryPoint	access:public	signature:(const SPS&)
X265_NS::SEIuserDataUnregistered	../../source/encoder/sei.h	/^class SEIuserDataUnregistered : public SEI$/;"	c	namespace:X265_NS	inherits:SEI
X265_NS::SEIuserDataUnregistered::SEIuserDataUnregistered	../../source/encoder/sei.h	/^    SEIuserDataUnregistered() : m_userData(NULL)$/;"	f	class:X265_NS::SEIuserDataUnregistered	access:public	signature:()
X265_NS::SEIuserDataUnregistered::m_userData	../../source/encoder/sei.h	/^    uint8_t *m_userData;$/;"	m	class:X265_NS::SEIuserDataUnregistered	access:public
X265_NS::SEIuserDataUnregistered::m_uuid_iso_iec_11578	../../source/encoder/sei.h	/^    static const uint8_t m_uuid_iso_iec_11578[16];$/;"	m	class:X265_NS::SEIuserDataUnregistered	access:public
X265_NS::SEIuserDataUnregistered::writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIuserDataUnregistered	access:public	signature:(const SPS&)
X265_NS::SIZE_2Nx2N	../../source/common/cudata.h	/^    SIZE_2Nx2N, \/\/ symmetric motion partition,  2Nx2N$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_2NxN	../../source/common/cudata.h	/^    SIZE_2NxN,  \/\/ symmetric motion partition,  2Nx N$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_2NxnD	../../source/common/cudata.h	/^    SIZE_2NxnD, \/\/ asymmetric motion partition, 2Nx(3N\/2) + 2Nx( N\/2)$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_2NxnU	../../source/common/cudata.h	/^    SIZE_2NxnU, \/\/ asymmetric motion partition, 2Nx( N\/2) + 2Nx(3N\/2)$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_Nx2N	../../source/common/cudata.h	/^    SIZE_Nx2N,  \/\/ symmetric motion partition,   Nx2N$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_NxN	../../source/common/cudata.h	/^    SIZE_NxN,   \/\/ symmetric motion partition,   Nx N$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_nLx2N	../../source/common/cudata.h	/^    SIZE_nLx2N, \/\/ asymmetric motion partition, ( N\/2)x2N + (3N\/2)x2N$/;"	e	enum:X265_NS::PartSize
X265_NS::SIZE_nRx2N	../../source/common/cudata.h	/^    SIZE_nRx2N, \/\/ asymmetric motion partition, (3N\/2)x2N + ( N\/2)x2N$/;"	e	enum:X265_NS::PartSize
X265_NS::SPS	../../source/common/slice.h	/^struct SPS$/;"	s	namespace:X265_NS
X265_NS::SPS::SPS	../../source/common/slice.h	/^    SPS()$/;"	f	struct:X265_NS::SPS	access:public	signature:()
X265_NS::SPS::bEmitVUIHRDInfo	../../source/common/slice.h	/^    bool     bEmitVUIHRDInfo;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::bEmitVUITimingInfo	../../source/common/slice.h	/^    bool     bEmitVUITimingInfo;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::bLongTermPicturesPresent	../../source/common/slice.h	/^    bool     bLongTermPicturesPresent;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::bTemporalMVPEnabled	../../source/common/slice.h	/^    bool     bTemporalMVPEnabled;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::bUseAMP	../../source/common/slice.h	/^    bool     bUseAMP; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::bUseSAO	../../source/common/slice.h	/^    bool     bUseSAO; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::bUseStrongIntraSmoothing	../../source/common/slice.h	/^    bool     bUseStrongIntraSmoothing; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::buOffsetC	../../source/common/slice.h	/^    intptr_t* buOffsetC;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::buOffsetY	../../source/common/slice.h	/^    intptr_t* buOffsetY;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::chromaFormatIdc	../../source/common/slice.h	/^    int      chromaFormatIdc;        \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::conformanceWindow	../../source/common/slice.h	/^    Window   conformanceWindow;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::cuOffsetC	../../source/common/slice.h	/^    intptr_t* cuOffsetC;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::cuOffsetY	../../source/common/slice.h	/^    intptr_t* cuOffsetY;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::log2DiffMaxMinCodingBlockSize	../../source/common/slice.h	/^    int      log2DiffMaxMinCodingBlockSize;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::log2MaxPocLsb	../../source/common/slice.h	/^    int      log2MaxPocLsb;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::log2MinCodingBlockSize	../../source/common/slice.h	/^    int      log2MinCodingBlockSize;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::maxAMPDepth	../../source/common/slice.h	/^    uint32_t maxAMPDepth;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::maxDecPicBuffering	../../source/common/slice.h	/^    uint32_t maxDecPicBuffering; \/\/ these are dups of VPS values$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::maxLatencyIncrease	../../source/common/slice.h	/^    uint32_t maxLatencyIncrease;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::maxTempSubLayers	../../source/common/slice.h	/^    uint32_t maxTempSubLayers;   \/\/ max number of Temporal Sub layers$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numCUsInFrame	../../source/common/slice.h	/^    uint32_t numCUsInFrame;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numCuInHeight	../../source/common/slice.h	/^    uint32_t numCuInHeight;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numCuInWidth	../../source/common/slice.h	/^    uint32_t numCuInWidth;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numGOPBegin	../../source/common/slice.h	/^    int      numGOPBegin;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numPartInCUSize	../../source/common/slice.h	/^    uint32_t numPartInCUSize;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numPartitions	../../source/common/slice.h	/^    uint32_t numPartitions;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::numReorderPics	../../source/common/slice.h	/^    int      numReorderPics;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::picHeightInLumaSamples	../../source/common/slice.h	/^    uint32_t picHeightInLumaSamples; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::picWidthInLumaSamples	../../source/common/slice.h	/^    uint32_t picWidthInLumaSamples;  \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::quadtreeTULog2MaxSize	../../source/common/slice.h	/^    uint32_t quadtreeTULog2MaxSize;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::quadtreeTULog2MinSize	../../source/common/slice.h	/^    uint32_t quadtreeTULog2MinSize;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::quadtreeTUMaxDepthInter	../../source/common/slice.h	/^    uint32_t quadtreeTUMaxDepthInter; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::quadtreeTUMaxDepthIntra	../../source/common/slice.h	/^    uint32_t quadtreeTUMaxDepthIntra; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::spsrps	../../source/common/slice.h	/^    RPS      spsrps[MAX_NUM_SHORT_TERM_RPS];$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::spsrpsNum	../../source/common/slice.h	/^    int      spsrpsNum;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::vuiParameters	../../source/common/slice.h	/^    VUI      vuiParameters;$/;"	m	struct:X265_NS::SPS	access:public
X265_NS::SPS::~SPS	../../source/common/slice.h	/^    ~SPS()$/;"	f	struct:X265_NS::SPS	access:public	signature:()
X265_NS::SaoCtuParam	../../source/common/common.h	/^struct SaoCtuParam$/;"	s	namespace:X265_NS
X265_NS::SaoCtuParam::bandPos	../../source/common/common.h	/^    uint32_t bandPos;    \/\/ BO band position$/;"	m	struct:X265_NS::SaoCtuParam	access:public
X265_NS::SaoCtuParam::mergeMode	../../source/common/common.h	/^    SaoMergeMode mergeMode;$/;"	m	struct:X265_NS::SaoCtuParam	access:public
X265_NS::SaoCtuParam::offset	../../source/common/common.h	/^    int  offset[SAO_NUM_OFFSET];$/;"	m	struct:X265_NS::SaoCtuParam	access:public
X265_NS::SaoCtuParam::reset	../../source/common/common.h	/^    void reset()$/;"	f	struct:X265_NS::SaoCtuParam	access:public	signature:()
X265_NS::SaoCtuParam::typeIdx	../../source/common/common.h	/^    int  typeIdx;$/;"	m	struct:X265_NS::SaoCtuParam	access:public
X265_NS::SaoMergeMode	../../source/common/common.h	/^enum SaoMergeMode$/;"	g	namespace:X265_NS
X265_NS::ScalingList	../../source/common/scalinglist.h	/^class ScalingList$/;"	c	namespace:X265_NS
X265_NS::ScalingList::MAX_MATRIX_COEF_NUM	../../source/common/scalinglist.h	/^    enum { MAX_MATRIX_COEF_NUM = 64 }; \/\/ max coefficient number per quantization matrix$/;"	e	enum:X265_NS::ScalingList::__anon27
X265_NS::ScalingList::MAX_MATRIX_SIZE_NUM	../../source/common/scalinglist.h	/^    enum { MAX_MATRIX_SIZE_NUM = 8 };  \/\/ max size number for quantization matrix$/;"	e	enum:X265_NS::ScalingList::__anon28
X265_NS::ScalingList::MatrixType	../../source/common/scalinglist.cpp	/^    const char ScalingList::MatrixType[4][6][20] =$/;"	m	class:X265_NS::ScalingList	file:
X265_NS::ScalingList::MatrixType	../../source/common/scalinglist.h	/^    static const char MatrixType[4][6][20];$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::MatrixType_DC	../../source/common/scalinglist.cpp	/^    const char ScalingList::MatrixType_DC[4][12][22] =$/;"	m	class:X265_NS::ScalingList	file:
X265_NS::ScalingList::MatrixType_DC	../../source/common/scalinglist.h	/^    static const char MatrixType_DC[4][12][22];$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::NUM_LISTS	../../source/common/scalinglist.h	/^    enum { NUM_LISTS = 6 };            \/\/ number of quantization matrix lists (YUV * inter\/intra)$/;"	e	enum:X265_NS::ScalingList::__anon25
X265_NS::ScalingList::NUM_REM	../../source/common/scalinglist.h	/^    enum { NUM_REM = 6 };              \/\/ number of remainders of QP\/6$/;"	e	enum:X265_NS::ScalingList::__anon26
X265_NS::ScalingList::NUM_SIZES	../../source/common/scalinglist.h	/^    enum { NUM_SIZES = 4 };            \/\/ 4x4, 8x8, 16x16, 32x32$/;"	e	enum:X265_NS::ScalingList::__anon24
X265_NS::ScalingList::SCALING_LIST_DC	../../source/common/scalinglist.h	/^    static const int SCALING_LIST_DC = 16;    \/\/ default DC value$/;"	m	class:X265_NS::ScalingList	access:protected
X265_NS::ScalingList::ScalingList	../../source/common/scalinglist.cpp	/^ScalingList::ScalingList()$/;"	f	class:X265_NS::ScalingList	signature:()
X265_NS::ScalingList::ScalingList	../../source/common/scalinglist.h	/^    ScalingList();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
X265_NS::ScalingList::checkDefaultScalingList	../../source/common/scalinglist.cpp	/^bool ScalingList::checkDefaultScalingList() const$/;"	f	class:X265_NS::ScalingList	signature:() const
X265_NS::ScalingList::checkDefaultScalingList	../../source/common/scalinglist.h	/^    bool     checkDefaultScalingList() const;$/;"	p	class:X265_NS::ScalingList	access:protected	signature:() const
X265_NS::ScalingList::checkPredMode	../../source/common/scalinglist.cpp	/^int ScalingList::checkPredMode(int size, int list) const$/;"	f	class:X265_NS::ScalingList	signature:(int size, int list) const
X265_NS::ScalingList::checkPredMode	../../source/common/scalinglist.h	/^    int      checkPredMode(int sizeId, int listId) const;$/;"	p	class:X265_NS::ScalingList	access:public	signature:(int sizeId, int listId) const
X265_NS::ScalingList::getScalingListDefaultAddress	../../source/common/scalinglist.cpp	/^const int32_t* ScalingList::getScalingListDefaultAddress(int sizeId, int listId) const$/;"	f	class:X265_NS::ScalingList	signature:(int sizeId, int listId) const
X265_NS::ScalingList::getScalingListDefaultAddress	../../source/common/scalinglist.h	/^    const int32_t* getScalingListDefaultAddress(int sizeId, int listId) const;$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int sizeId, int listId) const
X265_NS::ScalingList::init	../../source/common/scalinglist.cpp	/^bool ScalingList::init()$/;"	f	class:X265_NS::ScalingList	signature:()
X265_NS::ScalingList::init	../../source/common/scalinglist.h	/^    bool     init();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
X265_NS::ScalingList::m_bDataPresent	../../source/common/scalinglist.h	/^    bool     m_bDataPresent; \/\/ non-default scaling lists must be signaled$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::m_bEnabled	../../source/common/scalinglist.h	/^    bool     m_bEnabled;$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::m_dequantCoef	../../source/common/scalinglist.h	/^    int32_t* m_dequantCoef[NUM_SIZES][NUM_LISTS][NUM_REM]; \/\/ array of dequantization matrix coefficient 4x4$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::m_quantCoef	../../source/common/scalinglist.h	/^    int32_t* m_quantCoef[NUM_SIZES][NUM_LISTS][NUM_REM];   \/\/ array of quantization matrix coefficient 4x4$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::m_scalingListCoef	../../source/common/scalinglist.h	/^    int32_t* m_scalingListCoef[NUM_SIZES][NUM_LISTS]; \/\/ quantization matrix$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::m_scalingListDC	../../source/common/scalinglist.h	/^    int32_t  m_scalingListDC[NUM_SIZES][NUM_LISTS];   \/\/ the DC value of the matrix coefficient for 16x16$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::parseScalingList	../../source/common/scalinglist.cpp	/^bool ScalingList::parseScalingList(const char* filename)$/;"	f	class:X265_NS::ScalingList	signature:(const char* filename)
X265_NS::ScalingList::parseScalingList	../../source/common/scalinglist.h	/^    bool     parseScalingList(const char* filename);$/;"	p	class:X265_NS::ScalingList	access:public	signature:(const char* filename)
X265_NS::ScalingList::processDefaultMarix	../../source/common/scalinglist.cpp	/^void ScalingList::processDefaultMarix(int sizeId, int listId)$/;"	f	class:X265_NS::ScalingList	signature:(int sizeId, int listId)
X265_NS::ScalingList::processDefaultMarix	../../source/common/scalinglist.h	/^    void     processDefaultMarix(int sizeId, int listId);$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int sizeId, int listId)
X265_NS::ScalingList::processScalingListDec	../../source/common/scalinglist.cpp	/^void ScalingList::processScalingListDec(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width,$/;"	f	class:X265_NS::ScalingList	signature:(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width, int ratio, int stride, int32_t dc)
X265_NS::ScalingList::processScalingListDec	../../source/common/scalinglist.h	/^    void     processScalingListDec(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width, int ratio, int stride, int32_t dc);$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width, int ratio, int stride, int32_t dc)
X265_NS::ScalingList::processScalingListEnc	../../source/common/scalinglist.cpp	/^void ScalingList::processScalingListEnc(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width,$/;"	f	class:X265_NS::ScalingList	signature:(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width, int ratio, int stride, int32_t dc)
X265_NS::ScalingList::processScalingListEnc	../../source/common/scalinglist.h	/^    void     processScalingListEnc(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width, int ratio, int stride, int32_t dc);$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width, int ratio, int stride, int32_t dc)
X265_NS::ScalingList::s_invQuantScales	../../source/common/scalinglist.cpp	/^const int32_t ScalingList::s_invQuantScales[NUM_REM] = { 40, 45, 51, 57, 64, 72 };$/;"	m	class:X265_NS::ScalingList	file:
X265_NS::ScalingList::s_invQuantScales	../../source/common/scalinglist.h	/^    static const int32_t s_invQuantScales[NUM_REM];$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::s_numCoefPerSize	../../source/common/scalinglist.cpp	/^const int     ScalingList::s_numCoefPerSize[NUM_SIZES] = { 16, 64, 256, 1024 };$/;"	m	class:X265_NS::ScalingList	file:
X265_NS::ScalingList::s_numCoefPerSize	../../source/common/scalinglist.h	/^    static const int     s_numCoefPerSize[NUM_SIZES];$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::s_quantScales	../../source/common/scalinglist.cpp	/^const int32_t ScalingList::s_quantScales[NUM_REM] = { 26214, 23302, 20560, 18396, 16384, 14564 };$/;"	m	class:X265_NS::ScalingList	file:
X265_NS::ScalingList::s_quantScales	../../source/common/scalinglist.h	/^    static const int32_t s_quantScales[NUM_REM];$/;"	m	class:X265_NS::ScalingList	access:public
X265_NS::ScalingList::setDefaultScalingList	../../source/common/scalinglist.cpp	/^void ScalingList::setDefaultScalingList()$/;"	f	class:X265_NS::ScalingList	signature:()
X265_NS::ScalingList::setDefaultScalingList	../../source/common/scalinglist.h	/^    void     setDefaultScalingList();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
X265_NS::ScalingList::setupQuantMatrices	../../source/common/scalinglist.cpp	/^void ScalingList::setupQuantMatrices(int internalCsp)$/;"	f	class:X265_NS::ScalingList	signature:(int internalCsp)
X265_NS::ScalingList::setupQuantMatrices	../../source/common/scalinglist.h	/^    void     setupQuantMatrices(int internalCsp);$/;"	p	class:X265_NS::ScalingList	access:public	signature:(int internalCsp)
X265_NS::ScalingList::~ScalingList	../../source/common/scalinglist.cpp	/^ScalingList::~ScalingList()$/;"	f	class:X265_NS::ScalingList	signature:()
X265_NS::ScalingList::~ScalingList	../../source/common/scalinglist.h	/^    ~ScalingList();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
X265_NS::ScanType	../../source/common/common.h	/^enum ScanType$/;"	g	namespace:X265_NS
X265_NS::ScopedElapsedTime	../../source/common/threading.h	/^struct ScopedElapsedTime$/;"	s	namespace:X265_NS
X265_NS::ScopedElapsedTime::ScopedElapsedTime	../../source/common/threading.h	/^    ScopedElapsedTime(int64_t& accum) : accumlatedTime(accum) { startTime = x265_mdate(); }$/;"	f	struct:X265_NS::ScopedElapsedTime	access:public	signature:(int64_t& accum)
X265_NS::ScopedElapsedTime::accumlatedTime	../../source/common/threading.h	/^    int64_t& accumlatedTime;$/;"	m	struct:X265_NS::ScopedElapsedTime	access:protected
X265_NS::ScopedElapsedTime::operator =	../../source/common/threading.h	/^    ScopedElapsedTime &operator =(const ScopedElapsedTime &);$/;"	p	struct:X265_NS::ScopedElapsedTime	access:protected	signature:(const ScopedElapsedTime &)
X265_NS::ScopedElapsedTime::startTime	../../source/common/threading.h	/^    int64_t  startTime;$/;"	m	struct:X265_NS::ScopedElapsedTime	access:protected
X265_NS::ScopedElapsedTime::~ScopedElapsedTime	../../source/common/threading.h	/^    ~ScopedElapsedTime() { accumlatedTime += x265_mdate() - startTime; }$/;"	f	struct:X265_NS::ScopedElapsedTime	access:public	signature:()
X265_NS::ScopedLock	../../source/common/threading.h	/^class ScopedLock$/;"	c	namespace:X265_NS
X265_NS::ScopedLock::ScopedLock	../../source/common/threading.h	/^    ScopedLock(Lock &instance) : inst(instance)$/;"	f	class:X265_NS::ScopedLock	access:public	signature:(Lock &instance)
X265_NS::ScopedLock::inst	../../source/common/threading.h	/^    Lock &inst;$/;"	m	class:X265_NS::ScopedLock	access:protected
X265_NS::ScopedLock::operator =	../../source/common/threading.h	/^    ScopedLock &operator =(const ScopedLock &);$/;"	p	class:X265_NS::ScopedLock	access:protected	signature:(const ScopedLock &)
X265_NS::ScopedLock::~ScopedLock	../../source/common/threading.h	/^    ~ScopedLock()$/;"	f	class:X265_NS::ScopedLock	access:public	signature:()
X265_NS::Search	../../source/encoder/search.h	/^class Search : public Predict$/;"	c	namespace:X265_NS	inherits:Predict
X265_NS::Search::Cost	../../source/encoder/search.h	/^    struct Cost$/;"	s	class:X265_NS::Search	access:protected
X265_NS::Search::Cost::Cost	../../source/encoder/search.h	/^        Cost() { rdcost = 0; bits = 0; distortion = 0; energy = 0; }$/;"	f	struct:X265_NS::Search::Cost	access:public	signature:()
X265_NS::Search::Cost::bits	../../source/encoder/search.h	/^        uint32_t bits;$/;"	m	struct:X265_NS::Search::Cost	access:public
X265_NS::Search::Cost::distortion	../../source/encoder/search.h	/^        sse_t distortion;$/;"	m	struct:X265_NS::Search::Cost	access:public
X265_NS::Search::Cost::energy	../../source/encoder/search.h	/^        uint32_t energy;$/;"	m	struct:X265_NS::Search::Cost	access:public
X265_NS::Search::Cost::rdcost	../../source/encoder/search.h	/^        uint64_t rdcost;$/;"	m	struct:X265_NS::Search::Cost	access:public
X265_NS::Search::MAX_RD_INTRA_MODES	../../source/encoder/search.h	/^    enum { MAX_RD_INTRA_MODES = 16 };$/;"	e	enum:X265_NS::Search::__anon3
X265_NS::Search::MergeData	../../source/encoder/search.h	/^    struct MergeData$/;"	s	class:X265_NS::Search	access:protected
X265_NS::Search::MergeData::bits	../../source/encoder/search.h	/^        uint32_t bits;$/;"	m	struct:X265_NS::Search::MergeData	access:public
X265_NS::Search::MergeData::dir	../../source/encoder/search.h	/^        uint32_t dir;$/;"	m	struct:X265_NS::Search::MergeData	access:public
X265_NS::Search::MergeData::index	../../source/encoder/search.h	/^        uint32_t index;$/;"	m	struct:X265_NS::Search::MergeData	access:public
X265_NS::Search::MergeData::mvField	../../source/encoder/search.h	/^        MVField  mvField[2];$/;"	m	struct:X265_NS::Search::MergeData	access:public
X265_NS::Search::PME	../../source/encoder/search.h	/^    class PME : public BondedTaskGroup$/;"	c	class:X265_NS::Search	inherits:BondedTaskGroup	access:public
X265_NS::Search::PME::PME	../../source/encoder/search.h	/^        PME(Search& s, Mode& m, const CUGeom& g, const PredictionUnit& u, int p) : master(s), mode(m), cuGeom(g), pu(u), puIdx(p) {}$/;"	f	class:X265_NS::Search::PME	access:public	signature:(Search& s, Mode& m, const CUGeom& g, const PredictionUnit& u, int p)
X265_NS::Search::PME::__anon2::ref	../../source/encoder/search.h	/^            int ref[2][MAX_NUM_REF];$/;"	m	struct:X265_NS::Search::PME::__anon2	access:public
X265_NS::Search::PME::__anon2::refCnt	../../source/encoder/search.h	/^            int refCnt[2];$/;"	m	struct:X265_NS::Search::PME::__anon2	access:public
X265_NS::Search::PME::cuGeom	../../source/encoder/search.h	/^        const CUGeom& cuGeom;$/;"	m	class:X265_NS::Search::PME	access:public
X265_NS::Search::PME::m_jobs	../../source/encoder/search.h	/^        } m_jobs;$/;"	m	class:X265_NS::Search::PME	typeref:struct:X265_NS::Search::PME::__anon2	access:public
X265_NS::Search::PME::master	../../source/encoder/search.h	/^        Search&       master;$/;"	m	class:X265_NS::Search::PME	access:public
X265_NS::Search::PME::mode	../../source/encoder/search.h	/^        Mode&         mode;$/;"	m	class:X265_NS::Search::PME	access:public
X265_NS::Search::PME::operator =	../../source/encoder/search.h	/^        PME operator=(const PME&);$/;"	p	class:X265_NS::Search::PME	access:protected	signature:(const PME&)
X265_NS::Search::PME::processTasks	../../source/encoder/search.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::Search::PME	access:public	signature:(int workerThreadId)
X265_NS::Search::PME::pu	../../source/encoder/search.h	/^        const PredictionUnit& pu;$/;"	m	class:X265_NS::Search::PME	access:public
X265_NS::Search::PME::puIdx	../../source/encoder/search.h	/^        int           puIdx;$/;"	m	class:X265_NS::Search::PME	access:public
X265_NS::Search::Search	../../source/encoder/search.h	/^    Search();$/;"	p	class:X265_NS::Search	access:public	signature:()
X265_NS::Search::TUInfoCache	../../source/encoder/search.h	/^    struct TUInfoCache$/;"	s	class:X265_NS::Search	access:protected
X265_NS::Search::TUInfoCache::bestTransformMode	../../source/encoder/search.h	/^        uint32_t bestTransformMode[NUM_SUBPART][MAX_NUM_COMPONENT][2];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
X265_NS::Search::TUInfoCache::cbfFlag	../../source/encoder/search.h	/^        uint8_t cbfFlag[NUM_SUBPART][MAX_NUM_COMPONENT][2];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
X265_NS::Search::TUInfoCache::cost	../../source/encoder/search.h	/^        Cost cost[NUM_SUBPART];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
X265_NS::Search::TUInfoCache::rqtStore	../../source/encoder/search.h	/^        Entropy rqtStore[NUM_SUBPART];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
X265_NS::Search::checkBestMVP	../../source/encoder/search.h	/^    const MV& checkBestMVP(const MV amvpCand[2], const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const;$/;"	p	class:X265_NS::Search	access:protected	signature:(const MV amvpCand[2], const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const
X265_NS::Search::checkDQP	../../source/encoder/search.h	/^    void checkDQP(Mode& mode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom)
X265_NS::Search::checkIntra	../../source/encoder/search.h	/^    void     checkIntra(Mode& intraMode, const CUGeom& cuGeom, PartSize partSizes);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom, PartSize partSizes)
X265_NS::Search::checkIntraInInter	../../source/encoder/search.h	/^    void     checkIntraInInter(Mode& intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom)
X265_NS::Search::cntDQPForSplitPred	../../source/encoder/search.h	/^    uint32_t cntDQPForSplitPred(Mode& mode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom)
X265_NS::Search::codeCoeffQTChroma	../../source/encoder/search.h	/^    void     codeCoeffQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype);$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype)
X265_NS::Search::codeInterSubdivCbfQT	../../source/encoder/search.h	/^    void     codeInterSubdivCbfQT(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2])
X265_NS::Search::codeIntraChromaQt	../../source/encoder/search.h	/^    void     codeIntraChromaQt(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)
X265_NS::Search::codeIntraChromaTSkip	../../source/encoder/search.h	/^    void     codeIntraChromaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost)
X265_NS::Search::codeIntraLumaQT	../../source/encoder/search.h	/^    void     codeIntraLumaQT(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& costs, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& costs, const uint32_t depthRange[2])
X265_NS::Search::codeIntraLumaTSkip	../../source/encoder/search.h	/^    void     codeIntraLumaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& costs);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& costs)
X265_NS::Search::codeSubdivCbfQTChroma	../../source/encoder/search.h	/^    void     codeSubdivCbfQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx);$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx)
X265_NS::Search::encodeIntraInInter	../../source/encoder/search.h	/^    void     encodeIntraInInter(Mode& intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom)
X265_NS::Search::encodeResAndCalcRdInterCU	../../source/encoder/search.h	/^    void     encodeResAndCalcRdInterCU(Mode& interMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const CUGeom& cuGeom)
X265_NS::Search::encodeResAndCalcRdSkipCU	../../source/encoder/search.h	/^    void     encodeResAndCalcRdSkipCU(Mode& interMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const CUGeom& cuGeom)
X265_NS::Search::estIntraPredChromaQT	../../source/encoder/search.h	/^    sse_t estIntraPredChromaQT(Mode &intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode &intraMode, const CUGeom& cuGeom)
X265_NS::Search::estIntraPredQT	../../source/encoder/search.h	/^    sse_t estIntraPredQT(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2])
X265_NS::Search::estimateNullCbfCost	../../source/encoder/search.h	/^    uint64_t estimateNullCbfCost(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId);$/;"	p	class:X265_NS::Search	access:protected	signature:(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId)
X265_NS::Search::estimateResidualQT	../../source/encoder/search.h	/^    void     estimateResidualQT(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, ShortYuv& resiYuv, Cost& costs, const uint32_t depthRange[2], int32_t splitMore = -1);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, ShortYuv& resiYuv, Cost& costs, const uint32_t depthRange[2], int32_t splitMore = -1)
X265_NS::Search::extractIntraResultChromaQT	../../source/encoder/search.h	/^    void     extractIntraResultChromaQT(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth)
X265_NS::Search::extractIntraResultQT	../../source/encoder/search.h	/^    void     extractIntraResultQT(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx)
X265_NS::Search::getBestIntraModeChroma	../../source/encoder/search.h	/^    void     getBestIntraModeChroma(Mode& intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom)
X265_NS::Search::getBlkBits	../../source/encoder/search.h	/^    static void getBlkBits(PartSize cuMode, bool bPSlice, int puIdx, uint32_t lastMode, uint32_t blockBit[3]);$/;"	p	class:X265_NS::Search	access:protected	signature:(PartSize cuMode, bool bPSlice, int puIdx, uint32_t lastMode, uint32_t blockBit[3])
X265_NS::Search::getIntraRemModeBits	../../source/encoder/search.h	/^    uint32_t getIntraRemModeBits(CUData & cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const;$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData & cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const
X265_NS::Search::getLowresMV	../../source/encoder/search.h	/^    MV getLowresMV(const CUData& cu, const PredictionUnit& pu, int list, int ref);$/;"	p	class:X265_NS::Search	access:public	signature:(const CUData& cu, const PredictionUnit& pu, int list, int ref)
X265_NS::Search::initSearch	../../source/encoder/search.h	/^    bool     initSearch(const x265_param& param, ScalingList& scalingList);$/;"	p	class:X265_NS::Search	access:public	signature:(const x265_param& param, ScalingList& scalingList)
X265_NS::Search::invalidateContexts	../../source/encoder/search.h	/^    void     invalidateContexts(int fromDepth);$/;"	p	class:X265_NS::Search	access:public	signature:(int fromDepth)
X265_NS::Search::m_bFrameParallel	../../source/encoder/search.h	/^    bool            m_bFrameParallel;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_cacheTU	../../source/encoder/search.h	/^    } m_cacheTU;$/;"	m	class:X265_NS::Search	typeref:struct:X265_NS::Search::TUInfoCache	access:protected
X265_NS::Search::m_entropyCoder	../../source/encoder/search.h	/^    Entropy         m_entropyCoder;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_fencScaled	../../source/encoder/search.h	/^    pixel*          m_fencScaled;     \/* 32x32 buffer for down-scaled version of 64x64 CU fenc *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_fencTransposed	../../source/encoder/search.h	/^    pixel*          m_fencTransposed; \/* 32x32 buffer for transposed copy of fenc *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_frame	../../source/encoder/search.h	/^    Frame*          m_frame;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_intraPred	../../source/encoder/search.h	/^    pixel*          m_intraPred;      \/* 32x32 buffer for individual intra predictions *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_intraPredAngs	../../source/encoder/search.h	/^    pixel*          m_intraPredAngs;  \/* allocation for 33 consecutive (all angular) 32x32 intra predictions *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_limitTU	../../source/encoder/search.h	/^    uint16_t        m_limitTU;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_listSelBits	../../source/encoder/search.h	/^    uint32_t      m_listSelBits[3];$/;"	m	class:X265_NS::Search	access:protected
X265_NS::Search::m_maxTUDepth	../../source/encoder/search.h	/^    int32_t         m_maxTUDepth;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_me	../../source/encoder/search.h	/^    MotionEstimate  m_me;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_meLock	../../source/encoder/search.h	/^    Lock          m_meLock;$/;"	m	class:X265_NS::Search	access:protected
X265_NS::Search::m_numLayers	../../source/encoder/search.h	/^    uint32_t        m_numLayers;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_param	../../source/encoder/search.h	/^    const x265_param* m_param;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_qtTempCbf	../../source/encoder/search.h	/^    uint8_t*        m_qtTempCbf[3];$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_qtTempTransformSkipFlag	../../source/encoder/search.h	/^    uint8_t*        m_qtTempTransformSkipFlag[3];$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_quant	../../source/encoder/search.h	/^    Quant           m_quant;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_rdCost	../../source/encoder/search.h	/^    RDCost          m_rdCost;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_refLagPixels	../../source/encoder/search.h	/^    uint32_t        m_refLagPixels;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_rqt	../../source/encoder/search.h	/^    RQTData         m_rqt[NUM_FULL_DEPTH];$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_slice	../../source/encoder/search.h	/^    const Slice*    m_slice;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_sliceMaxY	../../source/encoder/search.h	/^    int16_t         m_sliceMaxY;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_sliceMinY	../../source/encoder/search.h	/^    int16_t         m_sliceMinY;$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_stats	../../source/encoder/search.h	/^    CUStats         m_stats[X265_MAX_FRAME_THREADS];$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_tld	../../source/encoder/search.h	/^    ThreadLocalData* m_tld;$/;"	m	class:X265_NS::Search	access:protected
X265_NS::Search::m_tsCoeff	../../source/encoder/search.h	/^    coeff_t*        m_tsCoeff;        \/* transform skip coeff 32x32 *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_tsRecon	../../source/encoder/search.h	/^    pixel*          m_tsRecon;        \/* transform skip reconstructed pixels 32x32 *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::m_tsResidual	../../source/encoder/search.h	/^    int16_t*        m_tsResidual;     \/* transform skip residual 32x32 *\/$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::mergeEstimation	../../source/encoder/search.h	/^    uint32_t mergeEstimation(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m)
X265_NS::Search::offsetSubTUCBFs	../../source/encoder/search.h	/^    void     offsetSubTUCBFs(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx)
X265_NS::Search::predInterSearch	../../source/encoder/search.h	/^    void     predInterSearch(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t masks[2]);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t masks[2])
X265_NS::Search::processPME	../../source/encoder/search.h	/^    void     processPME(PME& pme, Search& slave);$/;"	p	class:X265_NS::Search	access:public	signature:(PME& pme, Search& slave)
X265_NS::Search::residualQTIntraChroma	../../source/encoder/search.h	/^    void     residualQTIntraChroma(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth)
X265_NS::Search::residualTransformQuantInter	../../source/encoder/search.h	/^    void     residualTransformQuantInter(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
X265_NS::Search::residualTransformQuantIntra	../../source/encoder/search.h	/^    void     residualTransformQuantIntra(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
X265_NS::Search::saveResidualQTData	../../source/encoder/search.h	/^    void     saveResidualQTData(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth)
X265_NS::Search::searchMV	../../source/encoder/search.h	/^    void     searchMV(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv)
X265_NS::Search::selectMVP	../../source/encoder/search.h	/^    int       selectMVP(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref);$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref)
X265_NS::Search::setLambdaFromQP	../../source/encoder/search.h	/^    int      setLambdaFromQP(const CUData& ctu, int qp, int lambdaQP = -1); \/* returns real quant QP in valid spec range *\/$/;"	p	class:X265_NS::Search	access:public	signature:(const CUData& ctu, int qp, int lambdaQP = -1)
X265_NS::Search::setSearchRange	../../source/encoder/search.h	/^    void     setSearchRange(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const;$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const
X265_NS::Search::singleMotionEstimation	../../source/encoder/search.h	/^    void     singleMotionEstimation(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref);$/;"	p	class:X265_NS::Search	access:public	signature:(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref)
X265_NS::Search::splitTU	../../source/encoder/search.h	/^    bool     splitTU(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore)
X265_NS::Search::updateCandList	../../source/encoder/search.h	/^    static void updateCandList(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList);$/;"	p	class:X265_NS::Search	access:protected	signature:(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList)
X265_NS::Search::updateModeCost	../../source/encoder/search.h	/^    void updateModeCost(Mode& m) const { m.rdCost = m_rdCost.m_psyRd ? m_rdCost.calcPsyRdCost(m.distortion, m.totalBits, m.psyEnergy)$/;"	f	class:X265_NS::Search	access:protected	signature:(Mode& m) const
X265_NS::Search::zeroShort	../../source/encoder/search.h	/^    static const int16_t zeroShort[MAX_CU_SIZE];$/;"	m	class:X265_NS::Search	access:public
X265_NS::Search::~Search	../../source/encoder/search.h	/^    ~Search();$/;"	p	class:X265_NS::Search	access:public	signature:()
X265_NS::ShortYuv	../../source/common/shortyuv.h	/^class ShortYuv$/;"	c	namespace:X265_NS
X265_NS::ShortYuv::ShortYuv	../../source/common/shortyuv.h	/^    ShortYuv();$/;"	p	class:X265_NS::ShortYuv	access:public	signature:()
X265_NS::ShortYuv::clear	../../source/common/shortyuv.h	/^    void clear();$/;"	p	class:X265_NS::ShortYuv	access:public	signature:()
X265_NS::ShortYuv::copyPartToPartChroma	../../source/common/shortyuv.h	/^    void copyPartToPartChroma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
X265_NS::ShortYuv::copyPartToPartChroma	../../source/common/shortyuv.h	/^    void copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
X265_NS::ShortYuv::copyPartToPartLuma	../../source/common/shortyuv.h	/^    void copyPartToPartLuma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
X265_NS::ShortYuv::copyPartToPartLuma	../../source/common/shortyuv.h	/^    void copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
X265_NS::ShortYuv::create	../../source/common/shortyuv.h	/^    bool create(uint32_t size, int csp);$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(uint32_t size, int csp)
X265_NS::ShortYuv::destroy	../../source/common/shortyuv.h	/^    void destroy();$/;"	p	class:X265_NS::ShortYuv	access:public	signature:()
X265_NS::ShortYuv::getAddrOffset	../../source/common/shortyuv.h	/^    static int getAddrOffset(uint32_t idx, uint32_t width)$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t idx, uint32_t width)
X265_NS::ShortYuv::getCbAddr	../../source/common/shortyuv.h	/^    const int16_t* getCbAddr(uint32_t absPartIdx) const                         { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::ShortYuv::getCbAddr	../../source/common/shortyuv.h	/^    int16_t* getCbAddr(uint32_t absPartIdx)                         { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx)
X265_NS::ShortYuv::getChromaAddr	../../source/common/shortyuv.h	/^    const int16_t* getChromaAddr(uint32_t chromaId, uint32_t partUnitIdx) const { return m_buf[chromaId] + getChromaAddrOffset(partUnitIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t chromaId, uint32_t partUnitIdx) const
X265_NS::ShortYuv::getChromaAddr	../../source/common/shortyuv.h	/^    int16_t* getChromaAddr(uint32_t chromaId, uint32_t partUnitIdx) { return m_buf[chromaId] + getChromaAddrOffset(partUnitIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t chromaId, uint32_t partUnitIdx)
X265_NS::ShortYuv::getChromaAddrOffset	../../source/common/shortyuv.h	/^    int getChromaAddrOffset(uint32_t idx) const$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t idx) const
X265_NS::ShortYuv::getCrAddr	../../source/common/shortyuv.h	/^    const int16_t* getCrAddr(uint32_t absPartIdx) const                         { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::ShortYuv::getCrAddr	../../source/common/shortyuv.h	/^    int16_t* getCrAddr(uint32_t absPartIdx)                         { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx)
X265_NS::ShortYuv::getLumaAddr	../../source/common/shortyuv.h	/^    const int16_t* getLumaAddr(uint32_t absPartIdx) const                       { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::ShortYuv::getLumaAddr	../../source/common/shortyuv.h	/^    int16_t* getLumaAddr(uint32_t absPartIdx)                       { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx)
X265_NS::ShortYuv::m_buf	../../source/common/shortyuv.h	/^    int16_t* m_buf[3];$/;"	m	class:X265_NS::ShortYuv	access:public
X265_NS::ShortYuv::m_csize	../../source/common/shortyuv.h	/^    uint32_t m_csize;$/;"	m	class:X265_NS::ShortYuv	access:public
X265_NS::ShortYuv::m_csp	../../source/common/shortyuv.h	/^    int      m_csp;$/;"	m	class:X265_NS::ShortYuv	access:public
X265_NS::ShortYuv::m_hChromaShift	../../source/common/shortyuv.h	/^    int      m_hChromaShift;$/;"	m	class:X265_NS::ShortYuv	access:public
X265_NS::ShortYuv::m_size	../../source/common/shortyuv.h	/^    uint32_t m_size;$/;"	m	class:X265_NS::ShortYuv	access:public
X265_NS::ShortYuv::m_vChromaShift	../../source/common/shortyuv.h	/^    int      m_vChromaShift;$/;"	m	class:X265_NS::ShortYuv	access:public
X265_NS::ShortYuv::subtract	../../source/common/shortyuv.h	/^    void subtract(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp);$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp)
X265_NS::SignificanceMapContextType	../../source/common/common.h	/^enum SignificanceMapContextType$/;"	g	namespace:X265_NS
X265_NS::Slice	../../source/common/slice.h	/^class Slice$/;"	c	namespace:X265_NS
X265_NS::Slice::Slice	../../source/common/slice.h	/^    Slice()$/;"	f	class:X265_NS::Slice	access:public	signature:()
X265_NS::Slice::disableWeights	../../source/common/slice.h	/^    void disableWeights();$/;"	p	class:X265_NS::Slice	access:public	signature:()
X265_NS::Slice::getIdrPicFlag	../../source/common/slice.h	/^    bool getIdrPicFlag() const$/;"	f	class:X265_NS::Slice	access:public	signature:() const
X265_NS::Slice::getRapPicFlag	../../source/common/slice.h	/^    bool getRapPicFlag() const$/;"	f	class:X265_NS::Slice	access:public	signature:() const
X265_NS::Slice::isIRAP	../../source/common/slice.h	/^    bool isIRAP() const   { return m_nalUnitType >= 16 && m_nalUnitType <= 23; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
X265_NS::Slice::isInterB	../../source/common/slice.h	/^    bool isInterB() const { return m_sliceType == B_SLICE; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
X265_NS::Slice::isInterP	../../source/common/slice.h	/^    bool isInterP() const { return m_sliceType == P_SLICE; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
X265_NS::Slice::isIntra	../../source/common/slice.h	/^    bool isIntra()  const { return m_sliceType == I_SLICE; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
X265_NS::Slice::m_bCheckLDC	../../source/common/slice.h	/^    bool        m_bCheckLDC;       \/\/ For P or GPB, m_bCheckLDC = true; for B, m_bCheckLDC = false$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_chromaQpOffset	../../source/common/slice.h	/^    int         m_chromaQpOffset[2];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_colFromL0Flag	../../source/common/slice.h	/^    bool        m_colFromL0Flag;   \/\/ collocated picture from List0 or List1 flag$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_colRefIdx	../../source/common/slice.h	/^    uint32_t    m_colRefIdx;       \/\/ never modified$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_endCUAddr	../../source/common/slice.h	/^    uint32_t    m_endCUAddr;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_iNumRPSInSPS	../../source/common/slice.h	/^    int         m_iNumRPSInSPS;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_iPPSQpMinus26	../../source/common/slice.h	/^    int         m_iPPSQpMinus26;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_lastIDR	../../source/common/slice.h	/^    int         m_lastIDR;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_maxNumMergeCand	../../source/common/slice.h	/^    uint32_t    m_maxNumMergeCand; \/\/ use param$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_mref	../../source/common/slice.h	/^    MotionReference (*m_mref)[MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_nalUnitType	../../source/common/slice.h	/^    NalUnitType m_nalUnitType;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_numRefIdx	../../source/common/slice.h	/^    int         m_numRefIdx[2];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_param	../../source/common/slice.h	/^    const x265_param *m_param;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_poc	../../source/common/slice.h	/^    int         m_poc;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_pps	../../source/common/slice.h	/^    const PPS*  m_pps;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_refFrameList	../../source/common/slice.h	/^    Frame*      m_refFrameList[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_refPOCList	../../source/common/slice.h	/^    int         m_refPOCList[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_refReconPicList	../../source/common/slice.h	/^    PicYuv*     m_refReconPicList[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_rps	../../source/common/slice.h	/^    RPS         m_rps;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_rpsIdx	../../source/common/slice.h	/^    int         m_rpsIdx;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_sLFaseFlag	../../source/common/slice.h	/^    bool        m_sLFaseFlag;      \/\/ loop filter boundary flag$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_sliceQp	../../source/common/slice.h	/^    int         m_sliceQp;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_sliceType	../../source/common/slice.h	/^    SliceType   m_sliceType;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_sps	../../source/common/slice.h	/^    const SPS*  m_sps;$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::m_weightPredTable	../../source/common/slice.h	/^    WeightParam m_weightPredTable[2][MAX_NUM_REF][3]; \/\/ [list][refIdx][0:Y, 1:U, 2:V]$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::numRefIdxDefault	../../source/common/slice.h	/^    int         numRefIdxDefault[2];$/;"	m	class:X265_NS::Slice	access:public
X265_NS::Slice::realEndAddress	../../source/common/slice.h	/^    uint32_t realEndAddress(uint32_t endCUAddr) const;$/;"	p	class:X265_NS::Slice	access:public	signature:(uint32_t endCUAddr) const
X265_NS::Slice::setRefPicList	../../source/common/slice.h	/^    void setRefPicList(PicList& picList);$/;"	p	class:X265_NS::Slice	access:public	signature:(PicList& picList)
X265_NS::SliceType	../../source/common/slice.h	/^enum SliceType$/;"	g	namespace:X265_NS
X265_NS::SplitData	../../source/encoder/analysis.h	/^struct SplitData$/;"	s	namespace:X265_NS
X265_NS::SplitData::initSplitCUData	../../source/encoder/analysis.h	/^    void initSplitCUData()$/;"	f	struct:X265_NS::SplitData	access:public	signature:()
X265_NS::SplitData::mvCost	../../source/encoder/analysis.h	/^    uint32_t mvCost[2];$/;"	m	struct:X265_NS::SplitData	access:public
X265_NS::SplitData::sa8dCost	../../source/encoder/analysis.h	/^    uint64_t sa8dCost;$/;"	m	struct:X265_NS::SplitData	access:public
X265_NS::SplitData::splitRefs	../../source/encoder/analysis.h	/^    uint32_t splitRefs;$/;"	m	struct:X265_NS::SplitData	access:public
X265_NS::SplitType	../../source/encoder/entropy.h	/^enum SplitType$/;"	g	namespace:X265_NS
X265_NS::StatisticLog	../../source/encoder/frameencoder.h	/^struct StatisticLog$/;"	s	namespace:X265_NS
X265_NS::StatisticLog::StatisticLog	../../source/encoder/frameencoder.h	/^    StatisticLog()$/;"	f	struct:X265_NS::StatisticLog	access:public	signature:()
X265_NS::StatisticLog::cntInter	../../source/encoder/frameencoder.h	/^    uint64_t cntInter[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::cntIntra	../../source/encoder/frameencoder.h	/^    uint64_t cntIntra[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::cntIntraNxN	../../source/encoder/frameencoder.h	/^    uint64_t cntIntraNxN;$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::cntSkipCu	../../source/encoder/frameencoder.h	/^    uint64_t cntSkipCu[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::cntTotalCu	../../source/encoder/frameencoder.h	/^    uint64_t cntTotalCu[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::cuInterDistribution	../../source/encoder/frameencoder.h	/^    uint64_t cuInterDistribution[4][INTER_MODES];$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::cuIntraDistribution	../../source/encoder/frameencoder.h	/^    uint64_t cuIntraDistribution[4][INTRA_MODES];$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::StatisticLog::totalCu	../../source/encoder/frameencoder.h	/^    uint64_t totalCu;$/;"	m	struct:X265_NS::StatisticLog	access:public
X265_NS::SyntaxElementWriter	../../source/common/bitstream.h	/^class SyntaxElementWriter$/;"	c	namespace:X265_NS
X265_NS::SyntaxElementWriter::SyntaxElementWriter	../../source/common/bitstream.h	/^    SyntaxElementWriter() : m_bitIf(NULL) {}$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:()
X265_NS::SyntaxElementWriter::WRITE_CODE	../../source/common/bitstream.h	/^    inline void WRITE_CODE(uint32_t code, uint32_t length, const char *) { writeCode(code, length); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code, uint32_t length, const char *)
X265_NS::SyntaxElementWriter::WRITE_FLAG	../../source/common/bitstream.h	/^    inline void WRITE_FLAG(bool flag,                      const char *) { writeFlag(flag); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(bool flag, const char *)
X265_NS::SyntaxElementWriter::WRITE_SVLC	../../source/common/bitstream.h	/^    inline void WRITE_SVLC(int32_t  code,                  const char *) { writeSvlc(code); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(int32_t code, const char *)
X265_NS::SyntaxElementWriter::WRITE_UVLC	../../source/common/bitstream.h	/^    inline void WRITE_UVLC(uint32_t code,                  const char *) { writeUvlc(code); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code, const char *)
X265_NS::SyntaxElementWriter::m_bitIf	../../source/common/bitstream.h	/^    BitInterface* m_bitIf;$/;"	m	class:X265_NS::SyntaxElementWriter	access:public
X265_NS::SyntaxElementWriter::writeCode	../../source/common/bitstream.h	/^    void writeCode(uint32_t code, uint32_t length) { m_bitIf->write(code, length); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code, uint32_t length)
X265_NS::SyntaxElementWriter::writeFlag	../../source/common/bitstream.h	/^    void writeFlag(bool code)                      { m_bitIf->write(code, 1); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(bool code)
X265_NS::SyntaxElementWriter::writeSvlc	../../source/common/bitstream.h	/^    void writeSvlc(int32_t code)                   { uint32_t ucode = (code <= 0) ? -code << 1 : (code << 1) - 1; writeUvlc(ucode); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(int32_t code)
X265_NS::SyntaxElementWriter::writeUvlc	../../source/common/bitstream.h	/^    void writeUvlc(uint32_t code);$/;"	p	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code)
X265_NS::TEXT_CHROMA_U	../../source/common/common.h	/^    TEXT_CHROMA_U = 1,  \/\/ chroma U$/;"	e	enum:X265_NS::TextType
X265_NS::TEXT_CHROMA_V	../../source/common/common.h	/^    TEXT_CHROMA_V = 2,  \/\/ chroma V$/;"	e	enum:X265_NS::TextType
X265_NS::TEXT_LUMA	../../source/common/common.h	/^    TEXT_LUMA     = 0,  \/\/ luma$/;"	e	enum:X265_NS::TextType
X265_NS::TUEntropyCodingParameters	../../source/common/cudata.h	/^struct TUEntropyCodingParameters$/;"	s	namespace:X265_NS
X265_NS::TUEntropyCodingParameters::firstSignificanceMapContext	../../source/common/cudata.h	/^    uint32_t        firstSignificanceMapContext;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
X265_NS::TUEntropyCodingParameters::scan	../../source/common/cudata.h	/^    const uint16_t *scan;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
X265_NS::TUEntropyCodingParameters::scanCG	../../source/common/cudata.h	/^    const uint16_t *scanCG;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
X265_NS::TUEntropyCodingParameters::scanType	../../source/common/cudata.h	/^    ScanType        scanType;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
X265_NS::TURecurse	../../source/encoder/entropy.h	/^struct TURecurse$/;"	s	namespace:X265_NS
X265_NS::TURecurse::TURecurse	../../source/encoder/entropy.h	/^    TURecurse(SplitType splitType, uint32_t _absPartIdxStep, uint32_t _absPartIdxTU)$/;"	f	struct:X265_NS::TURecurse	access:public	signature:(SplitType splitType, uint32_t _absPartIdxStep, uint32_t _absPartIdxTU)
X265_NS::TURecurse::absPartIdxStep	../../source/encoder/entropy.h	/^    uint32_t absPartIdxStep;$/;"	m	struct:X265_NS::TURecurse	access:public
X265_NS::TURecurse::absPartIdxTURelCU	../../source/encoder/entropy.h	/^    uint32_t absPartIdxTURelCU;$/;"	m	struct:X265_NS::TURecurse	access:public
X265_NS::TURecurse::isLastSection	../../source/encoder/entropy.h	/^    bool isLastSection() const$/;"	f	struct:X265_NS::TURecurse	access:public	signature:() const
X265_NS::TURecurse::isNextSection	../../source/encoder/entropy.h	/^    bool isNextSection()$/;"	f	struct:X265_NS::TURecurse	access:public	signature:()
X265_NS::TURecurse::section	../../source/encoder/entropy.h	/^    uint32_t section;$/;"	m	struct:X265_NS::TURecurse	access:public
X265_NS::TURecurse::splitMode	../../source/encoder/entropy.h	/^    uint32_t splitMode;$/;"	m	struct:X265_NS::TURecurse	access:public
X265_NS::TextType	../../source/common/common.h	/^enum TextType$/;"	g	namespace:X265_NS
X265_NS::Thread	../../source/common/threading.h	/^class Thread$/;"	c	namespace:X265_NS
X265_NS::Thread::Thread	../../source/common/threading.cpp	/^Thread::Thread()$/;"	f	class:X265_NS::Thread	signature:()
X265_NS::Thread::Thread	../../source/common/threading.h	/^    Thread();$/;"	p	class:X265_NS::Thread	access:public	signature:()
X265_NS::Thread::start	../../source/common/threading.cpp	/^bool Thread::start()$/;"	f	class:X265_NS::Thread	signature:()
X265_NS::Thread::start	../../source/common/threading.h	/^    bool start();$/;"	p	class:X265_NS::Thread	access:public	signature:()
X265_NS::Thread::stop	../../source/common/threading.cpp	/^void Thread::stop()$/;"	f	class:X265_NS::Thread	signature:()
X265_NS::Thread::stop	../../source/common/threading.h	/^    void stop();$/;"	p	class:X265_NS::Thread	access:public	signature:()
X265_NS::Thread::thread	../../source/common/threading.h	/^    ThreadHandle thread;$/;"	m	class:X265_NS::Thread	access:private
X265_NS::Thread::threadMain	../../source/common/threading.h	/^    virtual void threadMain() = 0;$/;"	p	class:X265_NS::Thread	access:public	signature:()
X265_NS::Thread::~Thread	../../source/common/threading.cpp	/^Thread::~Thread() {}$/;"	f	class:X265_NS::Thread	signature:()
X265_NS::Thread::~Thread	../../source/common/threading.cpp	/^Thread::~Thread()$/;"	f	class:X265_NS::Thread	signature:()
X265_NS::Thread::~Thread	../../source/common/threading.h	/^    virtual ~Thread();$/;"	p	class:X265_NS::Thread	access:public	signature:()
X265_NS::ThreadHandle	../../source/common/threading.h	/^typedef HANDLE ThreadHandle;$/;"	t	namespace:X265_NS
X265_NS::ThreadLocalData	../../source/encoder/analysis.h	/^struct ThreadLocalData$/;"	s	namespace:X265_NS
X265_NS::ThreadLocalData::analysis	../../source/encoder/analysis.h	/^    Analysis analysis;$/;"	m	struct:X265_NS::ThreadLocalData	access:public
X265_NS::ThreadLocalData::destroy	../../source/encoder/analysis.h	/^    void destroy() { analysis.destroy(); }$/;"	f	struct:X265_NS::ThreadLocalData	access:public	signature:()
X265_NS::ThreadPool	../../source/common/threadpool.h	/^class ThreadPool$/;"	c	namespace:X265_NS
X265_NS::ThreadPool::ThreadPool	../../source/common/threadpool.cpp	/^ThreadPool::ThreadPool()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::ThreadPool	../../source/common/threadpool.h	/^    ThreadPool();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadPool::allocThreadPools	../../source/common/threadpool.cpp	/^ThreadPool* ThreadPool::allocThreadPools(x265_param* p, int& numPools, bool isThreadsReserved)$/;"	f	class:X265_NS::ThreadPool	signature:(x265_param* p, int& numPools, bool isThreadsReserved)
X265_NS::ThreadPool::allocThreadPools	../../source/common/threadpool.h	/^    static ThreadPool* allocThreadPools(x265_param* p, int& numPools, bool isThreadsReserved);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(x265_param* p, int& numPools, bool isThreadsReserved)
X265_NS::ThreadPool::create	../../source/common/threadpool.cpp	/^bool ThreadPool::create(int numThreads, int maxProviders, uint64_t nodeMask)$/;"	f	class:X265_NS::ThreadPool	signature:(int numThreads, int maxProviders, uint64_t nodeMask)
X265_NS::ThreadPool::create	../../source/common/threadpool.h	/^    bool create(int numThreads, int maxProviders, uint64_t nodeMask);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(int numThreads, int maxProviders, uint64_t nodeMask)
X265_NS::ThreadPool::getCpuCount	../../source/common/threadpool.cpp	/^int ThreadPool::getCpuCount()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::getCpuCount	../../source/common/threadpool.h	/^    static int  getCpuCount();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadPool::getNumaNodeCount	../../source/common/threadpool.cpp	/^int ThreadPool::getNumaNodeCount()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::getNumaNodeCount	../../source/common/threadpool.h	/^    static int  getNumaNodeCount();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadPool::m_groupAffinity	../../source/common/threadpool.h	/^    GROUP_AFFINITY m_groupAffinity;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_isActive	../../source/common/threadpool.h	/^    bool          m_isActive;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_jpTable	../../source/common/threadpool.h	/^    JobProvider** m_jpTable;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_numProviders	../../source/common/threadpool.h	/^    int           m_numProviders;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_numWorkers	../../source/common/threadpool.h	/^    int           m_numWorkers;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_numaMask	../../source/common/threadpool.h	/^    void*         m_numaMask; \/\/ node mask in linux, cpu mask in windows$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_sleepBitmap	../../source/common/threadpool.h	/^    sleepbitmap_t m_sleepBitmap;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::m_workers	../../source/common/threadpool.h	/^    WorkerThread* m_workers;$/;"	m	class:X265_NS::ThreadPool	access:public
X265_NS::ThreadPool::setCurrentThreadAffinity	../../source/common/threadpool.cpp	/^void ThreadPool::setCurrentThreadAffinity()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::setCurrentThreadAffinity	../../source/common/threadpool.h	/^    void setCurrentThreadAffinity();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadPool::setThreadNodeAffinity	../../source/common/threadpool.cpp	/^void ThreadPool::setThreadNodeAffinity(void *numaMask)$/;"	f	class:X265_NS::ThreadPool	signature:(void *numaMask)
X265_NS::ThreadPool::setThreadNodeAffinity	../../source/common/threadpool.h	/^    void setThreadNodeAffinity(void *numaMask);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(void *numaMask)
X265_NS::ThreadPool::start	../../source/common/threadpool.cpp	/^bool ThreadPool::start()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::start	../../source/common/threadpool.h	/^    bool start();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadPool::stopWorkers	../../source/common/threadpool.cpp	/^void ThreadPool::stopWorkers()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::stopWorkers	../../source/common/threadpool.h	/^    void stopWorkers();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadPool::tryAcquireSleepingThread	../../source/common/threadpool.cpp	/^int ThreadPool::tryAcquireSleepingThread(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap)$/;"	f	class:X265_NS::ThreadPool	signature:(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap)
X265_NS::ThreadPool::tryAcquireSleepingThread	../../source/common/threadpool.h	/^    int  tryAcquireSleepingThread(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap)
X265_NS::ThreadPool::tryBondPeers	../../source/common/threadpool.cpp	/^int ThreadPool::tryBondPeers(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master)$/;"	f	class:X265_NS::ThreadPool	signature:(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master)
X265_NS::ThreadPool::tryBondPeers	../../source/common/threadpool.h	/^    int  tryBondPeers(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master)
X265_NS::ThreadPool::~ThreadPool	../../source/common/threadpool.cpp	/^ThreadPool::~ThreadPool()$/;"	f	class:X265_NS::ThreadPool	signature:()
X265_NS::ThreadPool::~ThreadPool	../../source/common/threadpool.h	/^    ~ThreadPool();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
X265_NS::ThreadSafeInteger	../../source/common/threading.h	/^class ThreadSafeInteger$/;"	c	namespace:X265_NS
X265_NS::ThreadSafeInteger::ThreadSafeInteger	../../source/common/threading.h	/^    ThreadSafeInteger()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
X265_NS::ThreadSafeInteger::get	../../source/common/threading.h	/^    int get()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
X265_NS::ThreadSafeInteger::getIncr	../../source/common/threading.h	/^    int getIncr(int n = 1)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(int n = 1)
X265_NS::ThreadSafeInteger::incr	../../source/common/threading.h	/^    void incr()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
X265_NS::ThreadSafeInteger::m_cs	../../source/common/threading.h	/^    CRITICAL_SECTION   m_cs;$/;"	m	class:X265_NS::ThreadSafeInteger	access:protected
X265_NS::ThreadSafeInteger::m_cv	../../source/common/threading.h	/^    CONDITION_VARIABLE m_cv;$/;"	m	class:X265_NS::ThreadSafeInteger	access:protected
X265_NS::ThreadSafeInteger::m_val	../../source/common/threading.h	/^    int                m_val;$/;"	m	class:X265_NS::ThreadSafeInteger	access:protected
X265_NS::ThreadSafeInteger::poke	../../source/common/threading.h	/^    void poke(void)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(void)
X265_NS::ThreadSafeInteger::set	../../source/common/threading.h	/^    void set(int newval)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(int newval)
X265_NS::ThreadSafeInteger::waitForChange	../../source/common/threading.h	/^    int waitForChange(int prev)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(int prev)
X265_NS::ThreadSafeInteger::~ThreadSafeInteger	../../source/common/threading.h	/^    ~ThreadSafeInteger()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
X265_NS::ThreadShim	../../source/common/threading.cpp	/^static DWORD WINAPI ThreadShim(Thread *instance)$/;"	f	namespace:X265_NS	signature:(Thread *instance)
X265_NS::ThreadShim	../../source/common/threading.cpp	/^static void *ThreadShim(void *opaque)$/;"	f	namespace:X265_NS	signature:(void *opaque)
X265_NS::TimingInfo	../../source/common/slice.h	/^struct TimingInfo$/;"	s	namespace:X265_NS
X265_NS::TimingInfo::numUnitsInTick	../../source/common/slice.h	/^    uint32_t numUnitsInTick;$/;"	m	struct:X265_NS::TimingInfo	access:public
X265_NS::TimingInfo::timeScale	../../source/common/slice.h	/^    uint32_t timeScale;$/;"	m	struct:X265_NS::TimingInfo	access:public
X265_NS::VERTICAL_SPLIT	../../source/encoder/entropy.h	/^    VERTICAL_SPLIT        = 1,$/;"	e	enum:X265_NS::SplitType
X265_NS::VPS	../../source/common/slice.h	/^struct VPS$/;"	s	namespace:X265_NS
X265_NS::VPS::hrdParameters	../../source/common/slice.h	/^    HRDInfo          hrdParameters;$/;"	m	struct:X265_NS::VPS	access:public
X265_NS::VPS::maxDecPicBuffering	../../source/common/slice.h	/^    uint32_t         maxDecPicBuffering;$/;"	m	struct:X265_NS::VPS	access:public
X265_NS::VPS::maxLatencyIncrease	../../source/common/slice.h	/^    uint32_t         maxLatencyIncrease;$/;"	m	struct:X265_NS::VPS	access:public
X265_NS::VPS::maxTempSubLayers	../../source/common/slice.h	/^    uint32_t         maxTempSubLayers;$/;"	m	struct:X265_NS::VPS	access:public
X265_NS::VPS::numReorderPics	../../source/common/slice.h	/^    uint32_t         numReorderPics;$/;"	m	struct:X265_NS::VPS	access:public
X265_NS::VPS::ptl	../../source/common/slice.h	/^    ProfileTierLevel ptl;$/;"	m	struct:X265_NS::VPS	access:public
X265_NS::VUI	../../source/common/slice.h	/^struct VUI$/;"	s	namespace:X265_NS
X265_NS::VUI::aspectRatioIdc	../../source/common/slice.h	/^    int        aspectRatioIdc;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::aspectRatioInfoPresentFlag	../../source/common/slice.h	/^    bool       aspectRatioInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::chromaLocInfoPresentFlag	../../source/common/slice.h	/^    bool       chromaLocInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::chromaSampleLocTypeBottomField	../../source/common/slice.h	/^    int        chromaSampleLocTypeBottomField;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::chromaSampleLocTypeTopField	../../source/common/slice.h	/^    int        chromaSampleLocTypeTopField;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::colourDescriptionPresentFlag	../../source/common/slice.h	/^    bool       colourDescriptionPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::colourPrimaries	../../source/common/slice.h	/^    int        colourPrimaries;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::defaultDisplayWindow	../../source/common/slice.h	/^    Window     defaultDisplayWindow;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::fieldSeqFlag	../../source/common/slice.h	/^    bool       fieldSeqFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::frameFieldInfoPresentFlag	../../source/common/slice.h	/^    bool       frameFieldInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::hrdParameters	../../source/common/slice.h	/^    HRDInfo    hrdParameters;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::hrdParametersPresentFlag	../../source/common/slice.h	/^    bool       hrdParametersPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::matrixCoefficients	../../source/common/slice.h	/^    int        matrixCoefficients;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::overscanAppropriateFlag	../../source/common/slice.h	/^    bool       overscanAppropriateFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::overscanInfoPresentFlag	../../source/common/slice.h	/^    bool       overscanInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::sarHeight	../../source/common/slice.h	/^    int        sarHeight;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::sarWidth	../../source/common/slice.h	/^    int        sarWidth;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::timingInfo	../../source/common/slice.h	/^    TimingInfo timingInfo;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::transferCharacteristics	../../source/common/slice.h	/^    int        transferCharacteristics;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::videoFormat	../../source/common/slice.h	/^    int        videoFormat;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::videoFullRangeFlag	../../source/common/slice.h	/^    bool       videoFullRangeFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::VUI::videoSignalTypePresentFlag	../../source/common/slice.h	/^    bool       videoSignalTypePresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
X265_NS::WaveFront	../../source/common/wavefront.h	/^class WaveFront : public JobProvider$/;"	c	namespace:X265_NS	inherits:JobProvider
X265_NS::WaveFront::WaveFront	../../source/common/wavefront.h	/^    WaveFront()$/;"	f	class:X265_NS::WaveFront	access:public	signature:()
X265_NS::WaveFront::clearEnabledRowMask	../../source/common/wavefront.cpp	/^void WaveFront::clearEnabledRowMask()$/;"	f	class:X265_NS::WaveFront	signature:()
X265_NS::WaveFront::clearEnabledRowMask	../../source/common/wavefront.h	/^    void clearEnabledRowMask();$/;"	p	class:X265_NS::WaveFront	access:public	signature:()
X265_NS::WaveFront::dequeueRow	../../source/common/wavefront.cpp	/^bool WaveFront::dequeueRow(int row)$/;"	f	class:X265_NS::WaveFront	signature:(int row)
X265_NS::WaveFront::dequeueRow	../../source/common/wavefront.h	/^    bool dequeueRow(int row);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row)
X265_NS::WaveFront::enableAllRows	../../source/common/wavefront.cpp	/^void WaveFront::enableAllRows()$/;"	f	class:X265_NS::WaveFront	signature:()
X265_NS::WaveFront::enableAllRows	../../source/common/wavefront.h	/^    void enableAllRows();$/;"	p	class:X265_NS::WaveFront	access:public	signature:()
X265_NS::WaveFront::enableRow	../../source/common/wavefront.cpp	/^void WaveFront::enableRow(int row)$/;"	f	class:X265_NS::WaveFront	signature:(int row)
X265_NS::WaveFront::enableRow	../../source/common/wavefront.h	/^    void enableRow(int row);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row)
X265_NS::WaveFront::enqueueRow	../../source/common/wavefront.cpp	/^void WaveFront::enqueueRow(int row)$/;"	f	class:X265_NS::WaveFront	signature:(int row)
X265_NS::WaveFront::enqueueRow	../../source/common/wavefront.h	/^    void enqueueRow(int row);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row)
X265_NS::WaveFront::findJob	../../source/common/wavefront.cpp	/^void WaveFront::findJob(int threadId)$/;"	f	class:X265_NS::WaveFront	signature:(int threadId)
X265_NS::WaveFront::findJob	../../source/common/wavefront.h	/^    void findJob(int threadId);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int threadId)
X265_NS::WaveFront::init	../../source/common/wavefront.cpp	/^bool WaveFront::init(int numRows)$/;"	f	class:X265_NS::WaveFront	signature:(int numRows)
X265_NS::WaveFront::init	../../source/common/wavefront.h	/^    bool init(int numRows);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int numRows)
X265_NS::WaveFront::m_externalDependencyBitmap	../../source/common/wavefront.h	/^    uint32_t volatile *m_externalDependencyBitmap;$/;"	m	class:X265_NS::WaveFront	access:private
X265_NS::WaveFront::m_internalDependencyBitmap	../../source/common/wavefront.h	/^    uint32_t volatile *m_internalDependencyBitmap;$/;"	m	class:X265_NS::WaveFront	access:private
X265_NS::WaveFront::m_numRows	../../source/common/wavefront.h	/^    int m_numRows;$/;"	m	class:X265_NS::WaveFront	access:private
X265_NS::WaveFront::m_numWords	../../source/common/wavefront.h	/^    int m_numWords;$/;"	m	class:X265_NS::WaveFront	access:private
X265_NS::WaveFront::processRow	../../source/common/wavefront.h	/^    virtual void processRow(int row, int threadId) = 0;$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row, int threadId)
X265_NS::WaveFront::~WaveFront	../../source/common/wavefront.cpp	/^WaveFront::~WaveFront()$/;"	f	class:X265_NS::WaveFront	signature:()
X265_NS::WaveFront::~WaveFront	../../source/common/wavefront.h	/^    virtual ~WaveFront();$/;"	p	class:X265_NS::WaveFront	access:public	signature:()
X265_NS::WeightParam	../../source/common/slice.h	/^struct WeightParam$/;"	s	namespace:X265_NS
X265_NS::WeightParam::bPresentFlag	../../source/common/slice.h	/^    bool     bPresentFlag;$/;"	m	struct:X265_NS::WeightParam	access:public
X265_NS::WeightParam::inputOffset	../../source/common/slice.h	/^    int      inputOffset;$/;"	m	struct:X265_NS::WeightParam	access:public
X265_NS::WeightParam::inputWeight	../../source/common/slice.h	/^    int      inputWeight;$/;"	m	struct:X265_NS::WeightParam	access:public
X265_NS::WeightParam::log2WeightDenom	../../source/common/slice.h	/^    uint32_t log2WeightDenom;$/;"	m	struct:X265_NS::WeightParam	access:public
X265_NS::WeightParam::setFromWeightAndOffset	../../source/common/slice.h	/^    void setFromWeightAndOffset(int w, int o, int denom, bool bNormalize)$/;"	f	struct:X265_NS::WeightParam	access:public	signature:(int w, int o, int denom, bool bNormalize)
X265_NS::Window	../../source/common/slice.h	/^struct Window$/;"	s	namespace:X265_NS
X265_NS::Window::Window	../../source/common/slice.h	/^    Window()$/;"	f	struct:X265_NS::Window	access:public	signature:()
X265_NS::Window::bEnabled	../../source/common/slice.h	/^    bool bEnabled;$/;"	m	struct:X265_NS::Window	access:public
X265_NS::Window::bottomOffset	../../source/common/slice.h	/^    int  bottomOffset;$/;"	m	struct:X265_NS::Window	access:public
X265_NS::Window::leftOffset	../../source/common/slice.h	/^    int  leftOffset;$/;"	m	struct:X265_NS::Window	access:public
X265_NS::Window::rightOffset	../../source/common/slice.h	/^    int  rightOffset;$/;"	m	struct:X265_NS::Window	access:public
X265_NS::Window::topOffset	../../source/common/slice.h	/^    int  topOffset;$/;"	m	struct:X265_NS::Window	access:public
X265_NS::WorkerThread	../../source/common/threadpool.cpp	/^class WorkerThread : public Thread$/;"	c	namespace:X265_NS	file:	inherits:Thread
X265_NS::WorkerThread::WorkerThread	../../source/common/threadpool.cpp	/^    WorkerThread(ThreadPool& pool, int id) : m_pool(pool), m_id(id) {}$/;"	f	class:X265_NS::WorkerThread	access:public	signature:(ThreadPool& pool, int id)
X265_NS::WorkerThread::awaken	../../source/common/threadpool.cpp	/^    void awaken()           { m_wakeEvent.trigger(); }$/;"	f	class:X265_NS::WorkerThread	access:public	signature:()
X265_NS::WorkerThread::m_bondMaster	../../source/common/threadpool.cpp	/^    BondedTaskGroup* m_bondMaster;$/;"	m	class:X265_NS::WorkerThread	file:	access:public
X265_NS::WorkerThread::m_curJobProvider	../../source/common/threadpool.cpp	/^    JobProvider*     m_curJobProvider;$/;"	m	class:X265_NS::WorkerThread	file:	access:public
X265_NS::WorkerThread::m_id	../../source/common/threadpool.cpp	/^    int          m_id;$/;"	m	class:X265_NS::WorkerThread	file:	access:private
X265_NS::WorkerThread::m_pool	../../source/common/threadpool.cpp	/^    ThreadPool&  m_pool;$/;"	m	class:X265_NS::WorkerThread	file:	access:private
X265_NS::WorkerThread::m_wakeEvent	../../source/common/threadpool.cpp	/^    Event        m_wakeEvent;$/;"	m	class:X265_NS::WorkerThread	file:	access:private
X265_NS::WorkerThread::operator =	../../source/common/threadpool.cpp	/^    WorkerThread& operator =(const WorkerThread&);$/;"	p	class:X265_NS::WorkerThread	file:	access:private	signature:(const WorkerThread&)
X265_NS::WorkerThread::threadMain	../../source/common/threadpool.cpp	/^    void threadMain();$/;"	p	class:X265_NS::WorkerThread	file:	access:public	signature:()
X265_NS::WorkerThread::threadMain	../../source/common/threadpool.cpp	/^void WorkerThread::threadMain()$/;"	f	class:X265_NS::WorkerThread	signature:()
X265_NS::WorkerThread::~WorkerThread	../../source/common/threadpool.cpp	/^    virtual ~WorkerThread() {}$/;"	f	class:X265_NS::WorkerThread	access:public	signature:()
X265_NS::Y4MInput	../../source/input/y4m.h	/^class Y4MInput : public InputFile, public Thread$/;"	c	namespace:X265_NS	inherits:InputFile,Thread
X265_NS::Y4MInput::Y4MInput	../../source/input/y4m.h	/^    Y4MInput(InputFileInfo& info);$/;"	p	class:X265_NS::Y4MInput	access:public	signature:(InputFileInfo& info)
X265_NS::Y4MInput::buf	../../source/input/y4m.h	/^    char* buf[QUEUE_SIZE];$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::colorSpace	../../source/input/y4m.h	/^    int colorSpace;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::depth	../../source/input/y4m.h	/^    int depth;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::framesize	../../source/input/y4m.h	/^    size_t framesize;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::getHeight	../../source/input/y4m.h	/^    int getHeight() const                         { return height; }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
X265_NS::Y4MInput::getName	../../source/input/y4m.h	/^    const char *getName() const   { return "y4m"; }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
X265_NS::Y4MInput::getWidth	../../source/input/y4m.h	/^    int getWidth() const                          { return width; }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
X265_NS::Y4MInput::height	../../source/input/y4m.h	/^    int height;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::ifs	../../source/input/y4m.h	/^    std::istream *ifs;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::isEof	../../source/input/y4m.h	/^    bool isEof() const            { return ifs && ifs->eof();  }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
X265_NS::Y4MInput::isFail	../../source/input/y4m.h	/^    bool isFail()                 { return !(ifs && !ifs->fail() && threadActive); }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:()
X265_NS::Y4MInput::parseHeader	../../source/input/y4m.h	/^    bool parseHeader();$/;"	p	class:X265_NS::Y4MInput	access:protected	signature:()
X265_NS::Y4MInput::populateFrameQueue	../../source/input/y4m.h	/^    bool populateFrameQueue();$/;"	p	class:X265_NS::Y4MInput	access:protected	signature:()
X265_NS::Y4MInput::rateDenom	../../source/input/y4m.h	/^    uint32_t rateDenom;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::rateNum	../../source/input/y4m.h	/^    uint32_t rateNum;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::readCount	../../source/input/y4m.h	/^    ThreadSafeInteger readCount;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::readPicture	../../source/input/y4m.h	/^    bool readPicture(x265_picture&);$/;"	p	class:X265_NS::Y4MInput	access:public	signature:(x265_picture&)
X265_NS::Y4MInput::release	../../source/input/y4m.h	/^    void release();$/;"	p	class:X265_NS::Y4MInput	access:public	signature:()
X265_NS::Y4MInput::sarHeight	../../source/input/y4m.h	/^    uint32_t sarHeight;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::sarWidth	../../source/input/y4m.h	/^    uint32_t sarWidth;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::startReader	../../source/input/y4m.h	/^    void startReader();$/;"	p	class:X265_NS::Y4MInput	access:public	signature:()
X265_NS::Y4MInput::threadActive	../../source/input/y4m.h	/^    bool threadActive;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::threadMain	../../source/input/y4m.h	/^    void threadMain();$/;"	p	class:X265_NS::Y4MInput	access:protected	signature:()
X265_NS::Y4MInput::width	../../source/input/y4m.h	/^    int width;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::writeCount	../../source/input/y4m.h	/^    ThreadSafeInteger writeCount;$/;"	m	class:X265_NS::Y4MInput	access:protected
X265_NS::Y4MInput::~Y4MInput	../../source/input/y4m.h	/^    virtual ~Y4MInput();$/;"	p	class:X265_NS::Y4MInput	access:public	signature:()
X265_NS::Y4MOutput	../../source/output/y4m.h	/^class Y4MOutput : public ReconFile$/;"	c	namespace:X265_NS	inherits:ReconFile
X265_NS::Y4MOutput::Y4MOutput	../../source/output/y4m.h	/^    Y4MOutput(const char *filename, int width, int height, uint32_t fpsNum, uint32_t fpsDenom, int csp);$/;"	p	class:X265_NS::Y4MOutput	access:public	signature:(const char *filename, int width, int height, uint32_t fpsNum, uint32_t fpsDenom, int csp)
X265_NS::Y4MOutput::buf	../../source/output/y4m.h	/^    char *buf;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::colorSpace	../../source/output/y4m.h	/^    int colorSpace;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::frameSize	../../source/output/y4m.h	/^    uint32_t frameSize;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::getName	../../source/output/y4m.h	/^    const char *getName() const                   { return "y4m"; }$/;"	f	class:X265_NS::Y4MOutput	access:public	signature:() const
X265_NS::Y4MOutput::header	../../source/output/y4m.h	/^    std::ofstream::pos_type header;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::height	../../source/output/y4m.h	/^    int height;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::isFail	../../source/output/y4m.h	/^    bool isFail() const                           { return ofs.fail(); }$/;"	f	class:X265_NS::Y4MOutput	access:public	signature:() const
X265_NS::Y4MOutput::ofs	../../source/output/y4m.h	/^    std::ofstream ofs;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::release	../../source/output/y4m.h	/^    void release()                                { delete this; }$/;"	f	class:X265_NS::Y4MOutput	access:public	signature:()
X265_NS::Y4MOutput::width	../../source/output/y4m.h	/^    int width;$/;"	m	class:X265_NS::Y4MOutput	access:protected
X265_NS::Y4MOutput::writeHeader	../../source/output/y4m.h	/^    void writeHeader();$/;"	p	class:X265_NS::Y4MOutput	access:protected	signature:()
X265_NS::Y4MOutput::writePicture	../../source/output/y4m.h	/^    bool writePicture(const x265_picture& pic);$/;"	p	class:X265_NS::Y4MOutput	access:public	signature:(const x265_picture& pic)
X265_NS::Y4MOutput::~Y4MOutput	../../source/output/y4m.h	/^    virtual ~Y4MOutput();$/;"	p	class:X265_NS::Y4MOutput	access:public	signature:()
X265_NS::YUVInput	../../source/input/yuv.h	/^class YUVInput : public InputFile, public Thread$/;"	c	namespace:X265_NS	inherits:InputFile,Thread
X265_NS::YUVInput::YUVInput	../../source/input/yuv.h	/^    YUVInput(InputFileInfo& info);$/;"	p	class:X265_NS::YUVInput	access:public	signature:(InputFileInfo& info)
X265_NS::YUVInput::buf	../../source/input/yuv.h	/^    char* buf[QUEUE_SIZE];$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::colorSpace	../../source/input/yuv.h	/^    int colorSpace; \/\/< source Color Space Parameter$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::depth	../../source/input/yuv.h	/^    uint32_t depth;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::framesize	../../source/input/yuv.h	/^    uint32_t framesize;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::getHeight	../../source/input/yuv.h	/^    int getHeight() const                         { return height; }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
X265_NS::YUVInput::getName	../../source/input/yuv.h	/^    const char *getName() const                   { return "yuv"; }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
X265_NS::YUVInput::getWidth	../../source/input/yuv.h	/^    int getWidth() const                          { return width; }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
X265_NS::YUVInput::guessFrameCount	../../source/input/yuv.h	/^    int guessFrameCount();$/;"	p	class:X265_NS::YUVInput	access:protected	signature:()
X265_NS::YUVInput::height	../../source/input/yuv.h	/^    int height;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::ifs	../../source/input/yuv.h	/^    std::istream *ifs;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::isEof	../../source/input/yuv.h	/^    bool isEof() const                            { return ifs && ifs->eof();  }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
X265_NS::YUVInput::isFail	../../source/input/yuv.h	/^    bool isFail()                                 { return !(ifs && !ifs->fail() && threadActive); }$/;"	f	class:X265_NS::YUVInput	access:public	signature:()
X265_NS::YUVInput::populateFrameQueue	../../source/input/yuv.h	/^    bool populateFrameQueue();$/;"	p	class:X265_NS::YUVInput	access:protected	signature:()
X265_NS::YUVInput::readCount	../../source/input/yuv.h	/^    ThreadSafeInteger readCount;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::readPicture	../../source/input/yuv.h	/^    bool readPicture(x265_picture&);$/;"	p	class:X265_NS::YUVInput	access:public	signature:(x265_picture&)
X265_NS::YUVInput::release	../../source/input/yuv.h	/^    void release();$/;"	p	class:X265_NS::YUVInput	access:public	signature:()
X265_NS::YUVInput::startReader	../../source/input/yuv.h	/^    void startReader();$/;"	p	class:X265_NS::YUVInput	access:public	signature:()
X265_NS::YUVInput::threadActive	../../source/input/yuv.h	/^    bool threadActive;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::threadMain	../../source/input/yuv.h	/^    void threadMain();$/;"	p	class:X265_NS::YUVInput	access:protected	signature:()
X265_NS::YUVInput::width	../../source/input/yuv.h	/^    int width;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::writeCount	../../source/input/yuv.h	/^    ThreadSafeInteger writeCount;$/;"	m	class:X265_NS::YUVInput	access:protected
X265_NS::YUVInput::~YUVInput	../../source/input/yuv.h	/^    virtual ~YUVInput();$/;"	p	class:X265_NS::YUVInput	access:public	signature:()
X265_NS::YUVOutput	../../source/output/yuv.h	/^class YUVOutput : public ReconFile$/;"	c	namespace:X265_NS	inherits:ReconFile
X265_NS::YUVOutput::YUVOutput	../../source/output/yuv.h	/^    YUVOutput(const char *filename, int width, int height, uint32_t bitdepth, int csp);$/;"	p	class:X265_NS::YUVOutput	access:public	signature:(const char *filename, int width, int height, uint32_t bitdepth, int csp)
X265_NS::YUVOutput::buf	../../source/output/yuv.h	/^    char *buf;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::colorSpace	../../source/output/yuv.h	/^    int colorSpace;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::depth	../../source/output/yuv.h	/^    uint32_t depth;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::frameSize	../../source/output/yuv.h	/^    uint32_t frameSize;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::getName	../../source/output/yuv.h	/^    const char *getName() const                   { return "yuv"; }$/;"	f	class:X265_NS::YUVOutput	access:public	signature:() const
X265_NS::YUVOutput::height	../../source/output/yuv.h	/^    int height;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::isFail	../../source/output/yuv.h	/^    bool isFail() const                           { return ofs.fail(); }$/;"	f	class:X265_NS::YUVOutput	access:public	signature:() const
X265_NS::YUVOutput::ofs	../../source/output/yuv.h	/^    std::ofstream ofs;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::release	../../source/output/yuv.h	/^    void release()                                { delete this; }$/;"	f	class:X265_NS::YUVOutput	access:public	signature:()
X265_NS::YUVOutput::width	../../source/output/yuv.h	/^    int width;$/;"	m	class:X265_NS::YUVOutput	access:protected
X265_NS::YUVOutput::writePicture	../../source/output/yuv.h	/^    bool writePicture(const x265_picture& pic);$/;"	p	class:X265_NS::YUVOutput	access:public	signature:(const x265_picture& pic)
X265_NS::YUVOutput::~YUVOutput	../../source/output/yuv.h	/^    virtual ~YUVOutput();$/;"	p	class:X265_NS::YUVOutput	access:public	signature:()
X265_NS::Yuv	../../source/common/yuv.h	/^class Yuv$/;"	c	namespace:X265_NS
X265_NS::Yuv::Yuv	../../source/common/yuv.h	/^    Yuv();$/;"	p	class:X265_NS::Yuv	access:public	signature:()
X265_NS::Yuv::addAvg	../../source/common/yuv.h	/^    void   addAvg(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma)
X265_NS::Yuv::addClip	../../source/common/yuv.h	/^    void   addClip(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp)
X265_NS::Yuv::copyFromPicYuv	../../source/common/yuv.h	/^    void   copyFromPicYuv(const PicYuv& srcPicYuv, uint32_t cuAddr, uint32_t absPartIdx);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const PicYuv& srcPicYuv, uint32_t cuAddr, uint32_t absPartIdx)
X265_NS::Yuv::copyFromYuv	../../source/common/yuv.h	/^    void   copyFromYuv(const Yuv& srcYuv);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const Yuv& srcYuv)
X265_NS::Yuv::copyPUFromYuv	../../source/common/yuv.h	/^    void   copyPUFromYuv(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma)
X265_NS::Yuv::copyPartToPartChroma	../../source/common/yuv.h	/^    void copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
X265_NS::Yuv::copyPartToPartLuma	../../source/common/yuv.h	/^    void copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
X265_NS::Yuv::copyPartToYuv	../../source/common/yuv.h	/^    void   copyPartToYuv(Yuv& dstYuv, uint32_t absPartIdx) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
X265_NS::Yuv::copyToPartYuv	../../source/common/yuv.h	/^    void   copyToPartYuv(Yuv& dstYuv, uint32_t absPartIdx) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
X265_NS::Yuv::copyToPicYuv	../../source/common/yuv.h	/^    void   copyToPicYuv(PicYuv& destPicYuv, uint32_t cuAddr, uint32_t absPartIdx) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(PicYuv& destPicYuv, uint32_t cuAddr, uint32_t absPartIdx) const
X265_NS::Yuv::create	../../source/common/yuv.h	/^    bool   create(uint32_t size, int csp);$/;"	p	class:X265_NS::Yuv	access:public	signature:(uint32_t size, int csp)
X265_NS::Yuv::destroy	../../source/common/yuv.h	/^    void   destroy();$/;"	p	class:X265_NS::Yuv	access:public	signature:()
X265_NS::Yuv::getAddrOffset	../../source/common/yuv.h	/^    static int getAddrOffset(uint32_t absPartIdx, uint32_t width)$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx, uint32_t width)
X265_NS::Yuv::getCbAddr	../../source/common/yuv.h	/^    const pixel* getCbAddr(uint32_t absPartIdx) const                        { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::Yuv::getCbAddr	../../source/common/yuv.h	/^    pixel* getCbAddr(uint32_t absPartIdx)                        { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx)
X265_NS::Yuv::getChromaAddr	../../source/common/yuv.h	/^    const pixel* getChromaAddr(uint32_t chromaId, uint32_t absPartIdx) const { return m_buf[chromaId] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t chromaId, uint32_t absPartIdx) const
X265_NS::Yuv::getChromaAddr	../../source/common/yuv.h	/^    pixel* getChromaAddr(uint32_t chromaId, uint32_t absPartIdx) { return m_buf[chromaId] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t chromaId, uint32_t absPartIdx)
X265_NS::Yuv::getChromaAddrOffset	../../source/common/yuv.h	/^    int getChromaAddrOffset(uint32_t absPartIdx) const$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::Yuv::getCrAddr	../../source/common/yuv.h	/^    const pixel* getCrAddr(uint32_t absPartIdx) const                        { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::Yuv::getCrAddr	../../source/common/yuv.h	/^    pixel* getCrAddr(uint32_t absPartIdx)                        { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx)
X265_NS::Yuv::getLumaAddr	../../source/common/yuv.h	/^    const pixel* getLumaAddr(uint32_t absPartIdx) const                      { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
X265_NS::Yuv::getLumaAddr	../../source/common/yuv.h	/^    pixel* getLumaAddr(uint32_t absPartIdx)                      { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx)
X265_NS::Yuv::m_buf	../../source/common/yuv.h	/^    pixel*   m_buf[3];$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_csize	../../source/common/yuv.h	/^    uint32_t m_csize;$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_csp	../../source/common/yuv.h	/^    int      m_csp;$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_hChromaShift	../../source/common/yuv.h	/^    int      m_hChromaShift;$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_integral	../../source/common/yuv.h	/^    uint32_t *m_integral[2][MAX_NUM_REF][INTEGRAL_PLANE_NUM];$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_part	../../source/common/yuv.h	/^    int      m_part;         \/\/ cached partition enum size$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_size	../../source/common/yuv.h	/^    uint32_t m_size;$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::Yuv::m_vChromaShift	../../source/common/yuv.h	/^    int      m_vChromaShift;$/;"	m	class:X265_NS::Yuv	access:public
X265_NS::__anon13::levelEnum	../../source/encoder/level.cpp	/^    Level::Name levelEnum;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::levelIdc	../../source/encoder/level.cpp	/^    int levelIdc;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::maxBitrateHigh	../../source/encoder/level.cpp	/^    uint32_t maxBitrateHigh;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::maxBitrateMain	../../source/encoder/level.cpp	/^    uint32_t maxBitrateMain;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::maxCpbSizeHigh	../../source/encoder/level.cpp	/^    uint32_t maxCpbSizeHigh;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::maxCpbSizeMain	../../source/encoder/level.cpp	/^    uint32_t maxCpbSizeMain;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::maxLumaSamples	../../source/encoder/level.cpp	/^    uint32_t maxLumaSamples;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::maxLumaSamplesPerSecond	../../source/encoder/level.cpp	/^    uint32_t maxLumaSamplesPerSecond;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::minCompressionRatio	../../source/encoder/level.cpp	/^    uint32_t minCompressionRatio;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon13::name	../../source/encoder/level.cpp	/^    const char* name;$/;"	m	struct:X265_NS::__anon13	file:	access:public
X265_NS::__anon21::bIsBroadcast	../../source/common/winxp.h	/^    volatile int bIsBroadcast;$/;"	m	struct:X265_NS::__anon21	access:public
X265_NS::__anon21::broadcastMutex	../../source/common/winxp.h	/^    CRITICAL_SECTION broadcastMutex;$/;"	m	struct:X265_NS::__anon21	access:public
X265_NS::__anon21::semaphore	../../source/common/winxp.h	/^    HANDLE semaphore;$/;"	m	struct:X265_NS::__anon21	access:public
X265_NS::__anon21::waiterCount	../../source/common/winxp.h	/^    volatile int waiterCount;$/;"	m	struct:X265_NS::__anon21	access:public
X265_NS::__anon21::waiterCountMutex	../../source/common/winxp.h	/^    CRITICAL_SECTION waiterCountMutex;$/;"	m	struct:X265_NS::__anon21	access:public
X265_NS::__anon21::waitersDone	../../source/common/winxp.h	/^    HANDLE waitersDone;$/;"	m	struct:X265_NS::__anon21	access:public
X265_NS::_confirm	../../source/common/param.cpp	/^static inline int _confirm(x265_param* param, bool bflag, const char* message)$/;"	f	namespace:X265_NS	signature:(x265_param* param, bool bflag, const char* message)
X265_NS::addAvg_t	../../source/common/primitives.h	/^typedef void (*addAvg_t)(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	t	namespace:X265_NS
X265_NS::all_angs_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void all_angs_pred_altivec(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)$/;"	f	namespace:X265_NS	signature:(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)
X265_NS::analysis2PassFrameData	../../source/common/framedata.h	/^struct analysis2PassFrameData$/;"	s	namespace:X265_NS
X265_NS::analysis2PassFrameData::averageDistortion	../../source/common/framedata.h	/^    double        averageDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::ctuDistortion	../../source/common/framedata.h	/^    sse_t*        ctuDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::depth	../../source/common/framedata.h	/^    uint8_t*      depth;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::distortion	../../source/common/framedata.h	/^    sse_t*        distortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::highDistortionCtuCount	../../source/common/framedata.h	/^    uint32_t      highDistortionCtuCount;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::lowDistortionCtuCount	../../source/common/framedata.h	/^    uint32_t      lowDistortionCtuCount;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::m_mv	../../source/common/framedata.h	/^    MV*           m_mv[2];$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::modes	../../source/common/framedata.h	/^    uint8_t*      modes;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::mvpIdx	../../source/common/framedata.h	/^    int*          mvpIdx[2];$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::offset	../../source/common/framedata.h	/^    double*       offset;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::ref	../../source/common/framedata.h	/^    int32_t*      ref[2];$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::scaledDistortion	../../source/common/framedata.h	/^    double*       scaledDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::sdDistortion	../../source/common/framedata.h	/^    double        sdDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis2PassFrameData::threshold	../../source/common/framedata.h	/^    double*       threshold;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
X265_NS::analysis_inter_data	../../source/common/framedata.h	/^struct analysis_inter_data$/;"	s	namespace:X265_NS
X265_NS::analysis_inter_data::depth	../../source/common/framedata.h	/^    uint8_t*    depth;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::interDir	../../source/common/framedata.h	/^    uint8_t*    interDir;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::mergeFlag	../../source/common/framedata.h	/^    uint8_t*    mergeFlag;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::modes	../../source/common/framedata.h	/^    uint8_t*    modes;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::mv	../../source/common/framedata.h	/^    MV*         mv[2];$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::mvpIdx	../../source/common/framedata.h	/^    uint8_t*    mvpIdx[2];$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::partSize	../../source/common/framedata.h	/^    uint8_t*    partSize;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::ref	../../source/common/framedata.h	/^    int32_t*    ref;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_inter_data::refIdx	../../source/common/framedata.h	/^    int8_t*     refIdx[2];$/;"	m	struct:X265_NS::analysis_inter_data	access:public
X265_NS::analysis_intra_data	../../source/common/framedata.h	/^struct analysis_intra_data$/;"	s	namespace:X265_NS
X265_NS::analysis_intra_data::chromaModes	../../source/common/framedata.h	/^    uint8_t*  chromaModes;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
X265_NS::analysis_intra_data::depth	../../source/common/framedata.h	/^    uint8_t*  depth;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
X265_NS::analysis_intra_data::modes	../../source/common/framedata.h	/^    uint8_t*  modes;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
X265_NS::analysis_intra_data::partSizes	../../source/common/framedata.h	/^    char*     partSizes;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
X265_NS::appendtool	../../source/common/param.cpp	/^static void appendtool(x265_param* param, char* buf, size_t size, const char* toolstr)$/;"	f	namespace:X265_NS	signature:(x265_param* param, char* buf, size_t size, const char* toolstr)
X265_NS::bitSize	../../source/common/bitstream.h	/^static const uint8_t bitSize[256] =$/;"	m	namespace:X265_NS
X265_NS::blockfill_s_t	../../source/common/primitives.h	/^typedef void (*blockfill_s_t)(int16_t* dst, intptr_t dstride, int16_t val);$/;"	t	namespace:X265_NS
X265_NS::bs_size_se	../../source/common/bitstream.h	/^static inline int bs_size_se(int val)$/;"	f	namespace:X265_NS	signature:(int val)
X265_NS::bs_size_ue	../../source/common/bitstream.h	/^static inline int bs_size_ue(unsigned int val)$/;"	f	namespace:X265_NS	signature:(unsigned int val)
X265_NS::bs_size_ue_big	../../source/common/bitstream.h	/^static inline int bs_size_ue_big(unsigned int val)$/;"	f	namespace:X265_NS	signature:(unsigned int val)
X265_NS::calcresidual_t	../../source/common/primitives.h	/^typedef void (*calcresidual_t)(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::checksumFinish	../../source/common/picyuv.cpp	/^void checksumFinish(uint32_t checksum, uint8_t digest[16])$/;"	f	namespace:X265_NS	signature:(uint32_t checksum, uint8_t digest[16])
X265_NS::checksumFinish	../../source/common/picyuv.h	/^void checksumFinish(uint32_t checksum, uint8_t digest[16]);$/;"	p	namespace:X265_NS	signature:(uint32_t checksum, uint8_t digest[16])
X265_NS::coeffBitsExp	../../source/encoder/ratecontrol.h	/^const double coeffBitsExp[5][11] = {{0.7697, 1.0977, 1.1838, 1.1655, 1.0551, 1.1671, 1.0957, 1.0957, 1.0957, 1.0957, 1.0957},$/;"	m	namespace:X265_NS
X265_NS::cond_broadcast	../../source/common/winxp.cpp	/^void WINAPI cond_broadcast(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_broadcast	../../source/common/winxp.h	/^void WINAPI cond_broadcast(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_destroy	../../source/common/winxp.cpp	/^void cond_destroy(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_destroy	../../source/common/winxp.h	/^void cond_destroy(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_init	../../source/common/winxp.cpp	/^int WINAPI cond_init(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_init	../../source/common/winxp.h	/^int WINAPI cond_init(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_signal	../../source/common/winxp.cpp	/^void WINAPI cond_signal(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_signal	../../source/common/winxp.h	/^void WINAPI cond_signal(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
X265_NS::cond_wait	../../source/common/winxp.cpp	/^BOOL WINAPI cond_wait(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait)
X265_NS::cond_wait	../../source/common/winxp.h	/^BOOL WINAPI cond_wait(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait)
X265_NS::copy_cnt_t	../../source/common/primitives.h	/^typedef uint32_t (*copy_cnt_t)(int16_t* coeff, const int16_t* residual, intptr_t resiStride);$/;"	t	namespace:X265_NS
X265_NS::copy_pp_t	../../source/common/primitives.h	/^typedef void (*copy_pp_t)(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride); \/\/ dst is aligned$/;"	t	namespace:X265_NS
X265_NS::copy_ps_t	../../source/common/primitives.h	/^typedef void (*copy_ps_t)(int16_t* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	t	namespace:X265_NS
X265_NS::copy_sp_t	../../source/common/primitives.h	/^typedef void (*copy_sp_t)(pixel* dst, intptr_t dstStride, const int16_t* src, intptr_t srcStride);$/;"	t	namespace:X265_NS
X265_NS::copy_ss_t	../../source/common/primitives.h	/^typedef void (*copy_ss_t)(int16_t* dst, intptr_t dstStride, const int16_t* src, intptr_t srcStride);$/;"	t	namespace:X265_NS
X265_NS::costC1C2Flag_t	../../source/common/primitives.h	/^typedef uint32_t (*costC1C2Flag_t)(uint16_t *absCoeff, intptr_t numC1Flag, uint8_t *baseCtxMod, intptr_t ctxOffset);$/;"	t	namespace:X265_NS
X265_NS::costCoeffNxN_t	../../source/common/primitives.h	/^typedef uint32_t (*costCoeffNxN_t)(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase);$/;"	t	namespace:X265_NS
X265_NS::costCoeffRemain_c0	../../source/encoder/entropy.cpp	/^uint32_t costCoeffRemain_c0(uint16_t *absCoeff, int numNonZero)$/;"	f	namespace:X265_NS	signature:(uint16_t *absCoeff, int numNonZero)
X265_NS::costCoeffRemain_t	../../source/common/primitives.h	/^typedef uint32_t (*costCoeffRemain_t)(uint16_t *absCoeff, int numNonZero, int idx);$/;"	t	namespace:X265_NS
X265_NS::count_nonzero_t	../../source/common/primitives.h	/^typedef int(*count_nonzero_t)(const int16_t* quantCoeff);$/;"	t	namespace:X265_NS
X265_NS::cpu_cpuid	../../source/common/cpu.cpp	/^void PFX(cpu_cpuid)(uint32_t op, uint32_t *eax, uint32_t *ebx, uint32_t *ecx, uint32_t *edx);$/;"	p	file:	signature:(uint32_t op, uint32_t *eax, uint32_t *ebx, uint32_t *ecx, uint32_t *edx)
X265_NS::cpu_cpuid_test	../../source/common/cpu.cpp	/^int PFX(cpu_cpuid_test)(void);$/;"	p	file:	signature:(void)
X265_NS::cpu_detect	../../source/common/cpu.cpp	/^uint32_t cpu_detect(void)$/;"	f	namespace:X265_NS	signature:(void)
X265_NS::cpu_detect	../../source/common/cpu.h	/^uint32_t cpu_detect(void);$/;"	p	namespace:X265_NS	signature:(void)
X265_NS::cpu_fast_neon_mrc_test	../../source/common/cpu.cpp	/^int PFX(cpu_fast_neon_mrc_test)(void);$/;"	p	file:	signature:(void)
X265_NS::cpu_name_t	../../source/common/cpu.h	/^struct cpu_name_t$/;"	s	namespace:X265_NS
X265_NS::cpu_name_t::flags	../../source/common/cpu.h	/^    uint32_t flags;$/;"	m	struct:X265_NS::cpu_name_t	access:public
X265_NS::cpu_name_t::name	../../source/common/cpu.h	/^    char name[16];$/;"	m	struct:X265_NS::cpu_name_t	access:public
X265_NS::cpu_names	../../source/common/cpu.cpp	/^const cpu_name_t cpu_names[] =$/;"	m	namespace:X265_NS	file:
X265_NS::cpu_neon_test	../../source/common/cpu.cpp	/^void PFX(cpu_neon_test)(void);$/;"	p	file:	signature:(void)
X265_NS::cpu_xgetbv	../../source/common/cpu.cpp	/^void PFX(cpu_xgetbv)(uint32_t op, uint32_t *eax, uint32_t *edx);$/;"	p	file:	signature:(uint32_t op, uint32_t *eax, uint32_t *edx)
X265_NS::cpy1Dto2D_shl_t	../../source/common/primitives.h	/^typedef void (*cpy1Dto2D_shl_t)(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift);$/;"	t	namespace:X265_NS
X265_NS::cpy1Dto2D_shr_t	../../source/common/primitives.h	/^typedef void (*cpy1Dto2D_shr_t)(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift);$/;"	t	namespace:X265_NS
X265_NS::cpy2Dto1D_shl_t	../../source/common/primitives.h	/^typedef void (*cpy2Dto1D_shl_t)(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	t	namespace:X265_NS
X265_NS::cpy2Dto1D_shr_t	../../source/common/primitives.h	/^typedef void (*cpy2Dto1D_shr_t)(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	t	namespace:X265_NS
X265_NS::crcFinish	../../source/common/picyuv.cpp	/^void crcFinish(uint32_t& crcVal, uint8_t digest[16])$/;"	f	namespace:X265_NS	signature:(uint32_t& crcVal, uint8_t digest[16])
X265_NS::crcFinish	../../source/common/picyuv.h	/^void crcFinish(uint32_t & crc, uint8_t digest[16]);$/;"	p	namespace:X265_NS	signature:(uint32_t & crc, uint8_t digest[16])
X265_NS::ctxCbf	../../source/common/contexts.h	/^static const uint32_t ctxCbf[3][5] = { { 1, 0, 0, 0, 0 }, { 2, 3, 4, 5, 6 }, { 2, 3, 4, 5, 6 } };$/;"	m	namespace:X265_NS
X265_NS::cubcast_t	../../source/common/cudata.h	/^typedef void(*cubcast_t)(uint8_t* dst, uint8_t val); \/\/ dst is aligned to MIN(size, 32)$/;"	t	namespace:X265_NS
X265_NS::cucopy_t	../../source/common/cudata.h	/^typedef void(*cucopy_t)(uint8_t* dst, uint8_t* src); \/\/ dst and src are aligned to MIN(size, 32)$/;"	t	namespace:X265_NS
X265_NS::cutree_fix8_pack	../../source/common/primitives.h	/^typedef void (*cutree_fix8_pack)(uint16_t *dst, double *src, int count);$/;"	t	namespace:X265_NS
X265_NS::cutree_fix8_unpack	../../source/common/primitives.h	/^typedef void (*cutree_fix8_unpack)(double *dst, uint16_t *src, int count);$/;"	t	namespace:X265_NS
X265_NS::cutree_propagate_cost	../../source/common/primitives.h	/^typedef void (*cutree_propagate_cost) (int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts, const int32_t* invQscales, const double* fpsFactor, int len);$/;"	t	namespace:X265_NS
X265_NS::dct_t	../../source/common/primitives.h	/^typedef void (*dct_t)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	t	namespace:X265_NS
X265_NS::denoiseDct_t	../../source/common/primitives.h	/^typedef void (*denoiseDct_t)(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff);$/;"	t	namespace:X265_NS
X265_NS::dequant_normal_t	../../source/common/primitives.h	/^typedef void (*dequant_normal_t)(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift);$/;"	t	namespace:X265_NS
X265_NS::dequant_scaling_t	../../source/common/primitives.h	/^typedef void (*dequant_scaling_t)(const int16_t* src, const int32_t* dequantCoef, int16_t* dst, int num, int mcqp_miper, int shift);$/;"	t	namespace:X265_NS
X265_NS::determineLevel	../../source/encoder/level.cpp	/^void determineLevel(const x265_param &param, VPS& vps)$/;"	f	namespace:X265_NS	signature:(const x265_param &param, VPS& vps)
X265_NS::determineLevel	../../source/encoder/level.h	/^void determineLevel(const x265_param &param, VPS& vps);$/;"	p	namespace:X265_NS	signature:(const x265_param &param, VPS& vps)
X265_NS::downscale_t	../../source/common/primitives.h	/^typedef void (*downscale_t)(const pixel* src0, pixel* dstf, pixel* dsth, pixel* dstv, pixel* dstc,$/;"	t	namespace:X265_NS
X265_NS::enforceLevel	../../source/encoder/level.cpp	/^bool enforceLevel(x265_param& param, VPS& vps)$/;"	f	namespace:X265_NS	signature:(x265_param& param, VPS& vps)
X265_NS::enforceLevel	../../source/encoder/level.h	/^bool enforceLevel(x265_param& param, VPS& vps);$/;"	p	namespace:X265_NS	signature:(x265_param& param, VPS& vps)
X265_NS::extendCURowBorder_t	../../source/common/primitives.h	/^typedef void (*extendCURowBorder_t)(pixel* txt, intptr_t stride, int width, int height, int marginX);$/;"	t	namespace:X265_NS
X265_NS::extendPicBorder	../../source/common/common.h	/^void extendPicBorder(pixel* recon, intptr_t stride, int width, int height, int marginX, int marginY);$/;"	p	namespace:X265_NS	signature:(pixel* recon, intptr_t stride, int width, int height, int marginX, int marginY)
X265_NS::extendPicBorder	../../source/common/pixel.cpp	/^void extendPicBorder(pixel* pic, intptr_t stride, int width, int height, int marginX, int marginY)$/;"	f	namespace:X265_NS	signature:(pixel* pic, intptr_t stride, int width, int height, int marginX, int marginY)
X265_NS::filter_hps_t	../../source/common/primitives.h	/^typedef void (*filter_hps_t) (const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	t	namespace:X265_NS
X265_NS::filter_hv_pp_t	../../source/common/primitives.h	/^typedef void (*filter_hv_pp_t) (const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY);$/;"	t	namespace:X265_NS
X265_NS::filter_p2s_t	../../source/common/primitives.h	/^typedef void (*filter_p2s_t)(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	t	namespace:X265_NS
X265_NS::filter_pp_t	../../source/common/primitives.h	/^typedef void (*filter_pp_t) (const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
X265_NS::filter_ps_t	../../source/common/primitives.h	/^typedef void (*filter_ps_t) (const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
X265_NS::filter_sp_t	../../source/common/primitives.h	/^typedef void (*filter_sp_t) (const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
X265_NS::filter_ss_t	../../source/common/primitives.h	/^typedef void (*filter_ss_t) (const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
X265_NS::findPosFirstLast_t	../../source/common/primitives.h	/^typedef uint32_t (*findPosFirstLast_t)(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16]);$/;"	t	namespace:X265_NS
X265_NS::fixedRatios	../../source/common/param.cpp	/^static const int fixedRatios[][2] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_ST2084_PQTable	../../source/common/constants.cpp	/^const double g_ST2084_PQTable[MAX_HDR_LEGAL_RANGE - MIN_HDR_LEGAL_RANGE + 1] = $/;"	m	namespace:X265_NS	file:
X265_NS::g_YUVtoRGB_BT2020	../../source/common/constants.cpp	/^const double g_YUVtoRGB_BT2020[3][3] = $/;"	m	namespace:X265_NS	file:
X265_NS::g_checkFailures	../../source/common/common.cpp	/^int g_checkFailures;$/;"	m	namespace:X265_NS	file:
X265_NS::g_chroma422IntraAngleMappingTable	../../source/common/constants.cpp	/^const uint8_t g_chroma422IntraAngleMappingTable[AngleMapping422TableSize] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_chromaFilter	../../source/common/constants.cpp	/^const int16_t g_chromaFilter[8][NTAPS_CHROMA] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_chromaScale	../../source/common/constants.cpp	/^const uint8_t g_chromaScale[ChromaQPMappingTableSize] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_depthScanIdx	../../source/common/constants.cpp	/^const uint32_t g_depthScanIdx[8][8] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_entropyBits	../../source/encoder/entropy.cpp	/^const uint32_t g_entropyBits[128] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_goRiceRange	../../source/common/constants.cpp	/^const uint8_t g_goRiceRange[5] = { 7, 14, 26, 46, 78 };$/;"	m	namespace:X265_NS	file:
X265_NS::g_intraFilterFlags	../../source/common/constants.cpp	/^const uint8_t g_intraFilterFlags[NUM_INTRA_MODE] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_lastCoeffTable	../../source/common/constants.cpp	/^const uint8_t g_lastCoeffTable[32] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_log2Size	../../source/common/constants.cpp	/^const uint8_t g_log2Size[MAX_CU_SIZE + 1] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_lpsTable	../../source/common/constants.cpp	/^const uint8_t g_lpsTable[64][4] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_lumaFilter	../../source/common/constants.cpp	/^const int16_t g_lumaFilter[4][NTAPS_LUMA] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_maxCUDepth	../../source/common/constants.cpp	/^uint32_t g_maxCUDepth    = NUM_CU_DEPTH - 1;$/;"	m	namespace:X265_NS	file:
X265_NS::g_maxCUSize	../../source/common/constants.cpp	/^uint32_t g_maxCUSize     = MAX_CU_SIZE;$/;"	m	namespace:X265_NS	file:
X265_NS::g_maxLog2CUSize	../../source/common/constants.cpp	/^uint32_t g_maxLog2CUSize = MAX_LOG2_CU_SIZE;$/;"	m	namespace:X265_NS	file:
X265_NS::g_maxSlices	../../source/common/constants.cpp	/^uint32_t g_maxSlices     = 1;$/;"	m	namespace:X265_NS	file:
X265_NS::g_mutex	../../source/common/threading.cpp	/^pthread_mutex_t g_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:X265_NS	file:
X265_NS::g_nextState	../../source/encoder/entropy.cpp	/^const uint8_t g_nextState[128][2] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_rasterToZscan	../../source/common/constants.cpp	/^const uint32_t g_rasterToZscan[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scan16x16	../../source/common/constants.cpp	/^const uint16_t g_scan16x16[16 * 16] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scan2x2	../../source/common/constants.cpp	/^const uint16_t g_scan2x2[][2*2] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scan32x32	../../source/common/constants.cpp	/^const uint16_t g_scan32x32[32 * 32] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scan8x8	../../source/common/constants.cpp	/^const uint16_t g_scan8x8[NUM_SCAN_TYPE][8 * 8] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scan8x8diag	../../source/common/constants.cpp	/^const uint16_t g_scan8x8diag[8 * 8] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scanOrder	../../source/common/constants.cpp	/^const uint16_t* const g_scanOrder[NUM_SCAN_TYPE][NUM_SCAN_SIZE] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_scanOrderCG	../../source/common/constants.cpp	/^const uint16_t* const g_scanOrderCG[NUM_SCAN_TYPE][NUM_SCAN_SIZE] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_sliceTypeToChar	../../source/encoder/encoder.cpp	/^const char g_sliceTypeToChar[] = {'B', 'P', 'I'};$/;"	m	namespace:X265_NS	file:
X265_NS::g_t16	../../source/common/constants.cpp	/^const int16_t g_t16[16][16] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_t32	../../source/common/constants.cpp	/^const int16_t g_t32[32][32] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_t4	../../source/common/constants.cpp	/^const int16_t g_t4[4][4] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_t8	../../source/common/constants.cpp	/^const int16_t g_t8[8][8] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_unitSizeDepth	../../source/common/constants.cpp	/^uint32_t g_unitSizeDepth = NUM_CU_DEPTH;$/;"	m	namespace:X265_NS	file:
X265_NS::g_zscanToPelX	../../source/common/constants.cpp	/^const uint8_t g_zscanToPelX[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_zscanToPelY	../../source/common/constants.cpp	/^const uint8_t g_zscanToPelY[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
X265_NS::g_zscanToRaster	../../source/common/constants.cpp	/^const uint32_t g_zscanToRaster[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
X265_NS::general_log	../../source/common/common.cpp	/^void general_log(const x265_param* param, const char* caller, int level, const char* fmt, ...)$/;"	f	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
X265_NS::general_log	../../source/common/common.h	/^void     general_log(const x265_param* param, const char* caller, int level, const char* fmt, ...);$/;"	p	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
X265_NS::general_log_file	../../source/common/common.cpp	/^void general_log_file(const x265_param* param, const char* caller, int level, const char* fmt, ...)$/;"	f	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
X265_NS::general_log_file	../../source/common/common.h	/^void     general_log_file(const x265_param* param, const char* caller, int level, const char* fmt, ...);$/;"	p	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
X265_NS::getBsLength	../../source/encoder/frameencoder.cpp	/^uint32_t getBsLength( int32_t code )$/;"	f	namespace:X265_NS	signature:( int32_t code )
X265_NS::getParamAspectRatio	../../source/common/param.cpp	/^void getParamAspectRatio(x265_param* p, int& width, int& height)$/;"	f	namespace:X265_NS	signature:(x265_param* p, int& width, int& height)
X265_NS::getParamAspectRatio	../../source/common/param.h	/^void  getParamAspectRatio(x265_param *p, int& width, int& height);$/;"	p	namespace:X265_NS	signature:(x265_param *p, int& width, int& height)
X265_NS::getTUBits	../../source/encoder/search.h	/^inline int getTUBits(int idx, int numIdx)$/;"	f	namespace:X265_NS	signature:(int idx, int numIdx)
X265_NS::idct_t	../../source/common/primitives.h	/^typedef void (*idct_t)(const int16_t* src, int16_t* dst, intptr_t dstStride);$/;"	t	namespace:X265_NS
X265_NS::initBuffer	../../source/encoder/entropy.cpp	/^static void initBuffer(uint8_t* contextModel, SliceType sliceType, int qp, uint8_t* ctxModel, int size)$/;"	f	namespace:X265_NS	signature:(uint8_t* contextModel, SliceType sliceType, int qp, uint8_t* ctxModel, int size)
X265_NS::integral_init12h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init12h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
X265_NS::integral_init12v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init12v_c(uint32_t *sum12, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum12, intptr_t stride)
X265_NS::integral_init16h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init16h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
X265_NS::integral_init16v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init16v_c(uint32_t *sum16, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum16, intptr_t stride)
X265_NS::integral_init24h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init24h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
X265_NS::integral_init24v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init24v_c(uint32_t *sum24, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum24, intptr_t stride)
X265_NS::integral_init32h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init32h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
X265_NS::integral_init32v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init32v_c(uint32_t *sum32, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum32, intptr_t stride)
X265_NS::integral_init4h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init4h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
X265_NS::integral_init4v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init4v_c(uint32_t *sum4, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum4, intptr_t stride)
X265_NS::integral_init8h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init8h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
X265_NS::integral_init8v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init8v_c(uint32_t *sum8, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum8, intptr_t stride)
X265_NS::integralh_t	../../source/common/primitives.h	/^typedef void (*integralh_t)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::integralv_t	../../source/common/primitives.h	/^typedef void (*integralv_t)(uint32_t *sum, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::interp_8tap_hv_pp_cpu	../../source/common/x86/asm-primitives.cpp	/^void interp_8tap_hv_pp_cpu(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)$/;"	f	namespace:X265_NS	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)
X265_NS::intra_allangs_t	../../source/common/primitives.h	/^typedef void (*intra_allangs_t)(pixel *dst, pixel *refPix, pixel *filtPix, int bLuma);$/;"	t	namespace:X265_NS
X265_NS::intra_filter_t	../../source/common/primitives.h	/^typedef void (*intra_filter_t)(const pixel* references, pixel* filtered);$/;"	t	namespace:X265_NS
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter){};$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
X265_NS::intra_pred_ang_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred_ang_altivec(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)
X265_NS::intra_pred_t	../../source/common/primitives.h	/^typedef void (*intra_pred_t)(pixel* dst, intptr_t dstStride, const pixel *srcPix, int dirMode, int bFilter);$/;"	t	namespace:X265_NS
X265_NS::levels	../../source/encoder/level.cpp	/^LevelSpec levels[] =$/;"	m	namespace:X265_NS	file:
X265_NS::logLevelNames	../../source/common/param.h	/^static const char * const logLevelNames[] = { "none", "error", "warning", "info", "debug", "full", 0 };$/;"	m	namespace:X265_NS
X265_NS::lumaPartitionMapTable	../../source/common/primitives.cpp	/^extern const uint8_t lumaPartitionMapTable[] =$/;"	m	namespace:X265_NS	file:
X265_NS::md5_block	../../source/common/picyuv.cpp	/^static void md5_block(MD5Context& md5, const pixel* plane, uint32_t n)$/;"	f	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t n)
X265_NS::md5_plane	../../source/common/picyuv.cpp	/^static void md5_plane(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)
X265_NS::min_s16v	../../source/common/ppc/intrapred_altivec.cpp	/^vec_s16_t min_s16v = (vec_s16_t){255, 255, 255, 255, 255, 255, 255, 255}; $/;"	m	namespace:X265_NS	file:
X265_NS::miscBitsExp	../../source/encoder/ratecontrol.h	/^const double miscBitsExp[5]     = {-0.0689, 0.2030, 0.7293, 0.9523, 0.9259};$/;"	m	namespace:X265_NS
X265_NS::mvBitsExp	../../source/encoder/ratecontrol.h	/^const double mvBitsExp [5][9]    = {{0.0661, 0.4106, 0.5994, 0.6981, 0.7089, 0.7017, 0.7461, 0.7461, 0.6183},$/;"	m	namespace:X265_NS
X265_NS::nbPartsTable	../../source/common/cudata.h	/^const uint32_t nbPartsTable[8] = { 1, 2, 2, 4, 2, 2, 2, 2 };$/;"	m	namespace:X265_NS
X265_NS::no_atomic_add	../../source/common/threading.cpp	/^int no_atomic_add(int* ptr, int val)$/;"	f	namespace:X265_NS	signature:(int* ptr, int val)
X265_NS::no_atomic_add	../../source/common/threading.h	/^int no_atomic_add(int* ptr, int val);$/;"	p	namespace:X265_NS	signature:(int* ptr, int val)
X265_NS::no_atomic_and	../../source/common/threading.cpp	/^int no_atomic_and(int* ptr, int mask)$/;"	f	namespace:X265_NS	signature:(int* ptr, int mask)
X265_NS::no_atomic_and	../../source/common/threading.h	/^int no_atomic_and(int* ptr, int mask);$/;"	p	namespace:X265_NS	signature:(int* ptr, int mask)
X265_NS::no_atomic_dec	../../source/common/threading.cpp	/^int no_atomic_dec(int* ptr)$/;"	f	namespace:X265_NS	signature:(int* ptr)
X265_NS::no_atomic_dec	../../source/common/threading.h	/^int no_atomic_dec(int* ptr);$/;"	p	namespace:X265_NS	signature:(int* ptr)
X265_NS::no_atomic_inc	../../source/common/threading.cpp	/^int no_atomic_inc(int* ptr)$/;"	f	namespace:X265_NS	signature:(int* ptr)
X265_NS::no_atomic_inc	../../source/common/threading.h	/^int no_atomic_inc(int* ptr);$/;"	p	namespace:X265_NS	signature:(int* ptr)
X265_NS::no_atomic_or	../../source/common/threading.cpp	/^int no_atomic_or(int* ptr, int mask)$/;"	f	namespace:X265_NS	signature:(int* ptr, int mask)
X265_NS::no_atomic_or	../../source/common/threading.h	/^int no_atomic_or(int* ptr, int mask);$/;"	p	namespace:X265_NS	signature:(int* ptr, int mask)
X265_NS::nquant_t	../../source/common/primitives.h	/^typedef uint32_t (*nquant_t)(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff);$/;"	t	namespace:X265_NS
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec(pixel* dst, const pixel *srcPix0, int bFilter){};$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
X265_NS::one_u16v	../../source/common/ppc/intrapred_altivec.cpp	/^vec_u16_t one_u16v = (vec_u16_t)vec_splat_u16(1);$/;"	m	namespace:X265_NS	file:
X265_NS::parseCpuName	../../source/common/param.cpp	/^int parseCpuName(const char* value, bool& bError)$/;"	f	namespace:X265_NS	signature:(const char* value, bool& bError)
X265_NS::parseCpuName	../../source/common/param.h	/^int   parseCpuName(const char *value, bool& bError);$/;"	p	namespace:X265_NS	signature:(const char *value, bool& bError)
X265_NS::parseLambdaFile	../../source/common/param.cpp	/^bool parseLambdaFile(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
X265_NS::parseLambdaFile	../../source/common/param.h	/^bool  parseLambdaFile(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
X265_NS::partAddrTable	../../source/common/cudata.h	/^const uint32_t partAddrTable[8][4] =$/;"	m	namespace:X265_NS
X265_NS::partTable	../../source/common/cudata.h	/^const uint32_t partTable[8][4][2] =$/;"	m	namespace:X265_NS
X265_NS::partitionFromLog2Size	../../source/common/primitives.h	/^inline int partitionFromLog2Size(int log2Size)$/;"	f	namespace:X265_NS	signature:(int log2Size)
X265_NS::partitionFromSizes	../../source/common/primitives.h	/^inline int partitionFromSizes(int width, int height)$/;"	f	namespace:X265_NS	signature:(int width, int height)
X265_NS::pelFilterChroma_t	../../source/common/primitives.h	/^typedef void (*pelFilterChroma_t)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ);$/;"	t	namespace:X265_NS
X265_NS::pelFilterLumaStrong_t	../../source/common/primitives.h	/^typedef void (*pelFilterLumaStrong_t)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ);$/;"	t	namespace:X265_NS
X265_NS::pixel	../../source/common/ppc/pixel_altivec.cpp	/^typedef uint8_t  pixel;$/;"	t	namespace:X265_NS	file:
X265_NS::pixel_add_ps_t	../../source/common/primitives.h	/^typedef void (*pixel_add_ps_t)(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	t	namespace:X265_NS
X265_NS::pixel_ssd_s_t	../../source/common/primitives.h	/^typedef sse_t (*pixel_ssd_s_t)(const int16_t* fenc, intptr_t fencstride);$/;"	t	namespace:X265_NS
X265_NS::pixel_sse_ss_t	../../source/common/primitives.h	/^typedef sse_t (*pixel_sse_ss_t)(const int16_t* fenc, intptr_t fencstride, const int16_t* fref, intptr_t frefstride);$/;"	t	namespace:X265_NS
X265_NS::pixel_sse_t	../../source/common/primitives.h	/^typedef sse_t (*pixel_sse_t)(const pixel* fenc, intptr_t fencstride, const pixel* fref, intptr_t frefstride); \/\/ fenc is aligned$/;"	t	namespace:X265_NS
X265_NS::pixel_sub_ps_t	../../source/common/primitives.h	/^typedef void (*pixel_sub_ps_t)(int16_t* dst, intptr_t dstride, const pixel* src0, const pixel* src1, intptr_t sstride0, intptr_t sstride1);$/;"	t	namespace:X265_NS
X265_NS::pixelavg_pp_t	../../source/common/primitives.h	/^typedef void (*pixelavg_pp_t)(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int weight);$/;"	t	namespace:X265_NS
X265_NS::pixelcmp_ads_t	../../source/common/primitives.h	/^typedef int(*pixelcmp_ads_t)(int encDC[], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh);$/;"	t	namespace:X265_NS
X265_NS::pixelcmp_ss_t	../../source/common/primitives.h	/^typedef int  (*pixelcmp_ss_t)(const int16_t* fenc, intptr_t fencstride, const int16_t* fref, intptr_t frefstride);$/;"	t	namespace:X265_NS
X265_NS::pixelcmp_t	../../source/common/primitives.h	/^typedef int  (*pixelcmp_t)(const pixel* fenc, intptr_t fencstride, const pixel* fref, intptr_t frefstride); \/\/ fenc is aligned$/;"	t	namespace:X265_NS
X265_NS::pixelcmp_x3_t	../../source/common/primitives.h	/^typedef void (*pixelcmp_x3_t)(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	t	namespace:X265_NS
X265_NS::pixelcmp_x4_t	../../source/common/primitives.h	/^typedef void (*pixelcmp_x4_t)(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	t	namespace:X265_NS
X265_NS::planeClipAndMax_t	../../source/common/primitives.h	/^typedef pixel (*planeClipAndMax_t)(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix);$/;"	t	namespace:X265_NS
X265_NS::plane_copy_deinterleave_t	../../source/common/primitives.h	/^typedef void (*plane_copy_deinterleave_t)(pixel* dstu, intptr_t dstuStride, pixel* dstv, intptr_t dstvStride, const pixel* src, intptr_t srcStride, int w, int h);$/;"	t	namespace:X265_NS
X265_NS::planecopy_cp_t	../../source/common/primitives.h	/^typedef void (*planecopy_cp_t) (const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);$/;"	t	namespace:X265_NS
X265_NS::planecopy_sp_t	../../source/common/primitives.h	/^typedef void (*planecopy_sp_t) (const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);$/;"	t	namespace:X265_NS
X265_NS::primitives	../../source/common/primitives.cpp	/^EncoderPrimitives primitives;$/;"	m	namespace:X265_NS	file:
X265_NS::quant_t	../../source/common/primitives.h	/^typedef uint32_t (*quant_t)(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff);$/;"	t	namespace:X265_NS
X265_NS::sa8d_16x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_16x16_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_16x32_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_16x32_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_16x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_16x8_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_32x32_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_32x32_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_32x64_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_32x64_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_64x64_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_64x64_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_8x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_8x16_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_8x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_8x8_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
X265_NS::sa8d_8x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_8x8_altivec(const int16_t* pix1, intptr_t i_pix1)$/;"	f	namespace:X265_NS	signature:(const int16_t* pix1, intptr_t i_pix1)
X265_NS::sad16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad16_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sad16_altivec(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
X265_NS::sad16_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad16_x3_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad16_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad16_x4_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2){ return 0; }$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<24, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<48, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 48>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sad_altivec(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res){}$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<24, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 24>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 8>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<48, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 48>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void sad_x3_altivec<32, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res){}$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<24, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<32, 24>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<32, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<32, 8>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<48, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 48>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void sad_x4_altivec<32,16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void sad_x4_altivec<32,32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
X265_NS::saoCuOrgB0_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgB0_t)(pixel* rec, const int8_t* offsetBo, int ctuWidth, int ctuHeight, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::saoCuOrgE0_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE0_t)(pixel* rec, int8_t* offsetEo, int width, int8_t* signLeft, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::saoCuOrgE1_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE1_t)(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width);$/;"	t	namespace:X265_NS
X265_NS::saoCuOrgE2_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE2_t)(pixel* rec, int8_t* pBufft, int8_t* pBuff1, int8_t* offsetEo, int lcuWidth, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::saoCuOrgE3_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE3_t)(pixel* rec, int8_t* upBuff1, int8_t* m_offsetEo, intptr_t stride, int startX, int endX);$/;"	t	namespace:X265_NS
X265_NS::saoCuStatsBO_c	../../source/encoder/sao.cpp	/^void saoCuStatsBO_c(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)
X265_NS::saoCuStatsBO_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsBO_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
X265_NS::saoCuStatsE0_c	../../source/encoder/sao.cpp	/^void saoCuStatsE0_c(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)
X265_NS::saoCuStatsE0_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE0_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
X265_NS::saoCuStatsE1_c	../../source/encoder/sao.cpp	/^void saoCuStatsE1_c(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)
X265_NS::saoCuStatsE1_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE1_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
X265_NS::saoCuStatsE2_c	../../source/encoder/sao.cpp	/^void saoCuStatsE2_c(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBufft, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBufft, int endX, int endY, int32_t *stats, int32_t *count)
X265_NS::saoCuStatsE2_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE2_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBuff, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
X265_NS::saoCuStatsE3_c	../../source/encoder/sao.cpp	/^void saoCuStatsE3_c(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)
X265_NS::saoCuStatsE3_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE3_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
X265_NS::satd_16x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_16x16_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_16x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_16x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_16x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_16x8_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_4x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_4x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_4x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_4x8_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_8x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_8x16_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_8x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_8x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_8x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^static int satd_8x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_8x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_8x8_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	namespace:X265_NS	file:	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 48>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 48>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
X265_NS::sbacInit	../../source/encoder/entropy.cpp	/^uint8_t sbacInit(int qp, int initValue)$/;"	f	namespace:X265_NS	signature:(int qp, int initValue)
X265_NS::scale1D_t	../../source/common/primitives.h	/^typedef void (*scale1D_t)(pixel* dst, const pixel* src);$/;"	t	namespace:X265_NS
X265_NS::scale2D_t	../../source/common/primitives.h	/^typedef void (*scale2D_t)(pixel* dst, const pixel* src, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::scanPosLast_t	../../source/common/primitives.h	/^typedef int (*scanPosLast_t)(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize);$/;"	t	namespace:X265_NS
X265_NS::setParamAspectRatio	../../source/common/param.cpp	/^void setParamAspectRatio(x265_param* p, int width, int height)$/;"	f	namespace:X265_NS	signature:(x265_param* p, int width, int height)
X265_NS::setParamAspectRatio	../../source/common/param.h	/^void  setParamAspectRatio(x265_param *p, int width, int height);$/;"	p	namespace:X265_NS	signature:(x265_param *p, int width, int height)
X265_NS::setupAliasPrimitives	../../source/common/primitives.cpp	/^void setupAliasPrimitives(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupAliasPrimitives	../../source/common/primitives.h	/^void setupAliasPrimitives(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupAssemblyPrimitives	../../source/common/arm/asm-primitives.cpp	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
X265_NS::setupAssemblyPrimitives	../../source/common/primitives.h	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
X265_NS::setupAssemblyPrimitives	../../source/common/x86/asm-primitives.cpp	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask) \/\/ Main$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
X265_NS::setupAssemblyPrimitives	../../source/common/x86/asm-primitives.cpp	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask) \/\/ Main10$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
X265_NS::setupCPrimitives	../../source/common/primitives.cpp	/^void setupCPrimitives(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupCPrimitives	../../source/common/primitives.h	/^void setupCPrimitives(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupDCTPrimitives_altivec	../../source/common/ppc/dct_altivec.cpp	/^void setupDCTPrimitives_altivec(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
X265_NS::setupDCTPrimitives_altivec	../../source/common/primitives.h	/^void setupDCTPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupDCTPrimitives_c	../../source/common/dct.cpp	/^void setupDCTPrimitives_c(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
X265_NS::setupDCTPrimitives_c	../../source/common/primitives.cpp	/^void setupDCTPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupFilterPrimitives_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void setupFilterPrimitives_altivec(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
X265_NS::setupFilterPrimitives_altivec	../../source/common/primitives.h	/^void setupFilterPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupFilterPrimitives_c	../../source/common/ipfilter.cpp	/^void setupFilterPrimitives_c(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
X265_NS::setupFilterPrimitives_c	../../source/common/primitives.cpp	/^void setupFilterPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupInstrinsicPrimitives	../../source/common/primitives.h	/^void setupInstrinsicPrimitives(EncoderPrimitives &p, int cpuMask);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
X265_NS::setupInstrinsicPrimitives	../../source/common/vec/vec-primitives.cpp	/^void setupInstrinsicPrimitives(EncoderPrimitives &p, int cpuMask)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
X265_NS::setupIntraPrimitives_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void setupIntraPrimitives_altivec(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupIntraPrimitives_altivec	../../source/common/primitives.h	/^void setupIntraPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupIntraPrimitives_c	../../source/common/intrapred.cpp	/^void setupIntraPrimitives_c(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
X265_NS::setupIntraPrimitives_c	../../source/common/primitives.cpp	/^void setupIntraPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupIntrinsicDCT_sse3	../../source/common/vec/dct-sse3.cpp	/^void setupIntrinsicDCT_sse3(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupIntrinsicDCT_sse3	../../source/common/vec/vec-primitives.cpp	/^void setupIntrinsicDCT_sse3(EncoderPrimitives&);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives&)
X265_NS::setupIntrinsicDCT_sse41	../../source/common/vec/dct-sse41.cpp	/^void setupIntrinsicDCT_sse41(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupIntrinsicDCT_sse41	../../source/common/vec/vec-primitives.cpp	/^void setupIntrinsicDCT_sse41(EncoderPrimitives&);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives&)
X265_NS::setupIntrinsicDCT_ssse3	../../source/common/vec/dct-ssse3.cpp	/^void setupIntrinsicDCT_ssse3(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupIntrinsicDCT_ssse3	../../source/common/vec/vec-primitives.cpp	/^void setupIntrinsicDCT_ssse3(EncoderPrimitives&);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives&)
X265_NS::setupLoopFilterPrimitives_c	../../source/common/loopfilter.cpp	/^void setupLoopFilterPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupLoopFilterPrimitives_c	../../source/common/primitives.cpp	/^void setupLoopFilterPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupPixelPrimitives_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void setupPixelPrimitives_altivec(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupPixelPrimitives_altivec	../../source/common/primitives.h	/^void setupPixelPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupPixelPrimitives_c	../../source/common/pixel.cpp	/^void setupPixelPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupPixelPrimitives_c	../../source/common/primitives.cpp	/^void setupPixelPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupSaoPrimitives_c	../../source/common/primitives.cpp	/^void setupSaoPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupSaoPrimitives_c	../../source/encoder/sao.cpp	/^void setupSaoPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::setupSeaIntegralPrimitives_c	../../source/common/primitives.cpp	/^void setupSeaIntegralPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
X265_NS::setupSeaIntegralPrimitives_c	../../source/encoder/framefilter.cpp	/^    void setupSeaIntegralPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
X265_NS::sign_t	../../source/common/primitives.h	/^typedef void (*sign_t)(int8_t *dst, const pixel *src1, const pixel *src2, const int endX);$/;"	t	namespace:X265_NS
X265_NS::sizesFromPartition	../../source/common/primitives.h	/^inline void sizesFromPartition(int part, int *width, int *height)$/;"	f	namespace:X265_NS	signature:(int part, int *width, int *height)
X265_NS::sleepbitmap_t	../../source/common/threadpool.h	/^typedef uint32_t sleepbitmap_t;$/;"	t	namespace:X265_NS
X265_NS::sleepbitmap_t	../../source/common/threadpool.h	/^typedef uint64_t sleepbitmap_t;$/;"	t	namespace:X265_NS
X265_NS::ssim_4x4x2_core_t	../../source/common/primitives.h	/^typedef void (*ssim_4x4x2_core_t)(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]);$/;"	t	namespace:X265_NS
X265_NS::ssim_end4_t	../../source/common/primitives.h	/^typedef float (*ssim_end4_t)(int sum0[5][4], int sum1[5][4], int width);$/;"	t	namespace:X265_NS
X265_NS::stackAlignMain	../../source/common/threading.cpp	/^static void stackAlignMain(Thread *instance)$/;"	f	namespace:X265_NS	signature:(Thread *instance)
X265_NS::sum2_t	../../source/common/ppc/pixel_altivec.cpp	/^typedef uint32_t sum2_t ;$/;"	t	namespace:X265_NS	file:
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec(vec_s32_t sumv, int* sum){}$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<12, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 12>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 24>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 32>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 48>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 4>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 64>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 8>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<4, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<4, 4>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<4, 8>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 32>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 4>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 8>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
X265_NS::sum_t	../../source/common/ppc/pixel_altivec.cpp	/^typedef uint16_t sum_t ;$/;"	t	namespace:X265_NS	file:
X265_NS::transpose_t	../../source/common/primitives.h	/^typedef void (*transpose_t)(pixel* dst, const pixel* src, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::u8_to_s16_b0_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b0_mask = {0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_b0_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b0_mask = {0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_b1_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b1_mask = {0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_b1_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b1_mask = {0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_b9_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b9_mask = {0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_b9_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b9_mask = {0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w4x4_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask1 = {0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w4x4_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask1 = {0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w4x4_mask9	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask9 = {0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w4x4_mask9	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask9 = {0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w8x8_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_mask1 = {0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00, 0x18};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w8x8_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_mask1 = {0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00, 0x18, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w8x8_maskh	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskh = {0x00, 0x10, 0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w8x8_maskh	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskh = {0x10, 0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w8x8_maskl	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskl = {0x00, 0x18, 0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x1d, 0x00, 0x1e, 0x00, 0x1f};$/;"	m	namespace:X265_NS	file:
X265_NS::u8_to_s16_w8x8_maskl	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskl = {0x18, 0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x1d, 0x00, 0x1e, 0x00, 0x1f, 0x00};$/;"	m	namespace:X265_NS	file:
X265_NS::updateCRC	../../source/common/picyuv.cpp	/^void updateCRC(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride)
X265_NS::updateCRC	../../source/common/picyuv.h	/^void updateCRC(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride);$/;"	p	namespace:X265_NS	signature:(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride)
X265_NS::updateChecksum	../../source/common/picyuv.cpp	/^void updateChecksum(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight)$/;"	f	namespace:X265_NS	signature:(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight)
X265_NS::updateChecksum	../../source/common/picyuv.h	/^void updateChecksum(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight);$/;"	p	namespace:X265_NS	signature:(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight)
X265_NS::updateMD5Plane	../../source/common/picyuv.cpp	/^void updateMD5Plane(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)
X265_NS::updateMD5Plane	../../source/common/picyuv.h	/^void updateMD5Plane(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride);$/;"	p	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)
X265_NS::var_t	../../source/common/primitives.h	/^typedef uint64_t (*var_t)(const pixel* pix, intptr_t stride);$/;"	t	namespace:X265_NS
X265_NS::weightAnalyse	../../source/encoder/frameencoder.cpp	/^void weightAnalyse(Slice& slice, Frame& frame, x265_param& param);$/;"	p	namespace:X265_NS	file:	signature:(Slice& slice, Frame& frame, x265_param& param)
X265_NS::weightAnalyse	../../source/encoder/weightPrediction.cpp	/^void weightAnalyse(Slice& slice, Frame& frame, x265_param& param)$/;"	f	namespace:X265_NS	signature:(Slice& slice, Frame& frame, x265_param& param)
X265_NS::weightp_pp_t	../../source/common/primitives.h	/^typedef void (*weightp_pp_t)(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset);$/;"	t	namespace:X265_NS
X265_NS::weightp_sp_t	../../source/common/primitives.h	/^typedef void (*weightp_sp_t)(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset);$/;"	t	namespace:X265_NS
X265_NS::x265_atof	../../source/common/param.cpp	/^double x265_atof(const char* str, bool& bError)$/;"	f	namespace:X265_NS	signature:(const char* str, bool& bError)
X265_NS::x265_atof	../../source/common/param.h	/^double x265_atof(const char *str, bool& bError);$/;"	p	namespace:X265_NS	signature:(const char *str, bool& bError)
X265_NS::x265_atoi	../../source/common/param.cpp	/^int x265_atoi(const char* str, bool& bError)$/;"	f	namespace:X265_NS	signature:(const char* str, bool& bError)
X265_NS::x265_atoi	../../source/common/param.h	/^int   x265_atoi(const char *str, bool& bError);$/;"	p	namespace:X265_NS	signature:(const char *str, bool& bError)
X265_NS::x265_check_params	../../source/common/param.cpp	/^int x265_check_params(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
X265_NS::x265_check_params	../../source/common/param.h	/^int   x265_check_params(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
X265_NS::x265_chroma_lambda2_offset_tab	../../source/common/constants.cpp	/^const uint16_t x265_chroma_lambda2_offset_tab[MAX_CHROMA_LAMBDA_OFFSET+1] =$/;"	m	namespace:X265_NS	file:
X265_NS::x265_exp2_lut	../../source/common/constants.cpp	/^const uint8_t x265_exp2_lut[64] =$/;"	m	namespace:X265_NS	file:
X265_NS::x265_exp2fix8	../../source/common/common.cpp	/^int x265_exp2fix8(double x)$/;"	f	namespace:X265_NS	signature:(double x)
X265_NS::x265_exp2fix8	../../source/common/common.h	/^int      x265_exp2fix8(double x);$/;"	p	namespace:X265_NS	signature:(double x)
X265_NS::x265_fopen	../../source/common/common.cpp	/^FILE* x265_fopen(const char* fileName, const char* mode)$/;"	f	namespace:X265_NS	signature:(const char* fileName, const char* mode)
X265_NS::x265_fopen	../../source/common/common.h	/^FILE*    x265_fopen(const char* fileName, const char* mode);$/;"	p	namespace:X265_NS	signature:(const char* fileName, const char* mode)
X265_NS::x265_free	../../source/common/common.cpp	/^void x265_free(void *ptr)$/;"	f	namespace:X265_NS	signature:(void *ptr)
X265_NS::x265_free	../../source/common/common.h	/^void     x265_free(void *ptr);$/;"	p	namespace:X265_NS	signature:(void *ptr)
X265_NS::x265_lambda2_tab	../../source/common/constants.cpp	/^double x265_lambda2_tab[QP_MAX_MAX + 1] =$/;"	m	namespace:X265_NS	file:
X265_NS::x265_lambda_tab	../../source/common/constants.cpp	/^double x265_lambda_tab[QP_MAX_MAX + 1] =$/;"	m	namespace:X265_NS	file:
X265_NS::x265_malloc	../../source/common/common.cpp	/^void *x265_malloc(size_t size)$/;"	f	namespace:X265_NS	signature:(size_t size)
X265_NS::x265_malloc	../../source/common/common.h	/^void*    x265_malloc(size_t size);$/;"	p	namespace:X265_NS	signature:(size_t size)
X265_NS::x265_mdate	../../source/common/common.cpp	/^int64_t x265_mdate(void)$/;"	f	namespace:X265_NS	signature:(void)
X265_NS::x265_mdate	../../source/common/common.h	/^int64_t  x265_mdate(void);$/;"	p	namespace:X265_NS	signature:(void)
X265_NS::x265_param2string	../../source/common/param.cpp	/^char *x265_param2string(x265_param* p, int padx, int pady)$/;"	f	namespace:X265_NS	signature:(x265_param* p, int padx, int pady)
X265_NS::x265_param2string	../../source/common/param.h	/^char* x265_param2string(x265_param *param, int padx, int pady);$/;"	p	namespace:X265_NS	signature:(x265_param *param, int padx, int pady)
X265_NS::x265_param_alloc	../../source/common/param.h	/^x265_param* x265_param_alloc();$/;"	p	namespace:X265_NS	signature:()
X265_NS::x265_param_apply_fastfirstpass	../../source/common/param.cpp	/^void x265_param_apply_fastfirstpass(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
X265_NS::x265_param_apply_fastfirstpass	../../source/common/param.h	/^void  x265_param_apply_fastfirstpass(x265_param *p);$/;"	p	namespace:X265_NS	signature:(x265_param *p)
X265_NS::x265_param_apply_profile	../../source/common/param.h	/^int x265_param_apply_profile(x265_param *, const char *profile);$/;"	p	namespace:X265_NS	signature:(x265_param *, const char *profile)
X265_NS::x265_param_default	../../source/common/param.h	/^void x265_param_default(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
X265_NS::x265_param_default_preset	../../source/common/param.h	/^int x265_param_default_preset(x265_param *, const char *preset, const char *tune);$/;"	p	namespace:X265_NS	signature:(x265_param *, const char *preset, const char *tune)
X265_NS::x265_param_free	../../source/common/param.h	/^void x265_param_free(x265_param *);$/;"	p	namespace:X265_NS	signature:(x265_param *)
X265_NS::x265_param_parse	../../source/common/param.h	/^int x265_param_parse(x265_param *p, const char *name, const char *value);$/;"	p	namespace:X265_NS	signature:(x265_param *p, const char *name, const char *value)
X265_NS::x265_picturePlaneSize	../../source/common/common.cpp	/^uint32_t x265_picturePlaneSize(int csp, int width, int height, int plane)$/;"	f	namespace:X265_NS	signature:(int csp, int width, int height, int plane)
X265_NS::x265_picturePlaneSize	../../source/common/common.h	/^uint32_t x265_picturePlaneSize(int csp, int width, int height, int plane);$/;"	p	namespace:X265_NS	signature:(int csp, int width, int height, int plane)
X265_NS::x265_print_params	../../source/common/param.cpp	/^void x265_print_params(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
X265_NS::x265_print_params	../../source/common/param.h	/^void  x265_print_params(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
X265_NS::x265_qScale2qp	../../source/common/common.cpp	/^double x265_qScale2qp(double qScale)$/;"	f	namespace:X265_NS	signature:(double qScale)
X265_NS::x265_qScale2qp	../../source/common/common.h	/^double   x265_qScale2qp(double qScale);$/;"	p	namespace:X265_NS	signature:(double qScale)
X265_NS::x265_qp2qScale	../../source/common/common.cpp	/^double x265_qp2qScale(double qp)$/;"	f	namespace:X265_NS	signature:(double qp)
X265_NS::x265_qp2qScale	../../source/common/common.h	/^double   x265_qp2qScale(double qp);$/;"	p	namespace:X265_NS	signature:(double qp)
X265_NS::x265_rename	../../source/common/common.cpp	/^int x265_rename(const char* oldName, const char* newName)$/;"	f	namespace:X265_NS	signature:(const char* oldName, const char* newName)
X265_NS::x265_rename	../../source/common/common.h	/^int      x265_rename(const char* oldName, const char* newName);$/;"	p	namespace:X265_NS	signature:(const char* oldName, const char* newName)
X265_NS::x265_report_simd	../../source/common/common.h	/^void     x265_report_simd(x265_param* param);$/;"	p	namespace:X265_NS	signature:(x265_param* param)
X265_NS::x265_report_simd	../../source/common/primitives.cpp	/^void x265_report_simd(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
X265_NS::x265_setup_primitives	../../source/common/common.h	/^void     x265_setup_primitives(x265_param* param);$/;"	p	namespace:X265_NS	signature:(x265_param* param)
X265_NS::x265_setup_primitives	../../source/common/primitives.cpp	/^void x265_setup_primitives(x265_param *param)$/;"	f	namespace:X265_NS	signature:(x265_param *param)
X265_NS::x265_slurp_file	../../source/common/common.cpp	/^char* x265_slurp_file(const char *filename)$/;"	f	namespace:X265_NS	signature:(const char *filename)
X265_NS::x265_slurp_file	../../source/common/common.h	/^char*    x265_slurp_file(const char *filename);$/;"	p	namespace:X265_NS	signature:(const char *filename)
X265_NS::x265_ssim2dB	../../source/common/common.cpp	/^double x265_ssim2dB(double ssim)$/;"	f	namespace:X265_NS	signature:(double ssim)
X265_NS::x265_ssim2dB	../../source/common/common.h	/^double   x265_ssim2dB(double ssim);$/;"	p	namespace:X265_NS	signature:(double ssim)
X265_NS::x265_unlink	../../source/common/common.cpp	/^int x265_unlink(const char* fileName)$/;"	f	namespace:X265_NS	signature:(const char* fileName)
X265_NS::x265_unlink	../../source/common/common.h	/^int      x265_unlink(const char* fileName);$/;"	p	namespace:X265_NS	signature:(const char* fileName)
X265_OUTPUT_H	../../source/output/output.h	26;"	d
X265_PARAM_H	../../source/common/param.h	26;"	d
X265_PICLIST_H	../../source/common/piclist.h	25;"	d
X265_PICYUV_H	../../source/common/picyuv.h	25;"	d
X265_PIXEL_UTIL_ARM_H	../../source/common/arm/pixel-util.h	26;"	d
X265_PIXEL_UTIL_H	../../source/common/x86/pixel-util.h	26;"	d
X265_PPCCOMMON_H	../../source/common/ppc/ppccommon.h	25;"	d
X265_PREDICT_H	../../source/common/predict.h	26;"	d
X265_PRIMITIVES_H	../../source/common/primitives.h	31;"	d
X265_QUANT_H	../../source/common/quant.h	26;"	d
X265_RATECONTROL_H	../../source/encoder/ratecontrol.h	27;"	d
X265_RDCOST_H	../../source/encoder/rdcost.h	26;"	d
X265_RECONPLAY_H	../../source/output/reconplay.h	26;"	d
X265_REFERENCE_H	../../source/encoder/reference.h	26;"	d
X265_SAO_H	../../source/encoder/sao.h	27;"	d
X265_SCALINGLIST_H	../../source/common/scalinglist.h	25;"	d
X265_SEAINTEGRAL_H	../../source/common/x86/seaintegral.h	27;"	d
X265_SEARCH_H	../../source/encoder/search.h	26;"	d
X265_SEI_H	../../source/encoder/sei.h	25;"	d
X265_SHORTYUV_H	../../source/common/shortyuv.h	27;"	d
X265_SLICETYPE_H	../../source/encoder/slicetype.h	26;"	d
X265_SLICE_H	../../source/common/slice.h	26;"	d
X265_THREADING_H	../../source/common/threading.h	26;"	d
X265_THREADPOOL_H	../../source/common/threadpool.h	25;"	d
X265_WAVEFRONT_H	../../source/common/wavefront.h	26;"	d
X265_WINXP_H	../../source/common/winxp.h	25;"	d
X265_Y4M_H	../../source/input/y4m.h	25;"	d
X265_Y4M_H	../../source/output/y4m.h	25;"	d
X265_YUV_H	../../source/common/yuv.h	25;"	d
X265_YUV_H	../../source/input/yuv.h	25;"	d
X265_YUV_H	../../source/output/yuv.h	25;"	d
XP_CONDITION_VAR_FREE	../../source/common/winxp.h	57;"	d
XSTR	../../source/common/version.cpp	29;"	d	file:
Y4MInput	../../source/input/y4m.cpp	/^Y4MInput::Y4MInput(InputFileInfo& info)$/;"	f	class:Y4MInput	signature:(InputFileInfo& info)
Y4MInput	../../source/input/y4m.h	/^    Y4MInput(InputFileInfo& info);$/;"	p	class:X265_NS::Y4MInput	access:public	signature:(InputFileInfo& info)
Y4MInput	../../source/input/y4m.h	/^class Y4MInput : public InputFile, public Thread$/;"	c	namespace:X265_NS	inherits:InputFile,Thread
Y4MInput::Y4MInput	../../source/input/y4m.cpp	/^Y4MInput::Y4MInput(InputFileInfo& info)$/;"	f	class:Y4MInput	signature:(InputFileInfo& info)
Y4MInput::parseHeader	../../source/input/y4m.cpp	/^bool Y4MInput::parseHeader()$/;"	f	class:Y4MInput	signature:()
Y4MInput::populateFrameQueue	../../source/input/y4m.cpp	/^bool Y4MInput::populateFrameQueue()$/;"	f	class:Y4MInput	signature:()
Y4MInput::readPicture	../../source/input/y4m.cpp	/^bool Y4MInput::readPicture(x265_picture& pic)$/;"	f	class:Y4MInput	signature:(x265_picture& pic)
Y4MInput::release	../../source/input/y4m.cpp	/^void Y4MInput::release()$/;"	f	class:Y4MInput	signature:()
Y4MInput::startReader	../../source/input/y4m.cpp	/^void Y4MInput::startReader()$/;"	f	class:Y4MInput	signature:()
Y4MInput::threadMain	../../source/input/y4m.cpp	/^void Y4MInput::threadMain()$/;"	f	class:Y4MInput	signature:()
Y4MInput::~Y4MInput	../../source/input/y4m.cpp	/^Y4MInput::~Y4MInput()$/;"	f	class:Y4MInput	signature:()
Y4MOutput	../../source/output/y4m.cpp	/^Y4MOutput::Y4MOutput(const char *filename, int w, int h, uint32_t fpsNum, uint32_t fpsDenom, int csp)$/;"	f	class:Y4MOutput	signature:(const char *filename, int w, int h, uint32_t fpsNum, uint32_t fpsDenom, int csp)
Y4MOutput	../../source/output/y4m.h	/^    Y4MOutput(const char *filename, int width, int height, uint32_t fpsNum, uint32_t fpsDenom, int csp);$/;"	p	class:X265_NS::Y4MOutput	access:public	signature:(const char *filename, int width, int height, uint32_t fpsNum, uint32_t fpsDenom, int csp)
Y4MOutput	../../source/output/y4m.h	/^class Y4MOutput : public ReconFile$/;"	c	namespace:X265_NS	inherits:ReconFile
Y4MOutput::Y4MOutput	../../source/output/y4m.cpp	/^Y4MOutput::Y4MOutput(const char *filename, int w, int h, uint32_t fpsNum, uint32_t fpsDenom, int csp)$/;"	f	class:Y4MOutput	signature:(const char *filename, int w, int h, uint32_t fpsNum, uint32_t fpsDenom, int csp)
Y4MOutput::writePicture	../../source/output/y4m.cpp	/^bool Y4MOutput::writePicture(const x265_picture& pic)$/;"	f	class:Y4MOutput	signature:(const x265_picture& pic)
Y4MOutput::~Y4MOutput	../../source/output/y4m.cpp	/^Y4MOutput::~Y4MOutput()$/;"	f	class:Y4MOutput	signature:()
YUVInput	../../source/input/yuv.cpp	/^YUVInput::YUVInput(InputFileInfo& info)$/;"	f	class:YUVInput	signature:(InputFileInfo& info)
YUVInput	../../source/input/yuv.h	/^    YUVInput(InputFileInfo& info);$/;"	p	class:X265_NS::YUVInput	access:public	signature:(InputFileInfo& info)
YUVInput	../../source/input/yuv.h	/^class YUVInput : public InputFile, public Thread$/;"	c	namespace:X265_NS	inherits:InputFile,Thread
YUVInput::YUVInput	../../source/input/yuv.cpp	/^YUVInput::YUVInput(InputFileInfo& info)$/;"	f	class:YUVInput	signature:(InputFileInfo& info)
YUVInput::populateFrameQueue	../../source/input/yuv.cpp	/^bool YUVInput::populateFrameQueue()$/;"	f	class:YUVInput	signature:()
YUVInput::readPicture	../../source/input/yuv.cpp	/^bool YUVInput::readPicture(x265_picture& pic)$/;"	f	class:YUVInput	signature:(x265_picture& pic)
YUVInput::release	../../source/input/yuv.cpp	/^void YUVInput::release()$/;"	f	class:YUVInput	signature:()
YUVInput::startReader	../../source/input/yuv.cpp	/^void YUVInput::startReader()$/;"	f	class:YUVInput	signature:()
YUVInput::threadMain	../../source/input/yuv.cpp	/^void YUVInput::threadMain()$/;"	f	class:YUVInput	signature:()
YUVInput::~YUVInput	../../source/input/yuv.cpp	/^YUVInput::~YUVInput()$/;"	f	class:YUVInput	signature:()
YUVOutput	../../source/output/yuv.cpp	/^YUVOutput::YUVOutput(const char *filename, int w, int h, uint32_t d, int csp)$/;"	f	class:YUVOutput	signature:(const char *filename, int w, int h, uint32_t d, int csp)
YUVOutput	../../source/output/yuv.h	/^    YUVOutput(const char *filename, int width, int height, uint32_t bitdepth, int csp);$/;"	p	class:X265_NS::YUVOutput	access:public	signature:(const char *filename, int width, int height, uint32_t bitdepth, int csp)
YUVOutput	../../source/output/yuv.h	/^class YUVOutput : public ReconFile$/;"	c	namespace:X265_NS	inherits:ReconFile
YUVOutput::YUVOutput	../../source/output/yuv.cpp	/^YUVOutput::YUVOutput(const char *filename, int w, int h, uint32_t d, int csp)$/;"	f	class:YUVOutput	signature:(const char *filename, int w, int h, uint32_t d, int csp)
YUVOutput::writePicture	../../source/output/yuv.cpp	/^bool YUVOutput::writePicture(const x265_picture& pic)$/;"	f	class:YUVOutput	signature:(const x265_picture& pic)
YUVOutput::~YUVOutput	../../source/output/yuv.cpp	/^YUVOutput::~YUVOutput()$/;"	f	class:YUVOutput	signature:()
Yuv	../../source/common/yuv.cpp	/^Yuv::Yuv()$/;"	f	class:Yuv	signature:()
Yuv	../../source/common/yuv.h	/^    Yuv();$/;"	p	class:X265_NS::Yuv	access:public	signature:()
Yuv	../../source/common/yuv.h	/^class Yuv$/;"	c	namespace:X265_NS
Yuv::Yuv	../../source/common/yuv.cpp	/^Yuv::Yuv()$/;"	f	class:Yuv	signature:()
Yuv::addAvg	../../source/common/yuv.cpp	/^void Yuv::addAvg(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma)$/;"	f	class:Yuv	signature:(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma)
Yuv::addClip	../../source/common/yuv.cpp	/^void Yuv::addClip(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp)$/;"	f	class:Yuv	signature:(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp)
Yuv::copyFromPicYuv	../../source/common/yuv.cpp	/^void Yuv::copyFromPicYuv(const PicYuv& srcPic, uint32_t cuAddr, uint32_t absPartIdx)$/;"	f	class:Yuv	signature:(const PicYuv& srcPic, uint32_t cuAddr, uint32_t absPartIdx)
Yuv::copyFromYuv	../../source/common/yuv.cpp	/^void Yuv::copyFromYuv(const Yuv& srcYuv)$/;"	f	class:Yuv	signature:(const Yuv& srcYuv)
Yuv::copyPUFromYuv	../../source/common/yuv.cpp	/^void Yuv::copyPUFromYuv(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma)$/;"	f	class:Yuv	signature:(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma)
Yuv::copyPartToPartChroma	../../source/common/yuv.cpp	/^void Yuv::copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
Yuv::copyPartToPartLuma	../../source/common/yuv.cpp	/^void Yuv::copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
Yuv::copyPartToYuv	../../source/common/yuv.cpp	/^void Yuv::copyPartToYuv(Yuv& dstYuv, uint32_t absPartIdx) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
Yuv::copyToPartYuv	../../source/common/yuv.cpp	/^void Yuv::copyToPartYuv(Yuv& dstYuv, uint32_t absPartIdx) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
Yuv::copyToPicYuv	../../source/common/yuv.cpp	/^void Yuv::copyToPicYuv(PicYuv& dstPic, uint32_t cuAddr, uint32_t absPartIdx) const$/;"	f	class:Yuv	signature:(PicYuv& dstPic, uint32_t cuAddr, uint32_t absPartIdx) const
Yuv::create	../../source/common/yuv.cpp	/^bool Yuv::create(uint32_t size, int csp)$/;"	f	class:Yuv	signature:(uint32_t size, int csp)
Yuv::destroy	../../source/common/yuv.cpp	/^void Yuv::destroy()$/;"	f	class:Yuv	signature:()
_	../../source/compat/getopt/getopt.c	84;"	d	file:
_	../../source/compat/getopt/getopt.c	87;"	d	file:
_GETOPT_H	../../source/compat/getopt/getopt.h	23;"	d
_NO_PROTO	../../source/compat/getopt/getopt.c	27;"	d	file:
__STDC_FORMAT_MACROS	../../source/common/common.h	94;"	d
__anon10::isEqualCol	../../source/common/cudata.cpp	/^inline bool isEqualCol(int addrA, int addrB)$/;"	f	namespace:__anon10	signature:(int addrA, int addrB)
__anon10::isEqualRow	../../source/common/cudata.cpp	/^inline bool isEqualRow(int addrA, int addrB)$/;"	f	namespace:__anon10	signature:(int addrA, int addrB)
__anon10::isEqualRowOrCol	../../source/common/cudata.cpp	/^inline bool isEqualRowOrCol(int addrA, int addrB)$/;"	f	namespace:__anon10	signature:(int addrA, int addrB)
__anon10::isZeroCol	../../source/common/cudata.cpp	/^inline bool isZeroCol(int addr)$/;"	f	namespace:__anon10	signature:(int addr)
__anon10::isZeroRow	../../source/common/cudata.cpp	/^inline bool isZeroRow(int addr)$/;"	f	namespace:__anon10	signature:(int addr)
__anon10::lessThanCol	../../source/common/cudata.cpp	/^inline bool lessThanCol(int addr, int val)$/;"	f	namespace:__anon10	signature:(int addr, int val)
__anon10::lessThanRow	../../source/common/cudata.cpp	/^inline bool lessThanRow(int addr, int val)$/;"	f	namespace:__anon10	signature:(int addr, int val)
__anon10::scaleMv	../../source/common/cudata.cpp	/^inline MV scaleMv(MV mv, int scale)$/;"	f	namespace:__anon10	signature:(MV mv, int scale)
__anon13::weightBidir	../../source/common/predict.cpp	/^inline pixel weightBidir(int w0, int16_t P0, int w1, int16_t P1, int round, int shift, int offset)$/;"	f	namespace:__anon13	signature:(int w0, int16_t P0, int w1, int16_t P1, int round, int shift, int offset)
__anon14::estSaoDist	../../source/encoder/sao.cpp	/^inline int64_t estSaoDist(int32_t count, int32_t offset, int32_t offsetOrg)$/;"	f	namespace:__anon14	signature:(int32_t count, int32_t offset, int32_t offsetOrg)
__anon14::extendCURowColBorder	../../source/common/ipfilter.cpp	/^static void extendCURowColBorder(pixel* txt, intptr_t stride, int width, int height, int marginX)$/;"	f	namespace:__anon14	signature:(pixel* txt, intptr_t stride, int width, int height, int marginX)
__anon14::filterPixelToShort_c	../../source/common/ipfilter.cpp	/^void filterPixelToShort_c(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
__anon14::filterVertical_sp_c	../../source/common/ipfilter.cpp	/^void filterVertical_sp_c(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int coeffIdx)
__anon14::interp_horiz_pp_c	../../source/common/ipfilter.cpp	/^void interp_horiz_pp_c(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
__anon14::interp_horiz_ps_c	../../source/common/ipfilter.cpp	/^void interp_horiz_ps_c(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
__anon14::interp_hv_pp_c	../../source/common/ipfilter.cpp	/^void interp_hv_pp_c(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)
__anon14::interp_vert_pp_c	../../source/common/ipfilter.cpp	/^void interp_vert_pp_c(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
__anon14::interp_vert_ps_c	../../source/common/ipfilter.cpp	/^void interp_vert_ps_c(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
__anon14::interp_vert_sp_c	../../source/common/ipfilter.cpp	/^void interp_vert_sp_c(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
__anon14::interp_vert_ss_c	../../source/common/ipfilter.cpp	/^void interp_vert_ss_c(const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
__anon14::roundIBDI	../../source/encoder/sao.cpp	/^inline int32_t roundIBDI(int32_t num, int32_t den)$/;"	f	namespace:__anon14	signature:(int32_t num, int32_t den)
__anon14::signOf	../../source/encoder/sao.cpp	/^inline int8_t signOf(int x)$/;"	f	namespace:__anon14	signature:(int x)
__anon14::signOf2	../../source/encoder/sao.cpp	/^inline int signOf2(const int a, const int b)$/;"	f	namespace:__anon14	signature:(const int a, const int b)
__anon15::acEnergyPlane	../../source/encoder/slicetype.cpp	/^inline uint32_t acEnergyPlane(Frame *curFrame, pixel* src, intptr_t srcStride, int plane, int colorFormat, uint32_t qgSize)$/;"	f	namespace:__anon15	signature:(Frame *curFrame, pixel* src, intptr_t srcStride, int plane, int colorFormat, uint32_t qgSize)
__anon15::acEnergyVar	../../source/encoder/slicetype.cpp	/^inline uint32_t acEnergyVar(Frame *curFrame, uint64_t sum_ssd, int shift, int plane)$/;"	f	namespace:__anon15	signature:(Frame *curFrame, uint64_t sum_ssd, int shift, int plane)
__anon15::quantInterDefault8x8	../../source/common/scalinglist.cpp	/^static int quantInterDefault8x8[64] =$/;"	m	namespace:__anon15	file:
__anon15::quantIntraDefault8x8	../../source/common/scalinglist.cpp	/^static int quantIntraDefault8x8[64] =$/;"	m	namespace:__anon15	file:
__anon15::quantTSDefault4x4	../../source/common/scalinglist.cpp	/^static int quantTSDefault4x4[16] =$/;"	m	namespace:__anon15	file:
__anon17::all_angs_pred_c	../../source/common/intrapred.cpp	/^void all_angs_pred_c(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)$/;"	f	namespace:__anon17	signature:(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)
__anon17::dcPredFilter	../../source/common/intrapred.cpp	/^static void dcPredFilter(const pixel* above, const pixel* left, pixel* dst, intptr_t dststride, int size)$/;"	f	namespace:__anon17	signature:(const pixel* above, const pixel* left, pixel* dst, intptr_t dststride, int size)
__anon17::intraFilter	../../source/common/intrapred.cpp	/^void intraFilter(const pixel* samples, pixel* filtered) \/* 1:2:1 filtering of left and top reference samples *\/$/;"	f	namespace:__anon17	signature:(const pixel* samples, pixel* filtered)
__anon17::intra_pred_ang_c	../../source/common/intrapred.cpp	/^void intra_pred_ang_c(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)$/;"	f	namespace:__anon17	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)
__anon17::intra_pred_dc_c	../../source/common/intrapred.cpp	/^void intra_pred_dc_c(pixel* dst, intptr_t dstStride, const pixel* srcPix, int \/*dirMode*\/, int bFilter)$/;"	f	namespace:__anon17	signature:(pixel* dst, intptr_t dstStride, const pixel* srcPix, int , int bFilter)
__anon17::planar_pred_c	../../source/common/intrapred.cpp	/^void planar_pred_c(pixel* dst, intptr_t dstStride, const pixel* srcPix, int \/*dirMode*\/, int \/*bFilter*\/)$/;"	f	namespace:__anon17	signature:(pixel* dst, intptr_t dstStride, const pixel* srcPix, int , int )
__anon22::Cache	../../source/encoder/weightPrediction.cpp	/^struct Cache$/;"	s	namespace:__anon22	file:
__anon22::Cache::csp	../../source/encoder/weightPrediction.cpp	/^    int         csp;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::Cache::hshift	../../source/encoder/weightPrediction.cpp	/^    int         hshift;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::Cache::intraCost	../../source/encoder/weightPrediction.cpp	/^    const int * intraCost;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::Cache::lowresHeightInCU	../../source/encoder/weightPrediction.cpp	/^    int         lowresHeightInCU;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::Cache::lowresWidthInCU	../../source/encoder/weightPrediction.cpp	/^    int         lowresWidthInCU;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::Cache::numPredDir	../../source/encoder/weightPrediction.cpp	/^    int         numPredDir;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::Cache::vshift	../../source/encoder/weightPrediction.cpp	/^    int         vshift;$/;"	m	struct:__anon22::Cache	file:	access:public
__anon22::mcChroma	../../source/encoder/weightPrediction.cpp	/^void mcChroma(pixel *      mcout,$/;"	f	namespace:__anon22	signature:(pixel * mcout, pixel * src, intptr_t stride, const MV * mvs, const Cache& cache, int height, int width)
__anon22::mcLuma	../../source/encoder/weightPrediction.cpp	/^void mcLuma(pixel* mcout, Lowres& ref, const MV * mvs)$/;"	f	namespace:__anon22	signature:(pixel* mcout, Lowres& ref, const MV * mvs)
__anon22::sliceHeaderCost	../../source/encoder/weightPrediction.cpp	/^int sliceHeaderCost(WeightParam *w, int lambda, int bChroma)$/;"	f	namespace:__anon22	signature:(WeightParam *w, int lambda, int bChroma)
__anon22::weightCost	../../source/encoder/weightPrediction.cpp	/^uint32_t weightCost(pixel *         fenc,$/;"	f	namespace:__anon22	signature:(pixel * fenc, pixel * ref, pixel * weightTemp, intptr_t stride, const Cache & cache, int width, int height, WeightParam * w, bool bLuma)
__anon23::SubpelWorkload	../../source/encoder/motion.cpp	/^struct SubpelWorkload$/;"	s	namespace:__anon23	file:
__anon23::SubpelWorkload::hpel_dirs	../../source/encoder/motion.cpp	/^    int hpel_dirs;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
__anon23::SubpelWorkload::hpel_iters	../../source/encoder/motion.cpp	/^    int hpel_iters;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
__anon23::SubpelWorkload::hpel_satd	../../source/encoder/motion.cpp	/^    bool hpel_satd;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
__anon23::SubpelWorkload::qpel_dirs	../../source/encoder/motion.cpp	/^    int qpel_dirs;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
__anon23::SubpelWorkload::qpel_iters	../../source/encoder/motion.cpp	/^    int qpel_iters;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
__anon23::hex2	../../source/encoder/motion.cpp	/^const MV hex2[8] = { MV(-1, -2), MV(-2, 0), MV(-1, 2), MV(1, 2), MV(2, 0), MV(1, -2), MV(-1, -2), MV(-2, 0) };$/;"	m	namespace:__anon23	file:
__anon23::hex4	../../source/encoder/motion.cpp	/^const MV hex4[16] =$/;"	m	namespace:__anon23	file:
__anon23::mod6m1	../../source/encoder/motion.cpp	/^const uint8_t mod6m1[8] = { 5, 0, 1, 2, 3, 4, 5, 0 };  \/* (x-1)%6 *\/$/;"	m	namespace:__anon23	file:
__anon23::offsets	../../source/encoder/motion.cpp	/^const MV offsets[] =$/;"	m	namespace:__anon23	file:
__anon23::predictorDifference	../../source/encoder/motion.cpp	/^inline int predictorDifference(const MV *mvc, intptr_t numCandidates)$/;"	f	namespace:__anon23	signature:(const MV *mvc, intptr_t numCandidates)
__anon23::sizeScale	../../source/encoder/motion.cpp	/^static int sizeScale[NUM_PU_SIZES];$/;"	m	namespace:__anon23	file:
__anon23::square1	../../source/encoder/motion.cpp	/^const MV square1[9] = { MV(0, 0), MV(0, -1), MV(0, 1), MV(-1, 0), MV(1, 0), MV(-1, -1), MV(-1, 1), MV(1, -1), MV(1, 1) };$/;"	m	namespace:__anon23	file:
__anon23::workload	../../source/encoder/motion.cpp	/^const SubpelWorkload workload[X265_MAX_SUBPEL_LEVEL + 1] =$/;"	m	namespace:__anon23	file:
__anon29::coeffGroupRDStats	../../source/common/quant.cpp	/^struct coeffGroupRDStats$/;"	s	namespace:__anon29	file:
__anon29::coeffGroupRDStats::codedLevelAndDist	../../source/common/quant.cpp	/^    int64_t codedLevelAndDist; \/* distortion and level cost of coded coefficients *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
__anon29::coeffGroupRDStats::nnzBeforePos0	../../source/common/quant.cpp	/^    int     nnzBeforePos0;     \/* indicates coeff other than pos 0 are coded *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
__anon29::coeffGroupRDStats::sigCost	../../source/common/quant.cpp	/^    int64_t sigCost;           \/* cost of signaling significant coeff bitmap *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
__anon29::coeffGroupRDStats::sigCost0	../../source/common/quant.cpp	/^    int64_t sigCost0;          \/* cost of signaling sig coeff bit of coeff 0 *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
__anon29::coeffGroupRDStats::uncodedDist	../../source/common/quant.cpp	/^    int64_t uncodedDist;       \/* uncoded distortion cost of coded coefficients *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
__anon29::fastMin	../../source/common/quant.cpp	/^inline int fastMin(int x, int y)$/;"	f	namespace:__anon29	signature:(int x, int y)
__anon29::getICRate	../../source/common/quant.cpp	/^inline int getICRate(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, const uint32_t absGoRice, const uint32_t maxVlc, const uint32_t c1c2Rate)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, const uint32_t absGoRice, const uint32_t maxVlc, const uint32_t c1c2Rate)
__anon29::getICRateCost	../../source/common/quant.cpp	/^inline uint32_t getICRateCost(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, uint32_t absGoRice, const uint32_t c1c2Rate)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, uint32_t absGoRice, const uint32_t c1c2Rate)
__anon29::getICRateLessVlc	../../source/common/quant.cpp	/^inline int getICRateLessVlc(uint32_t absLevel, int32_t diffLevel, const uint32_t absGoRice)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, int32_t diffLevel, const uint32_t absGoRice)
__anon29::getICRateNegDiff	../../source/common/quant.cpp	/^inline int getICRateNegDiff(uint32_t absLevel, const int* greaterOneBits, const int* levelAbsBits)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, const int* greaterOneBits, const int* levelAbsBits)
__anon2::calSign	../../source/common/loopfilter.cpp	/^static void calSign(int8_t *dst, const pixel *src1, const pixel *src2, const int endX)$/;"	f	namespace:__anon2	signature:(int8_t *dst, const pixel *src1, const pixel *src2, const int endX)
__anon2::pelFilterChroma_c	../../source/common/loopfilter.cpp	/^static void pelFilterChroma_c(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ)$/;"	f	namespace:__anon2	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ)
__anon2::pelFilterLumaStrong_c	../../source/common/loopfilter.cpp	/^static void pelFilterLumaStrong_c(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ)$/;"	f	namespace:__anon2	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ)
__anon2::processSaoCUB0	../../source/common/loopfilter.cpp	/^static void processSaoCUB0(pixel* rec, const int8_t* offset, int ctuWidth, int ctuHeight, intptr_t stride)$/;"	f	namespace:__anon2	signature:(pixel* rec, const int8_t* offset, int ctuWidth, int ctuHeight, intptr_t stride)
__anon2::processSaoCUE0	../../source/common/loopfilter.cpp	/^static void processSaoCUE0(pixel * rec, int8_t * offsetEo, int width, int8_t* signLeft, intptr_t stride)$/;"	f	namespace:__anon2	signature:(pixel * rec, int8_t * offsetEo, int width, int8_t* signLeft, intptr_t stride)
__anon2::processSaoCUE1	../../source/common/loopfilter.cpp	/^static void processSaoCUE1(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)$/;"	f	namespace:__anon2	signature:(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)
__anon2::processSaoCUE1_2Rows	../../source/common/loopfilter.cpp	/^static void processSaoCUE1_2Rows(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)$/;"	f	namespace:__anon2	signature:(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)
__anon2::processSaoCUE2	../../source/common/loopfilter.cpp	/^static void processSaoCUE2(pixel * rec, int8_t * bufft, int8_t * buff1, int8_t * offsetEo, int width, intptr_t stride)$/;"	f	namespace:__anon2	signature:(pixel * rec, int8_t * bufft, int8_t * buff1, int8_t * offsetEo, int width, intptr_t stride)
__anon2::processSaoCUE3	../../source/common/loopfilter.cpp	/^static void processSaoCUE3(pixel *rec, int8_t *upBuff1, int8_t *offsetEo, intptr_t stride, int startX, int endX)$/;"	f	namespace:__anon2	signature:(pixel *rec, int8_t *upBuff1, int8_t *offsetEo, intptr_t stride, int startX, int endX)
__anon2::signOf	../../source/common/loopfilter.cpp	/^inline int8_t signOf(int x)$/;"	f	namespace:__anon2	signature:(int x)
__anon31::_sa8d_8x8	../../source/common/pixel.cpp	/^inline int _sa8d_8x8(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
__anon31::abs2	../../source/common/pixel.cpp	/^inline sum2_t abs2(sum2_t a)$/;"	f	namespace:__anon31	signature:(sum2_t a)
__anon31::addAvg	../../source/common/pixel.cpp	/^void addAvg(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)$/;"	f	namespace:__anon31	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
__anon31::ads_x1	../../source/common/pixel.cpp	/^int ads_x1(int encDC[1], uint32_t *sums, int, uint16_t *costMvX, int16_t *mvs, int width, int thresh)$/;"	f	namespace:__anon31	signature:(int encDC[1], uint32_t *sums, int, uint16_t *costMvX, int16_t *mvs, int width, int thresh)
__anon31::ads_x2	../../source/common/pixel.cpp	/^int ads_x2(int encDC[2], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)$/;"	f	namespace:__anon31	signature:(int encDC[2], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)
__anon31::ads_x4	../../source/common/pixel.cpp	/^int ads_x4(int encDC[4], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)$/;"	f	namespace:__anon31	signature:(int encDC[4], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)
__anon31::blockcopy_pp_c	../../source/common/pixel.cpp	/^void blockcopy_pp_c(pixel* a, intptr_t stridea, const pixel* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(pixel* a, intptr_t stridea, const pixel* b, intptr_t strideb)
__anon31::blockcopy_ps_c	../../source/common/pixel.cpp	/^void blockcopy_ps_c(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
__anon31::blockcopy_sp_c	../../source/common/pixel.cpp	/^void blockcopy_sp_c(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
__anon31::blockcopy_ss_c	../../source/common/pixel.cpp	/^void blockcopy_ss_c(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
__anon31::blockfill_s_c	../../source/common/pixel.cpp	/^void blockfill_s_c(int16_t* dst, intptr_t dstride, int16_t val)$/;"	f	namespace:__anon31	signature:(int16_t* dst, intptr_t dstride, int16_t val)
__anon31::cpy1Dto2D_shl	../../source/common/pixel.cpp	/^void cpy1Dto2D_shl(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)
__anon31::cpy1Dto2D_shr	../../source/common/pixel.cpp	/^void cpy1Dto2D_shr(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)
__anon31::cpy2Dto1D_shl	../../source/common/pixel.cpp	/^void cpy2Dto1D_shl(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
__anon31::cpy2Dto1D_shr	../../source/common/pixel.cpp	/^void cpy2Dto1D_shr(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
__anon31::cuTreeFix8Pack	../../source/common/pixel.cpp	/^static void cuTreeFix8Pack(uint16_t *dst, double *src, int count)$/;"	f	namespace:__anon31	signature:(uint16_t *dst, double *src, int count)
__anon31::cuTreeFix8Unpack	../../source/common/pixel.cpp	/^static void cuTreeFix8Unpack(double *dst, uint16_t *src, int count)$/;"	f	namespace:__anon31	signature:(double *dst, uint16_t *src, int count)
__anon31::estimateCUPropagateCost	../../source/common/pixel.cpp	/^static void estimateCUPropagateCost(int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts,$/;"	f	namespace:__anon31	signature:(int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts, const int32_t* invQscales, const double* fpsFactor, int len)
__anon31::frame_init_lowres_core	../../source/common/pixel.cpp	/^void frame_init_lowres_core(const pixel* src0, pixel* dst0, pixel* dsth, pixel* dstv, pixel* dstc,$/;"	f	namespace:__anon31	signature:(const pixel* src0, pixel* dst0, pixel* dsth, pixel* dstv, pixel* dstc, intptr_t src_stride, intptr_t dst_stride, int width, int height)
__anon31::getResidual	../../source/common/pixel.cpp	/^void getResidual(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)$/;"	f	namespace:__anon31	signature:(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)
__anon31::pixel_add_ps_c	../../source/common/pixel.cpp	/^void pixel_add_ps_c(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)$/;"	f	namespace:__anon31	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
__anon31::pixel_ssd_s_c	../../source/common/pixel.cpp	/^sse_t pixel_ssd_s_c(const int16_t* a, intptr_t dstride)$/;"	f	namespace:__anon31	signature:(const int16_t* a, intptr_t dstride)
__anon31::pixel_sub_ps_c	../../source/common/pixel.cpp	/^void pixel_sub_ps_c(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)$/;"	f	namespace:__anon31	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
__anon31::pixel_var	../../source/common/pixel.cpp	/^uint64_t pixel_var(const pixel* pix, intptr_t i_stride)$/;"	f	namespace:__anon31	signature:(const pixel* pix, intptr_t i_stride)
__anon31::pixelavg_pp	../../source/common/pixel.cpp	/^void pixelavg_pp(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)$/;"	f	namespace:__anon31	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
__anon31::planeClipAndMax_c	../../source/common/pixel.cpp	/^static pixel planeClipAndMax_c(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, $/;"	f	namespace:__anon31	signature:(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix)
__anon31::planecopy_cp_c	../../source/common/pixel.cpp	/^static void planecopy_cp_c(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)$/;"	f	namespace:__anon31	signature:(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)
__anon31::planecopy_sp_c	../../source/common/pixel.cpp	/^static void planecopy_sp_c(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)$/;"	f	namespace:__anon31	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
__anon31::planecopy_sp_shl_c	../../source/common/pixel.cpp	/^static void planecopy_sp_shl_c(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)$/;"	f	namespace:__anon31	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
__anon31::psyCost_pp	../../source/common/pixel.cpp	/^int psyCost_pp(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride)$/;"	f	namespace:__anon31	signature:(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride)
__anon31::sa8d16	../../source/common/pixel.cpp	/^int sa8d16(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
__anon31::sa8d8	../../source/common/pixel.cpp	/^int sa8d8(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
__anon31::sa8d_16x16	../../source/common/pixel.cpp	/^static int sa8d_16x16(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
__anon31::sa8d_8x8	../../source/common/pixel.cpp	/^inline int sa8d_8x8(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
__anon31::sad	../../source/common/pixel.cpp	/^int sad(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
__anon31::sad	../../source/common/pixel.cpp	/^int sad(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
__anon31::sad_x3	../../source/common/pixel.cpp	/^void sad_x3(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
__anon31::sad_x4	../../source/common/pixel.cpp	/^void sad_x4(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
__anon31::satd4	../../source/common/pixel.cpp	/^int satd4(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
__anon31::satd8	../../source/common/pixel.cpp	/^int satd8(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
__anon31::satd_4x4	../../source/common/pixel.cpp	/^static int satd_4x4(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
__anon31::satd_8x4	../../source/common/pixel.cpp	/^static int satd_8x4(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
__anon31::scale1D_128to64	../../source/common/pixel.cpp	/^static void scale1D_128to64(pixel *dst, const pixel *src)$/;"	f	namespace:__anon31	signature:(pixel *dst, const pixel *src)
__anon31::scale2D_64to32	../../source/common/pixel.cpp	/^static void scale2D_64to32(pixel* dst, const pixel* src, intptr_t stride)$/;"	f	namespace:__anon31	signature:(pixel* dst, const pixel* src, intptr_t stride)
__anon31::sse	../../source/common/pixel.cpp	/^sse_t sse(const T1* pix1, intptr_t stride_pix1, const T2* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const T1* pix1, intptr_t stride_pix1, const T2* pix2, intptr_t stride_pix2)
__anon31::ssim_4x4x2_core	../../source/common/pixel.cpp	/^static void ssim_4x4x2_core(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])
__anon31::ssim_end_1	../../source/common/pixel.cpp	/^static float ssim_end_1(int s1, int s2, int ss, int s12)$/;"	f	namespace:__anon31	signature:(int s1, int s2, int ss, int s12)
__anon31::ssim_end_4	../../source/common/pixel.cpp	/^static float ssim_end_4(int sum0[5][4], int sum1[5][4], int width)$/;"	f	namespace:__anon31	signature:(int sum0[5][4], int sum1[5][4], int width)
__anon31::transpose	../../source/common/pixel.cpp	/^void transpose(pixel* dst, const pixel* src, intptr_t stride)$/;"	f	namespace:__anon31	signature:(pixel* dst, const pixel* src, intptr_t stride)
__anon31::weight_pp_c	../../source/common/pixel.cpp	/^static void weight_pp_c(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset)$/;"	f	namespace:__anon31	signature:(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset)
__anon31::weight_sp_c	../../source/common/pixel.cpp	/^static void weight_sp_c(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset)$/;"	f	namespace:__anon31	signature:(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset)
__anon4::calcLength	../../source/encoder/ratecontrol.cpp	/^inline int calcLength(uint32_t x)$/;"	f	namespace:__anon4	signature:(uint32_t x)
__anon4::calcScale	../../source/encoder/ratecontrol.cpp	/^inline int calcScale(uint32_t x)$/;"	f	namespace:__anon4	signature:(uint32_t x)
__anon4::copyRceData	../../source/encoder/ratecontrol.cpp	/^inline void copyRceData(RateControlEntry* rce, RateControlEntry* rce2Pass)$/;"	f	namespace:__anon4	signature:(RateControlEntry* rce, RateControlEntry* rce2Pass)
__anon4::qScale2bits	../../source/encoder/ratecontrol.cpp	/^inline double qScale2bits(RateControlEntry *rce, double qScale, const double expCoeffBits, const double expMvBits, const double expMiscBits)$/;"	f	namespace:__anon4	signature:(RateControlEntry *rce, double qScale, const double expCoeffBits, const double expMvBits, const double expMiscBits)
__anon4::strcatFilename	../../source/encoder/ratecontrol.cpp	/^inline char *strcatFilename(const char *input, const char *suffix)$/;"	f	namespace:__anon4	signature:(const char *input, const char *suffix)
__getopt_initialized	../../source/compat/getopt/getopt.c	/^int __getopt_initialized;$/;"	v
__intel_cpu_indicator	../../source/common/x86/asm-primitives.cpp	/^int __intel_cpu_indicator = 0;$/;"	v
__intel_cpu_indicator_init	../../source/common/x86/asm-primitives.cpp	/^void __intel_cpu_indicator_init(void)$/;"	f	signature:(void)
__need_getopt	../../source/compat/getopt/getopt.h	180;"	d
_aligned_free	../../source/common/common.cpp	62;"	d	file:
_aligned_malloc	../../source/common/common.cpp	61;"	d	file:
_confirm	../../source/common/param.cpp	/^static inline int _confirm(x265_param* param, bool bflag, const char* message)$/;"	f	namespace:X265_NS	signature:(x265_param* param, bool bflag, const char* message)
_getopt_initialize	../../source/compat/getopt/getopt.c	/^_getopt_initialize (argc, argv, optstring)$/;"	f	file:
_getopt_initialize	../../source/compat/getopt/getopt.c	/^static const char *_getopt_initialize (int, char *const *, const char *);$/;"	p	file:	signature:(int, char *const *, const char *)
_getopt_internal	../../source/compat/getopt/getopt.c	/^_getopt_internal (argc, argv, optstring, longopts, longind, long_only)$/;"	f
_getopt_internal	../../source/compat/getopt/getopt.h	/^extern int _getopt_internal ();$/;"	p	signature:()
_getopt_internal	../../source/compat/getopt/getopt.h	/^extern int _getopt_internal (int argc, char *const *argv,$/;"	p	signature:(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int32_t *longind, int longonly)
_sa8d_8x8	../../source/common/pixel.cpp	/^inline int _sa8d_8x8(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
aboveUnits	../../source/common/predict.h	/^        int      aboveUnits;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
abs2	../../source/common/pixel.cpp	/^inline sum2_t abs2(sum2_t a)$/;"	f	namespace:__anon31	signature:(sum2_t a)
absPartIdx	../../source/common/cudata.h	/^    uint32_t absPartIdx;    \/\/ Part index of this CU in terms of 4x4 blocks.$/;"	m	struct:X265_NS::CUGeom	access:public
absPartIdx	../../source/encoder/motion.h	/^    int absPartIdx;  \/\/ part index of PU, including CU offset within CTU$/;"	m	class:X265_NS::MotionEstimate	access:protected
absPartIdxStep	../../source/encoder/entropy.h	/^    uint32_t absPartIdxStep;$/;"	m	struct:X265_NS::TURecurse	access:public
absPartIdxTURelCU	../../source/encoder/entropy.h	/^    uint32_t absPartIdxTURelCU;$/;"	m	struct:X265_NS::TURecurse	access:public
acEnergyCu	../../source/encoder/slicetype.cpp	/^uint32_t LookaheadTLD::acEnergyCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize)$/;"	f	class:LookaheadTLD	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize)
acEnergyCu	../../source/encoder/slicetype.h	/^    uint32_t acEnergyCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, int csp, uint32_t qgSize)
acEnergyPlane	../../source/encoder/slicetype.cpp	/^inline uint32_t acEnergyPlane(Frame *curFrame, pixel* src, intptr_t srcStride, int plane, int colorFormat, uint32_t qgSize)$/;"	f	namespace:__anon15	signature:(Frame *curFrame, pixel* src, intptr_t srcStride, int plane, int colorFormat, uint32_t qgSize)
acEnergyVar	../../source/encoder/slicetype.cpp	/^inline uint32_t acEnergyVar(Frame *curFrame, uint64_t sum_ssd, int shift, int plane)$/;"	f	namespace:__anon15	signature:(Frame *curFrame, uint64_t sum_ssd, int shift, int plane)
accumPQpUpdate	../../source/encoder/ratecontrol.cpp	/^void RateControl::accumPQpUpdate()$/;"	f	class:RateControl	signature:()
accumPQpUpdate	../../source/encoder/ratecontrol.h	/^    void   accumPQpUpdate();$/;"	p	class:X265_NS::RateControl	access:protected	signature:()
accumlatedTime	../../source/common/threading.h	/^    int64_t& accumlatedTime;$/;"	m	struct:X265_NS::ScopedElapsedTime	access:protected
accumulate	../../source/encoder/search.h	/^    void accumulate(CUStats& other, x265_param& param)$/;"	f	struct:X265_NS::CUStats	access:public	signature:(CUStats& other, x265_param& param)
acquire	../../source/common/threading.h	/^    void acquire()$/;"	f	class:X265_NS::Lock	access:public	signature:()
active	../../source/encoder/frameencoder.h	/^    volatile bool     active;$/;"	m	struct:X265_NS::CTURow	access:public
add	../../source/common/x86/blockcopy8.asm	/^add             r3,         r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add             r3,      r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add          r1, r1$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add         r3,     r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r1,            r1$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r1,         r1$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r1,      r1$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r3,         r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r3,        r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r3,      r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r3,     r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add        r3, r3$/;"	l
add	../../source/common/x86/blockcopy8.asm	/^add     r1,      r1$/;"	l
add	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::add(int p0, int p1, int b)$/;"	f	class:CostEstimateGroup	signature:(int p0, int p1, int b)
add	../../source/encoder/slicetype.h	/^    void add(int p0, int p1, int b);$/;"	p	class:X265_NS::CostEstimateGroup	access:public	signature:(int p0, int p1, int b)
addAvg	../../source/common/pixel.cpp	/^void addAvg(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)$/;"	f	namespace:__anon31	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
addAvg	../../source/common/primitives.h	/^            addAvg_t     addAvg;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
addAvg	../../source/common/primitives.h	/^        addAvg_t       addAvg;      \/\/ bidir motion compensation, uses 16bit values$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
addAvg	../../source/common/yuv.cpp	/^void Yuv::addAvg(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma)$/;"	f	class:Yuv	signature:(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma)
addAvg	../../source/common/yuv.h	/^    void   addAvg(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t absPartIdx, uint32_t width, uint32_t height, bool bLuma, bool bChroma)
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 12$/;"	l
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 16$/;"	l
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 24$/;"	l
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 32$/;"	l
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 4$/;"	l
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 64$/;"	l
addAvg_16xN	../../source/common/arm/mc-a.S	/^addAvg_16xN 8$/;"	l
addAvg_32xN	../../source/common/arm/mc-a.S	/^addAvg_32xN 16$/;"	l
addAvg_32xN	../../source/common/arm/mc-a.S	/^addAvg_32xN 24$/;"	l
addAvg_32xN	../../source/common/arm/mc-a.S	/^addAvg_32xN 32$/;"	l
addAvg_32xN	../../source/common/arm/mc-a.S	/^addAvg_32xN 48$/;"	l
addAvg_32xN	../../source/common/arm/mc-a.S	/^addAvg_32xN 64$/;"	l
addAvg_32xN	../../source/common/arm/mc-a.S	/^addAvg_32xN 8$/;"	l
addAvg_4xN	../../source/common/arm/mc-a.S	/^addAvg_4xN 16 8$/;"	l
addAvg_4xN	../../source/common/arm/mc-a.S	/^addAvg_4xN 2 1$/;"	l
addAvg_4xN	../../source/common/arm/mc-a.S	/^addAvg_4xN 32 16$/;"	l
addAvg_4xN	../../source/common/arm/mc-a.S	/^addAvg_4xN 8 4$/;"	l
addAvg_6xN	../../source/common/arm/mc-a.S	/^addAvg_6xN 16 8$/;"	l
addAvg_6xN	../../source/common/arm/mc-a.S	/^addAvg_6xN 8 4$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 12 6$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 16 8$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 2 1$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 32 16$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 4 2$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 6 3$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 64 32$/;"	l
addAvg_8xN	../../source/common/arm/mc-a.S	/^addAvg_8xN 8 4$/;"	l
addAvg_t	../../source/common/primitives.h	/^typedef void (*addAvg_t)(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	t	namespace:X265_NS
addBits	../../source/encoder/encoder.cpp	/^void EncStats::addBits(uint64_t bits)$/;"	f	class:EncStats	signature:(uint64_t bits)
addBits	../../source/encoder/encoder.h	/^    void addBits(uint64_t bits);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(uint64_t bits)
addClip	../../source/common/yuv.cpp	/^void Yuv::addClip(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp)$/;"	f	class:Yuv	signature:(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp)
addClip	../../source/common/yuv.h	/^    void   addClip(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const Yuv& srcYuv0, const ShortYuv& srcYuv1, uint32_t log2SizeL, int picCsp)
addPicture	../../source/encoder/slicetype.cpp	/^void Lookahead::addPicture(Frame& curFrame, int sliceType)$/;"	f	class:Lookahead	signature:(Frame& curFrame, int sliceType)
addPicture	../../source/encoder/slicetype.h	/^    void    addPicture(Frame&, int sliceType);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(Frame&, int sliceType)
addPsnr	../../source/encoder/encoder.cpp	/^void EncStats::addPsnr(double psnrY, double psnrU, double psnrV)$/;"	f	class:EncStats	signature:(double psnrY, double psnrU, double psnrV)
addPsnr	../../source/encoder/encoder.h	/^    void addPsnr(double psnrY, double psnrU, double psnrV);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(double psnrY, double psnrU, double psnrV)
addQP	../../source/encoder/encoder.cpp	/^void EncStats::addQP(double aveQp)$/;"	f	class:EncStats	signature:(double aveQp)
addQP	../../source/encoder/encoder.h	/^    void addQP(double aveQp);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(double aveQp)
addSplitFlagCost	../../source/encoder/analysis.cpp	/^void Analysis::addSplitFlagCost(Mode& mode, uint32_t depth)$/;"	f	class:Analysis	signature:(Mode& mode, uint32_t depth)
addSplitFlagCost	../../source/encoder/analysis.h	/^    void addSplitFlagCost(Mode& mode, uint32_t depth);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& mode, uint32_t depth)
addSsim	../../source/encoder/encoder.cpp	/^void EncStats::addSsim(double ssim)$/;"	f	class:EncStats	signature:(double ssim)
addSsim	../../source/encoder/encoder.h	/^    void addSsim(double ssim);$/;"	p	struct:X265_NS::EncStats	access:public	signature:(double ssim)
addSubCosts	../../source/encoder/search.h	/^    void addSubCosts(const Mode& subMode)$/;"	f	struct:X265_NS::Mode	access:public	signature:(const Mode& subMode)
addWeightBi	../../source/common/predict.cpp	/^void Predict::addWeightBi(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const
addWeightBi	../../source/common/predict.h	/^    void addWeightBi(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv0, const ShortYuv& srcYuv1, const WeightValues wp0[3], const WeightValues wp1[3], bool bLuma, bool bChroma) const
addWeightUni	../../source/common/predict.cpp	/^void Predict::addWeightUni(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const
addWeightUni	../../source/common/predict.h	/^    void addWeightUni(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& predYuv, const ShortYuv& srcYuv, const WeightValues wp[3], bool bLuma, bool bChroma) const
add_ps	../../source/common/primitives.h	/^            pixel_add_ps_t add_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
add_ps	../../source/common/primitives.h	/^        pixel_add_ps_t  add_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
ads	../../source/common/primitives.h	/^        pixelcmp_ads_t ads;         \/\/ Absolute Differences sum$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
ads	../../source/encoder/motion.h	/^    pixelcmp_ads_t ads;$/;"	m	class:X265_NS::MotionEstimate	access:protected
ads_x1	../../source/common/pixel.cpp	/^int ads_x1(int encDC[1], uint32_t *sums, int, uint16_t *costMvX, int16_t *mvs, int width, int thresh)$/;"	f	namespace:__anon31	signature:(int encDC[1], uint32_t *sums, int, uint16_t *costMvX, int16_t *mvs, int width, int thresh)
ads_x2	../../source/common/pixel.cpp	/^int ads_x2(int encDC[2], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)$/;"	f	namespace:__anon31	signature:(int encDC[2], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)
ads_x4	../../source/common/pixel.cpp	/^int ads_x4(int encDC[4], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)$/;"	f	namespace:__anon31	signature:(int encDC[4], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh)
all_angs_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void all_angs_pred_altivec(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)$/;"	f	namespace:X265_NS	signature:(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)
all_angs_pred_c	../../source/common/intrapred.cpp	/^void all_angs_pred_c(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)$/;"	f	namespace:__anon17	signature:(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)
allocAnalysis	../../source/encoder/encoder.cpp	/^void Encoder::allocAnalysis(x265_analysis_data* analysis)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis)
allocAnalysis	../../source/encoder/encoder.h	/^    void allocAnalysis(x265_analysis_data* analysis);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* analysis)
allocAnalysis2Pass	../../source/encoder/encoder.cpp	/^void Encoder::allocAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis, int sliceType)
allocAnalysis2Pass	../../source/encoder/encoder.h	/^    void allocAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis, int sliceType)
allocBuffers	../../source/common/predict.cpp	/^bool Predict::allocBuffers(int csp)$/;"	f	class:Predict	signature:(int csp)
allocBuffers	../../source/common/predict.h	/^    bool allocBuffers(int csp);$/;"	p	class:X265_NS::Predict	access:public	signature:(int csp)
allocEncodeData	../../source/common/frame.cpp	/^bool Frame::allocEncodeData(x265_param *param, const SPS& sps)$/;"	f	class:Frame	signature:(x265_param *param, const SPS& sps)
allocEncodeData	../../source/common/frame.h	/^    bool allocEncodeData(x265_param *param, const SPS& sps);$/;"	p	class:X265_NS::Frame	access:public	signature:(x265_param *param, const SPS& sps)
allocNoiseReduction	../../source/common/quant.cpp	/^bool Quant::allocNoiseReduction(const x265_param& param)$/;"	f	class:Quant	signature:(const x265_param& param)
allocNoiseReduction	../../source/common/quant.h	/^    bool allocNoiseReduction(const x265_param& param);$/;"	p	class:X265_NS::Quant	access:public	signature:(const x265_param& param)
allocSaoParam	../../source/encoder/sao.cpp	/^void SAO::allocSaoParam(SAOParam* saoParam) const$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam) const
allocSaoParam	../../source/encoder/sao.h	/^    void allocSaoParam(SAOParam* saoParam) const;$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam) const
allocThreadPools	../../source/common/threadpool.cpp	/^ThreadPool* ThreadPool::allocThreadPools(x265_param* p, int& numPools, bool isThreadsReserved)$/;"	f	class:X265_NS::ThreadPool	signature:(x265_param* p, int& numPools, bool isThreadsReserved)
allocThreadPools	../../source/common/threadpool.h	/^    static ThreadPool* allocThreadPools(x265_param* p, int& numPools, bool isThreadsReserved);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(x265_param* p, int& numPools, bool isThreadsReserved)
allocWeightedRef	../../source/encoder/slicetype.cpp	/^bool LookaheadTLD::allocWeightedRef(Lowres& fenc)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc)
allocWeightedRef	../../source/encoder/slicetype.h	/^    bool     allocWeightedRef(Lowres& fenc);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Lowres& fenc)
amortizeFraction	../../source/encoder/ratecontrol.h	/^    double  amortizeFraction;$/;"	m	struct:X265_NS::RateControlEntry	access:public
amortizeFrames	../../source/encoder/ratecontrol.h	/^    double  amortizeFrames;$/;"	m	struct:X265_NS::RateControlEntry	access:public
amvpCand	../../source/encoder/search.h	/^    MV         amvpCand[2][MAX_NUM_REF][AMVP_NUM_CANDS];$/;"	m	struct:X265_NS::Mode	access:public
analyseABR2Pass	../../source/encoder/ratecontrol.cpp	/^bool RateControl::analyseABR2Pass(uint64_t allAvailableBits)$/;"	f	class:RateControl	signature:(uint64_t allAvailableBits)
analyseABR2Pass	../../source/encoder/ratecontrol.h	/^    bool   analyseABR2Pass(uint64_t allAvailableBits);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(uint64_t allAvailableBits)
analyseRefIdx	../../source/encoder/encoder.cpp	/^void Encoder::analyseRefIdx(int *numRefIdx)$/;"	f	class:Encoder	signature:(int *numRefIdx)
analyseRefIdx	../../source/encoder/encoder.h	/^    void analyseRefIdx(int *numRefIdx);$/;"	p	class:X265_NS::Encoder	access:public	signature:(int *numRefIdx)
analysis	../../source/encoder/analysis.h	/^    Analysis analysis;$/;"	m	struct:X265_NS::ThreadLocalData	access:public
analysis2PassFrameData	../../source/common/framedata.h	/^struct analysis2PassFrameData$/;"	s	namespace:X265_NS
analysis_inter_data	../../source/common/framedata.h	/^struct analysis_inter_data$/;"	s	namespace:X265_NS
analysis_intra_data	../../source/common/framedata.h	/^struct analysis_intra_data$/;"	s	namespace:X265_NS
analyzeSlicetypeTrellis	../../source/encoder/slicetype.cpp	/^void Lookahead::analyzeSlicetypeTrellis(Lowres **frames, int length, char(*pcBestPaths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, \/*bool *pbStrongP,*\/ int &iLastUsed)$/;"	f	class:Lookahead	signature:(Lowres **frames, int length, char(*pcBestPaths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, int &iLastUsed)
analyzeSlicetypeTrellis	../../source/encoder/slicetype.h	/^    void    analyzeSlicetypeTrellis(Lowres **frames, int length, char(*best_paths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, \/*bool *pbStrongP,*\/ int &iLastUsed);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int length, char(*best_paths)[X265_LOOKAHEAD_MAX + 1], int64_t *puiBestPathCost, bool *pbUsed, int &iLastUsed)
api_get_func	../../source/encoder/api.cpp	/^typedef const x265_api* (*api_get_func)(int bitDepth);$/;"	t	file:
api_query_func	../../source/encoder/api.cpp	/^typedef const x265_api* (*api_query_func)(int bitDepth, int apiVersion, int* err);$/;"	t	file:
appendtool	../../source/common/param.cpp	/^static void appendtool(x265_param* param, char* buf, size_t size, const char* toolstr)$/;"	f	namespace:X265_NS	signature:(x265_param* param, char* buf, size_t size, const char* toolstr)
applyPixelOffsets	../../source/encoder/sao.cpp	/^void SAO::applyPixelOffsets(int addr, int typeIdx, int plane)$/;"	f	class:X265_NS::SAO	signature:(int addr, int typeIdx, int plane)
applyPixelOffsets	../../source/encoder/sao.h	/^    void applyPixelOffsets(int addr, int typeIdx, int plane);$/;"	p	class:X265_NS::SAO	access:public	signature:(int addr, int typeIdx, int plane)
applyReferencePictureSet	../../source/encoder/dpb.cpp	/^void DPB::applyReferencePictureSet(RPS *rps, int curPoc)$/;"	f	class:DPB	signature:(RPS *rps, int curPoc)
applyReferencePictureSet	../../source/encoder/dpb.h	/^    void applyReferencePictureSet(RPS *rps, int curPoc);$/;"	p	class:X265_NS::DPB	access:protected	signature:(RPS *rps, int curPoc)
applyWeight	../../source/encoder/reference.cpp	/^void MotionReference::applyWeight(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId)$/;"	f	class:MotionReference	signature:(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId)
applyWeight	../../source/encoder/reference.h	/^    void applyWeight(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId);$/;"	p	class:X265_NS::MotionReference	access:public	signature:(uint32_t finishedRows, uint32_t maxNumRows, uint32_t maxNumRowsInSlice, uint32_t sliceId)
arrangeLongtermPicturesInRPS	../../source/encoder/dpb.cpp	/^void DPB::arrangeLongtermPicturesInRPS(int curPoc, RPS * rps)$/;"	f	class:DPB	signature:(int curPoc, RPS * rps)
arrangeLongtermPicturesInRPS	../../source/encoder/dpb.h	/^    void arrangeLongtermPicturesInRPS(int cirPoc, RPS * rps);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int cirPoc, RPS * rps)
aspectRatioIdc	../../source/common/slice.h	/^    int        aspectRatioIdc;$/;"	m	struct:X265_NS::VUI	access:public
aspectRatioInfoPresentFlag	../../source/common/slice.h	/^    bool       aspectRatioInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
atobool	../../source/common/param.cpp	545;"	d	file:
atobool	../../source/common/param.cpp	982;"	d	file:
atof	../../source/common/param.cpp	542;"	d	file:
atof	../../source/common/param.cpp	544;"	d	file:
atof	../../source/common/param.cpp	984;"	d	file:
atoi	../../source/common/param.cpp	541;"	d	file:
atoi	../../source/common/param.cpp	543;"	d	file:
atoi	../../source/common/param.cpp	983;"	d	file:
averageDistortion	../../source/common/framedata.h	/^    double        averageDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
average_loop	../../source/common/arm/cpu-a.S	/^average_loop:$/;"	l
avgChromaDistortion	../../source/common/framedata.h	/^    double      avgChromaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
avgCost	../../source/common/framedata.h	/^        uint64_t avgCost[4];    \/* stores the avg cost of CU's in frame for each depth *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
avgLumaDistortion	../../source/common/framedata.h	/^    double      avgLumaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
avgPsyEnergy	../../source/common/framedata.h	/^    double      avgPsyEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
avgQPComputed	../../source/encoder/frameencoder.h	/^    volatile uint32_t avgQPComputed;$/;"	m	struct:X265_NS::CTURow	access:public
avgResEnergy	../../source/common/framedata.h	/^    double      avgResEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
avgSsimEnergy	../../source/common/framedata.h	/^    double      avgSsimEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
avx	../../source/common/x86/pixel.h	/^DECL_PIXELS(avx);$/;"	v
avx2	../../source/common/x86/intrapred.h	/^DECL_ALL(avx2);$/;"	v
avx2	../../source/common/x86/ipfilter8.h	/^SETUP_FUNC_DEF(avx2);$/;"	v
avx2	../../source/common/x86/loopfilter.h	/^DECL_SAO(avx2);$/;"	v
avx2	../../source/common/x86/pixel-util.h	/^DEFINE_UTILS(avx2);$/;"	v
avx2	../../source/common/x86/pixel.h	/^DECL_PIXELS(avx2);$/;"	v
avx2_dct4	../../source/common/x86/dct8.asm	/^avx2_dct4:      dw 64, 64, 64, 64, 64, 64, 64, 64, 64, -64, 64, -64, 64, -64, 64, -64$/;"	d
avx2_idct4_1	../../source/common/x86/dct8.asm	/^avx2_idct4_1:   dw 64, 64, 64, 64, 64, 64, 64, 64, 64, -64, 64, -64, 64, -64, 64, -64$/;"	d
avx2_idct4_2	../../source/common/x86/dct8.asm	/^avx2_idct4_2:   dw 64, 64, 64, -64, 83, 36, 36, -83$/;"	d
avx2_idct8_1	../../source/common/x86/dct8.asm	/^avx2_idct8_1:   times 4 dw 64, 83, 64, 36$/;"	l
avx2_idct8_2	../../source/common/x86/dct8.asm	/^avx2_idct8_2:   times 4 dw 89, 75, 50, 18$/;"	l
awaken	../../source/common/threadpool.cpp	/^    void awaken()           { m_wakeEvent.trigger(); }$/;"	f	class:X265_NS::WorkerThread	access:public	signature:()
b	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
b	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Estimate	access:public
bChromaSATD	../../source/encoder/motion.h	/^    bool bChromaSATD;$/;"	m	class:X265_NS::MotionEstimate	access:public
bConstrainedIntraPred	../../source/common/slice.h	/^    bool     bConstrainedIntraPred;  \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
bDeblockingFilterControlPresent	../../source/common/slice.h	/^    bool     bDeblockingFilterControlPresent;$/;"	m	struct:X265_NS::PPS	access:public
bDoSearch	../../source/encoder/slicetype.h	/^        bool bDoSearch[2];$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
bEmitVUIHRDInfo	../../source/common/slice.h	/^    bool     bEmitVUIHRDInfo;$/;"	m	struct:X265_NS::SPS	access:public
bEmitVUITimingInfo	../../source/common/slice.h	/^    bool     bEmitVUITimingInfo;$/;"	m	struct:X265_NS::SPS	access:public
bEnabled	../../source/common/slice.h	/^    bool bEnabled;$/;"	m	struct:X265_NS::Window	access:public
bEntropyCodingSyncEnabled	../../source/common/slice.h	/^    bool     bEntropyCodingSyncEnabled; \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
bIsBroadcast	../../source/common/winxp.h	/^    volatile int bIsBroadcast;$/;"	m	struct:X265_NS::__anon21	access:public
bKeyframe	../../source/common/lowres.h	/^    bool   bKeyframe;$/;"	m	struct:X265_NS::Lowres	access:public
bLastMiniGopBFrame	../../source/common/lowres.h	/^    bool   bLastMiniGopBFrame;$/;"	m	struct:X265_NS::Lowres	access:public
bLastMiniGopBFrame	../../source/encoder/ratecontrol.h	/^    bool    bLastMiniGopBFrame;$/;"	m	struct:X265_NS::RateControlEntry	access:public
bLongTermPicturesPresent	../../source/common/slice.h	/^    bool     bLongTermPicturesPresent;$/;"	m	struct:X265_NS::SPS	access:public
bLowresCnt	../../source/common/lowres.h	/^    int       bLowresCnt;$/;"	m	struct:X265_NS::Lowres	access:public
bLowresCostSum	../../source/common/lowres.h	/^    int64_t   bLowresCostSum;$/;"	m	struct:X265_NS::Lowres	access:public
bNeighborFlags	../../source/common/predict.h	/^        bool     bNeighborFlags[4 * MAX_NUM_SPU_W + 1];$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
bPframeAnteriorIframe	../../source/common/lowres.h	/^    bool   bPframeAnteriorIframe;$/;"	m	struct:X265_NS::Lowres	access:public
bPicDisableDeblockingFilter	../../source/common/slice.h	/^    bool     bPicDisableDeblockingFilter;$/;"	m	struct:X265_NS::PPS	access:public
bPotentialScenecutAfterPattern	../../source/common/lowres.h	/^    bool   bPotentialScenecutAfterPattern;$/;"	m	struct:X265_NS::Lowres	access:public
bPresentFlag	../../source/common/slice.h	/^    bool     bPresentFlag;$/;"	m	struct:X265_NS::WeightParam	access:public
bSaoFlag	../../source/common/common.h	/^    bool         bSaoFlag[2];$/;"	m	struct:X265_NS::SAOParam	access:public
bScenecut	../../source/common/lowres.h	/^    bool   bScenecut;        \/\/ Set to false if the frame cannot possibly be part of a real scenecut.$/;"	m	struct:X265_NS::Lowres	access:public
bSignHideEnabled	../../source/common/slice.h	/^    bool     bSignHideEnabled;          \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
bTemporalMVPEnabled	../../source/common/slice.h	/^    bool     bTemporalMVPEnabled;$/;"	m	struct:X265_NS::SPS	access:public
bTransformSkipEnabled	../../source/common/slice.h	/^    bool     bTransformSkipEnabled;     \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
bTransquantBypassEnabled	../../source/common/slice.h	/^    bool     bTransquantBypassEnabled;  \/\/ Indicates presence of cu_transquant_bypass_flag in CUs.$/;"	m	struct:X265_NS::PPS	access:public
bUseAMP	../../source/common/slice.h	/^    bool     bUseAMP; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
bUseDQP	../../source/common/slice.h	/^    bool     bUseDQP;$/;"	m	struct:X265_NS::PPS	access:public
bUseSAO	../../source/common/slice.h	/^    bool     bUseSAO; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
bUseStrongIntraSmoothing	../../source/common/slice.h	/^    bool     bUseStrongIntraSmoothing; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
bUseWeightPred	../../source/common/slice.h	/^    bool     bUseWeightPred;         \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
bUseWeightedBiPred	../../source/common/slice.h	/^    bool     bUseWeightedBiPred;     \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
bUsed	../../source/common/slice.h	/^    bool bUsed[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
b_fail	../../source/output/raw.h	/^    bool b_fail;$/;"	m	class:X265_NS::RAWOutput	access:protected
bandPos	../../source/common/common.h	/^    uint32_t bandPos;    \/\/ BO band position$/;"	m	struct:X265_NS::SaoCtuParam	access:public
baseQp	../../source/common/framedata.h	/^        double   baseQp;        \/* Qp of Cu set from RateControl\/Vbv (only used by frame encoder) *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
batchElapsedTime	../../source/encoder/slicetype.h	/^    int64_t         batchElapsedTime;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
bcast1	../../source/common/cudata.cpp	/^static void bcast1(uint8_t* dst, uint8_t val)  { dst[0] = val; }$/;"	f	file:	signature:(uint8_t* dst, uint8_t val)
bcast16	../../source/common/cudata.cpp	/^static void bcast16(uint8_t* dst, uint8_t val) { uint64_t bval = 0x0101010101010101ULL * val; ((uint64_t*)dst)[0] = bval; ((uint64_t*)dst)[1] = bval; }$/;"	f	file:	signature:(uint8_t* dst, uint8_t val)
bcast256	../../source/common/cudata.cpp	/^static void bcast256(uint8_t* dst, uint8_t val) { memset(dst, val, 256); }$/;"	f	file:	signature:(uint8_t* dst, uint8_t val)
bcast4	../../source/common/cudata.cpp	/^static void bcast4(uint8_t* dst, uint8_t val)  { ((uint32_t*)dst)[0] = 0x01010101u * val; }$/;"	f	file:	signature:(uint8_t* dst, uint8_t val)
bcast64	../../source/common/cudata.cpp	/^static void bcast64(uint8_t* dst, uint8_t val) { uint64_t bval = 0x0101010101010101ULL * val;$/;"	f	file:	signature:(uint8_t* dst, uint8_t val)
bestME	../../source/encoder/search.h	/^    MotionData bestME[MAX_INTER_PARTS][2];$/;"	m	struct:X265_NS::Mode	access:public
bestMEPerRef	../../source/encoder/search.h	/^    MotionData bestMEPerRef[MAX_INTER_PARTS][MAX_NUM_REF][2];$/;"	m	struct:X265_NS::Mode	access:public
bestMode	../../source/encoder/analysis.h	/^        Mode*          bestMode;$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
bestTransformMode	../../source/encoder/search.h	/^        uint32_t bestTransformMode[NUM_SUBPART][MAX_NUM_COMPONENT][2];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
bfLowresCnt	../../source/common/lowres.h	/^    int       bfLowresCnt;$/;"	m	struct:X265_NS::Lowres	access:public
bfLowresCostSum	../../source/common/lowres.h	/^    int64_t   bfLowresCostSum;$/;"	m	struct:X265_NS::Lowres	access:public
bframes	../../source/common/lowres.h	/^    int       bframes;$/;"	m	struct:X265_NS::Lowres	access:public
bframes	../../source/encoder/ratecontrol.h	/^    int     bframes;$/;"	m	struct:X265_NS::RateControlEntry	access:public
bidirPredYuv	../../source/encoder/search.h	/^    Yuv      bidirPredYuv[2];$/;"	m	struct:X265_NS::RQTData	access:public
bitDepthConstraint	../../source/common/slice.h	/^    uint32_t bitDepthConstraint;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
bitRateScale	../../source/common/slice.h	/^    uint32_t bitRateScale;$/;"	m	struct:X265_NS::HRDInfo	access:public
bitRateValue	../../source/common/slice.h	/^    uint32_t bitRateValue;$/;"	m	struct:X265_NS::HRDInfo	access:public
bitSize	../../source/common/bitstream.h	/^static const uint8_t bitSize[256] =$/;"	m	namespace:X265_NS
bitcost	../../source/encoder/bitcost.h	/^    inline uint32_t bitcost(const MV& mv) const$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mv) const
bitcost	../../source/encoder/bitcost.h	/^    static inline uint32_t bitcost(const MV& mv, const MV& mvp)$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mv, const MV& mvp)
bits	../../source/common/md5.h	/^    uint32_t bits[2];$/;"	m	struct:X265_NS::MD5Context	access:public
bits	../../source/encoder/search.h	/^        uint32_t bits;$/;"	m	struct:X265_NS::Search::Cost	access:public
bits	../../source/encoder/search.h	/^        uint32_t bits;$/;"	m	struct:X265_NS::Search::MergeData	access:public
bits	../../source/encoder/search.h	/^    int      bits;$/;"	m	struct:X265_NS::MotionData	access:public
bitsCodeBin	../../source/encoder/entropy.h	/^    inline uint32_t bitsCodeBin(uint32_t binValue, uint32_t ctxModel) const$/;"	f	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue, uint32_t ctxModel) const
bitsInterMode	../../source/encoder/entropy.cpp	/^uint32_t Entropy::bitsInterMode(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const
bitsInterMode	../../source/encoder/entropy.h	/^    uint32_t bitsInterMode(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth) const
bitsIntraMode	../../source/encoder/entropy.h	/^    uint32_t bitsIntraMode(const CUData& cu, uint32_t absPartIdx) const$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx) const
bitsIntraModeMPM	../../source/encoder/entropy.h	/^    inline uint32_t bitsIntraModeMPM(const uint32_t preds[3], uint32_t dir) const { return bitsCodeBin(1, m_contextState[OFF_ADI_CTX]) + (dir == preds[0] ? 1 : 2); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const uint32_t preds[3], uint32_t dir) const
bitsIntraModeNonMPM	../../source/encoder/entropy.h	/^    inline uint32_t bitsIntraModeNonMPM() const { return bitsCodeBin(0, m_contextState[OFF_ADI_CTX]) + 5; }$/;"	f	class:X265_NS::Entropy	access:public	signature:() const
blockCbpBits	../../source/encoder/entropy.h	/^    int blockCbpBits[NUM_QT_CBF_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
blockOffset	../../source/encoder/motion.h	/^    intptr_t blockOffset;$/;"	m	class:X265_NS::MotionEstimate	access:protected
blockRootCbpBits	../../source/encoder/entropy.h	/^    int blockRootCbpBits[2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
blockVariance	../../source/common/lowres.h	/^    uint32_t* blockVariance;$/;"	m	struct:X265_NS::Lowres	access:public
blockcopy_pp_16xN1_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_16xN1_neon 32 4$/;"	l
blockcopy_pp_16xN1_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_16xN1_neon 64 8$/;"	l
blockcopy_pp_16xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_16xN_neon 12$/;"	l
blockcopy_pp_16xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_16xN_neon 24$/;"	l
blockcopy_pp_16xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_16xN_neon 4$/;"	l
blockcopy_pp_16xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_16xN_neon 8$/;"	l
blockcopy_pp_2xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_2xN_neon 16$/;"	l
blockcopy_pp_2xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_2xN_neon 4$/;"	l
blockcopy_pp_2xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_2xN_neon 8$/;"	l
blockcopy_pp_32xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_32xN_neon 16 2$/;"	l
blockcopy_pp_32xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_32xN_neon 24 3$/;"	l
blockcopy_pp_32xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_32xN_neon 32 4$/;"	l
blockcopy_pp_32xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_32xN_neon 48 6$/;"	l
blockcopy_pp_32xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_32xN_neon 64 8$/;"	l
blockcopy_pp_4xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_4xN_neon 16$/;"	l
blockcopy_pp_4xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_4xN_neon 2$/;"	l
blockcopy_pp_4xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_4xN_neon 32$/;"	l
blockcopy_pp_4xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_4xN_neon 4$/;"	l
blockcopy_pp_4xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_4xN_neon 8$/;"	l
blockcopy_pp_64xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_64xN_neon 16 4$/;"	l
blockcopy_pp_64xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_64xN_neon 32 8$/;"	l
blockcopy_pp_64xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_64xN_neon 48 12$/;"	l
blockcopy_pp_64xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_64xN_neon 64 16$/;"	l
blockcopy_pp_6xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_6xN_neon 16 8$/;"	l
blockcopy_pp_6xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_6xN_neon 8 4$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 12$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 16$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 2$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 32$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 4$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 6$/;"	l
blockcopy_pp_8xN_neon	../../source/common/arm/mc-a.S	/^blockcopy_pp_8xN_neon 8$/;"	l
blockcopy_pp_c	../../source/common/pixel.cpp	/^void blockcopy_pp_c(pixel* a, intptr_t stridea, const pixel* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(pixel* a, intptr_t stridea, const pixel* b, intptr_t strideb)
blockcopy_ps_c	../../source/common/pixel.cpp	/^void blockcopy_ps_c(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
blockcopy_sp_c	../../source/common/pixel.cpp	/^void blockcopy_sp_c(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
blockcopy_ss_c	../../source/common/pixel.cpp	/^void blockcopy_ss_c(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)$/;"	f	namespace:__anon31	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
blockfill_s	../../source/common/primitives.h	/^        blockfill_s_t   blockfill_s;   \/\/ block fill, for DC transforms$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
blockfill_s_c	../../source/common/pixel.cpp	/^void blockfill_s_c(int16_t* dst, intptr_t dstride, int16_t val)$/;"	f	namespace:__anon31	signature:(int16_t* dst, intptr_t dstride, int16_t val)
blockfill_s_t	../../source/common/primitives.h	/^typedef void (*blockfill_s_t)(int16_t* dst, intptr_t dstride, int16_t val);$/;"	t	namespace:X265_NS
blockheight	../../source/encoder/motion.h	/^    int blockheight;$/;"	m	class:X265_NS::MotionEstimate	access:protected
blockwidth	../../source/encoder/motion.h	/^    int blockwidth;$/;"	m	class:X265_NS::MotionEstimate	access:protected
blongtermPicsDeltaPocMSBPresent	../../source/common/slice.h	/^    bool blongtermPicsDeltaPocMSBPresent;$/;"	m	struct:X265_NS::RPS	access:public
blurredComplexity	../../source/encoder/ratecontrol.h	/^    double  blurredComplexity;$/;"	m	struct:X265_NS::RateControlEntry	access:public
bottomOffset	../../source/common/slice.h	/^    int  bottomOffset;$/;"	m	struct:X265_NS::Window	access:public
broadcastMutex	../../source/common/winxp.h	/^    CRITICAL_SECTION broadcastMutex;$/;"	m	struct:X265_NS::__anon21	access:public
bsCuEdge	../../source/common/deblock.cpp	/^static inline uint8_t bsCuEdge(const CUData* cu, uint32_t absPartIdx, int32_t dir)$/;"	f	file:	signature:(const CUData* cu, uint32_t absPartIdx, int32_t dir)
bs_size_se	../../source/common/bitstream.h	/^static inline int bs_size_se(int val)$/;"	f	namespace:X265_NS	signature:(int val)
bs_size_ue	../../source/common/bitstream.h	/^static inline int bs_size_ue(unsigned int val)$/;"	f	namespace:X265_NS	signature:(unsigned int val)
bs_size_ue_big	../../source/common/bitstream.h	/^static inline int bs_size_ue_big(unsigned int val)$/;"	f	namespace:X265_NS	signature:(unsigned int val)
buOffsetC	../../source/common/slice.h	/^    intptr_t* buOffsetC;$/;"	m	struct:X265_NS::SPS	access:public
buOffsetY	../../source/common/slice.h	/^    intptr_t* buOffsetY;$/;"	m	struct:X265_NS::SPS	access:public
buf	../../source/common/md5.h	/^    uint32_t buf[4];$/;"	m	struct:X265_NS::MD5Context	access:public
buf	../../source/input/y4m.h	/^    char* buf[QUEUE_SIZE];$/;"	m	class:X265_NS::Y4MInput	access:protected
buf	../../source/input/yuv.h	/^    char* buf[QUEUE_SIZE];$/;"	m	class:X265_NS::YUVInput	access:protected
buf	../../source/output/y4m.h	/^    char *buf;$/;"	m	class:X265_NS::Y4MOutput	access:protected
buf	../../source/output/yuv.h	/^    char *buf;$/;"	m	class:X265_NS::YUVOutput	access:protected
bufChromaSATD	../../source/encoder/motion.h	/^    inline int bufChromaSATD(const Yuv& refYuv, int puPartIdx)$/;"	f	class:X265_NS::MotionEstimate	access:public	signature:(const Yuv& refYuv, int puPartIdx)
bufSAD	../../source/encoder/motion.h	/^    inline int bufSAD(const pixel* fref, intptr_t stride)  { return sad(fencPUYuv.m_buf[0], FENC_STRIDE, fref, stride); }$/;"	f	class:X265_NS::MotionEstimate	access:public	signature:(const pixel* fref, intptr_t stride)
bufSATD	../../source/encoder/motion.h	/^    inline int bufSATD(const pixel* fref, intptr_t stride) { return satd(fencPUYuv.m_buf[0], FENC_STRIDE, fref, stride); }$/;"	f	class:X265_NS::MotionEstimate	access:public	signature:(const pixel* fref, intptr_t stride)
buffer	../../source/common/lowres.h	/^    pixel *buffer[4];$/;"	m	struct:X265_NS::Lowres	access:public
bufferFill	../../source/encoder/ratecontrol.h	/^    double  bufferFill;$/;"	m	struct:X265_NS::RateControlEntry	access:public
bufferFillFinal	../../source/common/frame.h	/^    double   bufferFillFinal;$/;"	m	struct:X265_NS::RcStats	access:public
bufferRate	../../source/encoder/ratecontrol.h	/^    double  bufferRate;$/;"	m	struct:X265_NS::RateControlEntry	access:public
bufferedEntropy	../../source/encoder/frameencoder.h	/^    Entropy           bufferedEntropy;  \/* store CTU2 context for next row CTU0 *\/$/;"	m	struct:X265_NS::CTURow	access:public
build_info_str	../../source/common/version.cpp	/^const char* PFX(build_info_str) = ONOS COMPILEDBY BITS ASM ATOMICS CHECKED BITDEPTH ADD8 ADD10 ADD12;$/;"	v
busy	../../source/encoder/frameencoder.h	/^    volatile bool     busy;$/;"	m	struct:X265_NS::CTURow	access:public
byteReverse	../../source/common/md5.cpp	32;"	d	file:
c_ang16_mode_11	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_11:      db 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14$/;"	d
c_ang16_mode_12	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_12:      db 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19$/;"	d
c_ang16_mode_13	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_13:      db 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15$/;"	d
c_ang16_mode_22	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_22:     db 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6$/;"	d
c_ang16_mode_23	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_23:     db 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14$/;"	d
c_ang16_mode_24	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_24:     db 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22$/;"	d
c_ang16_mode_25	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_25:      db 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28$/;"	d
c_ang16_mode_27	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_27:      db 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang16_mode_28	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_28:      db 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10$/;"	d
c_ang16_mode_29	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_29:     db 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9,  14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18$/;"	d
c_ang16_mode_30	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_30:      db 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26$/;"	d
c_ang16_mode_31	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_31:      db 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17$/;"	d
c_ang16_mode_9	../../source/common/x86/intrapred8.asm	/^c_ang16_mode_9:       db 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18$/;"	d
c_ang4_mode_11	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_11:          db 2, 30, 2, 30, 2, 30, 2, 30, 4, 28, 4, 28, 4, 28, 4, 28, 6, 26, 6, 26, 6, 26, 6, 26, 8, 24, 8, 24, 8, 24, 8, 24$/;"	d
c_ang4_mode_12	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_12:          db 5, 27, 5, 27, 5, 27, 5, 27, 10, 22, 10, 22, 10, 22, 10, 22, 15, 17, 15, 17, 15, 17, 15, 17, 20, 12, 20, 12, 20, 12, 20, 12$/;"	d
c_ang4_mode_13	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_13:          db 9, 23, 9, 23, 9, 23, 9, 23, 18, 14, 18, 14, 18, 14, 18, 14, 27, 5, 27, 5, 27, 5, 27, 5, 4, 28, 4, 28, 4, 28, 4, 28$/;"	d
c_ang4_mode_14	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_14:          db 13, 19, 13, 19, 13, 19, 13, 19, 26, 6, 26, 6, 26, 6, 26, 6, 7, 25, 7, 25, 7, 25, 7, 25, 20, 12, 20, 12, 20, 12, 20, 12$/;"	d
c_ang4_mode_15	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_15:          db 17, 15, 17, 15, 17, 15, 17, 15, 2, 30, 2, 30, 2, 30, 2, 30, 19, 13, 19, 13, 19, 13, 19, 13, 4, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang4_mode_16	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_16:          db 21, 11, 21, 11, 21, 11, 21, 11, 10, 22, 10, 22, 10, 22, 10, 22, 31, 1, 31, 1, 31, 1, 31, 1, 20, 12, 20, 12, 20, 12, 20, 12$/;"	d
c_ang4_mode_17	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_17:          db 26, 6, 26, 6, 26, 6, 26, 6, 20, 12, 20, 12, 20, 12, 20, 12, 14, 18, 14, 18, 14, 18, 14, 18, 8, 24, 8, 24, 8, 24, 8, 24$/;"	d
c_ang4_mode_19	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_19:          db 26, 6, 26, 6, 26, 6, 26, 6, 20, 12, 20, 12, 20, 12, 20, 12, 14, 18, 14, 18, 14, 18, 14, 18, 8, 24, 8, 24, 8, 24, 8, 24$/;"	d
c_ang4_mode_20	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_20:          db 21, 11, 21, 11, 21, 11, 21, 11, 10, 22, 10, 22, 10, 22, 10, 22, 31, 1, 31, 1, 31, 1, 31, 1, 20, 12, 20, 12, 20, 12, 20, 12$/;"	d
c_ang4_mode_21	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_21:          db 17, 15, 17, 15, 17, 15, 17, 15, 2, 30, 2, 30, 2, 30, 2, 30, 19, 13, 19, 13, 19, 13, 19, 13, 4, 28, 4, 28, 4, 28, 4, 28$/;"	d
c_ang4_mode_22	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_22:          db 13, 19, 13, 19, 13, 19, 13, 19, 26, 6, 26, 6, 26, 6, 26, 6, 7, 25, 7, 25, 7, 25, 7, 25, 20, 12, 20, 12, 20, 12, 20, 12$/;"	d
c_ang4_mode_23	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_23:          db 9, 23, 9, 23, 9, 23, 9, 23, 18, 14, 18, 14, 18, 14, 18, 14, 27, 5, 27, 5, 27, 5, 27, 5, 4, 28, 4, 28, 4, 28, 4, 28$/;"	d
c_ang4_mode_24	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_24:          db 5, 27, 5, 27, 5, 27, 5, 27, 10, 22, 10, 22, 10, 22, 10, 22, 15, 17, 15, 17, 15, 17, 15, 17, 20, 12, 20, 12, 20, 12, 20, 12$/;"	d
c_ang4_mode_25	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_25:          db 2, 30, 2, 30, 2, 30, 2, 30, 4, 28, 4, 28, 4, 28, 4, 28, 6, 26, 6, 26, 6, 26, 6, 26, 8, 24, 8, 24, 8, 24, 8, 24$/;"	d
c_ang4_mode_27	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_27:          db 30, 2, 30, 2, 30, 2, 30, 2, 28, 4, 28, 4, 28, 4, 28, 4, 26, 6, 26, 6, 26, 6, 26, 6, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang4_mode_28	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_28:          db 27, 5, 27, 5, 27, 5, 27, 5, 22, 10, 22, 10, 22, 10, 22, 10, 17, 15, 17, 15, 17, 15, 17, 15, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang4_mode_29	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_29:          db 23, 9, 23, 9, 23, 9, 23, 9, 14, 18, 14, 18, 14, 18, 14, 18, 5, 27, 5, 27, 5, 27, 5, 27, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang4_mode_30	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_30:          db 19, 13, 19, 13, 19, 13, 19, 13, 6, 26, 6, 26, 6, 26, 6, 26, 25, 7, 25, 7, 25, 7, 25, 7, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang4_mode_31	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_31:          db 15, 17, 15, 17, 15, 17, 15, 17, 30, 2, 30, 2, 30, 2, 30, 2, 13, 19, 13, 19, 13, 19, 13, 19, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang4_mode_32	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_32:          db 11, 21, 11, 21, 11, 21, 11, 21, 22, 10, 22, 10, 22, 10, 22, 10, 1, 31, 1, 31, 1, 31, 1, 31, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang4_mode_33	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_33:          db 6, 26, 6, 26, 6, 26, 6, 26, 12, 20, 12, 20, 12, 20, 12, 20, 18, 14, 18, 14, 18, 14, 18, 14, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang4_mode_5	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_5:           db 15, 17, 15, 17, 15, 17, 15, 17, 30, 2, 30, 2, 30, 2, 30, 2, 13, 19, 13, 19, 13, 19, 13, 19, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang4_mode_6	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_6:           db 19, 13, 19, 13, 19, 13, 19, 13, 6, 26, 6, 26, 6, 26, 6, 26, 25, 7, 25, 7, 25, 7, 25, 7, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang4_mode_7	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_7:           db 23, 9, 23, 9, 23, 9, 23, 9, 14, 18, 14, 18, 14, 18, 14, 18, 5, 27, 5, 27, 5, 27, 5, 27, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang4_mode_8	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_8:           db 27, 5, 27, 5, 27, 5, 27, 5, 22, 10, 22, 10, 22, 10, 22, 10, 17, 15, 17, 15, 17, 15, 17, 15, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang4_mode_9	../../source/common/x86/intrapred8.asm	/^c_ang4_mode_9:           db 30, 2, 30, 2, 30, 2, 30, 2, 28, 4, 28, 4, 28, 4, 28, 4, 26, 6, 26, 6, 26, 6, 26, 6, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang8_13_22	../../source/common/x86/intrapred8.asm	/^c_ang8_13_22:         db 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22$/;"	d
c_ang8_13_26	../../source/common/x86/intrapred8.asm	/^c_ang8_13_26:         db 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26$/;"	d
c_ang8_14_8	../../source/common/x86/intrapred8.asm	/^c_ang8_14_8:          db 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang8_15_20	../../source/common/x86/intrapred8.asm	/^c_ang8_15_20:         db 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang8_17_2	../../source/common/x86/intrapred8.asm	/^c_ang8_17_2:          db 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2$/;"	d
c_ang8_19_4	../../source/common/x86/intrapred8.asm	/^c_ang8_19_4:          db 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang8_19_8	../../source/common/x86/intrapred8.asm	/^c_ang8_19_8:          db 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang8_1_14	../../source/common/x86/intrapred8.asm	/^c_ang8_1_14:          db 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14$/;"	d
c_ang8_21_10	../../source/common/x86/intrapred8.asm	/^c_ang8_21_10       :  db 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10$/;"	l
c_ang8_21_6	../../source/common/x86/intrapred8.asm	/^c_ang8_21_6:          db 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 11, 21, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6$/;"	d
c_ang8_22_16	../../source/common/x86/intrapred8.asm	/^c_ang8_22_16:         db 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16$/;"	d
c_ang8_23_8	../../source/common/x86/intrapred8.asm	/^c_ang8_23_8:          db 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8,$/;"	d
c_ang8_25_30	../../source/common/x86/intrapred8.asm	/^c_ang8_25_30:         db 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30$/;"	d
c_ang8_26_20	../../source/common/x86/intrapred8.asm	/^c_ang8_26_20:         db 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang8_27_4	../../source/common/x86/intrapred8.asm	/^c_ang8_27_4:          db 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang8_27_8	../../source/common/x86/intrapred8.asm	/^c_ang8_27_8:          db 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang8_2_28	../../source/common/x86/intrapred8.asm	/^c_ang8_2_28:          db 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28$/;"	d
c_ang8_31_20	../../source/common/x86/intrapred8.asm	/^c_ang8_31_20:         db 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang8_31_8	../../source/common/x86/intrapred8.asm	/^c_ang8_31_8:          db 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang8_3_8	../../source/common/x86/intrapred8.asm	/^c_ang8_3_8:           db 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8, 24, 8$/;"	d
c_ang8_5_10	../../source/common/x86/intrapred8.asm	/^c_ang8_5_10:          db 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10$/;"	d
c_ang8_7_20	../../source/common/x86/intrapred8.asm	/^c_ang8_7_20:          db 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 25, 7, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20, 12, 20$/;"	d
c_ang8_9_18	../../source/common/x86/intrapred8.asm	/^c_ang8_9_18:          db 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18$/;"	d
c_ang8_9_30	../../source/common/x86/intrapred8.asm	/^c_ang8_9_30:          db 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30$/;"	d
c_ang8_mode_13	../../source/common/x86/intrapred8.asm	/^c_ang8_mode_13:       db 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 9, 23, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14, 18, 14$/;"	d
c_ang8_mode_14	../../source/common/x86/intrapred8.asm	/^c_ang8_mode_14:       db 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 13, 19, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6, 26, 6$/;"	d
c_ang8_mode_15	../../source/common/x86/intrapred8.asm	/^c_ang8_mode_15:       db 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 17, 15, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30$/;"	d
c_ang8_mode_24	../../source/common/x86/intrapred8.asm	/^c_ang8_mode_24:       db 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 5, 27, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22, 10, 22$/;"	d
c_ang8_mode_25	../../source/common/x86/intrapred8.asm	/^c_ang8_mode_25:       db 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28$/;"	d
c_ang8_mode_27	../../source/common/x86/intrapred8.asm	/^c_ang8_mode_27:       db 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 30, 2, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4, 28, 4$/;"	d
c_ang8_src1_9_2_10	../../source/common/x86/intrapred8.asm	/^c_ang8_src1_9_2_10:   db 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9$/;"	d
c_ang8_src2_10_2_10	../../source/common/x86/intrapred8.asm	/^c_ang8_src2_10_2_10:  db 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9$/;"	d
c_ang8_src2_10_3_11	../../source/common/x86/intrapred8.asm	/^c_ang8_src2_10_3_11:  db 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10$/;"	d
c_ang8_src3_11_3_11	../../source/common/x86/intrapred8.asm	/^c_ang8_src3_11_3_11:  db 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10$/;"	d
c_ang8_src3_11_4_12	../../source/common/x86/intrapred8.asm	/^c_ang8_src3_11_4_12:  db 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11$/;"	d
c_ang8_src4_12_4_12	../../source/common/x86/intrapred8.asm	/^c_ang8_src4_12_4_12:  times 2 db 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11$/;"	l
c_ang8_src4_12_5_13	../../source/common/x86/intrapred8.asm	/^c_ang8_src4_12_5_13:  db 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12$/;"	d
c_ang8_src5_13_5_13	../../source/common/x86/intrapred8.asm	/^c_ang8_src5_13_5_13:  db 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12$/;"	d
c_ang8_src5_13_6_14	../../source/common/x86/intrapred8.asm	/^c_ang8_src5_13_6_14:  db 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13$/;"	d
c_ang8_src6_14_7_15	../../source/common/x86/intrapred8.asm	/^c_ang8_src6_14_7_15:  db 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14$/;"	d
c_deinterval8	../../source/common/x86/intrapred8.asm	/^c_deinterval8:        db  0,  8,  1,  9,  2, 10,  3, 11,  4, 12,  5, 13,  6, 14,  7, 15$/;"	d
c_mode16_12	../../source/common/x86/intrapred8.asm	/^c_mode16_12:          db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 6$/;"	d
c_mode16_13	../../source/common/x86/intrapred8.asm	/^c_mode16_13:          db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 11, 7, 4$/;"	d
c_mode16_14	../../source/common/x86/intrapred8.asm	/^c_mode16_14:          db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 12, 10, 7, 5, 2$/;"	d
c_mode16_15	../../source/common/x86/intrapred8.asm	/^c_mode16_15:          db  0,  0,  0,  0,  0,  0,  0,  0, 15, 13, 11,  9,  8,  6,  4,  2$/;"	d
c_mode16_16	../../source/common/x86/intrapred8.asm	/^c_mode16_16:          db  8,  6,  5,  3,  2,  0, 15, 14, 12, 11,  9,  8,  6,  5,  3,  2$/;"	d
c_mode16_17	../../source/common/x86/intrapred8.asm	/^c_mode16_17:          db  4,  2,  1,  0, 15, 14, 12, 11, 10,  9,  7,  6,  5,  4,  2,  1$/;"	d
c_mode16_18	../../source/common/x86/intrapred8.asm	/^c_mode16_18:          db 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1$/;"	d
c_mode32_12_0	../../source/common/x86/intrapred8.asm	/^c_mode32_12_0:        db  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  7,  0$/;"	d
c_mode32_13_0	../../source/common/x86/intrapred8.asm	/^c_mode32_13_0:        db  3,  6, 10, 13,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0$/;"	d
c_mode32_13_shuf	../../source/common/x86/intrapred8.asm	/^c_mode32_13_shuf:     db  0,  0,  0,  0,  0,  0,  0,  0,  7,  6,  5,  4,  3,  2,  1,  0$/;"	d
c_mode32_14_0	../../source/common/x86/intrapred8.asm	/^c_mode32_14_0:        db 15, 12, 10,  7,  5,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0$/;"	d
c_mode32_14_shuf	../../source/common/x86/intrapred8.asm	/^c_mode32_14_shuf:     db 15, 14, 13,  0,  2,  3,  4,  5,  6,  7, 10, 11, 12, 13, 14, 15$/;"	d
c_mode32_15_0	../../source/common/x86/intrapred8.asm	/^c_mode32_15_0:        db 15, 13, 11,  9,  8,  6,  4,  2,  0,  0,  0,  0,  0,  0,  0,  0$/;"	d
c_mode32_16_0	../../source/common/x86/intrapred8.asm	/^c_mode32_16_0:        db 15, 14, 12, 11,  9,  8,  6,  5,  3,  2,  0,  0,  0,  0,  0,  0$/;"	d
c_mode32_17_0	../../source/common/x86/intrapred8.asm	/^c_mode32_17_0:        db 15, 14, 12, 11, 10,  9,  7,  6,  5,  4,  2,  1,  0,  0,  0,  0$/;"	d
c_mode32_18_0	../../source/common/x86/intrapred8.asm	/^c_mode32_18_0:        db 15, 14, 13, 12, 11, 10,  9,  8,  7,  6,  5,  4,  3,  2,  1,  0$/;"	d
c_shuf8_0	../../source/common/x86/intrapred8.asm	/^c_shuf8_0:            db  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7,  8$/;"	d
c_trans_4x4	../../source/common/x86/intrapred8.asm	/^c_trans_4x4           db  0,  4,  8, 12,  1,  5,  9, 13,  2,  6, 10, 14,  3,  7, 11, 15$/;"	d
cacheCost	../../source/encoder/analysis.h	/^    uint64_t*            cacheCost;$/;"	m	class:X265_NS::Analysis	access:protected
calSign	../../source/common/loopfilter.cpp	/^static void calSign(int8_t *dst, const pixel *src1, const pixel *src2, const int endX)$/;"	f	namespace:__anon2	signature:(int8_t *dst, const pixel *src1, const pixel *src2, const int endX)
calcAdaptiveQuantFrame	../../source/encoder/slicetype.cpp	/^void LookaheadTLD::calcAdaptiveQuantFrame(Frame *curFrame, x265_param* param)$/;"	f	class:LookaheadTLD	signature:(Frame *curFrame, x265_param* param)
calcAdaptiveQuantFrame	../../source/encoder/slicetype.h	/^    void calcAdaptiveQuantFrame(Frame *curFrame, x265_param* param);$/;"	p	struct:X265_NS::LookaheadTLD	access:public	signature:(Frame *curFrame, x265_param* param)
calcBsIdx	../../source/common/deblock.cpp	/^static inline uint32_t calcBsIdx(uint32_t absPartIdx, int32_t dir, int32_t edgeIdx, int32_t baseUnitIdx)$/;"	f	file:	signature:(uint32_t absPartIdx, int32_t dir, int32_t edgeIdx, int32_t baseUnitIdx)
calcCTUGeoms	../../source/common/cudata.cpp	/^void CUData::calcCTUGeoms(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS])$/;"	f	class:CUData	signature:(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS])
calcCTUGeoms	../../source/common/cudata.h	/^    static void calcCTUGeoms(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS]);$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t ctuWidth, uint32_t ctuHeight, uint32_t maxCUSize, uint32_t minCUSize, CUGeom cuDataArray[CUGeom::MAX_GEOMS])
calcDP	../../source/common/deblock.cpp	/^static inline int32_t calcDP(pixel* src, intptr_t offset)$/;"	f	file:	signature:(pixel* src, intptr_t offset)
calcDQ	../../source/common/deblock.cpp	/^static inline int32_t calcDQ(pixel* src, intptr_t offset)$/;"	f	file:	signature:(pixel* src, intptr_t offset)
calcLength	../../source/encoder/ratecontrol.cpp	/^inline int calcLength(uint32_t x)$/;"	f	namespace:__anon4	signature:(uint32_t x)
calcPatternSigCtx	../../source/common/quant.h	/^    static uint32_t calcPatternSigCtx(uint64_t sigCoeffGroupFlag64, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)$/;"	f	class:X265_NS::Quant	access:public	signature:(uint64_t sigCoeffGroupFlag64, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)
calcPsyRdCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcPsyRdCost(sse_t distortion, uint32_t bits, uint32_t psycost) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(sse_t distortion, uint32_t bits, uint32_t psycost) const
calcRdCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcRdCost(sse_t distortion, uint32_t bits) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(sse_t distortion, uint32_t bits) const
calcRdSADCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcRdSADCost(uint32_t sadCost, uint32_t bits) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint32_t sadCost, uint32_t bits) const
calcRefreshInterval	../../source/encoder/encoder.cpp	/^void Encoder::calcRefreshInterval(Frame* frameEnc)$/;"	f	class:Encoder	signature:(Frame* frameEnc)
calcRefreshInterval	../../source/encoder/encoder.h	/^    void calcRefreshInterval(Frame* frameEnc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(Frame* frameEnc)
calcSaoRdoCost	../../source/encoder/sao.cpp	/^inline int64_t SAO::calcSaoRdoCost(int64_t distortion, uint32_t bits, int64_t lambda)$/;"	f	class:X265_NS::SAO	signature:(int64_t distortion, uint32_t bits, int64_t lambda)
calcSaoRdoCost	../../source/encoder/sao.h	/^    int64_t calcSaoRdoCost(int64_t distortion, uint32_t bits, int64_t lambda);$/;"	p	class:X265_NS::SAO	access:public	signature:(int64_t distortion, uint32_t bits, int64_t lambda)
calcSaoStatsCTU	../../source/encoder/sao.cpp	/^void SAO::calcSaoStatsCTU(int addr, int plane)$/;"	f	class:X265_NS::SAO	signature:(int addr, int plane)
calcSaoStatsCTU	../../source/encoder/sao.h	/^    void calcSaoStatsCTU(int addr, int plane);$/;"	p	class:X265_NS::SAO	access:public	signature:(int addr, int plane)
calcSaoStatsCu_BeforeDblk	../../source/encoder/sao.cpp	/^void SAO::calcSaoStatsCu_BeforeDblk(Frame* frame, int idxX, int idxY)$/;"	f	class:X265_NS::SAO	signature:(Frame* frame, int idxX, int idxY)
calcSaoStatsCu_BeforeDblk	../../source/encoder/sao.h	/^    void calcSaoStatsCu_BeforeDblk(Frame* pic, int idxX, int idxY);$/;"	p	class:X265_NS::SAO	access:public	signature:(Frame* pic, int idxX, int idxY)
calcScale	../../source/encoder/ratecontrol.cpp	/^inline int calcScale(uint32_t x)$/;"	f	namespace:__anon4	signature:(uint32_t x)
calcSsimRdCost	../../source/encoder/rdcost.h	/^    inline uint64_t calcSsimRdCost(uint64_t distortion, uint32_t bits, uint32_t ssimCost) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint64_t distortion, uint32_t bits, uint32_t ssimCost) const
calcresidual	../../source/common/primitives.h	/^        calcresidual_t  calcresidual;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
calcresidual_t	../../source/common/primitives.h	/^typedef void (*calcresidual_t)(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);$/;"	t	namespace:X265_NS
calculateNormFactor	../../source/encoder/analysis.cpp	/^void Analysis::calculateNormFactor(CUData& ctu, int qp)$/;"	f	class:Analysis	signature:(CUData& ctu, int qp)
calculateNormFactor	../../source/encoder/analysis.h	/^    void calculateNormFactor(CUData& ctu, int qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(CUData& ctu, int qp)
calculateQpforCuSize	../../source/encoder/analysis.cpp	/^int Analysis::calculateQpforCuSize(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck, double baseQp)$/;"	f	class:Analysis	signature:(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck, double baseQp)
calculateQpforCuSize	../../source/encoder/analysis.h	/^    int calculateQpforCuSize(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck = 0, double baseQP = -1);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& ctu, const CUGeom& cuGeom, int32_t complexCheck = 0, double baseQP = -1)
calculateSSIM	../../source/encoder/framefilter.cpp	/^static float calculateSSIM(pixel *pix1, intptr_t stride1, pixel *pix2, intptr_t stride2, uint32_t width, uint32_t height, void *buf, uint32_t& cnt)$/;"	f	file:	signature:(pixel *pix1, intptr_t stride1, pixel *pix2, intptr_t stride2, uint32_t width, uint32_t height, void *buf, uint32_t& cnt)
calculateSSIM	../../source/encoder/framefilter.cpp	/^static float calculateSSIM(pixel *pix1, intptr_t stride1, pixel *pix2, intptr_t stride2, uint32_t width, uint32_t height, void *buf, uint32_t& cnt);$/;"	p	file:	signature:(pixel *pix1, intptr_t stride1, pixel *pix2, intptr_t stride2, uint32_t width, uint32_t height, void *buf, uint32_t& cnt)
canjump	../../source/common/cpu.cpp	/^static volatile sig_atomic_t canjump = 0;$/;"	v	file:
cbfFlag	../../source/encoder/search.h	/^        uint8_t cbfFlag[NUM_SUBPART][MAX_NUM_COMPONENT][2];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
cbrFlag	../../source/common/slice.h	/^    bool     cbrFlag;$/;"	m	struct:X265_NS::HRDInfo	access:public
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_1$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_128$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_16$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_32$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_4$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_64$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pb_8$/;"	l
cextern	../../source/common/x86/blockcopy8.asm	/^cextern pw_4$/;"	l
cextern	../../source/common/x86/cpu-a.asm	/^cextern intel_cpu_indicator_init$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_1$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_1024$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_128$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_16$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_2$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_2048$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_256$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_32$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_4$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_512$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_64$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pd_8$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern pw_ppppmmmm$/;"	l
cextern	../../source/common/x86/dct8.asm	/^cextern trans8_shuf$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern multiH$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern multiH2$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern multiH3$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern multiL$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern multi_2Row$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pb_01$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pb_unpackwq1$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pb_unpackwq2$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_0000ffff$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_15$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_16$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_31$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_32$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_planar16_mul0$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_planar16_mul1$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_planar16_mul2$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_planar32_mul1$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pd_planar32_mul2$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_15$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_16$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_2$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_3$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_31$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_32$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_4$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_4096$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_7$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_8$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_planar16_mul$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_planar32_mul$/;"	l
cextern	../../source/common/x86/intrapred16.asm	/^cextern pw_swap$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern multiH$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern multiH2$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern multiH3$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern multiL$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern multi_2Row$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pb_1$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pb_2$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pb_unpackbd1$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_00ff$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_1024$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_15$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_16$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_2$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_257$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_3$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_31$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_32$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_4$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_4096$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_512$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_7$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_8$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_planar16_mul$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern pw_planar32_mul$/;"	l
cextern	../../source/common/x86/intrapred8.asm	/^cextern trans8_shuf$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern ang_table$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern pb_000000000000000F$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern pb_0000000000000F0F$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern pw_1024$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern pw_16$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern pw_FFFFFFFFFFFFFFF0$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern pw_ang_table$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern tab_S1$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern tab_S2$/;"	l
cextern	../../source/common/x86/intrapred8_allangs.asm	/^cextern tab_Si$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern idct8_shuf2$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pd_32$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pd_524416$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pd_8$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pd_n131072$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pd_n32768$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pw_2000$/;"	l
cextern	../../source/common/x86/ipfilter16.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/ipfilter8.asm	/^cextern pb_128$/;"	l
cextern	../../source/common/x86/ipfilter8.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/ipfilter8.asm	/^cextern pw_2000$/;"	l
cextern	../../source/common/x86/ipfilter8.asm	/^cextern pw_32$/;"	l
cextern	../../source/common/x86/ipfilter8.asm	/^cextern pw_512$/;"	l
cextern	../../source/common/x86/ipfilter8.asm	/^cextern pw_8192$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern hmul_16p$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_01$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_0123$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_1$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_124$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_128$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_15$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_2$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_3$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_31$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_4$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_movemask$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_movemask_32$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pb_shuf_off4$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_1_ffff$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_2$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_4$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_n1$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/loopfilter.asm	/^cextern pw_shuf_off4$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pb_0$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pd_32$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pd_64$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pq_1$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_00ff$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_1023$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_1024$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_128$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_2048$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_256$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_32$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_4$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_4096$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_512$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_64$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_8$/;"	l
cextern	../../source/common/x86/mc-a.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pb_0$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pd_16$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pd_ffff$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_00ff$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_1024$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_16$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_32$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_3fff$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_512$/;"	l
cextern	../../source/common/x86/mc-a2.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/pixel-32.asm	/^cextern pw_pmpmpmpm$/;"	l
cextern	../../source/common/x86/pixel-32.asm	/^cextern pw_ppmmppmm$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern hmul_16p$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pb_0$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pb_1$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pb_movemask$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pb_movemask_32$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pd_1$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pd_2$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_00ff$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_16$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_32$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_8$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_pmmpzzzz$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_pmpmpmpm$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_ppmmppmm$/;"	l
cextern	../../source/common/x86/pixel-a.asm	/^cextern pw_ppppmmmm$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern hmul_16p$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_1$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_128$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_15$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_16$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_2$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_32$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_4$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_64$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_8$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pb_movemask$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pd_1$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pd_32767$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pd_n32768$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_00ff$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_0_7$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_1023$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_2000$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_3fff$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_exp2_0_15$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/pixel-util8.asm	/^cextern trans8_shuf$/;"	l
cextern	../../source/common/x86/pixeladd8.asm	/^cextern pw_pixel_max$/;"	l
cextern	../../source/common/x86/sad-a.asm	/^cextern pb_3$/;"	l
cextern	../../source/common/x86/sad-a.asm	/^cextern pb_shuf8x8c$/;"	l
cextern	../../source/common/x86/sad-a.asm	/^cextern pd_64$/;"	l
cextern	../../source/common/x86/sad-a.asm	/^cextern pw_8$/;"	l
cextern	../../source/common/x86/sad16-a.asm	/^cextern pw_1$/;"	l
cextern	../../source/common/x86/ssd-a.asm	/^cextern hsub_mul$/;"	l
cextern	../../source/common/x86/ssd-a.asm	/^cextern pw_00ff$/;"	l
cextern_naked	../../source/common/x86/pixel-util8.asm	/^cextern_naked private_prefix %+ _entropyStateBits$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_%1x%2, 4, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_%1x%2, 4, 5, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_%1x%2, 4, 7, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_%1x%2, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_2x16, 4, 7, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_2x4, 4, 7, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_2x8, 4, 7, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_32x16, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_32x24, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_32x8, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_4x2, 4, 6, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_4x4, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_4x8, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_6x16, 4, 7, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_6x8, 4, 7, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x12, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x16, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x2, 4, 4, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x32, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x4, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x6, 4, 4, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x64, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_pp_8x8, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_%1x%2, 4, 5, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_%1x%2, 4, 5, 3, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_%1x%2, 4, 7, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_%1x%2, 4, 7, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_16x4, 4, 4, 3, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_2x16, 4, 5, 2, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_2x4, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_2x8, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_4x2, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_4x4, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_64x64, 4, 7, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_8x2, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_8x4, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ps_8x6, 4, 4, 1, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_%1x%2, 4, 5, 4, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_%1x%2, 4, 5, 6, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_%1x%2, 4, 5, 8, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_%1x%2, 4, 7, 2, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_%1x%2, 4, 7, 4, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_2x4, 4, 5, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_2x8, 4, 5, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_4x2, 4, 4, 2, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_4x4, 4, 4, 4, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_4x8, 4, 4, 8, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_6x8, 4, 4, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_8x2, 4, 4, 2, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_8x4, 4, 4, 4, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_8x6, 4, 4, 6, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_sp_8x8, 4, 4, 8, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_%1x%2, 4, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_%1x%2, 4, 5, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_%1x%2, 4, 5, 6, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_%1x%2, 4, 7, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_%1x%2, 4, 7, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_%1x%2, 4, 7, 4, dst, dstStride, src, srcStride$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_2x16, 4, 7, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_2x4, 4, 6, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_2x8, 4, 6, 0$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_48x64, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_4x2, 4, 4, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_4x4, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_6x16, 4, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_6x8, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_8x12, 4, 5, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_8x2, 4, 4, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_8x4, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockcopy_ss_8x6, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockfill_s_%1x%2, 3, 5, 1, dst, dstStride, val$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockfill_s_16x16, 3, 4, 1$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockfill_s_16x16, 3, 4, 1, dst, dstStride, val$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockfill_s_32x32, 3, 4, 1$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockfill_s_4x4, 3, 3, 1, dst, dstStride, val$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal blockfill_s_8x8, 3, 4, 1, dst, dstStride, val$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_16, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_16, 3,4,6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_32, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_32, 3,4,6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_4, 3,3,3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_8, 3,3,6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal copy_cnt_8, 3,4,5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_16, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_16, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_32, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_4, 3, 3, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_4, 3, 3, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_8, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shl_8, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_16, 3, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_16, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_32, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_4, 3, 3, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_4, 3, 3, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_8, 3, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy1Dto2D_shr_8, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_16, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_16, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_32, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_32, 4, 4, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_4, 4, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_8, 4, 5, 2$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shl_8, 4, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_16, 3, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_16, 4, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_32, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_32, 4, 5, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_4, 3, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_8, 3, 4, 4$/;"	l
cglobal	../../source/common/x86/blockcopy8.asm	/^cglobal cpy2Dto1D_shr_8, 3, 5, 4$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal cpu_cpuid, 5,7$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal cpu_cpuid_test$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal cpu_emms$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal cpu_sfence$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal cpu_xgetbv, 3,7$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal safe_intel_cpu_indicator_init$/;"	l
cglobal	../../source/common/x86/cpu-a.asm	/^cglobal stack_align$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct16, 3, 9, 16, 0-16*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct32, 3, 9, 16, 0-64*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct4, 3, 4, 8$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct4, 3, 4, 8, src, dst, srcStride$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct8, 3, 7, 11, 0-8*16$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct8, 3,6,7,0-16*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dct8, 3,6,8,0-16*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal denoise_dct, 4, 4, 6$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dst4, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dst4, 3, 4, 8$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dst4, 3, 4, 8+2$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal dst4, 3, 4, 8+4$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idct16, 3, 7, 16, 0-16*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idct32, 3, 6, 16, 0-32*64$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idct4, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idct8, 3, 6, 16, 0-5*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idct8, 3, 7, 13, 0-8*16$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idct8, 3,7,8 ;,0-16*mmsize$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idst4, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal idst4, 3, 4, 7$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal patial_butterfly_inverse_internal_pass1$/;"	l
cglobal	../../source/common/x86/dct8.asm	/^cglobal patial_butterfly_inverse_internal_pass2$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_11_25$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_12_24$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_13_23$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_14_22$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_15_21$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_16_20$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_17_19$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_3_33$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_4_32$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_5_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_6_30$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_7_29$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_8_28$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang16_mode_9_27$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_12_24_0_15$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_12_24_16_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_13_23_row_0_15$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_13_23_row_16_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_14_22_rows_0_15$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_14_22_rows_16_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_15_21_rows_0_15$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_15_21_rows_16_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_16_20_rows_0_15$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_16_20_rows_16_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_17_19_rows_0_15$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_4_32$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_5_31$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_6_30$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_7_29$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal ang32_mode_8_28$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_filter_16x16, 2,4,6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_filter_32x32, 2,4,6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_filter_4x4, 2,4,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_filter_4x4, 2,4,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_filter_8x8, 2,4,6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_10, 3,6,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_10, 3,6,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_11, 3,7,12, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_11, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_12, 3,7,14, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_12, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_13, 3,7,14, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_13, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_14, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_14, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_15, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_15, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_16, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_16, 3,7,8,0-(1*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_17, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_17, 3,7,8,0-(1*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_18, 3,5,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_19, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_19, 3,7,8,0-(1*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_2, 3,5,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_2, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_20, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_20, 3,7,8,0-(1*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_21, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_21, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_22, 3,7,15, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_22, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_23, 3,7,14, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_23, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_24, 3,7,14, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_24, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_25, 3,7,12$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_25, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_26, 3,6,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_27, 3,7,12$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_27, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_28, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_28, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_29, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_29, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_3, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_3, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_30, 3,7,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_30, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_31, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_31, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_32, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_32, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_33, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_33, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_4, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_4, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_5, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_5, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_6, 3,7,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_6, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_7, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_7, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_8, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_8, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_9, 3,7,12$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang16_9, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_10, 3,4,2$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_10, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_11, 3,6,7,0-(4*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_11, 3,8,12, 0-8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_12, 3,6,7,0-(4*mmsize+10)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_12, 3,8,14, 0-16$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_13, 3,6,7,0-(5*mmsize+2)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_13, 3,8,14, 0-mmsize$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_14, 3,6,7,0-(5*mmsize+10)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_14, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_15, 3,6,7,0-(6*mmsize+2)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_15, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_16, 3,6,7,0-(6*mmsize+10)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_16, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_17, 3,6,7,0-(7*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_17, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_18, 3,6,6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_18, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_19, 3,7,7,0-(7*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_19, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_2, 3,5,6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_2, 3,6,6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_20, 3,7,7,0-(6*mmsize+10)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_20, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_21, 3,7,7,0-(6*mmsize+2)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_21, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_22, 3,7,7,0-(5*mmsize+10)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_22, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_23, 3,7,14, 0-16$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_23, 3,7,7,0-(5*mmsize+2)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_24, 3,7,14, 0-16$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_24, 3,7,7,0-(4*mmsize+10)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_25, 3,7,12, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_25, 3,7,7,0-(4*mmsize+4)$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_26, 3,3,2$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_26, 3,7,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_27, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_27, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_28, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_28, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_29, 3,7,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_29, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_3, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_3, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_30, 3,7,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_30, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_31, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_31, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_32, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_32, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_33, 3,7,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_33, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_4, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_4, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_5, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_5, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_6, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_6, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_7, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_7, 3,8,14$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_8, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_8, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_9, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang32_9, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_10, 3,3,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_10, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_11, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_11, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_12, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_12, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_13, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_13, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_14, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_14, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_15, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_15, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_16, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_16, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_17, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_17, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_18, 3,3,1$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_2, 3,5,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_20, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_21, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_22, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_23, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_24, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_25, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_26, 3,3,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_26, 3,4,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_27, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_28, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_29, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_3, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_3, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_30, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_31, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_33, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_4, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_4, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_5, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_5, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_6, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_6, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_7, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_7, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_8, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_8, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_9, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang4_9, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_10, 3,6,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_11, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_12, 3,6,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_13, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_14, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_15, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_16, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_17, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_18, 3,4,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_19, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_2, 3,5,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_20, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_21, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_22, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_23, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_24, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_25, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_26, 3,6,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_27, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_28, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_29, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_3, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_30, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_31, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_32, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_33, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_4, 3,6,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_5, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_6, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_7, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_8, 3,6,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_ang8_9, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc16, 3, 9, 4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc16, 5, 10, 4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc16, 5, 7, 4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc32, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc32, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc32, 3,3,3$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc4, 5,6,2$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc8, 5, 7, 2$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_dc8, 5, 8, 2$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar16, 3,3,11$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar16, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar16, 3,3,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar16, 3,5,12$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar16, 3,5,13$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar32, 3,3,16$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar32, 3,3,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar32, 3,4,16$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar32, 3,7,16$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar32, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar4, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred16.asm	/^cglobal intra_pred_planar8, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang16_mode_3_33$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang16_mode_4_32$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang16_mode_5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang16_mode_6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang16_mode_7$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang16_mode_8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_3_33_row_0_15$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_4_32_row_0_15$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_4_32_row_16_31$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_5_31_row_0_15$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_5_31_row_16_31$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_6_30_row_0_15$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_6_30_row_16_31$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_7_29_row_0_15$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_7_29_row_16_31$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal ang32_mode_8_28_avx2$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_filter_16x16, 2,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_filter_32x32, 2,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_filter_4x4, 2,4,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_filter_4x4, 2,4,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_filter_8x8, 2,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_10, 5,6,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_11, 3,4,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_11, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_12, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_12, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_13, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_13, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_14, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_14, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_15, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_15, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_16, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_16, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_17, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_17, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_18, 4,5,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_19, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_2, 3,5,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_20, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_21, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_22, 3, 5, 7$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_22, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_23, 3, 5, 7$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_23, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_24, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_24, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_25, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_25, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_26, 3,8,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_26, 5,7,5,0-4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_27, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_27, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_28, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_28, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_29, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_29, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_3, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_3, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_30, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_30, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_31, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_31, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_32, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_32, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_33, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_33, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_4, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_4, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_5, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_5, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_6, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_6, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_7, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_7, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_8, 3, 7, 13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_8, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_9, 3,4,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang16_9, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_10, 5,5,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_10, 5,7,8,0-(2*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_11, 3,4,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_11, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_12, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_12, 3,7,8,0-(1*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_13, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_13, 3,7,8,0-(1*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_14, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_14, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_15, 3,4,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_15, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_16, 3,4,10$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_16, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_17, 3,4,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_17, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_18, 4, 4, 3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_18, 4,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_19, 3,5,10$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_19, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_2, 3, 4,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_2, 3,5,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_20, 3,5,10$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_20, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_21, 3,5,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_21, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_22, 3,5,9$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_22, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_23, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_23, 4,7,8,0-(1*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_24, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_24, 4,7,8,0-(1*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_25, 3,5,7$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_25, 4,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_26, 3, 4, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_26, 5,7,7,0-(2*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_27, 3,5,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_27, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_28, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_28, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_29, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_29, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_3, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_3, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_30, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_30, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_31, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_31, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_32, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_32, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_33, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_33, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_34, 3, 4,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_4, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_4, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_5, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_5, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_6, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_6, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_7, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_7, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_8, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_8, 3,8,13$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_9, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang32_9, 3,7,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_10, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_10, 3,5,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_11, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_11, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_11, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_12, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_12, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_13, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_13, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_13, 4,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_14, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_14, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_14, 4,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_15, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_15, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_15, 4,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_16, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_16, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_16, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_17, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_17, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_17, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_18, 3,4,2$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_18, 3,5,1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_19, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_19, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_2, 3,5,1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_2, 3,5,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_20, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_20, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_21, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_21, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_22, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_22, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_23, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_23, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_24, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_25, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_25, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_26, 3,4,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_26, 3,4,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_27, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_27, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_28, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_28, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_29, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_29, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_3, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_3, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_3, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_30, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_30, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_31, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_31, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_32, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_32, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_33, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_33, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_4, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_4, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_4, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_5, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_5, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_5, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_6, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_6, 3,3,4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_6, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_7, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_7, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_7, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_8, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_8, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_8, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_9, 3, 3, 1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_9, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang4_9, 3,5,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_10, 3,6,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_11, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_11, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_12, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_12, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_13, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_13, 4,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_14, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_14, 4,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_15, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_15, 4,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_16, 3,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_16, 4,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_17, 3,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_17, 4,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_18, 4,4,1$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_2, 3,5,2$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_20, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_20, 3,5,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_21, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_22, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_23, 3, 6, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_24, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_25, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_26, 3,6,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_27, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_28, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_29, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_3, 3,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_3, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_30, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_31, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_32, 3,4,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_33, 3,4,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_4, 3,4,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_4, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_5, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_5, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_6, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_6, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_7, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_7, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_8, 3, 4, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_8, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_9, 3, 5, 6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_ang8_9, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc16, 5, 10, 4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc16, 5, 7, 4$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc32, 3, 3, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc32, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc32, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc4, 5,5,3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_dc8, 5, 7, 3$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar16, 3,3,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar16, 3,3,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar16, 3,5,8$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar32, 3,3,16$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar32, 3,3,8,0-(4*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar32, 3,4,11$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar32, 3,4,12$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar32, 3,4,8,0-(4*mmsize)$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar4, 3,3,5$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar4, 3,3,7$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar8, 3,3,6$/;"	l
cglobal	../../source/common/x86/intrapred8.asm	/^cglobal intra_pred_planar8, 3,3,7$/;"	l
cglobal	../../source/common/x86/intrapred8_allangs.asm	/^cglobal all_angs_pred_16x16, 3,4,8$/;"	l
cglobal	../../source/common/x86/intrapred8_allangs.asm	/^cglobal all_angs_pred_32x32, 3,7,8, 0-4$/;"	l
cglobal	../../source/common/x86/intrapred8_allangs.asm	/^cglobal all_angs_pred_4x4, 2, 2, 6$/;"	l
cglobal	../../source/common/x86/intrapred8_allangs.asm	/^cglobal all_angs_pred_4x4, 4, 4, 8$/;"	l
cglobal	../../source/common/x86/intrapred8_allangs.asm	/^cglobal all_angs_pred_8x8, 3,4,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_12x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_16x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_24x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_32x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_48x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_64x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_6x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_pp_8x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_12x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_16x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_24x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_32x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_48x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_64x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_6x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_filter_ps_8x1_internal$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal chroma_p2s, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_%1x%2, 4, 6, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_12x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_16x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_24x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_24x%1, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_2x%1, 3, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_32x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_32x%1, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_48x64, 3, 7, 4$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_48x64, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_4x%1, 3, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_4x2, 3, 4, 1$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_64x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_64x%1, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_6x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_8x%1, 3, 7, 2$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_8x2, 3, 4, 2$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal filterPixelToShort_8x6, 3, 7, 4$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_%3_%1x%2, 4, %4, %5$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_%3_%1x%2, 4, %5, %6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_%3_%1x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_12x%1, 5,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_16x%1, 5,6,9$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_24x%1, 5,6,9$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_32x%1, 5,6,9$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_48x64, 5,6,9$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_64x%1, 5,6,9$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_6x%1, 5,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_8x%1, 5,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_8x2, 5,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_pp_8x4, 5,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_12x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_16x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_24x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_32x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_48x64, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_64x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_6x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_horiz_ps_8x%1, 4, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_48x64, 5, 7, %2$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_4x%2, 4, 8, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_4x2, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_4x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_4x8, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_8x%2, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_8x12, 4, 7, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_8x2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_8x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_8x6, 4, 6, 12$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%1_8x8, 4, 6, 12$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_12x%1, 5, 8, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_16x%1, 5, 6, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_24x%1, 5, 7, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_2x%1, 5, 6, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_32x%1, 5, 7, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_4x%1, 5, 6, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_64x%1, 5, 7, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_6x%1, 4, 7, 10$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%2_6x%1, 5, 7, %3$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%3_%1x%2, 5, 6, %4$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_4tap_vert_%3_%1x%2, 5, 7, %4 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_%3_%1x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_%1x%2, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_12x16, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_16x%1, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_24x32, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_48x64, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_4x%1, 4,7,7$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_pp_8x%1, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_ps_%1x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_ps_12x16, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_ps_16x%1, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_ps_24x32, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_ps_4x%1, 6,8,7$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_horiz_ps_8x%1, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_%2x%3, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_%2x16, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_%2x8, 4, 10, 13$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_12x16, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_16x12, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_16x4, 4, 7, 8, 0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_32x24, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_4x16, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_4x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_4x8, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_8x%2, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_8x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%1_8x8, 4, 6, 12$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 4, 12, 15$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_pp_%1x%2, 5, 7, 8 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_ps_%1x%2, 5, 7, 8 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_sp_%1x%2, 5, 7, 8 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter16.asm	/^cglobal interp_8tap_vert_ss_%1x%2, 5, 7, 7 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_%1x%2, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_12x%1, 3, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x%1, 3, 7, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x%1, 3, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x12, 3, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x16, 3, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x24, 3, 7, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x4, 3, 4, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_16x8, 3, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_24x%1, 3, 7, 4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_24x%1, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_2x%1, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_32x%1, 3, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_32x%1, 3, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_48x64, 3, 7, 4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_48x64, 3,7,4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_4x%1, 3, 6, 4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_4x2, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_64x%1, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_64x%1, 3, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_6x%1, 3, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_8x%1, 3, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_8x2, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal filterPixelToShort_8x6, 3, 7, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_%1x%2, 4, 6, 6, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_%1x%2, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_%1x%2, 4, 6, 7, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_%1x%2, 4, 6, 8, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_%1x%2, 4,6,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_%1x%2, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_12x16, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_12x32, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_16x16, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_24x32, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_24x64, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x%1, 4, 6, 6, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x16, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x16, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x4, 4, 6, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x4, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x8, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_2x8, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_32x32, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_48x64, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x%1, 4, 6, 8, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x16, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x2, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x2, 4,6,4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x32, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x4, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x4, 4,6,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_4x8, 4, 6, 5, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_64x%1, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_6x16, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_6x8, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_8x2, 4, 6, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_8x6, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_pp_8x8, 4,6,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_%1x%2, 4, 7, 4, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_%1x%2, 4, 7, 6, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_%1x%2, 4, 7, 7, src, srcstride, dst, dststride$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_%1x%2, 4,7,5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_%1x%2, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_16x16, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_24x32, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_24x64, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_2x16, 4, 7, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_2x4, 4, 7, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_2x8, 4, 7, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_32x32, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_48x64, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_4x2, 4,7,5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_4x4, 4,7,5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_64x%1, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_6x8, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_8x%1, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_horiz_ps_8x8, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_%2x%3, 4, 7, 11$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_%2x16, 4, 10, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_%2x24, 4, 10, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_%2x8, 4, 9, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_12x%2, 4, 6, 11$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_12x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_12x16, 4, 9, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_12x32, 4, 9, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x%2, 4, 6, 11$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x%2, 4, 8, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x12, 4, 6, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x12, 4, 9, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x16, 4, 6, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x24, 4, 6, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x4, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_16x8, 4, 7, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_24x%2, 4, 6, 11$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_24x32, 4, 9, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_24x64, 4, 7, 13$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x%2, 4, 6, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x16, 4, 6, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x16, 4, 6, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x4, 4, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x4, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x8, 4, 6, 2$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_2x8, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_32x%2, 4, 6, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_32x%2, 4, 7, 13$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_48x64, 4, 8, 13$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x%2, 4, 6, 12$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x%2, 4, 6, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x16, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x2, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x2, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x32, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x4, 4, 6, 3$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x8, 4, 6, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_4x8, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_64x%2, 4, 8, 13$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_6x%2, 4, 7, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_6x16, 4, 7, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_6x8, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_6x8, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x%2, 4, 6, 11$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x%2, 4, 7, 12$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x%2, 4, 7, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x12, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x12, 4, 7, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x16, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x2, 4, 6, 4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x2, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x4, 4, 6, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x6, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x6, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x8, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%1_8x8, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_%3_%1x%2, 4, 11, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_%1x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_%1x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_12x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_16x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_24x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_2x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_2x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_4x2, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_4x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_pp_6x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_%1x%2, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_%1x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_%1x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_12x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_24x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_2x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_2x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_4x2, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_4x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ps_6x%2, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_sp_%1x%2, 5, 6, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_sp_%1x%2, 5, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_sp_%1x%2, 5, 7, 7 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_sp_4x2, 5, 6, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_sp_6x%2, 5, 7, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ss_%1x%2, 5, 6, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ss_%1x%2, 5, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ss_%1x%2, 5, 7, 6 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ss_4x2, 5, 6, 4$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_4tap_vert_ss_6x%2, 5, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_%3_%1x%2, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_%3_%1x%2, 4,7,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_%1x%2, 4, 7, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_%1x%2, 4,6,7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_%1x%2, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_12x16, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_24x32, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_48x64, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_4x%1, 4, 6, 9$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_4x4, 4,6,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_pp_8x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_%1x%2, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_%1x%2, 6, 10, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_12x16, 6, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_24x32, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_48x64, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_4x%1, 6,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_64x%1, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_horiz_ps_8x%1, 4,7,6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_hv_pp_16x16, 4, 10, 15, 0-31*32$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_hv_pp_8x8, 4, 7, 8, 0-15*16$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_%2x16, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_%2x8, 4, 10, 12$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_12x16, 4, 7, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_12x16, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_16x12, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_16x12, 4, 7, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_16x16, 4, 7, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_16x4, 4, 6, 13$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_16x4, 4, 7, 8, 0 - gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_16x8, 4, 6, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_24x32, 4, 11, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_32x16, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_32x24, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_32x8, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_48x64, 4, 12, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_4x16, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_4x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_4x8, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_64x16, 4, 10, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_8x%2, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_8x4, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_8x4, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_8x8, 4, 6, 12$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%1_8x8, 4, 6, 7$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 4, 12, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 4, 7, 8, 0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 4, 9, 10$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 5, 7, 6$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 5, 7, 8 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_%3_%1x%2, 5, 8, 11$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_pp_4x4, 4,6,8$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_ps_4x4, 4, 6, 5$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_sp_%1x%2, 5, 7, 8 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/ipfilter8.asm	/^cglobal interp_8tap_vert_ss_%1x%2, 5, 7, 7 ,0-gprsize$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal calSign, 4, 5, 6$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal calSign, 4, 7, 5$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal calSign, 4,5,6$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal pelFilterChroma_H, 6,6,5$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal pelFilterChroma_V, 6,6,5$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal pelFilterLumaStrong_H, 5,7,10$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal pelFilterLumaStrong_V, 5,5,10$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgB0, 4, 7, 8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgB0, 5,7,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE0, 4,4,9$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE0, 4,5,9$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE0, 5, 5, 7, rec, offsetEo, lcuWidth, signLeft, stride$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE0, 5, 5, 8, rec, offsetEo, lcuWidth, signLeft, stride$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1, 3, 5, 8, pRec, m_iUpBuff1, m_iOffsetEo, iStride, iLcuWidth$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1, 4,5,6$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1, 4,5,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1_2Rows, 3, 5, 7, pRec, m_iUpBuff1, m_iOffsetEo, iStride, iLcuWidth$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1_2Rows, 3, 5, 8, pRec, m_iUpBuff1, m_iOffsetEo, iStride, iLcuWidth$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1_2Rows, 4,5,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE1_2Rows, 4,7,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE2, 5, 6, 7, rec, bufft, buff1, offsetEo, lcuWidth$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE2, 5, 6, 8, rec, bufft, buff1, offsetEo, lcuWidth$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE2, 6,6,7$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE2, 6,6,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE2_32, 5, 6, 8, rec, bufft, buff1, offsetEo, lcuWidth$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE2_32, 6,6,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE3, 3, 6, 8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE3, 3,6,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE3, 4,6,6$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE3, 4,6,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE3_32, 3, 6, 8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuOrgE3_32, 3,6,8$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsBO, 7,13,2$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE0, 3,10,6, 0-32$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE0, 3,10,8, 0-32$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE0, 3,11,16$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE1, 4,12,8,0-32    ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE1, 4,13,16       ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE2, 5,10,16                        ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE2, 5,9,7,0-32    ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE2, 5,9,8,0-32    ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE3, 4,10,16           ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/loopfilter.asm	/^cglobal saoCuStatsE3, 4,9,8,0-32    ; Stack: 5 of stats and 5 of count$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_%1x%2, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_%1x%2, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_12x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_12x%1, 6,7,7, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_12x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_12x16, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_12x32, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_16x%1, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_16x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_16x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_24x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_24x32, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_24x64, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_2x16, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_2x16, 6,7,8, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_2x4, 6,6,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_2x4, 6,6,8, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_2x8, 6,6,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_2x8, 6,6,8, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_32x%1, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_32x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_32x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_48x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_48x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_48x64, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_4x%1, 6,7,4, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_4x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_4x2, 6,6,4, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_4x2, 6,6,7, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_64x%1, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_64x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_64x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_6x16, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_6x16, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_6x8, 6,6,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_6x8, 6,6,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x%1, 6,7,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x%1, 6,7,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x%1, 6,7,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x2, 6,6,2, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x2, 6,6,4, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x2, 6,6,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x2, 6,6,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x6, 6,6,6, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x6, 6,6,6, pSrc0, src0, src1, dst, src0Stride, src1tride, dstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal addAvg_8x6, 6,6,8, pSrc0, pSrc1, pDst, iStride0, iStride1, iDstStride$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal mc_copy_w%1, 5,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal mc_copy_w4_mmx, 4,6$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal mc_offset%2_w%1, 6,6$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal mc_weight_w%1, 6,6,8$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w%1, 6,7,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w%1, 6,7,8$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w%1_cache%2_%3$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w%1_mmx2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w10_mmx2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w16_cache64_ssse3$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w16_mmx2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w16_sse2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w18, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w18_mmx2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w20, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w20_mmx2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg2_w20_sse2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_%1x%2$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_12x16, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x12, 6,9,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x16, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x32, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x4, 6,9,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x64, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x64_8bit$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_16x8, 6,9,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_24x32, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x16, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x16, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x24, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x24, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x32, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x32, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x64, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x64, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x8, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_32x8, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_48x64, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_48x64, 6,7,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x16, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x16, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x32, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x32, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x48, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x48, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x64, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_64x64, 6,6,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_8x16, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_8x32$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_8x32, 6,10,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_8x4, 6,9,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_8x8, 6,9,4$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_w%1$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_w8_unaligned$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_weight_w%1$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_weight_w16$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_weight_w32$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal pixel_avg_weight_w64$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal prefetch_fenc_%1, 0,3$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal prefetch_fenc_%1, 5,5$/;"	l
cglobal	../../source/common/x86/mc-a.asm	/^cglobal prefetch_ref, 3,3$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal cutree_fix8_pack, 3, 4, 5$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal cutree_fix8_unpack, 3, 4, 7$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal frame_init_lowres_core, 6,7,(12-4*(BIT_DEPTH\/9)) ; 8 for HIGH_BIT_DEPTH, 12 otherwise$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal integral_init4h, 3,4$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal integral_init4v, 3,5$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal integral_init8h, 3,4$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal integral_init8v, 3,3$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal load_deinterleave_chroma_fdec, 4,4$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal load_deinterleave_chroma_fenc, 4,4$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal mbtree_propagate_cost, 7,7,7$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal memcpy_aligned, 3,3$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal memzero_aligned, 2,2$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal plane_copy_core_mmx2, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal plane_copy_deinterleave, 6,7$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal plane_copy_interleave_core, 6,9$/;"	l
cglobal	../../source/common/x86/mc-a2.asm	/^cglobal store_interleave_chroma, 5,5$/;"	l
cglobal	../../source/common/x86/pixel-32.asm	/^cglobal intra_sa8d_x3_8x8, 2,3$/;"	l
cglobal	../../source/common/x86/pixel-32.asm	/^cglobal pixel_sa8d_8x8_internal$/;"	l
cglobal	../../source/common/x86/pixel-32.asm	/^cglobal pixel_ssim_4x4x2_core, 0,5$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal calc_satd_16x4    ; function to compute satd cost for 16 columns, 4 rows$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal calc_satd_16x8    ; function to compute satd cost for 16 columns, 8 rows$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal downShift_16, 4,7,3$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x16, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x16, 4,7$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x16, 4,8,11$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x16, 4,8,12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x16_internal$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x32, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x32, 4,8,12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x32, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x64, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x64, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x8, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_16x8, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_24x32, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_24x32, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x16, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x16, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x24, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x24, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x32, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x32, 4,8,12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x32, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x32, 4,8,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x32, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x64, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x64, 4,8,12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x64, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x8, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_32x8, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_48x64, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_48x64, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x16, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x16, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x32, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x32, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x48, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x48, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x64, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x64, 4,8,12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_64x64, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x16, 4,7,11$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x16, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x16, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x32, 4,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x32, 4,8,13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x8, 4,6,10$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x8, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x8, 4,7$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x8, 4,8,12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x8_internal$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_sa8d_8x8_internal2$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_12x16, 4,7,8,0-gprsize$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_12x16, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_12x32, 4,7,8,0-gprsize$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_12x32, 4,8,8   ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x12, 4,6,10        ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x12, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x12, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x16, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x16, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x24, 4,7,8,0-gprsize    ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x24, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x32, 4,6,10        ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x32, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x32, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x4, 4,6,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x4, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x4, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x4_internal2$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x64, 4,6,10        ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x64, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x64, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x8, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x8, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_16x8_internal$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_24x32, 4,7,8,0-gprsize$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_24x32, 4,8,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_24x64, 4,7,8,0-gprsize    ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_24x64, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x16, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x16, 4,8,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x16, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x16, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x16, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x24, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x24, 4,8,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x24, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x24, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x24, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x32, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x32, 4,8,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x32, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x32, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x32, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x48, 4,7,8,0-gprsize    ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x48, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x64, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x64, 4,8,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x64, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x64, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x64, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x8, 4,7,8,0-gprsize    ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x8, 4,8,10          ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x8, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x8, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_32x8, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_48x64, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_48x64, 4,8,10        ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_48x64, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_48x64, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_48x64, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_4x16, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_4x32, 4,7,8,0-gprsize$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_4x32, 4,8,8   ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_4x4, 4, 6, 6$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_4x4, 4,6$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_4x8, 4, 6, 8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x16, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x16, 4,8,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x16, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x16, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x16, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x32, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x32, 4,8,10         ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x32, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x32, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x32, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x48, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x48, 4,8,10        ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x48, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x48, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x48, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x64, 4,7,8,0-gprsize   ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x64, 4,8,10        ; if WIN64 && cpuflag(avx2)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x64, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x64, 4,8,14    ;if WIN64 && notcpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_64x64, 4,8,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x12, 4,7,8,0-gprsize    ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x12, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x16, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x16, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x32, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x32, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x4, 4,6,14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x4, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x64, 4,7,8,0-gprsize    ;if !WIN64$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x64, 4,8,14    ;if WIN64 && cpuflag(avx)$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x8, 4,4,7$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x8, 4,6,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x8_internal$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal pixel_satd_8x8_internal2$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal planeClipAndMax, 5,7,8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_16x16, 4, 10, 12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_16x16, 4, 10, 13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_16x16, 4, 10, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_16x16, 4, 9, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_16x16, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_32x32, 4, 10, 12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_32x32, 4, 10, 13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_32x32, 4, 10, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_32x32, 4, 9, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_32x32, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_4x4, 4, 5, 6$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_4x4, 4, 5, 8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_64x64, 4, 10, 12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_64x64, 4, 10, 13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_64x64, 4, 10, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_64x64, 4, 9, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_64x64, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_8x8, 4, 6, 13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_8x8, 4, 8, 11$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_8x8, 4, 8, 12$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_pp_8x8, 4, 8, 13$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_16x16, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_16x16, 4, 9, 16$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_32x32, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_32x32, 4, 9, 16$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_4x4, 4, 5, 8$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_64x64, 4, 9, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_64x64, 4, 9, 16$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_8x8, 4, 6, 15$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal psyCost_ss_8x8, 4, 7, 14$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal sa8d_8x8_12bit$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal upShift_16, 4,7,4$/;"	l
cglobal	../../source/common/x86/pixel-a.asm	/^cglobal upShift_8, 6,7,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal costC1C2Flag, 4,12,2$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal costCoeffNxN, 6,10,5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal costCoeffNxN, 6,11,6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal costCoeffRemain, 0,7,1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal count_nonzero_16x16, 1,1,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal count_nonzero_32x32, 1,1,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal count_nonzero_4x4, 1,1,2$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal count_nonzero_8x8, 1,1,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal dequant_normal, 5,5,5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal dequant_normal, 5,5,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal dequant_scaling, 6,6,6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal findPosFirstLast, 3,3,4$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual16, 4,4,5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual16, 4,5,6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual16, 4,5,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual32, 4,4,5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual32, 4,5,6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual32, 4,5,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual32, 4,5,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual4, 4,4,4$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual4, 4,4,5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual8, 4,4,4$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal getResidual8, 4,4,5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal nquant, 3,5,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal nquant, 3,5,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_ssim_4x4x2_core, 4,4,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_ssim_end4, 2,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_16x%1, 6, 9, 4, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_16x%2, 6, 10, 4, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_16x%2, 6, 7, 7, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_16x%2, 6, 7, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_32x%1, 6, 10, 4, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_32x%2, 6, 10, 4, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_32x%2, 6, 7, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_4x%2, 6, 7, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_4x4, 6, 6, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_64x%2, 6, 7, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_64x64, 6, 10, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_64x64, 6, 7, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_sub_ps_8x%2, 6, 7, 8, dest, deststride, src0, src1, srcstride0, srcstride1$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_16x16, 2,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_16x16, 2,3,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_16x16, 2,4,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_16x16_internal$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_32x32, 2,4,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_32x32, 2,4,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_32x32, 2,6,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_64x64, 2,4,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_64x64, 2,6,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_8x8, 2,3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal pixel_var_8x8, 2,3,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal quant, 5,6,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal quant, 5,6,9$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scale1D_128to64, 2, 2, 3$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scale1D_128to64, 2, 2, 4$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scale1D_128to64, 2, 2, 8, dest, src1, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scale2D_64to32, 3, 4, 5, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scale2D_64to32, 3, 4, 8, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scale2D_64to32, 3, 5, 8, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scanPosLast, 7,11,6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal scanPosLast_x64, 5,12$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16, 3, 4, 9$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16, 3, 5, 8, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16, 3, 5, 9$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16, 3, 7, 4, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16_internal$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16x32_avx2$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose16x8_internal$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose32, 3, 4, 16$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose32, 3, 5, 16$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose32, 3, 7, 4, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose32, 3, 7, 8, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose4, 3, 3, 4, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose64, 3, 6, 16$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose64, 3, 7, 4, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose64, 3, 7, 8, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8, 3, 4, 4$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8, 3, 5, 5$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8, 3, 5, 8, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8, 3, 6, 4, dest, src, stride$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8_internal$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8x32_64_internal$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal transpose8x32_internal$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_pp, 4,7,7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_pp, 6, 7, 6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_pp, 6, 7, 7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_pp, 6,7,6$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_sp, 6, 7+2, 7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_sp, 6, 7, 7, 0-(2*4)$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_sp, 6, 9, 7$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_sp, 6,7,8$/;"	l
cglobal	../../source/common/x86/pixel-util8.asm	/^cglobal weight_sp, 6,7,9$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_16x%1, 6, 10, 4, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_16x%1, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_16x%2, 6, 7, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_16x%2, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_32x%1, 6, 10, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_32x%1, 6, 10, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_32x%2, 6, 7, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_32x%2, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_4x%2, 6, 7, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_4x%2, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_4x4, 6, 6, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_4x4, 6, 6, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_64x%2, 6, 7, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_64x%2, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_64x64, 6, 10, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_64x64, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_8x%2, 6, 7, 6, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/pixeladd8.asm	/^cglobal pixel_add_ps_8x%2, 6, 7, 8, dest, destride, src0, scr1, srcStride0, srcStride1$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_%1x%2_mmx2, 4,4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_12x16, 4,4,4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x%1_cache%2_mmx2$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x%2_cache64_%1$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x12, 4,4,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x16, 4,4,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x32, 4,5,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x4, 4,4,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x64, 4,5,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_16x8, 4,4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_24x32, 4,5,4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x16, 4,4,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x16, 4,5,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x24, 4,5,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x24, 4,7,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x32, 4,5,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x32, 4,7,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x64, 4,5,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x64, 4,7,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x8, 4,4,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_32x8, 4,4,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_48x64, 4,5,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_48x64, 4,7,7$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x16, 4,4,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x16, 4,5,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x32, 4,5,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x32, 4,5,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x48, 4,5,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x48, 4,7,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x64, 4,5,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_64x64, 4,7,6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_8x%1_cache%2_mmx2$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_8x16_sse2, 4,4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_8x32, 4,5,3$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x%1_%2x%3, 2+%1,3+%1,%4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x%1_%2x%3_mmx2, %1+2, %1+2$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_%1x%2_cache%3_%6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_12x16, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_24x32, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x16, 5, 6, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x16, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x24, 5, 6, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x24, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x32, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x32, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x64, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x64, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x8, 5, 6, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_32x8, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_48x64, 5, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_48x64, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x16, 5, 7, 7$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x16, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x32, 5, 7, 7$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x32, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x48, 5, 7, 7$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x48, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x64, 5, 7, 7$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_64x64, 6,7,8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_8x16, 6,6,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_8x4, 6,6,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x3_8x8, 6,6,5$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_%1x%2_cache%3_%6$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_12x16, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_24x32, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_24x32, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x16, 6, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x24, 6, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x32, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x32, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x64, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x64, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_32x8, 6, 7, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_48x64, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_48x64, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_48x64, 7,8,10$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x16, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x16, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x16, 7,8,10$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x32, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x32, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x32, 7,8,10$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x48, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x48, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x48, 7,8,10$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x64, 6, 7, 8, 0-4$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x64, 6, 8, 8$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_64x64, 7,8,10$/;"	l
cglobal	../../source/common/x86/sad-a.asm	/^cglobal pixel_sad_x4_8x8, 7,7,5$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_%1x%2, 4,5,8$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_%1x%2, 4,5-(%2&4\/4)$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_%1x64, 4,5, 8$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_16x64, 4,5,5$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_32x16, 4,7,7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_32x24, 4,7,7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_32x32, 4,7,7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_32x64, 4,7,7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_32x8, 4,7,7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_48x64, 4, 5, 7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_64x16, 4, 5, 7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_64x32, 4, 5, 7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_64x48, 4, 5, 7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_64x64, 4, 5, 7$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_sad_x%1_%2x%3, 6,7,XMM_REGS$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_vsad, 3,3$/;"	l
cglobal	../../source/common/x86/sad16-a.asm	/^cglobal pixel_vsad, 3,3,8$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral12h, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral12v, 2, 4, 2$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral16h, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral16h, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral16v, 2, 3, 2$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral24h, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral24v, 2, 4, 2$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral32h, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral32v, 2, 3, 2$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral4h, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral4v, 2, 3, 2$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral8h, 3, 4, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral8h, 3, 5, 3$/;"	l
cglobal	../../source/common/x86/seaintegral.asm	/^cglobal integral8v, 2, 3, 2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_%1x%2, 0,0,0$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_12x16, 4, 5, 7, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_16x16, 4,7,3$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_16x16_internal$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_24x32, 4, 5, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_32x2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_32x32, 4,5,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_48x64, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_64x16, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_64x32, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_64x48, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_64x64, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_64x64, 4,5,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_s_16, 2,3,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_s_16, 2,4,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_s_32, 2,3,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_s_32, 2,4,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_s_4, 2,2,2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_s_8, 2,3,5$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_12x16, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x12, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x16, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x16_internal$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x32, 4, 5, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x4, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x64, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_16x8, 4, 4, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_24x32, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_32x16, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_32x24, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_32x32, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_32x64, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_32x8, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_48x64, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_4x16, 4, 5, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_4x4, 4, 5, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_4x4_internal$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_4x8, 4, 5, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_64x16, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_64x32, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_64x48, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_64x64, 4, 7, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_8x16, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_8x32, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_8x4, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_8x4_internal$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_sp_8x8, 4, 6, 8, src1, stride1, src2, stride2$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_%1x%2, 4,7,6$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_%1x%2, 4,7,8$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_12x16, 4,7,6$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_16x16, 4,6,4$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_24x32, 4,7,6$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_32x%1, 4,7,6$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_32x32, 4,5,4$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_32x32, 4,5,8$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_32x64, 4,7,10$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_48x64, 4,7,6$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_64x%1, 4,7,6$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_64x64, 4,5,4$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal pixel_ssd_ss_64x64, 4,6,8$/;"	l
cglobal	../../source/common/x86/ssd-a.asm	/^cglobal ssd_ss_32x16$/;"	l
ch_shuf	../../source/common/x86/mc-a.asm	/^ch_shuf: times 2 db 0,2,2,4,4,6,6,8,1,3,3,5,5,7,7,9$/;"	l
ch_shuf_adj	../../source/common/x86/mc-a.asm	/^ch_shuf_adj: times 8 db 0$/;"	l
charMemBlock	../../source/common/cudata.h	/^    uint8_t* charMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
checkAndResetABR	../../source/encoder/ratecontrol.cpp	/^void RateControl::checkAndResetABR(RateControlEntry* rce, bool isFrameDone)$/;"	f	class:RateControl	signature:(RateControlEntry* rce, bool isFrameDone)
checkAndResetABR	../../source/encoder/ratecontrol.h	/^    void   checkAndResetABR(RateControlEntry* rce, bool isFrameDone);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(RateControlEntry* rce, bool isFrameDone)
checkBestMVP	../../source/encoder/search.cpp	/^const MV& Search::checkBestMVP(const MV* amvpCand, const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const$/;"	f	class:Search	signature:(const MV* amvpCand, const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const
checkBestMVP	../../source/encoder/search.h	/^    const MV& checkBestMVP(const MV amvpCand[2], const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const;$/;"	p	class:X265_NS::Search	access:protected	signature:(const MV amvpCand[2], const MV& mv, int& mvpIdx, uint32_t& outBits, uint32_t& outCost) const
checkBestMode	../../source/encoder/analysis.h	/^    inline void checkBestMode(Mode& mode, uint32_t depth)$/;"	f	class:X265_NS::Analysis	access:protected	signature:(Mode& mode, uint32_t depth)
checkBidir2Nx2N	../../source/encoder/analysis.cpp	/^void Analysis::checkBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom)
checkBidir2Nx2N	../../source/encoder/analysis.h	/^    void checkBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom)
checkDQP	../../source/encoder/search.cpp	/^void Search::checkDQP(Mode& mode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom)
checkDQP	../../source/encoder/search.h	/^    void checkDQP(Mode& mode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom)
checkDefaultScalingList	../../source/common/scalinglist.cpp	/^bool ScalingList::checkDefaultScalingList() const$/;"	f	class:X265_NS::ScalingList	signature:() const
checkDefaultScalingList	../../source/common/scalinglist.h	/^    bool     checkDefaultScalingList() const;$/;"	p	class:X265_NS::ScalingList	access:protected	signature:() const
checkInter_rd0_4	../../source/encoder/analysis.cpp	/^void Analysis::checkInter_rd0_4(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])$/;"	f	class:Analysis	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])
checkInter_rd0_4	../../source/encoder/analysis.h	/^    void checkInter_rd0_4(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2]);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2])
checkInter_rd5_6	../../source/encoder/analysis.cpp	/^void Analysis::checkInter_rd5_6(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])$/;"	f	class:Analysis	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refMask[2])
checkInter_rd5_6	../../source/encoder/analysis.h	/^    void checkInter_rd5_6(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2]);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& interMode, const CUGeom& cuGeom, PartSize partSize, uint32_t refmask[2])
checkIntra	../../source/encoder/search.cpp	/^void Search::checkIntra(Mode& intraMode, const CUGeom& cuGeom, PartSize partSize)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom, PartSize partSize)
checkIntra	../../source/encoder/search.h	/^    void     checkIntra(Mode& intraMode, const CUGeom& cuGeom, PartSize partSizes);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom, PartSize partSizes)
checkIntraInInter	../../source/encoder/search.cpp	/^void Search::checkIntraInInter(Mode& intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom)
checkIntraInInter	../../source/encoder/search.h	/^    void     checkIntraInInter(Mode& intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom)
checkLookaheadQueue	../../source/encoder/slicetype.cpp	/^void Lookahead::checkLookaheadQueue(int &frameCnt)$/;"	f	class:Lookahead	signature:(int &frameCnt)
checkLookaheadQueue	../../source/encoder/slicetype.h	/^    void    checkLookaheadQueue(int &frameCnt);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(int &frameCnt)
checkMerge2Nx2N_rd0_4	../../source/encoder/analysis.cpp	/^void Analysis::checkMerge2Nx2N_rd0_4(Mode& skip, Mode& merge, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
checkMerge2Nx2N_rd0_4	../../source/encoder/analysis.h	/^    void checkMerge2Nx2N_rd0_4(Mode& skip, Mode& merge, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
checkMerge2Nx2N_rd5_6	../../source/encoder/analysis.cpp	/^void Analysis::checkMerge2Nx2N_rd5_6(Mode& skip, Mode& merge, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
checkMerge2Nx2N_rd5_6	../../source/encoder/analysis.h	/^    void checkMerge2Nx2N_rd5_6(Mode& skip, Mode& merge, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& skip, Mode& merge, const CUGeom& cuGeom)
checkPredMode	../../source/common/scalinglist.cpp	/^int ScalingList::checkPredMode(int size, int list) const$/;"	f	class:X265_NS::ScalingList	signature:(int size, int list) const
checkPredMode	../../source/common/scalinglist.h	/^    int      checkPredMode(int sizeId, int listId) const;$/;"	p	class:X265_NS::ScalingList	access:public	signature:(int sizeId, int listId) const
checkRange	../../source/common/mv.h	/^    bool checkRange(const MV& _min, const MV& _max) const$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& _min, const MV& _max) const
checksumFinish	../../source/common/picyuv.cpp	/^void checksumFinish(uint32_t checksum, uint8_t digest[16])$/;"	f	namespace:X265_NS	signature:(uint32_t checksum, uint8_t digest[16])
checksumFinish	../../source/common/picyuv.h	/^void checksumFinish(uint32_t checksum, uint8_t digest[16]);$/;"	p	namespace:X265_NS	signature:(uint32_t checksum, uint8_t digest[16])
childOffset	../../source/common/cudata.h	/^    uint32_t childOffset;   \/\/ offset of the first child CU from current CU$/;"	m	struct:X265_NS::CUGeom	access:public
chroma	../../source/common/primitives.h	/^    chroma[X265_CSP_COUNT];$/;"	m	struct:X265_NS::EncoderPrimitives	typeref:struct:X265_NS::EncoderPrimitives::Chroma	access:public
chromaDistortion	../../source/common/framedata.h	/^    uint64_t    chromaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
chromaDistortion	../../source/encoder/search.h	/^    sse_t   chromaDistortion;$/;"	m	struct:X265_NS::Mode	access:public
chromaFormatConstraint	../../source/common/slice.h	/^    int      chromaFormatConstraint;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
chromaFormatIdc	../../source/common/slice.h	/^    int      chromaFormatIdc;        \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
chromaLocInfoPresentFlag	../../source/common/slice.h	/^    bool       chromaLocInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
chromaModes	../../source/common/framedata.h	/^    uint8_t*  chromaModes;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
chromaQpOffset	../../source/common/slice.h	/^    int      chromaQpOffset[2];      \/\/ use param$/;"	m	struct:X265_NS::PPS	access:public
chromaSampleLocTypeBottomField	../../source/common/slice.h	/^    int        chromaSampleLocTypeBottomField;$/;"	m	struct:X265_NS::VUI	access:public
chromaSampleLocTypeTopField	../../source/common/slice.h	/^    int        chromaSampleLocTypeTopField;$/;"	m	struct:X265_NS::VUI	access:public
chromaSatd	../../source/encoder/motion.h	/^    pixelcmp_t chromaSatd;$/;"	m	class:X265_NS::MotionEstimate	access:protected
chromaStride	../../source/common/lowres.h	/^    intptr_t chromaStride;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
cim	../../source/encoder/encoder.h	/^    uint8_t                 **cim;$/;"	m	class:X265_NS::Encoder	access:public
cim	../../source/encoder/sei.h	/^    uint8_t *cim;$/;"	m	class:X265_NS::SEICreativeIntentMeta	access:public
clear	../../source/common/shortyuv.cpp	/^void ShortYuv::clear()$/;"	f	class:ShortYuv	signature:()
clear	../../source/common/shortyuv.h	/^    void clear();$/;"	p	class:X265_NS::ShortYuv	access:public	signature:()
clear	../../source/encoder/search.h	/^    void clear()$/;"	f	struct:X265_NS::CUStats	access:public	signature:()
clearCbf	../../source/common/cudata.h	/^    void     clearCbf()                            { m_partSet(m_cbf[0], 0); if (m_chromaFormat != X265_CSP_I400) { m_partSet(m_cbf[1], 0); m_partSet(m_cbf[2], 0);} }$/;"	f	class:X265_NS::CUData	access:public	signature:()
clearEnabledRowMask	../../source/common/wavefront.cpp	/^void WaveFront::clearEnabledRowMask()$/;"	f	class:X265_NS::WaveFront	signature:()
clearEnabledRowMask	../../source/common/wavefront.h	/^    void clearEnabledRowMask();$/;"	p	class:X265_NS::WaveFront	access:public	signature:()
clipMv	../../source/common/cudata.cpp	/^void CUData::clipMv(MV& outMV) const$/;"	f	class:CUData	signature:(MV& outMV) const
clipMv	../../source/common/cudata.h	/^    void     clipMv(MV& outMV) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(MV& outMV) const
clipQscale	../../source/encoder/ratecontrol.cpp	/^double RateControl::clipQscale(Frame* curFrame, RateControlEntry* rce, double q)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce, double q)
clipQscale	../../source/encoder/ratecontrol.h	/^    double clipQscale(Frame* pic, RateControlEntry* rce, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame* pic, RateControlEntry* rce, double q)
clipped	../../source/common/mv.h	/^    MV clipped(const MV& _min, const MV& _max) const$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& _min, const MV& _max) const
clippedDuration	../../source/encoder/ratecontrol.h	/^    double  clippedDuration;$/;"	m	struct:X265_NS::RateControlEntry	access:public
closeFile	../../source/output/output.h	/^    virtual void closeFile(int64_t largest_pts, int64_t second_largest_pts) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(int64_t largest_pts, int64_t second_largest_pts)
closeFile	../../source/output/raw.cpp	/^void RAWOutput::closeFile(int64_t, int64_t)$/;"	f	class:RAWOutput	signature:(int64_t, int64_t)
closeFile	../../source/output/raw.h	/^    void closeFile(int64_t largest_pts, int64_t second_largest_pts);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(int64_t largest_pts, int64_t second_largest_pts)
cnt4x4	../../source/common/framedata.h	/^    uint64_t    cnt4x4;$/;"	m	struct:X265_NS::FrameStats	access:public
cntAmp	../../source/common/framedata.h	/^    uint64_t    cntAmp[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntDQPForSplitPred	../../source/encoder/search.cpp	/^uint32_t Search::cntDQPForSplitPred(Mode& mode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom)
cntDQPForSplitPred	../../source/encoder/search.h	/^    uint32_t cntDQPForSplitPred(Mode& mode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom)
cntInter	../../source/common/framedata.h	/^    uint64_t    cntInter[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntInter	../../source/encoder/frameencoder.h	/^    uint64_t cntInter[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
cntInterPu	../../source/common/framedata.h	/^    uint64_t    cntInterPu[NUM_CU_DEPTH][INTER_MODES - 1];$/;"	m	struct:X265_NS::FrameStats	access:public
cntIntra	../../source/common/framedata.h	/^    uint64_t    cntIntra[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntIntra	../../source/encoder/frameencoder.h	/^    uint64_t cntIntra[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
cntIntraNxN	../../source/common/framedata.h	/^    uint64_t    cntIntraNxN;$/;"	m	struct:X265_NS::FrameStats	access:public
cntIntraNxN	../../source/encoder/frameencoder.h	/^    uint64_t cntIntraNxN;$/;"	m	struct:X265_NS::StatisticLog	access:public
cntIntraPu	../../source/common/framedata.h	/^    uint64_t    cntIntraPu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntMergeCu	../../source/common/framedata.h	/^    uint64_t    cntMergeCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntMergePu	../../source/common/framedata.h	/^    uint64_t    cntMergePu[NUM_CU_DEPTH][INTER_MODES - 1];$/;"	m	struct:X265_NS::FrameStats	access:public
cntSkipCu	../../source/common/framedata.h	/^    uint64_t    cntSkipCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntSkipCu	../../source/encoder/frameencoder.h	/^    uint64_t cntSkipCu[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
cntSkipPu	../../source/common/framedata.h	/^    uint64_t    cntSkipPu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
cntTotalCu	../../source/encoder/frameencoder.h	/^    uint64_t cntTotalCu[4];$/;"	m	struct:X265_NS::StatisticLog	access:public
codeAUD	../../source/encoder/entropy.cpp	/^void Entropy::codeAUD(const Slice& slice)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice)
codeAUD	../../source/encoder/entropy.h	/^    void codeAUD(const Slice& slice);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Slice& slice)
codeCUTransquantBypassFlag	../../source/encoder/entropy.h	/^    inline void codeCUTransquantBypassFlag(uint32_t symbol)               { encodeBin(symbol, m_contextState[OFF_TQUANT_BYPASS_FLAG_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t symbol)
codeCoeff	../../source/encoder/entropy.cpp	/^void Entropy::codeCoeff(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2])$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2])
codeCoeff	../../source/encoder/entropy.h	/^    void codeCoeff(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, bool& bCodeDQP, const uint32_t depthRange[2])
codeCoeffNxN	../../source/encoder/entropy.cpp	/^void Entropy::codeCoeffNxN(const CUData& cu, const coeff_t* coeff, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, const coeff_t* coeff, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype)
codeCoeffNxN	../../source/encoder/entropy.h	/^    void codeCoeffNxN(const CUData& cu, const coeff_t* coef, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, const coeff_t* coef, uint32_t absPartIdx, uint32_t log2TrSize, TextType ttype)
codeCoeffQTChroma	../../source/encoder/search.cpp	/^void Search::codeCoeffQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype)$/;"	f	class:Search	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype)
codeCoeffQTChroma	../../source/encoder/search.h	/^    void     codeCoeffQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype);$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx, TextType ttype)
codeDeltaQP	../../source/encoder/entropy.cpp	/^void Entropy::codeDeltaQP(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
codeDeltaQP	../../source/encoder/entropy.h	/^    void codeDeltaQP(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
codeHrdParameters	../../source/encoder/entropy.cpp	/^void Entropy::codeHrdParameters(const HRDInfo& hrd, int maxSubTLayers)$/;"	f	class:X265_NS::Entropy	signature:(const HRDInfo& hrd, int maxSubTLayers)
codeHrdParameters	../../source/encoder/entropy.h	/^    void codeHrdParameters(const HRDInfo& hrd, int maxSubTLayers);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const HRDInfo& hrd, int maxSubTLayers)
codeInterDir	../../source/encoder/entropy.cpp	/^void Entropy::codeInterDir(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
codeInterDir	../../source/encoder/entropy.h	/^    void codeInterDir(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx)
codeInterSubdivCbfQT	../../source/encoder/search.cpp	/^void Search::codeInterSubdivCbfQT(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2])
codeInterSubdivCbfQT	../../source/encoder/search.h	/^    void     codeInterSubdivCbfQT(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, uint32_t absPartIdx, const uint32_t tuDepth, const uint32_t depthRange[2])
codeIntraChromaQt	../../source/encoder/search.cpp	/^void Search::codeIntraChromaQt(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)
codeIntraChromaQt	../../source/encoder/search.h	/^    void     codeIntraChromaQt(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)
codeIntraChromaTSkip	../../source/encoder/search.cpp	/^void Search::codeIntraChromaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost)
codeIntraChromaTSkip	../../source/encoder/search.h	/^    void     codeIntraChromaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t tuDepthC, uint32_t absPartIdx, Cost& outCost)
codeIntraDirChroma	../../source/encoder/entropy.cpp	/^void Entropy::codeIntraDirChroma(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode)
codeIntraDirChroma	../../source/encoder/entropy.h	/^    void codeIntraDirChroma(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t *chromaDirMode)
codeIntraDirLumaAng	../../source/encoder/entropy.cpp	/^void Entropy::codeIntraDirLumaAng(const CUData& cu, uint32_t absPartIdx, bool isMultiple)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, bool isMultiple)
codeIntraDirLumaAng	../../source/encoder/entropy.h	/^    void codeIntraDirLumaAng(const CUData& cu, uint32_t absPartIdx, bool isMultiple);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, bool isMultiple)
codeIntraLumaQT	../../source/encoder/search.cpp	/^void Search::codeIntraLumaQT(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& outCost, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& outCost, const uint32_t depthRange[2])
codeIntraLumaQT	../../source/encoder/search.h	/^    void     codeIntraLumaQT(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& costs, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, bool bAllowSplit, Cost& costs, const uint32_t depthRange[2])
codeIntraLumaTSkip	../../source/encoder/search.cpp	/^void Search::codeIntraLumaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& outCost)
codeIntraLumaTSkip	../../source/encoder/search.h	/^    void     codeIntraLumaTSkip(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& costs);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t tuDepth, uint32_t absPartIdx, Cost& costs)
codeLastSignificantXY	../../source/encoder/entropy.h	/^    void codeLastSignificantXY(uint32_t posx, uint32_t posy, uint32_t log2TrSize, bool bIsLuma, uint32_t scanIdx);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t posx, uint32_t posy, uint32_t log2TrSize, bool bIsLuma, uint32_t scanIdx)
codeMVPIdx	../../source/encoder/entropy.h	/^    inline void codeMVPIdx(uint32_t symbol)                          { encodeBin(symbol, m_contextState[OFF_MVP_IDX_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t symbol)
codeMergeFlag	../../source/encoder/entropy.h	/^    inline void codeMergeFlag(const CUData& cu, uint32_t absPartIdx) { encodeBin(cu.m_mergeFlag[absPartIdx], m_contextState[OFF_MERGE_FLAG_EXT_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
codeMergeIndex	../../source/encoder/entropy.cpp	/^void Entropy::codeMergeIndex(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
codeMergeIndex	../../source/encoder/entropy.h	/^    void codeMergeIndex(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
codeMvd	../../source/encoder/entropy.cpp	/^void Entropy::codeMvd(const CUData& cu, uint32_t absPartIdx, int list)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, int list)
codeMvd	../../source/encoder/entropy.h	/^    void codeMvd(const CUData& cu, uint32_t absPartIdx, int list);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, int list)
codePPS	../../source/encoder/entropy.cpp	/^void Entropy::codePPS( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 )$/;"	f	class:X265_NS::Entropy	signature:( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 )
codePPS	../../source/encoder/entropy.h	/^    void codePPS( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 );$/;"	p	class:X265_NS::Entropy	access:public	signature:( const PPS& pps, bool filerAcross, int iPPSInitQpMinus26 )
codePUWise	../../source/encoder/entropy.cpp	/^void Entropy::codePUWise(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
codePUWise	../../source/encoder/entropy.h	/^    void codePUWise(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx)
codePartSize	../../source/encoder/entropy.cpp	/^void Entropy::codePartSize(const CUData& cu, uint32_t absPartIdx, uint32_t depth)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth)
codePartSize	../../source/encoder/entropy.h	/^    void codePartSize(const CUData& cu, uint32_t absPartIdx, uint32_t depth);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth)
codePredInfo	../../source/encoder/entropy.cpp	/^void Entropy::codePredInfo(const CUData& cu, uint32_t absPartIdx)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx)
codePredInfo	../../source/encoder/entropy.h	/^    void codePredInfo(const CUData& cu, uint32_t absPartIdx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
codePredMode	../../source/encoder/entropy.h	/^    inline void codePredMode(int predMode)                                { encodeBin(predMode == MODE_INTRA ? 1 : 0, m_contextState[OFF_PRED_MODE_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(int predMode)
codePredWeightTable	../../source/encoder/entropy.cpp	/^void Entropy::codePredWeightTable(const Slice& slice)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice)
codePredWeightTable	../../source/encoder/entropy.h	/^    void codePredWeightTable(const Slice& slice);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const Slice& slice)
codeProfileTier	../../source/encoder/entropy.cpp	/^void Entropy::codeProfileTier(const ProfileTierLevel& ptl, int maxTempSubLayers)$/;"	f	class:X265_NS::Entropy	signature:(const ProfileTierLevel& ptl, int maxTempSubLayers)
codeProfileTier	../../source/encoder/entropy.h	/^    void codeProfileTier(const ProfileTierLevel& ptl, int maxTempSubLayers);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const ProfileTierLevel& ptl, int maxTempSubLayers)
codeQtCbfChroma	../../source/encoder/entropy.cpp	/^void Entropy::codeQtCbfChroma(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel)
codeQtCbfChroma	../../source/encoder/entropy.h	/^    inline void codeQtCbfChroma(uint32_t cbf, uint32_t tuDepth)           { encodeBin(cbf, m_contextState[OFF_QT_CBF_CTX + 2 + tuDepth]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf, uint32_t tuDepth)
codeQtCbfChroma	../../source/encoder/entropy.h	/^    void codeQtCbfChroma(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, TextType ttype, uint32_t tuDepth, bool lowestLevel)
codeQtCbfLuma	../../source/encoder/entropy.h	/^    inline void codeQtCbfLuma(uint32_t cbf, uint32_t tuDepth)             { encodeBin(cbf, m_contextState[OFF_QT_CBF_CTX + !tuDepth]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf, uint32_t tuDepth)
codeQtRootCbf	../../source/encoder/entropy.h	/^    inline void codeQtRootCbf(uint32_t cbf)                               { encodeBin(cbf, m_contextState[OFF_QT_ROOT_CBF_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf)
codeQtRootCbfZero	../../source/encoder/entropy.h	/^    inline void codeQtRootCbfZero() { encodeBin(0, m_contextState[OFF_QT_ROOT_CBF_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
codeRefFrmIdx	../../source/encoder/entropy.cpp	/^void Entropy::codeRefFrmIdx(const CUData& cu, uint32_t absPartIdx, int list)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, int list)
codeRefFrmIdx	../../source/encoder/entropy.h	/^    void codeRefFrmIdx(const CUData& cu, uint32_t absPartIdx, int list);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, int list)
codeRefFrmIdxPU	../../source/encoder/entropy.cpp	/^void Entropy::codeRefFrmIdxPU(const CUData& cu, uint32_t absPartIdx, int list)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, int list)
codeRefFrmIdxPU	../../source/encoder/entropy.h	/^    void codeRefFrmIdxPU(const CUData& cu, uint32_t absPartIdx, int list);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, int list)
codeSPS	../../source/encoder/entropy.cpp	/^void Entropy::codeSPS(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl)$/;"	f	class:X265_NS::Entropy	signature:(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl)
codeSPS	../../source/encoder/entropy.h	/^    void codeSPS(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const SPS& sps, const ScalingList& scalingList, const ProfileTierLevel& ptl)
codeSaoMaxUvlc	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoMaxUvlc(uint32_t code, uint32_t maxSymbol)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t code, uint32_t maxSymbol)
codeSaoMaxUvlc	../../source/encoder/entropy.h	/^    void codeSaoMaxUvlc(uint32_t code, uint32_t maxSymbol);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t code, uint32_t maxSymbol)
codeSaoMerge	../../source/encoder/entropy.h	/^    inline void codeSaoMerge(uint32_t code)                          { encodeBin(code, m_contextState[OFF_SAO_MERGE_FLAG_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t code)
codeSaoOffset	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoOffset(const SaoCtuParam& ctuParam, int plane)$/;"	f	class:X265_NS::Entropy	signature:(const SaoCtuParam& ctuParam, int plane)
codeSaoOffset	../../source/encoder/entropy.h	/^    void codeSaoOffset(const SaoCtuParam& ctuParam, int plane);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const SaoCtuParam& ctuParam, int plane)
codeSaoOffsetBO	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoOffsetBO(int *offset, int bandPos, int plane)$/;"	f	class:X265_NS::Entropy	signature:(int *offset, int bandPos, int plane)
codeSaoOffsetBO	../../source/encoder/entropy.h	/^    void codeSaoOffsetBO(int *offset, int bandPos, int plane);$/;"	p	class:X265_NS::Entropy	access:public	signature:(int *offset, int bandPos, int plane)
codeSaoOffsetEO	../../source/encoder/entropy.cpp	/^void Entropy::codeSaoOffsetEO(int *offset, int typeIdx, int plane)$/;"	f	class:X265_NS::Entropy	signature:(int *offset, int typeIdx, int plane)
codeSaoOffsetEO	../../source/encoder/entropy.h	/^    void codeSaoOffsetEO(int *offset, int typeIdx, int plane);$/;"	p	class:X265_NS::Entropy	access:public	signature:(int *offset, int typeIdx, int plane)
codeSaoType	../../source/encoder/entropy.h	/^    inline void codeSaoType(uint32_t code)                           { encodeBin(code, m_contextState[OFF_SAO_TYPE_IDX_CTX]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t code)
codeScalingList	../../source/encoder/entropy.cpp	/^void Entropy::codeScalingList(const ScalingList& scalingList)$/;"	f	class:X265_NS::Entropy	signature:(const ScalingList& scalingList)
codeScalingList	../../source/encoder/entropy.cpp	/^void Entropy::codeScalingList(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId)$/;"	f	class:X265_NS::Entropy	signature:(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId)
codeScalingList	../../source/encoder/entropy.h	/^    void codeScalingList(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const ScalingList& scalingList, uint32_t sizeId, uint32_t listId)
codeScalingList	../../source/encoder/entropy.h	/^    void codeScalingList(const ScalingList&);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const ScalingList&)
codeShortTermRefPicSet	../../source/encoder/entropy.cpp	/^void Entropy::codeShortTermRefPicSet(const RPS& rps, int idx)$/;"	f	class:X265_NS::Entropy	signature:(const RPS& rps, int idx)
codeShortTermRefPicSet	../../source/encoder/entropy.h	/^    void codeShortTermRefPicSet(const RPS& rps, int idx);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const RPS& rps, int idx)
codeSkipFlag	../../source/encoder/entropy.h	/^    inline void codeSkipFlag(const CUData& cu, uint32_t absPartIdx)  { encodeBin(cu.isSkipped(absPartIdx), m_contextState[OFF_SKIP_FLAG_CTX + cu.getCtxSkipFlag(absPartIdx)]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx)
codeSliceHeader	../../source/encoder/entropy.cpp	/^void Entropy::codeSliceHeader(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp)
codeSliceHeader	../../source/encoder/entropy.h	/^    void codeSliceHeader(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Slice& slice, FrameData& encData, uint32_t slice_addr, uint32_t slice_addr_bits, int sliceQp)
codeSliceHeaderWPPEntryPoints	../../source/encoder/entropy.cpp	/^void Entropy::codeSliceHeaderWPPEntryPoints(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset)$/;"	f	class:X265_NS::Entropy	signature:(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset)
codeSliceHeaderWPPEntryPoints	../../source/encoder/entropy.h	/^    void codeSliceHeaderWPPEntryPoints(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const uint32_t *substreamSizes, uint32_t numSubStreams, uint32_t maxOffset)
codeSplitFlag	../../source/encoder/entropy.h	/^    inline void codeSplitFlag(const CUData& cu, uint32_t absPartIdx, uint32_t depth) { encodeBin(cu.m_cuDepth[absPartIdx] > depth, m_contextState[OFF_SPLIT_FLAG_CTX + cu.getCtxSplitFlag(absPartIdx, depth)]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t depth)
codeSubdivCbfQTChroma	../../source/encoder/search.cpp	/^void Search::codeSubdivCbfQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx)$/;"	f	class:Search	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx)
codeSubdivCbfQTChroma	../../source/encoder/search.h	/^    void     codeSubdivCbfQTChroma(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx);$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, uint32_t tuDepth, uint32_t absPartIdx)
codeTransformSkipFlags	../../source/encoder/entropy.h	/^    inline void codeTransformSkipFlags(uint32_t transformSkip, TextType ttype) { encodeBin(transformSkip, m_contextState[OFF_TRANSFORMSKIP_FLAG_CTX + (ttype ? NUM_TRANSFORMSKIP_FLAG_CTX : 0)]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t transformSkip, TextType ttype)
codeTransformSubdivFlag	../../source/encoder/entropy.h	/^    inline void codeTransformSubdivFlag(uint32_t symbol, uint32_t ctx)    { encodeBin(symbol, m_contextState[OFF_TRANS_SUBDIV_FLAG_CTX + ctx]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t symbol, uint32_t ctx)
codeVPS	../../source/encoder/entropy.cpp	/^void Entropy::codeVPS(const VPS& vps)$/;"	f	class:X265_NS::Entropy	signature:(const VPS& vps)
codeVPS	../../source/encoder/entropy.h	/^    void codeVPS(const VPS& vps);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const VPS& vps)
codeVUI	../../source/encoder/entropy.cpp	/^void Entropy::codeVUI(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo)$/;"	f	class:X265_NS::Entropy	signature:(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo)
codeVUI	../../source/encoder/entropy.h	/^    void codeVUI(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const VUI& vui, int maxSubTLayers, bool bEmitVUITimingInfo, bool bEmitVUIHRDInfo)
codedLevelAndDist	../../source/common/quant.cpp	/^    int64_t codedLevelAndDist; \/* distortion and level cost of coded coefficients *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
coeff	../../source/common/frame.h	/^    double   coeff[4];$/;"	m	struct:X265_NS::RcStats	access:public
coeff	../../source/encoder/ratecontrol.h	/^    double coeff;$/;"	m	struct:X265_NS::Predictor	access:public
coeffBits	../../source/common/frame.h	/^    int      coeffBits;$/;"	m	struct:X265_NS::RcStats	access:public
coeffBits	../../source/common/framedata.h	/^    int         coeffBits; \/* Texture bits (DCT coefs) *\/$/;"	m	struct:X265_NS::FrameStats	access:public
coeffBits	../../source/encoder/ratecontrol.h	/^    int      coeffBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
coeffBits	../../source/encoder/search.h	/^    uint32_t    coeffBits;  \/\/ Texture bits (DCT Coeffs)$/;"	m	struct:X265_NS::Mode	access:public
coeffBitsExp	../../source/encoder/ratecontrol.h	/^const double coeffBitsExp[5][11] = {{0.7697, 1.0977, 1.1838, 1.1655, 1.0551, 1.1671, 1.0957, 1.0957, 1.0957, 1.0957, 1.0957},$/;"	m	namespace:X265_NS
coeffGroupRDStats	../../source/common/quant.cpp	/^struct coeffGroupRDStats$/;"	s	namespace:__anon29	file:
coeffMin	../../source/encoder/ratecontrol.h	/^    double coeffMin;$/;"	m	struct:X265_NS::Predictor	access:public
coeffRQT	../../source/encoder/search.h	/^    coeff_t* coeffRQT[3];  \/* coeff storage for entire CTU for each RQT layer *\/$/;"	m	struct:X265_NS::RQTData	access:public
coeff_t	../../source/common/common.h	/^typedef int16_t  coeff_t;      \/\/ transform coefficient$/;"	t
collectCTUStatistics	../../source/encoder/frameencoder.cpp	/^int FrameEncoder::collectCTUStatistics(const CUData& ctu, FrameStats* log)$/;"	f	class:X265_NS::FrameEncoder	signature:(const CUData& ctu, FrameStats* log)
collectCTUStatistics	../../source/encoder/frameencoder.h	/^    int  collectCTUStatistics(const CUData& ctu, FrameStats* frameLog);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(const CUData& ctu, FrameStats* frameLog)
collectPUStatistics	../../source/encoder/analysis.cpp	/^void Analysis::collectPUStatistics(const CUData& ctu, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& ctu, const CUGeom& cuGeom)
collectPUStatistics	../../source/encoder/analysis.h	/^    void collectPUStatistics(const CUData& ctu, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& ctu, const CUGeom& cuGeom)
colorSpace	../../source/input/y4m.h	/^    int colorSpace;$/;"	m	class:X265_NS::Y4MInput	access:protected
colorSpace	../../source/input/yuv.h	/^    int colorSpace; \/\/< source Color Space Parameter$/;"	m	class:X265_NS::YUVInput	access:protected
colorSpace	../../source/output/reconplay.h	/^    int    colorSpace;     \/* color space of frame *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
colorSpace	../../source/output/y4m.h	/^    int colorSpace;$/;"	m	class:X265_NS::Y4MOutput	access:protected
colorSpace	../../source/output/yuv.h	/^    int colorSpace;$/;"	m	class:X265_NS::YUVOutput	access:protected
colourDescriptionPresentFlag	../../source/common/slice.h	/^    bool       colourDescriptionPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
colourPrimaries	../../source/common/slice.h	/^    int        colourPrimaries;$/;"	m	struct:X265_NS::VUI	access:public
completed	../../source/encoder/frameencoder.h	/^    volatile uint32_t completed;$/;"	m	struct:X265_NS::CTURow	access:public
complexityCheckCU	../../source/encoder/analysis.cpp	/^bool Analysis::complexityCheckCU(const Mode& bestMode)$/;"	f	class:Analysis	signature:(const Mode& bestMode)
complexityCheckCU	../../source/encoder/analysis.h	/^    bool complexityCheckCU(const Mode& bestMode);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const Mode& bestMode)
compressCTU	../../source/encoder/analysis.cpp	/^Mode& Analysis::compressCTU(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext)$/;"	f	class:Analysis	signature:(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext)
compressCTU	../../source/encoder/analysis.h	/^    Mode& compressCTU(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext);$/;"	p	class:X265_NS::Analysis	access:public	signature:(CUData& ctu, Frame& frame, const CUGeom& cuGeom, const Entropy& initialContext)
compressFrame	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::compressFrame()$/;"	f	class:X265_NS::FrameEncoder	signature:()
compressFrame	../../source/encoder/frameencoder.h	/^    void compressFrame();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
compressInterCU_dist	../../source/encoder/analysis.cpp	/^uint32_t Analysis::compressInterCU_dist(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressInterCU_dist	../../source/encoder/analysis.h	/^    uint32_t compressInterCU_dist(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressInterCU_rd0_4	../../source/encoder/analysis.cpp	/^SplitData Analysis::compressInterCU_rd0_4(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressInterCU_rd0_4	../../source/encoder/analysis.h	/^    SplitData compressInterCU_rd0_4(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressInterCU_rd5_6	../../source/encoder/analysis.cpp	/^SplitData Analysis::compressInterCU_rd5_6(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressInterCU_rd5_6	../../source/encoder/analysis.h	/^    SplitData compressInterCU_rd5_6(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressIntraCU	../../source/encoder/analysis.cpp	/^void Analysis::compressIntraCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
compressIntraCU	../../source/encoder/analysis.h	/^    void compressIntraCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp)
computeMEIntegral	../../source/encoder/framefilter.cpp	/^void FrameFilter::computeMEIntegral(int row)$/;"	f	class:FrameFilter	signature:(int row)
computeMEIntegral	../../source/encoder/framefilter.h	/^    void computeMEIntegral(int row);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(int row)
computeRPS	../../source/encoder/dpb.cpp	/^void DPB::computeRPS(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer)$/;"	f	class:DPB	signature:(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer)
computeRPS	../../source/encoder/dpb.h	/^    void computeRPS(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int curPoc, bool isRAP, RPS * rps, unsigned int maxDecPicBuffer)
computeSPSRPSIndex	../../source/encoder/encoder.cpp	/^bool Encoder::computeSPSRPSIndex()$/;"	f	class:Encoder	signature:()
computeSPSRPSIndex	../../source/encoder/encoder.h	/^    bool computeSPSRPSIndex();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
computeSSD	../../source/encoder/framefilter.cpp	/^static uint64_t computeSSD(pixel *fenc, pixel *rec, intptr_t stride, uint32_t width, uint32_t height)$/;"	f	file:	signature:(pixel *fenc, pixel *rec, intptr_t stride, uint32_t width, uint32_t height)
computeSSD	../../source/encoder/framefilter.cpp	/^static uint64_t computeSSD(pixel *fenc, pixel *rec, intptr_t stride, uint32_t width, uint32_t height);$/;"	p	file:	signature:(pixel *fenc, pixel *rec, intptr_t stride, uint32_t width, uint32_t height)
cond_broadcast	../../source/common/winxp.cpp	/^void WINAPI cond_broadcast(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_broadcast	../../source/common/winxp.h	/^void WINAPI cond_broadcast(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_destroy	../../source/common/winxp.cpp	/^void cond_destroy(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_destroy	../../source/common/winxp.h	/^void cond_destroy(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_init	../../source/common/winxp.cpp	/^int WINAPI cond_init(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_init	../../source/common/winxp.h	/^int WINAPI cond_init(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_signal	../../source/common/winxp.cpp	/^void WINAPI cond_signal(ConditionVariable *cond)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_signal	../../source/common/winxp.h	/^void WINAPI cond_signal(ConditionVariable *cond);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond)
cond_wait	../../source/common/winxp.cpp	/^BOOL WINAPI cond_wait(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait)$/;"	f	namespace:X265_NS	signature:(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait)
cond_wait	../../source/common/winxp.h	/^BOOL WINAPI cond_wait(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait);$/;"	p	namespace:X265_NS	signature:(ConditionVariable *cond, CRITICAL_SECTION *mutex, DWORD wait)
configure	../../source/encoder/encoder.cpp	/^void Encoder::configure(x265_param *p)$/;"	f	class:Encoder	signature:(x265_param *p)
configure	../../source/encoder/encoder.h	/^    void configure(x265_param *param);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_param *param)
conformanceWindow	../../source/common/slice.h	/^    Window   conformanceWindow;$/;"	m	struct:X265_NS::SPS	access:public
const	../../source/common/x86/const-a.asm	/^const hmul_16p,             times 16 db   1$/;"	l
const	../../source/common/x86/const-a.asm	/^const hsub_mul,             times 16 db   1,  -1$/;"	l
const	../../source/common/x86/const-a.asm	/^const multiH,               times  1 dw   9,  10,  11,  12,  13,  14,  15,  16$/;"	l
const	../../source/common/x86/const-a.asm	/^const multiH2,              times  1 dw  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32$/;"	l
const	../../source/common/x86/const-a.asm	/^const multiH3,              times  1 dw  25,  26,  27,  28,  29,  30,  31,  32$/;"	l
const	../../source/common/x86/const-a.asm	/^const multiL,               times  1 dw   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16$/;"	l
const	../../source/common/x86/const-a.asm	/^const multi_2Row,           times  1 dw   1,   2,   3,   4,   1,   2,   3,   4$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_0,                 times 32 db 0$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_000000000000000F,           db 0xff$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_0000000000000F0F,  times  2 db 0xff, 0x00$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_01,                times  8 db   0,   1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_0123,              times  4 db   0,   1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_1,                 times 32 db 1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_124,               times 32 db 124$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_128,               times 32 db 128$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_15,                times 32 db 15$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_16,                times 32 db 16$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_2,                 times 32 db 2$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_3,                 times 32 db 3$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_31,                times 32 db 31$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_32,                times 32 db 32$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_4,                 times 32 db 4$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_64,                times 32 db 64$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_8,                 times 32 db 8$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_a1,                times 16 db 0xa1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_movemask,          times 16 db 0x00$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_movemask_32,       times 32 db 0x00$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_shuf8x8c,          times  1 db   0,   0,   0,   0,   2,   2,   2,   2,   4,   4,   4,   4,   6,   6,   6,   6$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_shuf_off4,         times  2 db   0,   4,   1,   5,   2,   6,   3,   7$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_unpackbd1,         times  2 db   0,   0,   0,   0,   1,   1,   1,   1,   2,   2,   2,   2,   3,   3,   3,   3$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_unpackbd2,         times  2 db   4,   4,   4,   4,   5,   5,   5,   5,   6,   6,   6,   6,   7,   7,   7,   7$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_unpackwq1,         times  1 db   0,   1,   0,   1,   0,   1,   0,   1,   2,   3,   2,   3,   2,   3,   2,   3$/;"	l
const	../../source/common/x86/const-a.asm	/^const pb_unpackwq2,         times  1 db   4,   5,   4,   5,   4,   5,   4,   5,   6,   7,   6,   7,   6,   7,   6,   7$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_0000ffff,          times  8 dd 0x0000FFFF$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_1,                 times  8 dd 1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_1024,              times  4 dd 1024$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_128,               times  4 dd 128$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_15,                times  8 dd 15$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_16,                times  8 dd 16$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_2,                 times  8 dd 2$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_2048,              times  4 dd 2048$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_256,               times  4 dd 256$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_31,                times  8 dd 31$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_32,                times  8 dd 32$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_32767,             times  4 dd 32767$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_4,                 times  4 dd 4$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_512,               times  4 dd 512$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_524416,            times  4 dd 524416$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_64,                times  4 dd 64$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_8,                 times  4 dd 8$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_ffff,              times  4 dd 0xffff$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_n131072,           times  4 dd 0xfffe0000$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_n32768,            times  8 dd 0xffff8000$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_planar16_mul0,     times  1 dd  15,  14,  13,  12,  11,  10,   9,   8,    7,   6,   5,   4,   3,   2,   1,   0$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_planar16_mul1,     times  1 dd   1,   2,   3,   4,   5,   6,   7,   8,    9,  10,  11,  12,  13,  14,  15,  16$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_planar16_mul2,     times  1 dd  15,  14,  13,  12,  11,  10,   9,   8,    7,   6,   5,   4,   3,   2,   1,   0$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_planar32_mul1,     times  1 dd  31,  30,  29,  28,  27,  26,  25,  24,   23,  22,  21,  20,  19,  18,  17,  16$/;"	l
const	../../source/common/x86/const-a.asm	/^const pd_planar32_mul2,     times  1 dd  17,  18,  19,  20,  21,  22,  23,  24,   25,  26,  27,  28,  29,  30,  31,  32$/;"	l
const	../../source/common/x86/const-a.asm	/^const pq_1,                 times 1 dq 1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_00ff,              times 16 dw 0x00ff$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_0_7,               times  2 dw   0,   1,   2,   3,   4,   5,   6,   7$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_1,                 times 16 dw 1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_1023,              times 16 dw 1023$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_1024,              times 16 dw 1024$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_128,               times 16 dw 128$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_15,                times 16 dw 15$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_16,                times 16 dw 16$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_1_ffff,            times  4 dw 1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_2,                 times 16 dw 2$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_2000,              times 16 dw 0x2000$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_2048,              times 16 dw 2048$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_256,               times 16 dw 256$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_257,               times 16 dw 257$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_3,                 times 16 dw 3$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_31,                times 16 dw 31$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_32,                times 16 dw 32$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_32_0,              times  4 dw 32,$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_3fff,              times 16 dw 0x3fff$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_4,                 times  8 dw 4$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_4096,              times 16 dw 4096$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_512,               times 16 dw 512$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_64,                times  8 dw 64$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_7,                 times 16 dw 7$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_8,                 times  8 dw 8$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_8000,              times  8 dw 0x8000$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_8192,              times  8 dw 8192$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_FFFFFFFFFFFFFFF0,           dw 0x00$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_exp2_0_15,                  dw 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_ff00,              times  8 dw 0xff00$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_m2,                times  8 dw -2$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_n1,                times 16 dw -1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_pixel_max,         times 16 dw ((1 << BIT_DEPTH)-1)$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_planar16_mul,      times  1 dw  15,  14,  13,  12,  11,  10,   9,   8,   7,   6,   5,   4,   3,   2,   1,   0$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_planar32_mul,      times  1 dw  31,  30,  29,  28,  27,  26,  25,  24,  23,  22,  21,  20,  19,  18,  17,  16$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_pmmpzzzz,          times  1 dw   1,  -1,  -1,   1,   0,   0,   0,   0$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_pmpmpmpm,          times 16 dw   1,  -1,   1,  -1,   1,  -1,   1,  -1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_ppmmppmm,          times  1 dw   1,   1,  -1,  -1,   1,   1,  -1,  -1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_ppppmmmm,          times  1 dw   1,   1,   1,   1,  -1,  -1,  -1,  -1$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_shuf_off4,         times  1 db   0,   1,   8,   9,   2,   3,  10,  11,   4,   5,  12,  13,   6,   7,  14,  15$/;"	l
const	../../source/common/x86/const-a.asm	/^const pw_swap,              times  2 db   6,   7,   4,   5,   2,   3,   0,   1$/;"	l
const	../../source/common/x86/const-a.asm	/^const trans8_shuf,          times  1 dd   0,   4,   1,   5,   2,   6,   3,   7$/;"	l
const	../../source/common/x86/dct8.asm	/^const idct4_shuf1,    times 2 db 0, 1, 4, 5, 2, 3, 6, 7, 8, 9, 12, 13, 10, 11, 14, 15$/;"	l
const	../../source/common/x86/dct8.asm	/^const idct8_shuf2,    times 2 db 0, 1, 2, 3, 8, 9, 10, 11, 4, 5, 6, 7, 12, 13, 14, 15$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const ang_table$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const ang_table_avx2$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const c_mode32_10_0,                db  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const planar32_table$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const planar32_table1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_12_24,               db  0,  0,  0,  0,  0,  0,  0,  0, 14, 15, 14, 15,  0,  1,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_13,                  db 14, 15,  8,  9,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_13_23,               db  2,  3,  2,  3, 14, 15, 14, 15,  6,  7,  6,  7,  0,  1,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_14_22,               db  2,  3,  2,  3, 10, 11, 10, 11,  6,  7,  6,  7,  0,  1,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_15_21,               db 12, 13, 12, 13,  8,  9,  8,  9,  4,  5,  4,  5,  0,  1,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_16,                  db  0,  0,  0,  0,  0,  0, 10, 11,  8,  9,  6,  7,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang16_16_20,               db  8,  9,  8,  9,  6,  7,  6,  7,  2,  3,  2,  3,  0,  1,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang32_12_24,               db  0,  1,  0,  1,  2,  3,  2,  3,  4,  5,  4,  5,  6,  7,  6,  7$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang32_13_23,               db  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 14, 15,  6,  7,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang32_14_22,               db  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 11,  6,  7,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang32_15_21,               db  0,  0,  0,  0,  0,  0,  0,  0, 12, 13,  8,  9,  4,  5,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang32_16_20,               db  0,  0,  0,  0,  0,  0,  0,  0,  8,  9,  6,  7,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang32_17_19_0,             db  0,  0,  0,  0, 12, 13, 10, 11,  8,  9,  6,  7,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang8_12,                   db  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 12, 13,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang8_13,                   db  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 14, 15,  8,  9,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang8_14,                   db  0,  0,  0,  0,  0,  0,  0,  0, 14, 15, 10, 11,  4,  5,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang8_15,                   db  0,  0,  0,  0,  0,  0,  0,  0, 12, 13,  8,  9,  4,  5,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang8_16,                   db  0,  0,  0,  0,  0,  0, 12, 13, 10, 11,  6,  7,  4,  5,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_ang8_17,                   db  0,  0, 14, 15, 12, 13, 10, 11,  8,  9,  4,  5,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_punpcklwd,                 db  0,  1,  2,  3,  2,  3,  4,  5,  4,  5,  6,  7,  6,  7,  8,  9$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const pw_swap16,            times 2 db 14, 15, 12, 13, 10, 11,  8,  9,  6,  7,  4,  5,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const shuf_mode32_18,               db 14, 15, 12, 13, 10, 11,  8,  9,  6,  7,  4,  5,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const shuf_mode_13_23,              db  0,  0, 14, 15,  6,  7,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const shuf_mode_14_22,              db 14, 15, 10, 11,  4,  5,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const shuf_mode_15_21,              db 12, 13,  8,  9,  4,  5,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const shuf_mode_16_20,              db  2,  3,  0,  1, 14, 15, 12, 13,  8,  9,  6,  7,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred16.asm	/^const shuf_mode_17_19,              db  0,  1, 14, 15, 12, 13, 10, 11,  6,  7,  4,  5,  2,  3,  0,  1$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode12,    db 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1, 2, 1, 2, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 2, 3$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode13,    db 4, 5, 4, 5, 4, 5, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 5, 6, 5, 6, 5, 6, 4, 5, 4, 5, 4, 5, 4, 5, 3, 4$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode14,    db 6, 7, 6, 7, 5, 6, 5, 6, 4, 5, 4, 5, 4, 5, 3, 4, 7, 8, 7, 8, 6, 7, 6, 7, 5, 6, 5, 6, 5, 6, 4, 5$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode15,    db 8, 9, 7, 8, 7, 8, 6, 7, 6, 7, 5, 6, 5, 6, 4, 5, 9, 10, 8, 9, 8, 9, 7, 8, 7, 8, 6, 7, 6, 7, 5, 6$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode16,    db 10, 11, 9, 10, 9, 10, 8, 9, 7, 8, 7, 8, 6, 7, 5, 6, 11, 12, 10, 11, 10, 11, 9, 10, 8, 9, 8, 9, 7, 8, 6, 7$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode17,    db 12, 13, 11, 12, 10, 11, 9, 10, 8, 9, 8, 9, 7, 8, 6, 7, 13, 14, 12, 13, 11, 12, 10, 11, 9, 10, 9, 10, 8, 9, 7, 8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang16_shuf_mode9,     times 8 db 0, 1$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_fact_mode12,        db (32-27), 27, (32-22), 22, (32-17), 17, (32-12), 12, (32- 7),  7, (32- 2),  2, (32-29), 29, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_fact_mode13,        db (32-23), 23, (32-14), 14, (32- 5),  5, (32-28), 28, (32-19), 19, (32-10), 10, (32- 1),  1, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_fact_mode14,        db (32-19), 19, (32- 6),  6, (32-25), 25, (32-12), 12, (32-31), 31, (32-18), 18, (32- 5),  5, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_fact_mode15,        db (32-15), 15, (32-30), 30, (32-13), 13, (32-28), 28, (32-11), 11, (32-26), 26, (32- 9),  9, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_fact_mode16,        db (32-11), 11, (32-22), 22, (32- 1),  1, (32-12), 12, (32-23), 23, (32- 2),  2, (32-13), 13, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_fact_mode17,        db (32- 6),  6, (32-12), 12, (32-18), 18, (32-24), 24, (32-30), 30, (32- 4),  4, (32-10), 10, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode11,        times 8 db 1, 2$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode12,        db  4,  5,  4,  5,  4,  5,  4,  5,  4,  5,  4,  5,  3,  4,  3,  4,  2,  3,  2,  3,  2,  3,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode13,        db 14, 15, 14, 15, 14, 15, 13, 14, 13, 14, 13, 14, 13, 14, 12, 13, 10, 11,  9, 10,  9, 10,  9, 10,  9, 10,  8,  9,  8,  9,  8,  9$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode14,        db 14, 15, 14, 15, 13, 14, 13, 14, 12, 13, 12, 13, 12, 13, 11, 12,  8,  9,  7,  8,  7,  8,  6,  7,  6,  7,  6,  7,  5,  6,  5,  6$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode15,        db 14, 15, 13, 14, 13, 14, 12, 13, 12, 13, 11, 12, 11, 12, 10, 11,  5,  6,  5,  6,  4,  5,  4,  5,  3,  4,  3,  4,  2,  3,  2,  3$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode16,        db 14, 15, 13, 14, 13, 14, 12, 13, 11, 12, 11, 12, 10, 11,  9, 10,  9, 10,  8,  9,  7,  8,  7,  8,  6,  7,  5,  6,  5,  6,  4,  5$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode17,        db 14, 15, 13, 14, 12, 13, 11, 12, 10, 11, 10, 11,  9, 10,  8,  9,  7,  8,  6,  7,  6,  7,  5,  6,  4,  5,  3,  4,  2,  3,  2,  3$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode19,        db  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode20,        db 12, 11,  9,  8,  6,  5,  3,  2,  0,  0,  0,  0,  0,  0, 14, 15,  8,  7,  5,  4,  2,  1,  0,  0, 14, 13, 13, 11, 11, 10, 10,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode21,        db 15, 15, 13, 13, 11, 11,  9,  9,  8,  8,  6,  6,  4,  4,  2,  2, 14, 14, 12, 12, 10, 10,  8,  8,  7,  7,  5,  5,  3,  3,  1,  1$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode22,        db  0,  0, 15, 15, 13, 13, 10, 10,  8,  8,  5,  5,  3,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0, 12, 12,  9,  9,  7,  7,  4,  4,  2$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode23,        db  0,  0,  0,  0,  0,  0,  0,  0, 14, 14, 11, 11,  7,  7,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0, 12, 12,  9,  9,  5,  5,  2,  2$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode24,        db  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13, 13,  6,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10, 10,  3,  3$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang32_shuf_mode9,         times 8 db 0, 1$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode11,         db (32-30), 30, (32-28), 28, (32-26), 26, (32-24), 24, (32-22), 22, (32-20), 20, (32-18), 18, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode12,         db (32-27), 27, (32-22), 22, (32-17), 17, (32-12), 12, (32- 7),  7, (32- 2),  2, (32-29), 29, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode13,         db (32-23), 23, (32-14), 14, (32- 5),  5, (32-28), 28, (32-19), 19, (32-10), 10, (32- 1),  1, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode14,         db (32-19), 19, (32- 6),  6, (32-25), 25, (32-12), 12, (32-31), 31, (32-18), 18, (32- 5),  5, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode15,         db (32-15), 15, (32-30), 30, (32-13), 13, (32-28), 28, (32-11), 11, (32-26), 26, (32- 9),  9, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode16,         db (32-11), 11, (32-22), 22, (32- 1),  1, (32-12), 12, (32-23), 23, (32- 2),  2, (32-13), 13, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode17,         db (32- 6),  6, (32-12), 12, (32-18), 18, (32-24), 24, (32-30), 30, (32- 4),  4, (32-10), 10, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode3,          db (32-26), 26, (32-20), 20, (32-14), 14, (32- 8),  8, (32- 2),  2, (32-28), 28, (32-22), 22, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode4,          db (32-21), 21, (32-10), 10, (32-31), 31, (32-20), 20, (32- 9),  9, (32-30), 30, (32-19), 19, (32- 8),  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode5,          db (32-17), 17, (32- 2),  2, (32-19), 19, (32- 4),  4, (32-21), 21, (32- 6),  6, (32-23), 23, (32- 8),  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode6,          db (32-13), 13, (32-26), 26, (32- 7),  7, (32-20), 20, (32- 1),  1, (32-14), 14, (32-27), 27, (32- 8),  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode7,          db (32- 9),  9, (32-18), 18, (32-27), 27, (32- 4),  4, (32-13), 13, (32-22), 22, (32-31), 31, (32- 8),  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode8,          db (32- 5),  5, (32-10), 10, (32-15), 15, (32-20), 20, (32-25), 25, (32-30), 30, (32- 3),  3, (32- 8),  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_fact_mode9,          db (32- 2),  2, (32- 4),  4, (32- 6),  6, (32- 8),  8, (32-10), 10, (32-12), 12, (32-14), 14, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode12,         db  7,  8,  7,  8,  7,  8,  7,  8,  7,  8,  7,  8,  6,  7,  6,  7,  8,  9,  8,  9,  8,  9,  8,  9,  8,  9,  8,  9,  7,  8,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode13,         db  8,  9,  8,  9,  8,  9,  7,  8,  7,  8,  7,  8,  7,  8,  6,  7,  9, 10,  9, 10,  9, 10,  8,  9,  8,  9,  8,  9,  8,  9,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode14,         db  9, 10,  9, 10,  8,  9,  8,  9,  7,  8,  7,  8,  7,  8,  6,  7, 10, 11, 10, 11,  9, 10,  9, 10,  8,  9,  8,  9,  8,  9,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode15,         db 10, 11,  9, 10,  9, 10,  8,  9,  8,  9,  7,  8,  7,  8,  6,  7, 11, 12, 10, 11, 10, 11,  9, 10,  9, 10,  8,  9,  8,  9,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode16,         db 11, 12, 10, 11, 10, 11,  9, 10,  8,  9,  8,  9,  7,  8,  6,  7, 12, 13, 11, 12, 11, 12, 10, 11,  9, 10,  9, 10,  8,  9,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode17,         db 12, 13, 11, 12, 10, 11,  9, 10,  8,  9,  8,  9,  7,  8,  6,  7, 13, 14, 12, 13, 11, 12, 10, 11,  9, 10,  9, 10,  8,  9,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode3,          db  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  4,  5,  5,  6,  6,  7,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  5,  6,  6,  7,  7,  8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode4,          db  0,  1,  1,  2,  1,  2,  2,  3,  3,  4,  3,  4,  4,  5,  5,  6,  1,  2,  2,  3,  2,  3,  3,  4,  4,  5,  4,  5,  5,  6,  6,  7$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode5,          db  0,  1,  1,  2,  1,  2,  2,  3,  2,  3,  3,  4,  3,  4,  4,  5,  1,  2,  2,  3,  2,  3,  3,  4,  3,  4,  4,  5,  4,  5,  5,  6$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode6,          db  0,  1,  0,  1,  1,  2,  1,  2,  2,  3,  2,  3,  2,  3,  3,  4,  1,  2,  1,  2,  2,  3,  2,  3,  3,  4,  3,  4,  3,  4,  4,  5$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode7,          db  0,  1,  0,  1,  0,  1,  1,  2,  1,  2,  1,  2,  1,  2,  2,  3,  1,  2,  1,  2,  1,  2,  2,  3,  2,  3,  2,  3,  2,  3,  3,  4$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode8,          db  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  2,  3,  2,  3$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang8_shuf_mode9,          db  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  0,  1,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2,  1,  2$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor8_tab_16,       db (32-11), 11, (32-22), 22, (32-1 ),  1, (32-12), 12, (32-23), 23, (32- 2),  2, (32-13), 13, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor8_tab_20,       times 8 db (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_11,        db (32-30), 30, (32-28), 28, (32-26), 26, (32-24), 24, (32-22), 22, (32-20), 20, (32-18), 18, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_12,        db (32-27), 27, (32-22), 22, (32-17), 17, (32-12), 12, (32-7), 7, (32-2), 2, (32-29), 29, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_13,        db (32-23), 23, (32-14), 14, (32-5), 5, (32-28), 28, (32-19), 19, (32-10), 10, (32-1), 1, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_14,        db (32-19), 19, (32-6), 6, (32-25), 25, (32-12), 12, (32-31), 31, (32-18), 18, (32-5), 5, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_15,        db (32-15), 15, (32-30), 30, (32-13), 13, (32-28), 28, (32-11), 11, (32-26), 26, (32-9), 9, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_16,        db (32-11), 11, (32-22), 22, (32-1), 1, (32-12), 12, (32-23), 23, (32-2), 2, (32-13), 13, (32-24), 24$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_17,        db (32- 6),  6, (32-12), 12, (32-18), 18, (32-24), 24, (32-30), 30, (32- 4),  4, (32-10), 10, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const angHor_tab_9,         db (32-2), 2, (32-4), 4, (32-6), 6, (32-8), 8, (32-10), 10, (32-12), 12, (32-14), 14, (32-16), 16$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang_table$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const ang_table_avx2$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const c_ang8_mode_16,       db 8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10, 12, 13, 15, 0, 0$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const c_ang8_mode_20,       db 15, 13, 12, 10, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 0$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const intra_pred8_shuff16,  db 0, 1, 1, 2, 3, 3, 4, 5$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const intra_pred_shuff_0_8,     times 2 db 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const pw_ang_table$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const tab_S1,         db 15, 14, 12, 11, 10,  9,  7,  6,  5,  4,  2,  1,  0,  0,  0,  0$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const tab_S2,         db 0, 1, 3, 5, 7, 9, 11, 13, 0, 0, 0, 0, 0, 0, 0, 0$/;"	l
const	../../source/common/x86/intrapred8.asm	/^const tab_Si,         db  0,  1,  2,  3,  4,  5,  6,  7,  0,  1,  2,  3,  4,  5,  6,  7$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode11_12,   db  2, 30,  2, 30,  2, 30,  2, 30,  4, 28,  4, 28,  4, 28,  4, 28,  5, 27,  5, 27,  5, 27,  5, 27, 10, 22, 10, 22, 10, 22, 10, 22$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode13_14,   db  9, 23,  9, 23,  9, 23,  9, 23, 18, 14, 18, 14, 18, 14, 18, 14, 13, 19, 13, 19, 13, 19, 13, 19, 26,  6, 26,  6, 26,  6, 26,  6$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode15_16,   db 17, 15, 17, 15, 17, 15, 17, 15,  2, 30,  2, 30,  2, 30,  2, 30, 21, 11, 21, 11, 21, 11, 21, 11, 10, 22, 10, 22, 10, 22, 10, 22$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode17,      db 26,  6, 26,  6, 26,  6, 26,  6, 20, 12, 20, 12, 20, 12, 20, 12, 14, 18, 14, 18, 14, 18, 14, 18,  8, 24,  8, 24,  8, 24,  8, 24$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode19_20,   db 26,  6, 26,  6, 26,  6, 26,  6, 20, 12, 20, 12, 20, 12, 20, 12, 21, 11, 21, 11, 21, 11, 21, 11, 10, 22, 10, 22, 10, 22, 10, 22$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode21_22,   db 17, 15, 17, 15, 17, 15, 17, 15,  2, 30,  2, 30,  2, 30,  2, 30, 13, 19, 13, 19, 13, 19, 13, 19, 26,  6, 26,  6, 26,  6, 26,  6$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode23_24,   db  9, 23,  9, 23,  9, 23,  9, 23, 18, 14, 18, 14, 18, 14, 18, 14,  5, 27,  5, 27,  5, 27,  5, 27, 10, 22, 10, 22, 10, 22, 10, 22$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode25,      db  2, 30,  2, 30,  2, 30,  2, 30,  4, 28,  4, 28,  4, 28,  4, 28,  6, 26,  6, 26,  6, 26,  6, 26,  8, 24,  8, 24,  8, 24,  8, 24$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode27_28,   db 30,  2, 30,  2, 30,  2, 30,  2, 28,  4, 28,  4, 28,  4, 28,  4, 27,  5, 27,  5, 27,  5, 27,  5, 22, 10, 22, 10, 22, 10, 22, 10$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode29_30,   db 23,  9, 23,  9, 23,  9, 23,  9, 14, 18, 14, 18, 14, 18, 14, 18, 19, 13, 19, 13, 19, 13, 19, 13,  6, 26,  6, 26,  6, 26,  6, 26$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode31_32,   db 15, 17, 15, 17, 15, 17, 15, 17, 30,  2, 30,  2, 30,  2, 30,  2, 11, 21, 11, 21, 11, 21, 11, 21, 22, 10, 22, 10, 22, 10, 22, 10$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode33,      db  6, 26,  6, 26,  6, 26,  6, 26, 12, 20, 12, 20, 12, 20, 12, 20, 18, 14, 18, 14, 18, 14, 18, 14, 24,  8, 24,  8, 24,  8, 24,  8$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode3_4,     db  6, 26,  6, 26,  6, 26,  6, 26, 12, 20, 12, 20, 12, 20, 12, 20, 11, 21, 11, 21, 11, 21, 11, 21, 22, 10, 22, 10, 22, 10, 22, 10$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode5_6,     db 15, 17, 15, 17, 15, 17, 15, 17, 30,  2, 30,  2, 30,  2, 30,  2, 19, 13, 19, 13, 19, 13, 19, 13,  6, 26,  6, 26,  6, 26,  6, 26$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode7_8,     db 23,  9, 23,  9, 23,  9, 23,  9, 14, 18, 14, 18, 14, 18, 14, 18, 27,  5, 27,  5, 27,  5, 27,  5, 22, 10, 22, 10, 22, 10, 22, 10$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_fact_mode9,       db 30,  2, 30,  2, 30,  2, 30,  2, 28,  4, 28,  4, 28,  4, 28,  4, 26,  6, 26,  6, 26,  6, 26,  6, 24,  8, 24,  8, 24,  8, 24,  8$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode10,      db  0,  1,  2,  3,  0,  1,  2,  3,  0,  1,  2,  3,  0,  1,  2,  3,  0,  1,  2,  3,  0,  1,  2,  3,  0,  1,  2,  3,  0,  1,  2,  3$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode11_12,   db  0,  9,  9, 10, 10, 11, 11, 12,  0,  9,  9, 10, 10, 11, 11, 12,  0,  9,  9, 10, 10, 11, 11, 12,  0,  9,  9, 10, 10, 11, 11, 12$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode13_14,   db  0,  9,  9, 10, 10, 11, 11, 12,  4,  0,  0,  9,  9, 10, 10, 11,  2,  0,  0,  9,  9, 10, 10, 11,  2,  0,  0,  9,  9, 10, 10, 11$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode15_16,   db  0,  9,  9, 10, 10, 11, 11, 12,  2,  0,  0,  9,  9, 10, 10, 11,  0,  9,  9, 10, 10, 11, 11, 12,  2,  0,  0,  9,  9, 10, 10, 11$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode17,      db  0,  9,  9, 10, 10, 11, 11, 12,  1,  0,  0,  9,  9, 10, 10, 11,  2,  1,  1,  0,  0,  9,  9, 10,  4,  2,  2,  1,  1,  0,  0,  9$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode18,      db  0,  1,  2,  3,  9,  0,  1,  2, 10,  9,  0,  1, 11, 10,  9,  0,  0,  1,  2,  3,  9,  0,  1,  2, 10,  9,  0,  1, 11, 10,  9,  0$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode19_20,   db  0,  1,  1,  2,  2,  3,  3,  4,  9,  0,  0,  1,  1,  2,  2,  3,  0,  1,  1,  2,  2,  3,  3,  4, 10,  0,  0,  1,  1,  2,  2,  3$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode2,       db  1,  2,  3,  4,  2,  3,  4,  5,  3,  4,  5,  6,  4,  5,  6,  7,  1,  2,  3,  4,  2,  3,  4,  5,  3,  4,  5,  6,  4,  5,  6,  7$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode21_22,   db  0,  1,  1,  2,  2,  3,  3,  4, 10,  0,  0,  1,  1,  2,  2,  3,  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode23_24,   db  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode26,      db  1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4,  1,  2,  3,  4$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode27_28,   db  1,  2,  2,  3,  3,  4,  4,  5,  1,  2,  2,  3,  3,  4,  4,  5,  1,  2,  2,  3,  3,  4,  4,  5,  1,  2,  2,  3,  3,  4,  4,  5$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode29_30,   db  1,  2,  2,  3,  3,  4,  4,  5,  2,  3,  3,  4,  4,  5,  5,  6,  2,  3,  3,  4,  4,  5,  5,  6,  2,  3,  3,  4,  4,  5,  5,  6$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode31_32,   db  1,  2,  2,  3,  3,  4,  4,  5,  2,  3,  3,  4,  4,  5,  5,  6,  1,  2,  2,  3,  3,  4,  4,  5,  2,  3,  3,  4,  4,  5,  5,  6$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode33,      db  1,  2,  2,  3,  3,  4,  4,  5,  2,  3,  3,  4,  4,  5,  5,  6,  3,  4,  4,  5,  5,  6,  6,  7,  4,  5,  5,  6,  6,  7,  7,  8$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode34,      db  2,  3,  4,  5,  3,  4,  5,  6,  4,  5,  6,  7,  5,  6,  7,  8,  2,  3,  4,  5,  3,  4,  5,  6,  4,  5,  6,  7,  5,  6,  7,  8$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode3_4,     db  0,  1,  1,  2,  2,  3,  3,  4,  1,  2,  2,  3,  3,  4,  4,  5,  0,  1,  1,  2,  2,  3,  3,  4,  1,  2,  2,  3,  3,  4,  4,  5$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode5_6,     db  0,  1,  1,  2,  2,  3,  3,  4,  1,  2,  2,  3,  3,  4,  4,  5,  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4$/;"	l
const	../../source/common/x86/intrapred8_allangs.asm	/^const allAng4_shuf_mode7_8,     db  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4,  0,  1,  1,  2,  2,  3,  3,  4$/;"	l
const	../../source/common/x86/ipfilter16.asm	/^const interp8_hpp_shuf,     db 0, 1, 2, 3, 4, 5, 6, 7, 2, 3, 4, 5, 6, 7, 8, 9$/;"	l
const	../../source/common/x86/ipfilter16.asm	/^const interp8_hpp_shuf_new, db 0, 1, 2, 3, 2, 3, 4, 5, 4, 5, 6, 7, 6, 7, 8, 9$/;"	l
const	../../source/common/x86/ipfilter16.asm	/^const interp8_hps_shuf,     dd 0, 4, 1, 5, 2, 6, 3, 7$/;"	l
const	../../source/common/x86/ipfilter16.asm	/^const tab_ChromaCoeffV,  times 8 dw 0, 64$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp4_horiz_shuf1,  db 0, 1, 2, 3, 1, 2, 3, 4, 2, 3, 4, 5, 3, 4, 5, 6$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp4_hpp_shuf,     times 2 db 0, 1, 2, 3, 1, 2, 3, 4, 8, 9, 10, 11, 9, 10, 11, 12$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp4_shuf, times 2 db 0, 1, 8, 9, 4, 5, 12, 13, 2, 3, 10, 11, 6, 7, 14, 15$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp4_vpp_shuf, times 2 db 0, 4, 1, 5, 2, 6, 3, 7, 8, 12, 9, 13, 10, 14, 11, 15$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp4_vpp_shuf1, dd 0, 1, 1, 2, 2, 3, 3, 4$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp8_hps_shuf,     dd 0, 4, 1, 5, 2, 6, 3, 7$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp_4tap_8x8_horiz_shuf,   dd 0, 4, 1, 5, 2, 6, 3, 7$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const interp_vert_shuf, times 2 db 0, 2, 1, 3, 2, 4, 3, 5, 4, 6, 5, 7, 6, 8, 7, 9$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const pb_8tap_hps_0, times 2 db 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const pb_LumaCoeffVer,  times 16 db 0, 0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const pd_526336, times 8 dd 8192*64+2048$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const pw_ChromaCoeffV,  times 8 dw 0, 64$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const pw_LumaCoeffVer,  times 8 dw 0, 0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_ChromaCoeff, db  0, 64,  0,  0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_ChromaCoeffV, times 4 dw 0, 64$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_ChromaCoeffVer_32,    times 16 db 0, 64$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_ChromaCoeff_V, times 8 db 0, 64$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_Cm,    db 0, 2, 1, 3, 0, 2, 1, 3, 0, 2, 1, 3, 0, 2, 1, 3$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_Lm,    db 0, 1, 2, 3, 4,  5,  6,  7,  1, 2, 3, 4,  5,  6,  7,  8$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_LumaCoeff,   db   0, 0,  0,  64,  0,   0,  0,  0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_LumaCoeffV,   times 4 dw 0, 0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_LumaCoeffVer, times 8 db 0, 0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_LumaCoeffVer_32,  times 16 db 0, 0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_Tm,    db 0, 1, 2, 3, 1, 2, 3, 4, 2, 3, 4, 5, 3, 4, 5, 6$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_Vm,    db 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tab_c_64_n64, times 8 db 64, -64$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tabw_ChromaCoeff, dw  0, 64,  0,  0$/;"	l
const	../../source/common/x86/ipfilter8.asm	/^const tabw_LumaCoeff,  dw   0, 0,  0,  64,  0,   0,  0,  0$/;"	l
const	../../source/common/x86/mc-a2.asm	/^const pd_0_5,       times 4 dq 0.5$/;"	l
const	../../source/common/x86/mc-a2.asm	/^const pd_inv256,    times 4 dq 0.00390625$/;"	l
const	../../source/common/x86/mc-a2.asm	/^const pq_256,       times 4 dq 256.0$/;"	l
const	../../source/compat/getopt/getopt.c	38;"	d	file:
contexts	../../source/encoder/search.h	/^    Entropy    contexts;$/;"	m	struct:X265_NS::Mode	access:public
convert_p2s	../../source/common/primitives.h	/^        filter_p2s_t   convert_p2s;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
coopSliceElapsedTime	../../source/encoder/slicetype.h	/^    int64_t         coopSliceElapsedTime;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
copy16	../../source/common/cudata.cpp	/^static void copy16(uint8_t* dst, uint8_t* src) { ((uint64_t*)dst)[0] = ((uint64_t*)src)[0]; ((uint64_t*)dst)[1] = ((uint64_t*)src)[1]; }$/;"	f	file:	signature:(uint8_t* dst, uint8_t* src)
copy256	../../source/common/cudata.cpp	/^static void copy256(uint8_t* dst, uint8_t* src) { memcpy(dst, src, 256); }$/;"	f	file:	signature:(uint8_t* dst, uint8_t* src)
copy4	../../source/common/cudata.cpp	/^static void copy4(uint8_t* dst, uint8_t* src)  { ((uint32_t*)dst)[0] = ((uint32_t*)src)[0]; }$/;"	f	file:	signature:(uint8_t* dst, uint8_t* src)
copy64	../../source/common/cudata.cpp	/^static void copy64(uint8_t* dst, uint8_t* src) { ((uint64_t*)dst)[0] = ((uint64_t*)src)[0]; ((uint64_t*)dst)[1] = ((uint64_t*)src)[1]; $/;"	f	file:	signature:(uint8_t* dst, uint8_t* src)
copyBits	../../source/common/bitstream.h	/^    void     copyBits(Bitstream* stream)     { m_partialByteBits = stream->m_partialByteBits; m_byteOccupancy = stream->m_byteOccupancy; m_partialByte = stream->m_partialByte; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:(Bitstream* stream)
copyContextsFrom	../../source/encoder/entropy.cpp	/^void Entropy::copyContextsFrom(const Entropy& src)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& src)
copyContextsFrom	../../source/encoder/entropy.h	/^    void copyContextsFrom(const Entropy& src);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const Entropy& src)
copyCtuInfo	../../source/encoder/encoder.cpp	/^void Encoder::copyCtuInfo(x265_ctu_info_t** frameCtuInfo, int poc)$/;"	f	class:Encoder	signature:(x265_ctu_info_t** frameCtuInfo, int poc)
copyCtuInfo	../../source/encoder/encoder.h	/^    void copyCtuInfo(x265_ctu_info_t** frameCtuInfo, int poc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_ctu_info_t** frameCtuInfo, int poc)
copyFrom	../../source/encoder/entropy.cpp	/^void Entropy::copyFrom(const Entropy& src)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& src)
copyFrom	../../source/encoder/entropy.h	/^    void copyFrom(const Entropy& src);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const Entropy& src)
copyFromPic	../../source/common/cudata.cpp	/^void CUData::copyFromPic(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp)$/;"	f	class:CUData	signature:(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp)
copyFromPic	../../source/common/cudata.h	/^    void     copyFromPic(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp = true);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& ctu, const CUGeom& cuGeom, int csp, bool copyQp = true)
copyFromPicYuv	../../source/common/yuv.cpp	/^void Yuv::copyFromPicYuv(const PicYuv& srcPic, uint32_t cuAddr, uint32_t absPartIdx)$/;"	f	class:Yuv	signature:(const PicYuv& srcPic, uint32_t cuAddr, uint32_t absPartIdx)
copyFromPicYuv	../../source/common/yuv.h	/^    void   copyFromPicYuv(const PicYuv& srcPicYuv, uint32_t cuAddr, uint32_t absPartIdx);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const PicYuv& srcPicYuv, uint32_t cuAddr, uint32_t absPartIdx)
copyFromPicture	../../source/common/picyuv.cpp	/^void PicYuv::copyFromPicture(const x265_picture& pic, const x265_param& param, int padx, int pady)$/;"	f	class:PicYuv	signature:(const x265_picture& pic, const x265_param& param, int padx, int pady)
copyFromPicture	../../source/common/picyuv.h	/^    void  copyFromPicture(const x265_picture&, const x265_param& param, int padx, int pady);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(const x265_picture&, const x265_param& param, int padx, int pady)
copyFromYuv	../../source/common/yuv.cpp	/^void Yuv::copyFromYuv(const Yuv& srcYuv)$/;"	f	class:Yuv	signature:(const Yuv& srcYuv)
copyFromYuv	../../source/common/yuv.h	/^    void   copyFromYuv(const Yuv& srcYuv);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const Yuv& srcYuv)
copyPUFromYuv	../../source/common/yuv.cpp	/^void Yuv::copyPUFromYuv(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma)$/;"	f	class:Yuv	signature:(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma)
copyPUFromYuv	../../source/common/yuv.h	/^    void   copyPUFromYuv(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma);$/;"	p	class:X265_NS::Yuv	access:public	signature:(const Yuv& srcYuv, uint32_t absPartIdx, int partEnum, bool bChroma)
copyPartFrom	../../source/common/cudata.cpp	/^void CUData::copyPartFrom(const CUData& subCU, const CUGeom& childGeom, uint32_t subPartIdx)$/;"	f	class:CUData	signature:(const CUData& subCU, const CUGeom& childGeom, uint32_t subPartIdx)
copyPartFrom	../../source/common/cudata.h	/^    void     copyPartFrom(const CUData& cu, const CUGeom& childGeom, uint32_t subPartIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& cu, const CUGeom& childGeom, uint32_t subPartIdx)
copyPartToPartChroma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartChroma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const$/;"	f	class:ShortYuv	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
copyPartToPartChroma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const$/;"	f	class:ShortYuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
copyPartToPartChroma	../../source/common/shortyuv.h	/^    void copyPartToPartChroma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
copyPartToPartChroma	../../source/common/shortyuv.h	/^    void copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
copyPartToPartChroma	../../source/common/yuv.cpp	/^void Yuv::copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
copyPartToPartChroma	../../source/common/yuv.h	/^    void copyPartToPartChroma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2SizeL) const
copyPartToPartLuma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartLuma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const$/;"	f	class:ShortYuv	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
copyPartToPartLuma	../../source/common/shortyuv.cpp	/^void ShortYuv::copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const$/;"	f	class:ShortYuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
copyPartToPartLuma	../../source/common/shortyuv.h	/^    void copyPartToPartLuma(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(ShortYuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
copyPartToPartLuma	../../source/common/shortyuv.h	/^    void copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const;$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
copyPartToPartLuma	../../source/common/yuv.cpp	/^void Yuv::copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
copyPartToPartLuma	../../source/common/yuv.h	/^    void copyPartToPartLuma(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx, uint32_t log2Size) const
copyPartToYuv	../../source/common/yuv.cpp	/^void Yuv::copyPartToYuv(Yuv& dstYuv, uint32_t absPartIdx) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
copyPartToYuv	../../source/common/yuv.h	/^    void   copyPartToYuv(Yuv& dstYuv, uint32_t absPartIdx) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
copyRceData	../../source/encoder/ratecontrol.cpp	/^inline void copyRceData(RateControlEntry* rce, RateControlEntry* rce2Pass)$/;"	f	namespace:__anon4	signature:(RateControlEntry* rce, RateControlEntry* rce2Pass)
copySaoAboveRef	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::copySaoAboveRef(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col)$/;"	f	class:FrameFilter::ParallelFilter	signature:(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col)
copySaoAboveRef	../../source/encoder/framefilter.h	/^        void copySaoAboveRef(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(const CUData *ctu, PicYuv* reconPic, uint32_t cuAddr, int col)
copyState	../../source/encoder/entropy.cpp	/^void Entropy::copyState(const Entropy& other)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& other)
copyState	../../source/encoder/entropy.h	/^    void copyState(const Entropy& other);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Entropy& other)
copyToPartYuv	../../source/common/yuv.cpp	/^void Yuv::copyToPartYuv(Yuv& dstYuv, uint32_t absPartIdx) const$/;"	f	class:Yuv	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
copyToPartYuv	../../source/common/yuv.h	/^    void   copyToPartYuv(Yuv& dstYuv, uint32_t absPartIdx) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(Yuv& dstYuv, uint32_t absPartIdx) const
copyToPic	../../source/common/cudata.cpp	/^void CUData::copyToPic(uint32_t depth) const$/;"	f	class:CUData	signature:(uint32_t depth) const
copyToPic	../../source/common/cudata.h	/^    void     copyToPic(uint32_t depth) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t depth) const
copyToPicYuv	../../source/common/yuv.cpp	/^void Yuv::copyToPicYuv(PicYuv& dstPic, uint32_t cuAddr, uint32_t absPartIdx) const$/;"	f	class:Yuv	signature:(PicYuv& dstPic, uint32_t cuAddr, uint32_t absPartIdx) const
copyToPicYuv	../../source/common/yuv.h	/^    void   copyToPicYuv(PicYuv& destPicYuv, uint32_t cuAddr, uint32_t absPartIdx) const;$/;"	p	class:X265_NS::Yuv	access:public	signature:(PicYuv& destPicYuv, uint32_t cuAddr, uint32_t absPartIdx) const
copy_cnt	../../source/common/primitives.h	/^        copy_cnt_t      copy_cnt;      \/\/ copy coeff while counting non-zero$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
copy_cnt_t	../../source/common/primitives.h	/^typedef uint32_t (*copy_cnt_t)(int16_t* coeff, const int16_t* residual, intptr_t resiStride);$/;"	t	namespace:X265_NS
copy_count	../../source/common/dct.cpp	/^uint32_t copy_count(int16_t* coeff, const int16_t* residual, intptr_t resiStride)$/;"	f	signature:(int16_t* coeff, const int16_t* residual, intptr_t resiStride)
copy_pp	../../source/common/primitives.h	/^            copy_pp_t      copy_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
copy_pp	../../source/common/primitives.h	/^            copy_pp_t    copy_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
copy_pp	../../source/common/primitives.h	/^        copy_pp_t       copy_pp;       \/\/ alias to pu[].copy_pp$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
copy_pp	../../source/common/primitives.h	/^        copy_pp_t      copy_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
copy_pp_t	../../source/common/primitives.h	/^typedef void (*copy_pp_t)(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride); \/\/ dst is aligned$/;"	t	namespace:X265_NS
copy_ps	../../source/common/primitives.h	/^            copy_ps_t      copy_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
copy_ps	../../source/common/primitives.h	/^        copy_ps_t       copy_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
copy_ps_t	../../source/common/primitives.h	/^typedef void (*copy_ps_t)(int16_t* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	t	namespace:X265_NS
copy_sp	../../source/common/primitives.h	/^            copy_sp_t      copy_sp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
copy_sp	../../source/common/primitives.h	/^        copy_sp_t       copy_sp;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
copy_sp_t	../../source/common/primitives.h	/^typedef void (*copy_sp_t)(pixel* dst, intptr_t dstStride, const int16_t* src, intptr_t srcStride);$/;"	t	namespace:X265_NS
copy_ss	../../source/common/primitives.h	/^            copy_ss_t      copy_ss;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
copy_ss	../../source/common/primitives.h	/^        copy_ss_t       copy_ss;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
copy_ss_t	../../source/common/primitives.h	/^typedef void (*copy_ss_t)(int16_t* dst, intptr_t dstStride, const int16_t* src, intptr_t srcStride);$/;"	t	namespace:X265_NS
cost	../../source/encoder/search.h	/^        Cost cost[NUM_SUBPART];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
cost	../../source/encoder/search.h	/^    uint32_t cost;$/;"	m	struct:X265_NS::MotionData	access:public
costC1C2Flag	../../source/common/primitives.h	/^    costC1C2Flag_t        costC1C2Flag;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
costC1C2Flag_c	../../source/common/dct.cpp	/^static uint32_t costC1C2Flag_c(uint16_t *absCoeff, intptr_t numC1Flag, uint8_t *baseCtxMod, intptr_t ctxOffset)$/;"	f	file:	signature:(uint16_t *absCoeff, intptr_t numC1Flag, uint8_t *baseCtxMod, intptr_t ctxOffset)
costC1C2Flag_t	../../source/common/primitives.h	/^typedef uint32_t (*costC1C2Flag_t)(uint16_t *absCoeff, intptr_t numC1Flag, uint8_t *baseCtxMod, intptr_t ctxOffset);$/;"	t	namespace:X265_NS
costCoeffNxN	../../source/common/primitives.h	/^    costCoeffNxN_t        costCoeffNxN;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
costCoeffNxN_avx2_bmi2	../../source/common/x86/pixel-util.h	/^uint32_t PFX(costCoeffNxN_avx2_bmi2(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase));$/;"	p	signature:(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase)
costCoeffNxN_c	../../source/common/dct.cpp	/^static uint32_t costCoeffNxN_c(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase)$/;"	f	file:	signature:(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase)
costCoeffNxN_sse4	../../source/common/x86/pixel-util.h	/^uint32_t PFX(costCoeffNxN_sse4(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase));$/;"	p	signature:(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase)
costCoeffNxN_t	../../source/common/primitives.h	/^typedef uint32_t (*costCoeffNxN_t)(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase);$/;"	t	namespace:X265_NS
costCoeffRemain	../../source/common/primitives.h	/^    costCoeffRemain_t     costCoeffRemain;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
costCoeffRemain_c	../../source/common/dct.cpp	/^static uint32_t costCoeffRemain_c(uint16_t *absCoeff, int numNonZero, int idx)$/;"	f	file:	signature:(uint16_t *absCoeff, int numNonZero, int idx)
costCoeffRemain_c0	../../source/encoder/entropy.cpp	/^uint32_t costCoeffRemain_c0(uint16_t *absCoeff, int numNonZero)$/;"	f	namespace:X265_NS	signature:(uint16_t *absCoeff, int numNonZero)
costCoeffRemain_t	../../source/common/primitives.h	/^typedef uint32_t (*costCoeffRemain_t)(uint16_t *absCoeff, int numNonZero, int idx);$/;"	t	namespace:X265_NS
costEst	../../source/common/lowres.h	/^    int64_t   costEst[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
costEst	../../source/encoder/slicetype.h	/^        int  costEst;$/;"	m	struct:X265_NS::CostEstimateGroup::Slice	access:public
costEstAq	../../source/common/lowres.h	/^    int64_t   costEstAq[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
costEstAq	../../source/encoder/slicetype.h	/^        int  costEstAq;$/;"	m	struct:X265_NS::CostEstimateGroup::Slice	access:public
count	../../source/common/frame.h	/^    double   count[4];$/;"	m	struct:X265_NS::RcStats	access:public
count	../../source/common/framedata.h	/^        uint32_t count[4];      \/* count and avgCost only used by Analysis at RD0..4 *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
count	../../source/common/quant.h	/^    uint32_t *count;$/;"	m	struct:X265_NS::NoiseReduction	access:public
count	../../source/encoder/encoder.h	/^    int count;$/;"	m	struct:X265_NS::RPSListNode	access:public
count	../../source/encoder/ratecontrol.h	/^    double count;$/;"	m	struct:X265_NS::Predictor	access:public
countBatches	../../source/encoder/slicetype.h	/^    uint64_t        countBatches;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
countCoopSlices	../../source/encoder/slicetype.h	/^    uint64_t        countCoopSlices;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
countExpectedBits	../../source/encoder/ratecontrol.cpp	/^double RateControl::countExpectedBits(int startPos, int endPos)$/;"	f	class:RateControl	signature:(int startPos, int endPos)
countExpectedBits	../../source/encoder/ratecontrol.h	/^    double countExpectedBits(int startPos, int framesCount);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int startPos, int framesCount)
countInterRDO	../../source/encoder/search.h	/^    uint64_t countInterRDO[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
countIntraAnalysis	../../source/encoder/search.h	/^    uint64_t countIntraAnalysis;$/;"	m	struct:X265_NS::CUStats	access:public
countIntraRDO	../../source/encoder/search.h	/^    uint64_t countIntraRDO[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
countLoopFilter	../../source/encoder/search.h	/^    uint64_t countLoopFilter;$/;"	m	struct:X265_NS::CUStats	access:public
countMotionEstimate	../../source/encoder/search.h	/^    uint64_t countMotionEstimate;$/;"	m	struct:X265_NS::CUStats	access:public
countPMEMasters	../../source/encoder/search.h	/^    uint64_t countPMEMasters;$/;"	m	struct:X265_NS::CUStats	access:public
countPMETasks	../../source/encoder/search.h	/^    uint64_t countPMETasks;$/;"	m	struct:X265_NS::CUStats	access:public
countPModeMasters	../../source/encoder/search.h	/^    uint64_t countPModeMasters;$/;"	m	struct:X265_NS::CUStats	access:public
countPModeTasks	../../source/encoder/search.h	/^    uint64_t countPModeTasks;$/;"	m	struct:X265_NS::CUStats	access:public
countWeightAnalyze	../../source/encoder/search.h	/^    uint64_t countWeightAnalyze;$/;"	m	struct:X265_NS::CUStats	access:public
count_nonzero	../../source/common/primitives.h	/^        count_nonzero_t count_nonzero;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
count_nonzero_c	../../source/common/dct.cpp	/^int  count_nonzero_c(const int16_t* quantCoeff)$/;"	f	signature:(const int16_t* quantCoeff)
count_nonzero_t	../../source/common/primitives.h	/^typedef int(*count_nonzero_t)(const int16_t* quantCoeff);$/;"	t	namespace:X265_NS
cpbFinalAT	../../source/encoder/ratecontrol.h	/^    double cpbFinalAT;$/;"	m	struct:X265_NS::HRDTiming	access:public
cpbInitialAT	../../source/encoder/ratecontrol.h	/^    double cpbInitialAT;$/;"	m	struct:X265_NS::HRDTiming	access:public
cpbRemovalDelayLength	../../source/common/slice.h	/^    uint32_t cpbRemovalDelayLength;$/;"	m	struct:X265_NS::HRDInfo	access:public
cpbRemovalTime	../../source/encoder/ratecontrol.h	/^    double cpbRemovalTime;$/;"	m	struct:X265_NS::HRDTiming	access:public
cpbSizeScale	../../source/common/slice.h	/^    uint32_t cpbSizeScale;$/;"	m	struct:X265_NS::HRDInfo	access:public
cpbSizeValue	../../source/common/slice.h	/^    uint32_t cpbSizeValue;$/;"	m	struct:X265_NS::HRDInfo	access:public
cplxrSum	../../source/common/frame.h	/^    double   cplxrSum;$/;"	m	struct:X265_NS::RcStats	access:public
cpu_cpuid	../../source/common/cpu.cpp	/^void PFX(cpu_cpuid)(uint32_t op, uint32_t *eax, uint32_t *ebx, uint32_t *ecx, uint32_t *edx);$/;"	p	file:	signature:(uint32_t op, uint32_t *eax, uint32_t *ebx, uint32_t *ecx, uint32_t *edx)
cpu_cpuid_test	../../source/common/cpu.cpp	/^int PFX(cpu_cpuid_test)(void);$/;"	p	file:	signature:(void)
cpu_detect	../../source/common/cpu.cpp	/^uint32_t cpu_detect(void)$/;"	f	namespace:X265_NS	signature:(void)
cpu_detect	../../source/common/cpu.h	/^uint32_t cpu_detect(void);$/;"	p	namespace:X265_NS	signature:(void)
cpu_emms	../../source/common/cpu.h	/^extern "C" void PFX(cpu_emms)(void);$/;"	p	signature:(void)
cpu_fast_neon_mrc_test	../../source/common/cpu.cpp	/^int PFX(cpu_fast_neon_mrc_test)(void);$/;"	p	file:	signature:(void)
cpu_name_t	../../source/common/cpu.h	/^struct cpu_name_t$/;"	s	namespace:X265_NS
cpu_names	../../source/common/cpu.cpp	/^const cpu_name_t cpu_names[] =$/;"	m	namespace:X265_NS	file:
cpu_neon_test	../../source/common/cpu.cpp	/^void PFX(cpu_neon_test)(void);$/;"	p	file:	signature:(void)
cpu_xgetbv	../../source/common/cpu.cpp	/^void PFX(cpu_xgetbv)(uint32_t op, uint32_t *eax, uint32_t *edx);$/;"	p	file:	signature:(uint32_t op, uint32_t *eax, uint32_t *edx)
cpy1Dto2D_shl	../../source/common/pixel.cpp	/^void cpy1Dto2D_shl(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)
cpy1Dto2D_shl	../../source/common/primitives.h	/^        cpy1Dto2D_shl_t cpy1Dto2D_shl;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
cpy1Dto2D_shl_t	../../source/common/primitives.h	/^typedef void (*cpy1Dto2D_shl_t)(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift);$/;"	t	namespace:X265_NS
cpy1Dto2D_shr	../../source/common/pixel.cpp	/^void cpy1Dto2D_shr(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift)
cpy1Dto2D_shr	../../source/common/primitives.h	/^        cpy1Dto2D_shr_t cpy1Dto2D_shr;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
cpy1Dto2D_shr_t	../../source/common/primitives.h	/^typedef void (*cpy1Dto2D_shr_t)(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift);$/;"	t	namespace:X265_NS
cpy2Dto1D_shl	../../source/common/pixel.cpp	/^void cpy2Dto1D_shl(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
cpy2Dto1D_shl	../../source/common/primitives.h	/^        cpy2Dto1D_shl_t cpy2Dto1D_shl;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
cpy2Dto1D_shl_t	../../source/common/primitives.h	/^typedef void (*cpy2Dto1D_shl_t)(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	t	namespace:X265_NS
cpy2Dto1D_shr	../../source/common/pixel.cpp	/^void cpy2Dto1D_shr(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)$/;"	f	namespace:__anon31	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
cpy2Dto1D_shr	../../source/common/primitives.h	/^        cpy2Dto1D_shr_t cpy2Dto1D_shr;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
cpy2Dto1D_shr_t	../../source/common/primitives.h	/^typedef void (*cpy2Dto1D_shr_t)(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	t	namespace:X265_NS
crcFinish	../../source/common/picyuv.cpp	/^void crcFinish(uint32_t& crcVal, uint8_t digest[16])$/;"	f	namespace:X265_NS	signature:(uint32_t& crcVal, uint8_t digest[16])
crcFinish	../../source/common/picyuv.h	/^void crcFinish(uint32_t & crc, uint8_t digest[16]);$/;"	p	namespace:X265_NS	signature:(uint32_t & crc, uint8_t digest[16])
create	../../source/common/cudata.h	/^    bool create(uint32_t depth, uint32_t csp, uint32_t numInstances, const x265_param& param)$/;"	f	struct:X265_NS::CUDataMemPool	access:public	signature:(uint32_t depth, uint32_t csp, uint32_t numInstances, const x265_param& param)
create	../../source/common/frame.cpp	/^bool Frame::create(x265_param *param, float* quantOffsets)$/;"	f	class:Frame	signature:(x265_param *param, float* quantOffsets)
create	../../source/common/frame.h	/^    bool create(x265_param *param, float* quantOffsets);$/;"	p	class:X265_NS::Frame	access:public	signature:(x265_param *param, float* quantOffsets)
create	../../source/common/framedata.cpp	/^bool FrameData::create(const x265_param& param, const SPS& sps, int csp)$/;"	f	class:FrameData	signature:(const x265_param& param, const SPS& sps, int csp)
create	../../source/common/framedata.h	/^    bool create(const x265_param& param, const SPS& sps, int csp);$/;"	p	class:X265_NS::FrameData	access:public	signature:(const x265_param& param, const SPS& sps, int csp)
create	../../source/common/lowres.cpp	/^bool Lowres::create(PicYuv *origPic, int _bframes, bool bAQEnabled, uint32_t qgSize)$/;"	f	class:Lowres	signature:(PicYuv *origPic, int _bframes, bool bAQEnabled, uint32_t qgSize)
create	../../source/common/lowres.h	/^    bool create(PicYuv *origPic, int _bframes, bool bAqEnabled, uint32_t qgSize);$/;"	p	struct:X265_NS::Lowres	access:public	signature:(PicYuv *origPic, int _bframes, bool bAqEnabled, uint32_t qgSize)
create	../../source/common/picyuv.cpp	/^bool PicYuv::create(x265_param* param, pixel *pixelbuf)$/;"	f	class:PicYuv	signature:(x265_param* param, pixel *pixelbuf)
create	../../source/common/picyuv.h	/^    bool  create(x265_param* param, pixel *pixelbuf = NULL);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(x265_param* param, pixel *pixelbuf = NULL)
create	../../source/common/shortyuv.cpp	/^bool ShortYuv::create(uint32_t size, int csp)$/;"	f	class:ShortYuv	signature:(uint32_t size, int csp)
create	../../source/common/shortyuv.h	/^    bool create(uint32_t size, int csp);$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(uint32_t size, int csp)
create	../../source/common/threadpool.cpp	/^bool ThreadPool::create(int numThreads, int maxProviders, uint64_t nodeMask)$/;"	f	class:X265_NS::ThreadPool	signature:(int numThreads, int maxProviders, uint64_t nodeMask)
create	../../source/common/threadpool.h	/^    bool create(int numThreads, int maxProviders, uint64_t nodeMask);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(int numThreads, int maxProviders, uint64_t nodeMask)
create	../../source/common/yuv.cpp	/^bool Yuv::create(uint32_t size, int csp)$/;"	f	class:Yuv	signature:(uint32_t size, int csp)
create	../../source/common/yuv.h	/^    bool   create(uint32_t size, int csp);$/;"	p	class:X265_NS::Yuv	access:public	signature:(uint32_t size, int csp)
create	../../source/encoder/analysis.cpp	/^bool Analysis::create(ThreadLocalData *tld)$/;"	f	class:Analysis	signature:(ThreadLocalData *tld)
create	../../source/encoder/analysis.h	/^    bool create(ThreadLocalData* tld);$/;"	p	class:X265_NS::Analysis	access:public	signature:(ThreadLocalData* tld)
create	../../source/encoder/encoder.cpp	/^void Encoder::create()$/;"	f	class:Encoder	signature:()
create	../../source/encoder/encoder.h	/^    void create();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
create	../../source/encoder/sao.cpp	/^bool SAO::create(x265_param* param, int initCommon)$/;"	f	class:X265_NS::SAO	signature:(x265_param* param, int initCommon)
create	../../source/encoder/sao.h	/^    bool create(x265_param* param, int initCommon);$/;"	p	class:X265_NS::SAO	access:public	signature:(x265_param* param, int initCommon)
create	../../source/encoder/slicetype.cpp	/^bool Lookahead::create()$/;"	f	class:Lookahead	signature:()
create	../../source/encoder/slicetype.h	/^    bool    create();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
createFromRootNode	../../source/encoder/sao.cpp	/^void SAO::createFromRootNode(SAO* root)$/;"	f	class:X265_NS::SAO	signature:(SAO* root)
createFromRootNode	../../source/encoder/sao.h	/^    void createFromRootNode(SAO *root);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAO *root)
createOffsets	../../source/common/picyuv.cpp	/^bool PicYuv::createOffsets(const SPS& sps)$/;"	f	class:PicYuv	signature:(const SPS& sps)
createOffsets	../../source/common/picyuv.h	/^    bool  createOffsets(const SPS& sps);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(const SPS& sps)
csp	../../source/encoder/weightPrediction.cpp	/^    int         csp;$/;"	m	struct:__anon22::Cache	file:	access:public
csp	../../source/input/input.h	/^    int csp;$/;"	m	struct:X265_NS::InputFileInfo	access:public
ctr16	../../source/common/arm/dct-a.S	/^ctr16:$/;"	l
ctr4	../../source/common/arm/dct-a.S	/^ctr4:$/;"	l
ctr8	../../source/common/arm/dct-a.S	/^ctr8:$/;"	l
ctuAddr	../../source/common/predict.h	/^    uint32_t     ctuAddr;      \/\/ raster index of current CTU within its picture$/;"	m	struct:X265_NS::PredictionUnit	access:public
ctuAddr	../../source/encoder/motion.h	/^    int ctuAddr;$/;"	m	class:X265_NS::MotionEstimate	access:protected
ctuDistortion	../../source/common/framedata.h	/^    sse_t*        ctuDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
ctuParam	../../source/common/common.h	/^    SaoCtuParam* ctuParam[3];$/;"	m	struct:X265_NS::SAOParam	access:public
ctxCbf	../../source/common/contexts.h	/^static const uint32_t ctxCbf[3][5] = { { 1, 0, 0, 0, 0 }, { 2, 3, 4, 5, 6 }, { 2, 3, 4, 5, 6 } };$/;"	m	namespace:X265_NS
cu	../../source/common/primitives.h	/^        cu[NUM_CU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma	typeref:struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
cu	../../source/common/primitives.h	/^    cu[NUM_CU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives	typeref:struct:X265_NS::EncoderPrimitives::CU	access:public
cu	../../source/encoder/search.h	/^    CUData     cu;$/;"	m	struct:X265_NS::Mode	access:public
cuAbsPartIdx	../../source/common/predict.h	/^    uint32_t     cuAbsPartIdx; \/\/ z-order offset of current CU within its CTU$/;"	m	struct:X265_NS::PredictionUnit	access:public
cuAddr	../../source/common/cudata.h	/^    uint32_t cuAddr[2];$/;"	m	struct:X265_NS::InterNeighbourMV	access:public
cuGeom	../../source/encoder/analysis.h	/^        const CUGeom& cuGeom;$/;"	m	class:X265_NS::Analysis::PMODE	access:public
cuGeom	../../source/encoder/search.h	/^        const CUGeom& cuGeom;$/;"	m	class:X265_NS::Search::PME	access:public
cuInterDistribution	../../source/common/framedata.h	/^    uint64_t    cuInterDistribution[NUM_CU_DEPTH][INTER_MODES];$/;"	m	struct:X265_NS::FrameStats	access:public
cuInterDistribution	../../source/encoder/frameencoder.h	/^    uint64_t cuInterDistribution[4][INTER_MODES];$/;"	m	struct:X265_NS::StatisticLog	access:public
cuIntraDistribution	../../source/common/framedata.h	/^    uint64_t    cuIntraDistribution[NUM_CU_DEPTH][INTRA_MODES];$/;"	m	struct:X265_NS::FrameStats	access:public
cuIntraDistribution	../../source/encoder/frameencoder.h	/^    uint64_t cuIntraDistribution[4][INTRA_MODES];$/;"	m	struct:X265_NS::StatisticLog	access:public
cuMemPool	../../source/encoder/analysis.h	/^        CUDataMemPool  cuMemPool;$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
cuOffsetC	../../source/common/slice.h	/^    intptr_t* cuOffsetC;$/;"	m	struct:X265_NS::SPS	access:public
cuOffsetY	../../source/common/slice.h	/^    intptr_t* cuOffsetY;$/;"	m	struct:X265_NS::SPS	access:public
cuTree	../../source/encoder/slicetype.cpp	/^void Lookahead::cuTree(Lowres **frames, int numframes, bool bIntra)$/;"	f	class:Lookahead	signature:(Lowres **frames, int numframes, bool bIntra)
cuTree	../../source/encoder/slicetype.h	/^    void    cuTree(Lowres **frames, int numframes, bool bintra);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int numframes, bool bintra)
cuTreeFinish	../../source/encoder/slicetype.cpp	/^void Lookahead::cuTreeFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance)$/;"	f	class:Lookahead	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance)
cuTreeFinish	../../source/encoder/slicetype.h	/^    void    cuTreeFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, double averageDuration, int ref0Distance, int ref1Distance)
cuTreeFix8Pack	../../source/common/pixel.cpp	/^static void cuTreeFix8Pack(uint16_t *dst, double *src, int count)$/;"	f	namespace:__anon31	signature:(uint16_t *dst, double *src, int count)
cuTreeFix8Unpack	../../source/common/pixel.cpp	/^static void cuTreeFix8Unpack(double *dst, uint16_t *src, int count)$/;"	f	namespace:__anon31	signature:(double *dst, uint16_t *src, int count)
cuTreeNonrefbFinish	../../source/encoder/slicetype.cpp	/^void Lookahead::cuTreeNonrefbFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance)$/;"	f	class:Lookahead	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance)
cuTreeNonrefbFinish	../../source/encoder/slicetype.h	/^    void    cuTreeNonrefbFinish(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int curIdx, int curnonbIdx, int lastnonbIdx, int ref0Distance, int ref1Distance)
cuTreeReadFor2Pass	../../source/encoder/ratecontrol.cpp	/^bool RateControl::cuTreeReadFor2Pass(Frame* frame)$/;"	f	class:RateControl	signature:(Frame* frame)
cuTreeReadFor2Pass	../../source/encoder/ratecontrol.h	/^    bool cuTreeReadFor2Pass(Frame* curFrame);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame)
cubcast_t	../../source/common/cudata.h	/^typedef void(*cubcast_t)(uint8_t* dst, uint8_t val); \/\/ dst is aligned to MIN(size, 32)$/;"	t	namespace:X265_NS
cucopy_t	../../source/common/cudata.h	/^typedef void(*cucopy_t)(uint8_t* dst, uint8_t* src); \/\/ dst and src are aligned to MIN(size, 32)$/;"	t	namespace:X265_NS
cumulativePNorm	../../source/common/frame.h	/^    double   cumulativePNorm;$/;"	m	struct:X265_NS::RcStats	access:public
cumulativePQp	../../source/common/frame.h	/^    double   cumulativePQp;$/;"	m	struct:X265_NS::RcStats	access:public
cur	../../source/encoder/sao.h	/^        Entropy cur;$/;"	m	struct:X265_NS::SAO::SAOContexts	access:public
cur	../../source/encoder/search.h	/^    Entropy  cur;     \/* starting context for current CU *\/$/;"	m	struct:X265_NS::RQTData	access:public
cutree_fix8_pack	../../source/common/primitives.h	/^typedef void (*cutree_fix8_pack)(uint16_t *dst, double *src, int count);$/;"	t	namespace:X265_NS
cutree_fix8_unpack	../../source/common/primitives.h	/^typedef void (*cutree_fix8_unpack)(double *dst, uint16_t *src, int count);$/;"	t	namespace:X265_NS
cutree_fix8_unpack_shuf	../../source/common/x86/mc-a2.asm	/^cutree_fix8_unpack_shuf: db -1,-1, 0, 1,-1,-1, 2, 3,-1,-1, 4, 5,-1,-1, 6, 7$/;"	d
cutree_propagate_cost	../../source/common/primitives.h	/^typedef void (*cutree_propagate_cost) (int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts, const int32_t* invQscales, const double* fpsFactor, int len);$/;"	t	namespace:X265_NS
dcPredFilter	../../source/common/intrapred.cpp	/^static void dcPredFilter(const pixel* above, const pixel* left, pixel* dst, intptr_t dststride, int size)$/;"	f	namespace:__anon17	signature:(const pixel* above, const pixel* left, pixel* dst, intptr_t dststride, int size)
dct	../../source/common/primitives.h	/^        dct_t           dct;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
dct16	../../source/common/vec/dct-ssse3.cpp	/^static void dct16(const int16_t *src, int16_t *dst, intptr_t stride)$/;"	f	file:	signature:(const int16_t *src, int16_t *dst, intptr_t stride)
dct16_altivec	../../source/common/ppc/dct_altivec.cpp	/^static void dct16_altivec(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct16_c	../../source/common/dct.cpp	/^static void dct16_c(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct16_shuf1	../../source/common/x86/dct8.asm	/^dct16_shuf1:     times 2 db 14, 15, 12, 13, 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 0, 1$/;"	l
dct16_shuf2	../../source/common/x86/dct8.asm	/^dct16_shuf2:    times 2 db 0, 1, 14, 15, 2, 3, 12, 13, 4, 5, 10, 11, 6, 7, 8, 9$/;"	l
dct32	../../source/common/vec/dct-ssse3.cpp	/^static void dct32(const int16_t *src, int16_t *dst, intptr_t stride)$/;"	f	file:	signature:(const int16_t *src, int16_t *dst, intptr_t stride)
dct32_altivec	../../source/common/ppc/dct_altivec.cpp	/^static void dct32_altivec(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct32_c	../../source/common/dct.cpp	/^static void dct32_c(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct4_c	../../source/common/dct.cpp	/^static void dct4_c(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct4_shuf	../../source/common/x86/dct8.asm	/^dct4_shuf:      db 0, 1, 2, 3, 8, 9, 10, 11, 6, 7, 4, 5, 14, 15, 12, 13$/;"	d
dct8_c	../../source/common/dct.cpp	/^static void dct8_c(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct8_shuf	../../source/common/x86/dct8.asm	/^dct8_shuf:      times 2 db 6, 7, 4, 5, 2, 3, 0, 1, 14, 15, 12, 13, 10, 11, 8, 9$/;"	l
dct_16x16_neon	../../source/common/arm/dct8.h	/^void PFX(dct_16x16_neon)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct_4x4_neon	../../source/common/arm/dct8.h	/^void PFX(dct_4x4_neon)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct_8x8_neon	../../source/common/arm/dct8.h	/^void PFX(dct_8x8_neon)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dct_t	../../source/common/primitives.h	/^typedef void (*dct_t)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	t	namespace:X265_NS
deblockCTU	../../source/common/deblock.cpp	/^void Deblock::deblockCTU(const CUData* ctu, const CUGeom& cuGeom, int32_t dir)$/;"	f	class:Deblock	signature:(const CUData* ctu, const CUGeom& cuGeom, int32_t dir)
deblockCTU	../../source/common/deblock.h	/^    static void deblockCTU(const CUData* ctu, const CUGeom& cuGeom, int32_t dir);$/;"	p	class:X265_NS::Deblock	access:public	signature:(const CUData* ctu, const CUGeom& cuGeom, int32_t dir)
deblockCU	../../source/common/deblock.cpp	/^void Deblock::deblockCU(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[])
deblockCU	../../source/common/deblock.h	/^    static void deblockCU(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cu, const CUGeom& cuGeom, const int32_t dir, uint8_t blockStrength[])
deblockingFilterBetaOffsetDiv2	../../source/common/slice.h	/^    int      deblockingFilterBetaOffsetDiv2;$/;"	m	struct:X265_NS::PPS	access:public
deblockingFilterTcOffsetDiv2	../../source/common/slice.h	/^    int      deblockingFilterTcOffsetDiv2;$/;"	m	struct:X265_NS::PPS	access:public
decay	../../source/encoder/ratecontrol.h	/^    double decay;$/;"	m	struct:X265_NS::Predictor	access:public
decodingRefreshMarking	../../source/encoder/dpb.cpp	/^void DPB::decodingRefreshMarking(int pocCurr, NalUnitType nalUnitType)$/;"	f	class:DPB	signature:(int pocCurr, NalUnitType nalUnitType)
decodingRefreshMarking	../../source/encoder/dpb.h	/^    void decodingRefreshMarking(int pocCurr, NalUnitType nalUnitType);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int pocCurr, NalUnitType nalUnitType)
defaultAnalysisFileName	../../source/encoder/encoder.cpp	/^static const char* defaultAnalysisFileName = "x265_analysis.dat";$/;"	v	file:
defaultDisplayWindow	../../source/common/slice.h	/^    Window     defaultDisplayWindow;$/;"	m	struct:X265_NS::VUI	access:public
deinterleave_shuf	../../source/common/x86/mc-a2.asm	/^deinterleave_shuf: times 2 db 0,2,4,6,8,10,12,14,1,3,5,7,9,11,13,15$/;"	l
deinterleave_shuf	../../source/common/x86/pixel-util8.asm	/^deinterleave_shuf:      times  2 db 0, 2, 4, 6, 8, 10, 12, 14, 1, 3, 5, 7, 9, 11, 13, 15$/;"	l
deinterleave_shuf32a	../../source/common/x86/mc-a2.asm	/^deinterleave_shuf32a: SHUFFLE_MASK_W 0,2,4,6,8,10,12,14$/;"	l
deinterleave_shuf32a	../../source/common/x86/mc-a2.asm	/^deinterleave_shuf32a: db 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30$/;"	d
deinterleave_shuf32b	../../source/common/x86/mc-a2.asm	/^deinterleave_shuf32b: SHUFFLE_MASK_W 1,3,5,7,9,11,13,15$/;"	l
deinterleave_shuf32b	../../source/common/x86/mc-a2.asm	/^deinterleave_shuf32b: db 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31$/;"	d
deinterleave_word_shuf	../../source/common/x86/pixel-util8.asm	/^deinterleave_word_shuf: times  2 db 0, 1, 4, 5, 8, 9, 12, 13, 2, 3, 6, 7, 10, 11, 14, 15$/;"	l
deltaPOC	../../source/common/slice.h	/^    int  deltaPOC[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
denoiseDct	../../source/common/primitives.h	/^    denoiseDct_t          denoiseDct;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
denoiseDct_altivec	../../source/common/ppc/dct_altivec.cpp	/^void denoiseDct_altivec(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff)$/;"	f	signature:(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff)
denoiseDct_c	../../source/common/dct.cpp	/^static void denoiseDct_c(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff)$/;"	f	file:	signature:(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff)
denoiseDct_t	../../source/common/primitives.h	/^typedef void (*denoiseDct_t)(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff);$/;"	t	namespace:X265_NS
denoiseDct_unroll8_altivec	../../source/common/ppc/dct_altivec.cpp	/^inline void denoiseDct_unroll8_altivec(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff, int index_offset)$/;"	f	signature:(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff, int index_offset)
denoise_dct_avx2	../../source/common/x86/dct8.h	/^void PFX(denoise_dct_avx2)(int16_t* dct, uint32_t* sum, const uint16_t* offset, int size);$/;"	p	signature:(int16_t* dct, uint32_t* sum, const uint16_t* offset, int size)
denoise_dct_sse4	../../source/common/x86/dct8.h	/^void PFX(denoise_dct_sse4)(int16_t* dct, uint32_t* sum, const uint16_t* offset, int size);$/;"	p	signature:(int16_t* dct, uint32_t* sum, const uint16_t* offset, int size)
depth	../../source/common/cudata.h	/^    uint32_t depth;         \/\/ depth of this CU relative from CTU$/;"	m	struct:X265_NS::CUGeom	access:public
depth	../../source/common/framedata.h	/^    uint8_t*      depth;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
depth	../../source/common/framedata.h	/^    uint8_t*    depth;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
depth	../../source/common/framedata.h	/^    uint8_t*  depth;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
depth	../../source/input/input.h	/^    int depth;$/;"	m	struct:X265_NS::InputFileInfo	access:public
depth	../../source/input/y4m.h	/^    int depth;$/;"	m	class:X265_NS::Y4MInput	access:protected
depth	../../source/input/yuv.h	/^    uint32_t depth;$/;"	m	class:X265_NS::YUVInput	access:protected
depth	../../source/output/yuv.h	/^    uint32_t depth;$/;"	m	class:X265_NS::YUVOutput	access:protected
dequant_loop1	../../source/common/arm/pixel-util.S	/^dequant_loop1:$/;"	l
dequant_loop2	../../source/common/arm/pixel-util.S	/^dequant_loop2:$/;"	l
dequant_normal	../../source/common/primitives.h	/^    dequant_normal_t      dequant_normal;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
dequant_normal_c	../../source/common/dct.cpp	/^static void dequant_normal_c(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift)$/;"	f	file:	signature:(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift)
dequant_normal_t	../../source/common/primitives.h	/^typedef void (*dequant_normal_t)(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift);$/;"	t	namespace:X265_NS
dequant_scaling	../../source/common/primitives.h	/^    dequant_scaling_t     dequant_scaling;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
dequant_scaling	../../source/common/vec/dct-sse41.cpp	/^static void dequant_scaling(const int16_t* quantCoef, const int32_t *deQuantCoef, int16_t* coef, int num, int per, int shift)$/;"	f	file:	signature:(const int16_t* quantCoef, const int32_t *deQuantCoef, int16_t* coef, int num, int per, int shift)
dequant_scaling_c	../../source/common/dct.cpp	/^static void dequant_scaling_c(const int16_t* quantCoef, const int32_t* deQuantCoef, int16_t* coef, int num, int per, int shift)$/;"	f	file:	signature:(const int16_t* quantCoef, const int32_t* deQuantCoef, int16_t* coef, int num, int per, int shift)
dequant_scaling_t	../../source/common/primitives.h	/^typedef void (*dequant_scaling_t)(const int16_t* src, const int32_t* dequantCoef, int16_t* dst, int num, int mcqp_miper, int shift);$/;"	t	namespace:X265_NS
dequeueRow	../../source/common/wavefront.cpp	/^bool WaveFront::dequeueRow(int row)$/;"	f	class:X265_NS::WaveFront	signature:(int row)
dequeueRow	../../source/common/wavefront.h	/^    bool dequeueRow(int row);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row)
deriveCenterIdx	../../source/common/cudata.cpp	/^uint32_t CUData::deriveCenterIdx(uint32_t puIdx) const$/;"	f	class:CUData	signature:(uint32_t puIdx) const
deriveCenterIdx	../../source/common/cudata.h	/^    uint32_t deriveCenterIdx(uint32_t puIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx) const
deriveLeftBottomIdx	../../source/common/cudata.cpp	/^uint32_t CUData::deriveLeftBottomIdx(uint32_t puIdx) const$/;"	f	class:CUData	signature:(uint32_t puIdx) const
deriveLeftBottomIdx	../../source/common/cudata.h	/^    uint32_t deriveLeftBottomIdx(uint32_t puIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx) const
deriveLeftRightTopIdx	../../source/common/cudata.cpp	/^void CUData::deriveLeftRightTopIdx(uint32_t partIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const$/;"	f	class:CUData	signature:(uint32_t partIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const
deriveLeftRightTopIdx	../../source/common/cudata.h	/^    void     deriveLeftRightTopIdx(uint32_t puIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx, uint32_t& partIdxLT, uint32_t& partIdxRT) const
deriveRightBottomIdx	../../source/common/cudata.cpp	/^uint32_t CUData::deriveRightBottomIdx(uint32_t puIdx) const$/;"	f	class:CUData	signature:(uint32_t puIdx) const
deriveRightBottomIdx	../../source/common/cudata.h	/^    uint32_t deriveRightBottomIdx(uint32_t puIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t puIdx) const
destroy	../../source/common/cudata.h	/^    void destroy()$/;"	f	struct:X265_NS::CUDataMemPool	access:public	signature:()
destroy	../../source/common/frame.cpp	/^void Frame::destroy()$/;"	f	class:Frame	signature:()
destroy	../../source/common/frame.h	/^    void destroy();$/;"	p	class:X265_NS::Frame	access:public	signature:()
destroy	../../source/common/framedata.cpp	/^void FrameData::destroy()$/;"	f	class:FrameData	signature:()
destroy	../../source/common/framedata.h	/^    void destroy();$/;"	p	class:X265_NS::FrameData	access:public	signature:()
destroy	../../source/common/lowres.cpp	/^void Lowres::destroy()$/;"	f	class:Lowres	signature:()
destroy	../../source/common/lowres.h	/^    void destroy();$/;"	p	struct:X265_NS::Lowres	access:public	signature:()
destroy	../../source/common/picyuv.cpp	/^void PicYuv::destroy()$/;"	f	class:PicYuv	signature:()
destroy	../../source/common/picyuv.h	/^    void  destroy();$/;"	p	class:X265_NS::PicYuv	access:public	signature:()
destroy	../../source/common/shortyuv.cpp	/^void ShortYuv::destroy()$/;"	f	class:ShortYuv	signature:()
destroy	../../source/common/shortyuv.h	/^    void destroy();$/;"	p	class:X265_NS::ShortYuv	access:public	signature:()
destroy	../../source/common/yuv.cpp	/^void Yuv::destroy()$/;"	f	class:Yuv	signature:()
destroy	../../source/common/yuv.h	/^    void   destroy();$/;"	p	class:X265_NS::Yuv	access:public	signature:()
destroy	../../source/encoder/analysis.cpp	/^void Analysis::destroy()$/;"	f	class:Analysis	signature:()
destroy	../../source/encoder/analysis.h	/^    void destroy() { analysis.destroy(); }$/;"	f	struct:X265_NS::ThreadLocalData	access:public	signature:()
destroy	../../source/encoder/analysis.h	/^    void destroy();$/;"	p	class:X265_NS::Analysis	access:public	signature:()
destroy	../../source/encoder/bitcost.cpp	/^void BitCost::destroy()$/;"	f	class:BitCost	signature:()
destroy	../../source/encoder/bitcost.h	/^    static void destroy();$/;"	p	class:X265_NS::BitCost	access:public	signature:()
destroy	../../source/encoder/encoder.cpp	/^void Encoder::destroy()$/;"	f	class:Encoder	signature:()
destroy	../../source/encoder/encoder.h	/^    void destroy();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
destroy	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::destroy()$/;"	f	class:X265_NS::FrameEncoder	signature:()
destroy	../../source/encoder/frameencoder.h	/^    void destroy();$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:()
destroy	../../source/encoder/framefilter.cpp	/^void FrameFilter::destroy()$/;"	f	class:FrameFilter	signature:()
destroy	../../source/encoder/framefilter.h	/^    void destroy();$/;"	p	class:X265_NS::FrameFilter	access:public	signature:()
destroy	../../source/encoder/ratecontrol.cpp	/^void RateControl::destroy()$/;"	f	class:RateControl	signature:()
destroy	../../source/encoder/ratecontrol.h	/^    void destroy();$/;"	p	class:X265_NS::RateControl	access:public	signature:()
destroy	../../source/encoder/sao.cpp	/^void SAO::destroy(int destoryCommon)$/;"	f	class:X265_NS::SAO	signature:(int destoryCommon)
destroy	../../source/encoder/sao.h	/^    void destroy(int destoryCommon);$/;"	p	class:X265_NS::SAO	access:public	signature:(int destoryCommon)
destroy	../../source/encoder/slicetype.cpp	/^void Lookahead::destroy()$/;"	f	class:Lookahead	signature:()
destroy	../../source/encoder/slicetype.h	/^    void    destroy();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
determineLevel	../../source/encoder/level.cpp	/^void determineLevel(const x265_param &param, VPS& vps)$/;"	f	namespace:X265_NS	signature:(const x265_param &param, VPS& vps)
determineLevel	../../source/encoder/level.h	/^void determineLevel(const x265_param &param, VPS& vps);$/;"	p	namespace:X265_NS	signature:(const x265_param &param, VPS& vps)
dir	../../source/encoder/search.h	/^        uint32_t dir;$/;"	m	struct:X265_NS::Search::MergeData	access:public
disableWeights	../../source/common/slice.cpp	/^void Slice::disableWeights()$/;"	f	class:Slice	signature:()
disableWeights	../../source/common/slice.h	/^    void disableWeights();$/;"	p	class:X265_NS::Slice	access:public	signature:()
displayPrimaryX	../../source/encoder/sei.h	/^    uint16_t displayPrimaryX[3];$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
displayPrimaryY	../../source/encoder/sei.h	/^    uint16_t displayPrimaryY[3];$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
distortion	../../source/common/framedata.h	/^    sse_t*        distortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
distortion	../../source/encoder/search.h	/^        sse_t distortion;$/;"	m	struct:X265_NS::Search::Cost	access:public
distortion	../../source/encoder/search.h	/^    sse_t  distortion; \/\/ sum of partition SSE distortion$/;"	m	struct:X265_NS::Mode	access:public
distortionMemBlock	../../source/common/cudata.h	/^    sse_t*   distortionMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
downShift_16_avx2	../../source/common/x86/pixel.h	/^void PFX(downShift_16_avx2)(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);$/;"	p	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
downShift_16_sse2	../../source/common/x86/pixel.h	/^void PFX(downShift_16_sse2)(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);$/;"	p	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
downscale_t	../../source/common/primitives.h	/^typedef void (*downscale_t)(const pixel* src0, pixel* dstf, pixel* dsth, pixel* dstv, pixel* dstc,$/;"	t	namespace:X265_NS
dpbOutputDelayLength	../../source/common/slice.h	/^    uint32_t dpbOutputDelayLength;$/;"	m	struct:X265_NS::HRDInfo	access:public
dpbOutputTime	../../source/encoder/ratecontrol.h	/^    double dpbOutputTime;$/;"	m	struct:X265_NS::HRDTiming	access:public
dst4_avx2	../../source/common/x86/dct8.h	/^void PFX(dst4_avx2)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dst4_c	../../source/common/dct.cpp	/^static void dst4_c(const int16_t* src, int16_t* dst, intptr_t srcStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dst4_sse2	../../source/common/x86/dct8.h	/^void PFX(dst4_sse2)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dst4_ssse3	../../source/common/x86/dct8.h	/^void PFX(dst4_ssse3)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
dst4x4	../../source/common/primitives.h	/^    dct_t                 dst4x4;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
edgeFilterChroma	../../source/common/deblock.cpp	/^void Deblock::edgeFilterChroma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
edgeFilterChroma	../../source/common/deblock.h	/^    static void edgeFilterChroma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
edgeFilterLuma	../../source/common/deblock.cpp	/^void Deblock::edgeFilterLuma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
edgeFilterLuma	../../source/common/deblock.h	/^    static void edgeFilterLuma(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cuQ, uint32_t absPartIdx, uint32_t depth, int32_t dir, int32_t edge, const uint8_t blockStrength[])
empty	../../source/common/piclist.h	/^    bool empty() const    { return !m_count;  }$/;"	f	class:X265_NS::PicList	access:public	signature:() const
enableAllRows	../../source/common/wavefront.cpp	/^void WaveFront::enableAllRows()$/;"	f	class:X265_NS::WaveFront	signature:()
enableAllRows	../../source/common/wavefront.h	/^    void enableAllRows();$/;"	p	class:X265_NS::WaveFront	access:public	signature:()
enableRow	../../source/common/wavefront.cpp	/^void WaveFront::enableRow(int row)$/;"	f	class:X265_NS::WaveFront	signature:(int row)
enableRow	../../source/common/wavefront.h	/^    void enableRow(int row);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row)
enableRowEncoder	../../source/encoder/frameencoder.h	/^    void enableRowEncoder(int row)  { WaveFront::enableRow(row * 2 + 0); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
enableRowFilter	../../source/encoder/frameencoder.h	/^    void enableRowFilter(int row)   { WaveFront::enableRow(row * 2 + 1); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
encode	../../source/encoder/encoder.cpp	/^int Encoder::encode(const x265_picture* pic_in, x265_picture* pic_out)$/;"	f	class:Encoder	signature:(const x265_picture* pic_in, x265_picture* pic_out)
encode	../../source/encoder/encoder.h	/^    int encode(const x265_picture* pic, x265_picture *pic_out);$/;"	p	class:X265_NS::Encoder	access:public	signature:(const x265_picture* pic, x265_picture *pic_out)
encodeBin	../../source/encoder/entropy.cpp	/^void Entropy::encodeBin(uint32_t binValue, uint8_t &ctxModel)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValue, uint8_t &ctxModel)
encodeBin	../../source/encoder/entropy.h	/^    void encodeBin(uint32_t binValue, uint8_t& ctxModel);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue, uint8_t& ctxModel)
encodeBinEP	../../source/encoder/entropy.cpp	/^void Entropy::encodeBinEP(uint32_t binValue)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValue)
encodeBinEP	../../source/encoder/entropy.h	/^    void encodeBinEP(uint32_t binValue);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue)
encodeBinTrm	../../source/encoder/entropy.cpp	/^void Entropy::encodeBinTrm(uint32_t binValue)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValue)
encodeBinTrm	../../source/encoder/entropy.h	/^    void encodeBinTrm(uint32_t binValue);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValue)
encodeBinsEP	../../source/encoder/entropy.cpp	/^void Entropy::encodeBinsEP(uint32_t binValues, int numBins)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t binValues, int numBins)
encodeBinsEP	../../source/encoder/entropy.h	/^    void encodeBinsEP(uint32_t binValues, int numBins);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t binValues, int numBins)
encodeCTU	../../source/encoder/entropy.cpp	/^void Entropy::encodeCTU(const CUData& ctu, const CUGeom& cuGeom)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& ctu, const CUGeom& cuGeom)
encodeCTU	../../source/encoder/entropy.h	/^    void encodeCTU(const CUData& cu, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const CUData& cu, const CUGeom& cuGeom)
encodeCU	../../source/encoder/entropy.cpp	/^void Entropy::encodeCU(const CUData& ctu, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& ctu, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP)
encodeCU	../../source/encoder/entropy.h	/^    void encodeCU(const CUData& ctu, const CUGeom &cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& ctu, const CUGeom &cuGeom, uint32_t absPartIdx, uint32_t depth, bool& bEncodeDQP)
encodeIntraInInter	../../source/encoder/search.cpp	/^void Search::encodeIntraInInter(Mode& intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom)
encodeIntraInInter	../../source/encoder/search.h	/^    void     encodeIntraInInter(Mode& intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom)
encodeOrder	../../source/common/frame.h	/^    int      encodeOrder;$/;"	m	struct:X265_NS::RcStats	access:public
encodeOrder	../../source/encoder/ratecontrol.h	/^    int     encodeOrder;$/;"	m	struct:X265_NS::RateControlEntry	access:public
encodeResAndCalcRdInterCU	../../source/encoder/search.cpp	/^void Search::encodeResAndCalcRdInterCU(Mode& interMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& interMode, const CUGeom& cuGeom)
encodeResAndCalcRdInterCU	../../source/encoder/search.h	/^    void     encodeResAndCalcRdInterCU(Mode& interMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const CUGeom& cuGeom)
encodeResAndCalcRdSkipCU	../../source/encoder/search.cpp	/^void Search::encodeResAndCalcRdSkipCU(Mode& interMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& interMode, const CUGeom& cuGeom)
encodeResAndCalcRdSkipCU	../../source/encoder/search.h	/^    void     encodeResAndCalcRdSkipCU(Mode& interMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const CUGeom& cuGeom)
encodeResidue	../../source/encoder/analysis.cpp	/^void Analysis::encodeResidue(const CUData& ctu, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& ctu, const CUGeom& cuGeom)
encodeResidue	../../source/encoder/analysis.h	/^    void encodeResidue(const CUData& parentCTU, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
encodeSlice	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::encodeSlice(uint32_t sliceAddr)$/;"	f	class:X265_NS::FrameEncoder	signature:(uint32_t sliceAddr)
encodeSlice	../../source/encoder/frameencoder.h	/^    void encodeSlice(uint32_t sliceAddr);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(uint32_t sliceAddr)
encodeTransform	../../source/encoder/entropy.cpp	/^void Entropy::encodeTransform(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize,$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize, bool& bCodeDQP, const uint32_t depthRange[2])
encodeTransform	../../source/encoder/entropy.h	/^    void encodeTransform(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize,$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize, bool& bCodeDQP, const uint32_t depthRange[2])
encodeTransformLuma	../../source/encoder/entropy.cpp	/^void Entropy::encodeTransformLuma(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize,$/;"	f	class:X265_NS::Entropy	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t curDepth, uint32_t log2CurSize, bool& bCodeDQP, const uint32_t depthRange[2])
encodeTransformLuma	../../source/encoder/entropy.h	/^    void encodeTransformLuma(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize,$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, uint32_t log2TrSize, bool& bCodeDQP, const uint32_t depthRange[2])
encodedBits	../../source/common/frame.h	/^    int64_t  encodedBits;$/;"	m	struct:X265_NS::RcStats	access:public
encodedBits	../../source/common/framedata.h	/^        uint32_t encodedBits;   \/* sum of 'totalBits' of encoded CTUs *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
endfunc	../../source/common/arm/blockcopy8.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/cpu-a.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/dct-a.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/ipfilter8.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/mc-a.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/pixel-util.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/sad-a.S	/^endfunc$/;"	l
endfunc	../../source/common/arm/ssd-a.S	/^endfunc$/;"	l
energy	../../source/encoder/search.h	/^        uint32_t energy;$/;"	m	struct:X265_NS::Search::Cost	access:public
enforceLevel	../../source/encoder/level.cpp	/^bool enforceLevel(x265_param& param, VPS& vps)$/;"	f	namespace:X265_NS	signature:(x265_param& param, VPS& vps)
enforceLevel	../../source/encoder/level.h	/^bool enforceLevel(x265_param& param, VPS& vps);$/;"	p	namespace:X265_NS	signature:(x265_param& param, VPS& vps)
enqueueRow	../../source/common/wavefront.cpp	/^void WaveFront::enqueueRow(int row)$/;"	f	class:X265_NS::WaveFront	signature:(int row)
enqueueRow	../../source/common/wavefront.h	/^    void enqueueRow(int row);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row)
enqueueRowEncoder	../../source/encoder/frameencoder.h	/^    void enqueueRowEncoder(int row) { WaveFront::enqueueRow(row * 2 + 0); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
enqueueRowFilter	../../source/encoder/frameencoder.h	/^    void enqueueRowFilter(int row)  { WaveFront::enqueueRow(row * 2 + 1); }$/;"	f	class:X265_NS::FrameEncoder	access:protected	signature:(int row)
estBit	../../source/encoder/entropy.cpp	/^void Entropy::estBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
estBit	../../source/encoder/entropy.h	/^    void estBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
estCBFBit	../../source/encoder/entropy.cpp	/^void Entropy::estCBFBit(EstBitsSbac& estBitsSbac) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac) const
estCBFBit	../../source/encoder/entropy.h	/^    void estCBFBit(EstBitsSbac& estBitsSbac) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac) const
estIQscale	../../source/encoder/ratecontrol.cpp	/^double RateControl::estIQscale(double rate, double lowresSatd)$/;"	f	class:RateControl	signature:(double rate, double lowresSatd)
estIQscale	../../source/encoder/ratecontrol.h	/^    double estIQscale(double rate, double lowresSatd);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double rate, double lowresSatd)
estIntraPredChromaQT	../../source/encoder/search.cpp	/^sse_t Search::estIntraPredChromaQT(Mode &intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode &intraMode, const CUGeom& cuGeom)
estIntraPredChromaQT	../../source/encoder/search.h	/^    sse_t estIntraPredChromaQT(Mode &intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode &intraMode, const CUGeom& cuGeom)
estIntraPredQT	../../source/encoder/search.cpp	/^sse_t Search::estIntraPredQT(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2])
estIntraPredQT	../../source/encoder/search.h	/^    sse_t estIntraPredQT(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode &intraMode, const CUGeom& cuGeom, const uint32_t depthRange[2])
estIterOffset	../../source/encoder/sao.cpp	/^void SAO::estIterOffset(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses)$/;"	f	class:X265_NS::SAO	signature:(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses)
estIterOffset	../../source/encoder/sao.h	/^    void estIterOffset(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses);$/;"	p	class:X265_NS::SAO	access:public	signature:(int typeIdx, int64_t lambda, int32_t count, int32_t offsetOrg, int32_t& offset, int32_t& distClasses, int64_t& costClasses)
estSaoDist	../../source/encoder/sao.cpp	/^inline int64_t estSaoDist(int32_t count, int32_t offset, int32_t offsetOrg)$/;"	f	namespace:__anon14	signature:(int32_t count, int32_t offset, int32_t offsetOrg)
estSignificantCoeffGroupMapBit	../../source/encoder/entropy.cpp	/^void Entropy::estSignificantCoeffGroupMapBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
estSignificantCoeffGroupMapBit	../../source/encoder/entropy.h	/^    void estSignificantCoeffGroupMapBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
estSignificantCoefficientsBit	../../source/encoder/entropy.cpp	/^void Entropy::estSignificantCoefficientsBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
estSignificantCoefficientsBit	../../source/encoder/entropy.h	/^    void estSignificantCoefficientsBit(EstBitsSbac& estBitsSbac, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, bool bIsLuma) const
estSignificantMapBit	../../source/encoder/entropy.cpp	/^void Entropy::estSignificantMapBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const$/;"	f	class:X265_NS::Entropy	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
estSignificantMapBit	../../source/encoder/entropy.h	/^    void estSignificantMapBit(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const;$/;"	p	class:X265_NS::Entropy	access:public	signature:(EstBitsSbac& estBitsSbac, uint32_t log2TrSize, bool bIsLuma) const
estimateBRate	../../source/encoder/ratecontrol.cpp	/^double RateControl::estimateBRate(double lowresSatd, double q)$/;"	f	class:RateControl	signature:(double lowresSatd, double q)
estimateBRate	../../source/encoder/ratecontrol.h	/^    double estimateBRate(double lowresSatd, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double lowresSatd, double q)
estimateCUCost	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::estimateCUCost(LookaheadTLD& tld, int cuX, int cuY, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice)$/;"	f	class:CostEstimateGroup	signature:(LookaheadTLD& tld, int cuX, int cuY, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice)
estimateCUCost	../../source/encoder/slicetype.h	/^    void    estimateCUCost(LookaheadTLD& tld, int cux, int cuy, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(LookaheadTLD& tld, int cux, int cuy, int p0, int p1, int b, bool bDoSearch[2], bool lastRow, int slice)
estimateCUPropagate	../../source/encoder/slicetype.cpp	/^void Lookahead::estimateCUPropagate(Lowres **frames, double averageDuration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip)$/;"	f	class:Lookahead	signature:(Lowres **frames, double averageDuration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip)
estimateCUPropagate	../../source/encoder/slicetype.h	/^    void    estimateCUPropagate(Lowres **frames, double average_duration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip=false);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, double average_duration, int p0, int p1, int b, int curnonb, int lastnonb, int referenced, bool list0Skip=false)
estimateCUPropagateCost	../../source/common/pixel.cpp	/^static void estimateCUPropagateCost(int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts,$/;"	f	namespace:__anon31	signature:(int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts, const int32_t* invQscales, const double* fpsFactor, int len)
estimateCbfBits	../../source/encoder/entropy.h	/^    inline uint32_t estimateCbfBits(uint32_t cbf, TextType ttype, uint32_t tuDepth) const { return bitsCodeBin(cbf, m_contextState[OFF_QT_CBF_CTX + ctxCbf[ttype][tuDepth]]); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(uint32_t cbf, TextType ttype, uint32_t tuDepth) const
estimateFrameCost	../../source/encoder/slicetype.cpp	/^int64_t CostEstimateGroup::estimateFrameCost(LookaheadTLD& tld, int p0, int p1, int b, bool bIntraPenalty)$/;"	f	class:CostEstimateGroup	signature:(LookaheadTLD& tld, int p0, int p1, int b, bool bIntraPenalty)
estimateFrameCost	../../source/encoder/slicetype.h	/^    int64_t estimateFrameCost(LookaheadTLD& tld, int p0, int p1, int b, bool intraPenalty);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(LookaheadTLD& tld, int p0, int p1, int b, bool intraPenalty)
estimateIRate	../../source/encoder/ratecontrol.cpp	/^double RateControl::estimateIRate(double lowresSatd, double q)$/;"	f	class:RateControl	signature:(double lowresSatd, double q)
estimateIRate	../../source/encoder/ratecontrol.h	/^    double estimateIRate(double lowresSatd, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double lowresSatd, double q)
estimateNullCbfCost	../../source/encoder/search.cpp	/^uint64_t Search::estimateNullCbfCost(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId)$/;"	f	class:Search	signature:(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId)
estimateNullCbfCost	../../source/encoder/search.h	/^    uint64_t estimateNullCbfCost(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId);$/;"	p	class:X265_NS::Search	access:protected	signature:(sse_t dist, uint32_t energy, uint32_t tuDepth, TextType compId)
estimatePRate	../../source/encoder/ratecontrol.cpp	/^double RateControl::estimatePRate(double lowresSatd, double q)$/;"	f	class:RateControl	signature:(double lowresSatd, double q)
estimatePRate	../../source/encoder/ratecontrol.h	/^    double estimatePRate(double lowresSatd, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double lowresSatd, double q)
estimateResidualQT	../../source/encoder/search.cpp	/^void Search::estimateResidualQT(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& outCosts, const uint32_t depthRange[2], int32_t splitMore)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& outCosts, const uint32_t depthRange[2], int32_t splitMore)
estimateResidualQT	../../source/encoder/search.h	/^    void     estimateResidualQT(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, ShortYuv& resiYuv, Cost& costs, const uint32_t depthRange[2], int32_t splitMore = -1);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t depth, ShortYuv& resiYuv, Cost& costs, const uint32_t depthRange[2], int32_t splitMore = -1)
exchange	../../source/compat/getopt/getopt.c	/^exchange (argv)$/;"	f	file:
exchange	../../source/compat/getopt/getopt.c	/^static void exchange (char **);$/;"	p	file:	signature:(char **)
expectedBits	../../source/encoder/ratecontrol.h	/^    uint64_t expectedBits; \/* total expected bits up to the current frame (current one excluded) *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
expectedVbv	../../source/encoder/ratecontrol.h	/^    double   expectedVbv;$/;"	m	struct:X265_NS::RateControlEntry	access:public
ext	../../source/encoder/api.cpp	416;"	d	file:
ext	../../source/encoder/api.cpp	419;"	d	file:
ext	../../source/encoder/api.cpp	422;"	d	file:
extendCURowBorder_t	../../source/common/primitives.h	/^typedef void (*extendCURowBorder_t)(pixel* txt, intptr_t stride, int width, int height, int marginX);$/;"	t	namespace:X265_NS
extendCURowColBorder	../../source/common/ipfilter.cpp	/^static void extendCURowColBorder(pixel* txt, intptr_t stride, int width, int height, int marginX)$/;"	f	namespace:__anon14	signature:(pixel* txt, intptr_t stride, int width, int height, int marginX)
extendPicBorder	../../source/common/common.h	/^void extendPicBorder(pixel* recon, intptr_t stride, int width, int height, int marginX, int marginY);$/;"	p	namespace:X265_NS	signature:(pixel* recon, intptr_t stride, int width, int height, int marginX, int marginY)
extendPicBorder	../../source/common/pixel.cpp	/^void extendPicBorder(pixel* pic, intptr_t stride, int width, int height, int marginX, int marginY)$/;"	f	namespace:X265_NS	signature:(pixel* pic, intptr_t stride, int width, int height, int marginX, int marginY)
extendRowBorder	../../source/common/primitives.h	/^    extendCURowBorder_t   extendRowBorder;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
extractIntraResultChromaQT	../../source/encoder/search.cpp	/^void Search::extractIntraResultChromaQT(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth)$/;"	f	class:Search	signature:(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth)
extractIntraResultChromaQT	../../source/encoder/search.h	/^    void     extractIntraResultChromaQT(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, Yuv& reconYuv, uint32_t absPartIdx, uint32_t tuDepth)
extractIntraResultQT	../../source/encoder/search.cpp	/^void Search::extractIntraResultQT(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx)$/;"	f	class:Search	signature:(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx)
extractIntraResultQT	../../source/encoder/search.h	/^    void     extractIntraResultQT(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, Yuv& reconYuv, uint32_t tuDepth, uint32_t absPartIdx)
fastForwardDst	../../source/common/dct.cpp	/^static void fastForwardDst(const int16_t* block, int16_t* coeff, int shift)  \/\/ input block, output coeff$/;"	f	file:	signature:(const int16_t* block, int16_t* coeff, int shift)
fastMin	../../source/common/quant.cpp	/^inline int fastMin(int x, int y)$/;"	f	namespace:__anon29	signature:(int x, int y)
fencPUYuv	../../source/encoder/motion.h	/^    Yuv fencPUYuv;$/;"	m	class:X265_NS::MotionEstimate	access:public
fencYuv	../../source/encoder/analysis.h	/^        Yuv            fencYuv;$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
fencYuv	../../source/encoder/search.h	/^    const Yuv* fencYuv;$/;"	m	struct:X265_NS::Mode	access:public
fetchStats	../../source/encoder/encoder.cpp	/^void Encoder::fetchStats(x265_stats *stats, size_t statsSizeBytes)$/;"	f	class:Encoder	signature:(x265_stats *stats, size_t statsSizeBytes)
fetchStats	../../source/encoder/encoder.h	/^    void fetchStats(x265_stats* stats, size_t statsSizeBytes);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_stats* stats, size_t statsSizeBytes)
fieldSeqFlag	../../source/common/slice.h	/^    bool       fieldSeqFlag;$/;"	m	struct:X265_NS::VUI	access:public
filename	../../source/input/input.h	/^    const char *filename;$/;"	m	struct:X265_NS::InputFileInfo	access:public
fillReferenceSamples	../../source/common/predict.cpp	/^void Predict::fillReferenceSamples(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258])$/;"	f	class:Predict	signature:(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258])
fillReferenceSamples	../../source/common/predict.h	/^    static void fillReferenceSamples(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258]);$/;"	p	class:X265_NS::Predict	access:public	signature:(const pixel* adiOrigin, intptr_t picStride, const IntraNeighbors& intraNeighbors, pixel dst[258])
filterPixelToShort_c	../../source/common/ipfilter.cpp	/^void filterPixelToShort_c(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
filterVertical_sp_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void filterVertical_sp_altivec(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
filterVertical_sp_c	../../source/common/ipfilter.cpp	/^void filterVertical_sp_c(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int coeffIdx)
filter_hpp	../../source/common/primitives.h	/^            filter_pp_t  filter_hpp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
filter_hps	../../source/common/primitives.h	/^            filter_hps_t filter_hps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
filter_hps_t	../../source/common/primitives.h	/^typedef void (*filter_hps_t) (const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	t	namespace:X265_NS
filter_hv_pp_t	../../source/common/primitives.h	/^typedef void (*filter_hv_pp_t) (const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY);$/;"	t	namespace:X265_NS
filter_p2s_t	../../source/common/primitives.h	/^typedef void (*filter_p2s_t)(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	t	namespace:X265_NS
filter_pp_t	../../source/common/primitives.h	/^typedef void (*filter_pp_t) (const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
filter_ps_t	../../source/common/primitives.h	/^typedef void (*filter_ps_t) (const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
filter_sp_t	../../source/common/primitives.h	/^typedef void (*filter_sp_t) (const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
filter_ss_t	../../source/common/primitives.h	/^typedef void (*filter_ss_t) (const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	t	namespace:X265_NS
filter_vpp	../../source/common/primitives.h	/^            filter_pp_t  filter_vpp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
filter_vps	../../source/common/primitives.h	/^            filter_ps_t  filter_vps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
filter_vsp	../../source/common/primitives.h	/^            filter_sp_t  filter_vsp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
filter_vss	../../source/common/primitives.h	/^            filter_ss_t  filter_vss;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
finalize	../../source/common/md5.h	/^    void finalize(unsigned char digest[16])$/;"	f	class:X265_NS::MD5	access:public	signature:(unsigned char digest[16])
findJob	../../source/common/threadpool.h	/^    virtual void findJob(int workerThreadId) = 0;$/;"	p	class:X265_NS::JobProvider	access:public	signature:(int workerThreadId)
findJob	../../source/common/wavefront.cpp	/^void WaveFront::findJob(int threadId)$/;"	f	class:X265_NS::WaveFront	signature:(int threadId)
findJob	../../source/common/wavefront.h	/^    void findJob(int threadId);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int threadId)
findJob	../../source/encoder/slicetype.cpp	/^void Lookahead::findJob(int \/*workerThreadID*\/)$/;"	f	class:Lookahead	signature:(int )
findJob	../../source/encoder/slicetype.h	/^    void    findJob(int workerThreadID);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(int workerThreadID)
findPosFirstLast	../../source/common/primitives.h	/^    findPosFirstLast_t    findPosFirstLast;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
findPosFirstLast_c	../../source/common/dct.cpp	/^static uint32_t findPosFirstLast_c(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16])$/;"	f	file:	signature:(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16])
findPosFirstLast_ssse3	../../source/common/x86/pixel-util.h	/^uint32_t PFX(findPosFirstLast_ssse3(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16]));$/;"	p	signature:(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16])
findPosFirstLast_t	../../source/common/primitives.h	/^typedef uint32_t (*findPosFirstLast_t)(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16]);$/;"	t	namespace:X265_NS
findSameContentRefCount	../../source/encoder/analysis.cpp	/^int Analysis::findSameContentRefCount(const CUData& parentCTU, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
findSameContentRefCount	../../source/encoder/analysis.h	/^    int findSameContentRefCount(const CUData& parentCTU, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
findUnderflow	../../source/encoder/ratecontrol.cpp	/^bool RateControl::findUnderflow(double *fills, int *t0, int *t1, int over, int endPos)$/;"	f	class:RateControl	signature:(double *fills, int *t0, int *t1, int over, int endPos)
findUnderflow	../../source/encoder/ratecontrol.h	/^    bool   findUnderflow(double *fills, int *t0, int *t1, int over, int framesCount);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double *fills, int *t0, int *t1, int over, int framesCount)
finish	../../source/encoder/entropy.cpp	/^void Entropy::finish()$/;"	f	class:X265_NS::Entropy	signature:()
finish	../../source/encoder/entropy.h	/^    void finish();$/;"	p	class:X265_NS::Entropy	access:private	signature:()
finishBatch	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::finishBatch()$/;"	f	class:CostEstimateGroup	signature:()
finishBatch	../../source/encoder/slicetype.h	/^    void finishBatch();$/;"	p	class:X265_NS::CostEstimateGroup	access:public	signature:()
finishCU	../../source/encoder/entropy.cpp	/^void Entropy::finishCU(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bCodeDQP)$/;"	f	class:X265_NS::Entropy	signature:(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bCodeDQP)
finishCU	../../source/encoder/entropy.h	/^    void finishCU(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bEncodeDQP);$/;"	p	class:X265_NS::Entropy	access:private	signature:(const CUData& ctu, uint32_t absPartIdx, uint32_t depth, bool bEncodeDQP)
finishFrameStats	../../source/encoder/encoder.cpp	/^void Encoder::finishFrameStats(Frame* curFrame, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc)$/;"	f	class:Encoder	signature:(Frame* curFrame, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc)
finishFrameStats	../../source/encoder/encoder.h	/^    void finishFrameStats(Frame* pic, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(Frame* pic, FrameEncoder *curEncoder, x265_frame_stats* frameStats, int inPoc)
finishSlice	../../source/encoder/entropy.h	/^    void finishSlice()                 { encodeBinTrm(1); finish(); dynamic_cast<Bitstream*>(m_bitIf)->writeByteAlignment(); }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
first	../../source/common/piclist.h	/^    Frame* first()        { return m_start;   }$/;"	f	class:X265_NS::PicList	access:public	signature:()
firstSignificanceMapContext	../../source/common/cudata.h	/^    uint32_t        firstSignificanceMapContext;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
first_nonopt	../../source/compat/getopt/getopt.c	/^static int first_nonopt;$/;"	v	file:
fix8Pack	../../source/common/primitives.h	/^    cutree_fix8_pack      fix8Pack;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
fix8Unpack	../../source/common/primitives.h	/^    cutree_fix8_unpack    fix8Unpack;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
fixUnderflow	../../source/encoder/ratecontrol.cpp	/^bool RateControl::fixUnderflow(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax)$/;"	f	class:RateControl	signature:(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax)
fixUnderflow	../../source/encoder/ratecontrol.h	/^    bool   fixUnderflow(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int t0, int t1, double adjustment, double qscaleMin, double qscaleMax)
fixedRatios	../../source/common/param.cpp	/^static const int fixedRatios[][2] =$/;"	m	namespace:X265_NS	file:
flag	../../source/compat/getopt/getopt.h	/^  int32_t *flag;$/;"	m	struct:option	access:public
flags	../../source/common/cpu.h	/^    uint32_t flags;$/;"	m	struct:X265_NS::cpu_name_t	access:public
flags	../../source/common/cudata.h	/^    uint32_t flags;         \/\/ CU flags.$/;"	m	struct:X265_NS::CUGeom	access:public
flush	../../source/encoder/slicetype.cpp	/^void Lookahead::flush()$/;"	f	class:Lookahead	signature:()
flush	../../source/encoder/slicetype.h	/^    void    flush();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
fpelPlane	../../source/common/lowres.h	/^    pixel*   fpelPlane[3];$/;"	m	struct:X265_NS::ReferencePlanes	access:public
fpsDenom	../../source/input/input.h	/^    int fpsDenom;$/;"	m	struct:X265_NS::InputFileInfo	access:public
fpsNum	../../source/input/input.h	/^    int fpsNum;$/;"	m	struct:X265_NS::InputFileInfo	access:public
frameCostRecalculate	../../source/encoder/slicetype.cpp	/^int64_t Lookahead::frameCostRecalculate(Lowres** frames, int p0, int p1, int b)$/;"	f	class:Lookahead	signature:(Lowres** frames, int p0, int p1, int b)
frameCostRecalculate	../../source/encoder/slicetype.h	/^    int64_t frameCostRecalculate(Lowres **frames, int p0, int p1, int b);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int p0, int p1, int b)
frameCount	../../source/input/input.h	/^    int frameCount;$/;"	m	struct:X265_NS::InputFileInfo	access:public
frameData	../../source/output/reconplay.h	/^    pixel* frameData[RECON_BUF_SIZE];$/;"	m	class:X265_NS::ReconPlay	access:protected
frameDuration	../../source/encoder/ratecontrol.h	/^    double  frameDuration;$/;"	m	struct:X265_NS::RateControlEntry	access:public
frameFieldInfoPresentFlag	../../source/common/slice.h	/^    bool       frameFieldInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
frameInitLowres	../../source/common/primitives.h	/^    downscale_t           frameInitLowres;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
frameNum	../../source/common/lowres.h	/^    int    frameNum;         \/\/ Presentation frame number$/;"	m	struct:X265_NS::Lowres	access:public
frameOnlyConstraintFlag	../../source/common/slice.h	/^    bool     frameOnlyConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
frameSize	../../source/output/reconplay.h	/^    size_t frameSize;      \/* size of one frame in pixels *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
frameSize	../../source/output/y4m.h	/^    uint32_t frameSize;$/;"	m	class:X265_NS::Y4MOutput	access:protected
frameSize	../../source/output/yuv.h	/^    uint32_t frameSize;$/;"	m	class:X265_NS::YUVOutput	access:protected
frameSizeEstimated	../../source/encoder/ratecontrol.h	/^    double  frameSizeEstimated; \/* hold frameSize, updated from cu level vbv rc *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
frameSizeMaximum	../../source/encoder/ratecontrol.h	/^    double  frameSizeMaximum;   \/* max frame Size according to minCR restrictions and level of the video *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
frameSizePlanned	../../source/encoder/ratecontrol.h	/^    double  frameSizePlanned;  \/* frame Size decided by RateCotrol before encoding the frame *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
frameVariance	../../source/common/lowres.h	/^    uint64_t  frameVariance;$/;"	m	struct:X265_NS::Lowres	access:public
frame_init_lowres_core	../../source/common/pixel.cpp	/^void frame_init_lowres_core(const pixel* src0, pixel* dst0, pixel* dsth, pixel* dstv, pixel* dstc,$/;"	f	namespace:__anon31	signature:(const pixel* src0, pixel* dst0, pixel* dsth, pixel* dstv, pixel* dstc, intptr_t src_stride, intptr_t dst_stride, int width, int height)
framesSinceLastPir	../../source/common/framedata.h	/^        int        framesSinceLastPir;$/;"	m	struct:X265_NS::FrameData::PeriodicIR	access:public
framesize	../../source/input/y4m.h	/^    size_t framesize;$/;"	m	class:X265_NS::Y4MInput	access:protected
framesize	../../source/input/yuv.h	/^    uint32_t framesize;$/;"	m	class:X265_NS::YUVInput	access:protected
freeAnalysis	../../source/encoder/encoder.cpp	/^void Encoder::freeAnalysis(x265_analysis_data* analysis)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis)
freeAnalysis	../../source/encoder/encoder.h	/^    void freeAnalysis(x265_analysis_data* analysis);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* analysis)
freeAnalysis2Pass	../../source/encoder/encoder.cpp	/^void Encoder::freeAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis, int sliceType)
freeAnalysis2Pass	../../source/encoder/encoder.h	/^    void freeAnalysis2Pass(x265_analysis_2Pass* analysis, int sliceType);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis, int sliceType)
fseeko	../../source/common/common.h	80;"	d
fseeko	../../source/common/common.h	89;"	d
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_16x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_16x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_32x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_32x64_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_4x4_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_4x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_64x64_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_8x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ps_8x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_16x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_16x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_32x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_32x64_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_4x4_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_4x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_64x64_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_8x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_sp_8x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_16x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_16x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_32x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_32x64_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_4x4_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_4x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_64x64_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_8x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockcopy_ss_8x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockfill_s_16x16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockfill_s_32x32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockfill_s_4x4_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_blockfill_s_8x8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_copy_cnt_16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_copy_cnt_32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_copy_cnt_4_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_copy_cnt_8_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_count_nonzero_16_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_count_nonzero_32_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_count_nonzero_4_neon$/;"	l
function	../../source/common/arm/blockcopy8.S	/^function x265_count_nonzero_8_neon$/;"	l
function	../../source/common/arm/cpu-a.S	/^function x265_cpu_disable_armv7_counter, export=0$/;"	l
function	../../source/common/arm/cpu-a.S	/^function x265_cpu_enable_armv7_counter, export=0$/;"	l
function	../../source/common/arm/cpu-a.S	/^function x265_cpu_fast_neon_mrc_test$/;"	l
function	../../source/common/arm/cpu-a.S	/^function x265_cpu_neon_test$/;"	l
function	../../source/common/arm/dct-a.S	/^function x265_dct_16x16_neon$/;"	l
function	../../source/common/arm/dct-a.S	/^function x265_dct_4x4_neon$/;"	l
function	../../source/common/arm/dct-a.S	/^function x265_dct_8x8_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_12x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_16x12_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_16x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_16x32_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_16x4_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_16x64_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_16x8_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_24x32_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_32x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_32x24_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_32x32_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_32x64_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_32x8_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_48x64_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_4x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_4x4_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_4x8_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_64x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_64x32_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_64x48_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_64x64_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_8x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_8x32_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_8x4_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_filterPixelToShort_8x8_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_4tap_horiz_pp_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_4tap_horiz_ps_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_4tap_vert_pp_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_4tap_vert_ps_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_4tap_vert_sp_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_pp_12x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_pp_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_pp_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_ps_12x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_ps_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_ps_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_sp_12x16_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_sp_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_8tap_vert_sp_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_horiz_pp_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/ipfilter8.S	/^function x265_interp_horiz_ps_\\w\\()x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_12x16_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_12x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_16x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_24x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_24x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_32x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_48x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_4x4_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_64x16_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_64x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_64x48_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_64x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_6x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_addAvg_8x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_12x16_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_12x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_16x16_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_16x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_24x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_24x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_2x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_32x8_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_32x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_48x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_64x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_6x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_8x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_blockcopy_pp_8x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_cpy2Dto1D_shr_16x16_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_cpy2Dto1D_shr_32x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_cpy2Dto1D_shr_4x4_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_cpy2Dto1D_shr_8x8_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_12x16_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_16x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_16x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_24x32_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_32x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_48x64_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_64x\\h\\()_neon$/;"	l
function	../../source/common/arm/mc-a.S	/^function x265_pixel_avg_pp_8x\\h\\()_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_dequant_normal_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_dequant_scaling_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_getResidual16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_getResidual32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_getResidual4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_getResidual8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_nquant_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_add_ps_16x\\h\\()_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_add_ps_4x4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_add_ps_4x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_add_ps_64x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_add_ps_8x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_add_ps_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_planecopy_cp_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_16x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_16x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_32x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_32x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_64x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_8x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sa8d_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_12x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_12x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x12_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x24_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_16x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_24x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_24x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_32x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_32x24_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_32x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_32x48_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_32x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_32x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_48x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_4x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_4x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_4x4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_4x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_64x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_64x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_64x48_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_64x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_8x12_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_8x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_8x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_8x4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_8x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_satd_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_16x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_16x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_32x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_32x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_4x4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_4x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_64x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_8x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_sub_ps_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_var_16x16_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_var_32x32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_var_64x64_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_pixel_var_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_psyCost_4x4_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_psyCost_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_quant_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_sa8d_\\satd\\()8x8_neon, export=0$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_satd_16x4_neon, export=0$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_satd_8x4v_8x8h_neon, export=0$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_satd_8x8_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_scale1D_128to64_neon $/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_scale2D_64to32_neon$/;"	l
function	../../source/common/arm/pixel-util.S	/^function x265_ssim_4x4x2_core_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_12x16_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_16x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_24x32_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_32x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_48x64_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_4x\\h\\()_armv6$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_64x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_pixel_sad_8x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_12x16_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_16x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_24x32_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_32x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_48x64_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_4x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_64x\\h\\()_neon$/;"	l
function	../../source/common/arm/sad-a.S	/^function x265_sad_x\\x\\()_8x\\h\\()_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_ssd_s_16x16_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_ssd_s_32x32_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_ssd_s_4x4_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_ssd_s_8x8_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_pp_16x16_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_pp_32x32_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_pp_4x4_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_pp_64x64_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_pp_8x8_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_ss_16x16_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_ss_32x32_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_ss_4x4_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_ss_64x64_neon$/;"	l
function	../../source/common/arm/ssd-a.S	/^function x265_pixel_sse_ss_8x8_neon$/;"	l
g_ST2084_PQTable	../../source/common/constants.cpp	/^const double g_ST2084_PQTable[MAX_HDR_LEGAL_RANGE - MIN_HDR_LEGAL_RANGE + 1] = $/;"	m	namespace:X265_NS	file:
g_YUVtoRGB_BT2020	../../source/common/constants.cpp	/^const double g_YUVtoRGB_BT2020[3][3] = $/;"	m	namespace:X265_NS	file:
g_checkFailures	../../source/common/common.cpp	/^int g_checkFailures;$/;"	m	namespace:X265_NS	file:
g_chroma422IntraAngleMappingTable	../../source/common/constants.cpp	/^const uint8_t g_chroma422IntraAngleMappingTable[AngleMapping422TableSize] =$/;"	m	namespace:X265_NS	file:
g_chromaFilter	../../source/common/arm/ipfilter8.S	/^g_chromaFilter:$/;"	l
g_chromaFilter	../../source/common/constants.cpp	/^const int16_t g_chromaFilter[8][NTAPS_CHROMA] =$/;"	m	namespace:X265_NS	file:
g_chromaScale	../../source/common/constants.cpp	/^const uint8_t g_chromaScale[ChromaQPMappingTableSize] =$/;"	m	namespace:X265_NS	file:
g_depthScanIdx	../../source/common/constants.cpp	/^const uint32_t g_depthScanIdx[8][8] =$/;"	m	namespace:X265_NS	file:
g_entropyBits	../../source/encoder/entropy.cpp	/^const uint32_t g_entropyBits[128] =$/;"	m	namespace:X265_NS	file:
g_goRiceRange	../../source/common/constants.cpp	/^const uint8_t g_goRiceRange[5] = { 7, 14, 26, 46, 78 };$/;"	m	namespace:X265_NS	file:
g_intraFilterFlags	../../source/common/constants.cpp	/^const uint8_t g_intraFilterFlags[NUM_INTRA_MODE] =$/;"	m	namespace:X265_NS	file:
g_lastCoeffTable	../../source/common/constants.cpp	/^const uint8_t g_lastCoeffTable[32] =$/;"	m	namespace:X265_NS	file:
g_log2Size	../../source/common/constants.cpp	/^const uint8_t g_log2Size[MAX_CU_SIZE + 1] =$/;"	m	namespace:X265_NS	file:
g_lpsTable	../../source/common/constants.cpp	/^const uint8_t g_lpsTable[64][4] =$/;"	m	namespace:X265_NS	file:
g_lumaFilter	../../source/common/arm/ipfilter8.S	/^g_lumaFilter:$/;"	l
g_lumaFilter	../../source/common/constants.cpp	/^const int16_t g_lumaFilter[4][NTAPS_LUMA] =$/;"	m	namespace:X265_NS	file:
g_luma_s16	../../source/common/arm/ipfilter8.S	/^g_luma_s16:$/;"	l
g_maxCUDepth	../../source/common/constants.cpp	/^uint32_t g_maxCUDepth    = NUM_CU_DEPTH - 1;$/;"	m	namespace:X265_NS	file:
g_maxCUSize	../../source/common/constants.cpp	/^uint32_t g_maxCUSize     = MAX_CU_SIZE;$/;"	m	namespace:X265_NS	file:
g_maxLog2CUSize	../../source/common/constants.cpp	/^uint32_t g_maxLog2CUSize = MAX_LOG2_CU_SIZE;$/;"	m	namespace:X265_NS	file:
g_maxSlices	../../source/common/constants.cpp	/^uint32_t g_maxSlices     = 1;$/;"	m	namespace:X265_NS	file:
g_mutex	../../source/common/threading.cpp	/^pthread_mutex_t g_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	m	namespace:X265_NS	file:
g_nextState	../../source/encoder/entropy.cpp	/^const uint8_t g_nextState[128][2] =$/;"	m	namespace:X265_NS	file:
g_rasterToZscan	../../source/common/constants.cpp	/^const uint32_t g_rasterToZscan[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
g_recursion	../../source/encoder/api.cpp	/^static int g_recursion \/* = 0 *\/;$/;"	v	file:
g_scan16x16	../../source/common/constants.cpp	/^const uint16_t g_scan16x16[16 * 16] =$/;"	m	namespace:X265_NS	file:
g_scan2x2	../../source/common/constants.cpp	/^const uint16_t g_scan2x2[][2*2] =$/;"	m	namespace:X265_NS	file:
g_scan32x32	../../source/common/constants.cpp	/^const uint16_t g_scan32x32[32 * 32] =$/;"	m	namespace:X265_NS	file:
g_scan8x8	../../source/common/constants.cpp	/^const uint16_t g_scan8x8[NUM_SCAN_TYPE][8 * 8] =$/;"	m	namespace:X265_NS	file:
g_scan8x8diag	../../source/common/constants.cpp	/^const uint16_t g_scan8x8diag[8 * 8] =$/;"	m	namespace:X265_NS	file:
g_scanOrder	../../source/common/constants.cpp	/^const uint16_t* const g_scanOrder[NUM_SCAN_TYPE][NUM_SCAN_SIZE] =$/;"	m	namespace:X265_NS	file:
g_scanOrderCG	../../source/common/constants.cpp	/^const uint16_t* const g_scanOrderCG[NUM_SCAN_TYPE][NUM_SCAN_SIZE] =$/;"	m	namespace:X265_NS	file:
g_sliceTypeToChar	../../source/encoder/encoder.cpp	/^const char g_sliceTypeToChar[] = {'B', 'P', 'I'};$/;"	m	namespace:X265_NS	file:
g_t16	../../source/common/constants.cpp	/^const int16_t g_t16[16][16] =$/;"	m	namespace:X265_NS	file:
g_t32	../../source/common/constants.cpp	/^const int16_t g_t32[32][32] =$/;"	m	namespace:X265_NS	file:
g_t4	../../source/common/constants.cpp	/^const int16_t g_t4[4][4] =$/;"	m	namespace:X265_NS	file:
g_t8	../../source/common/constants.cpp	/^const int16_t g_t8[8][8] =$/;"	m	namespace:X265_NS	file:
g_unitSizeDepth	../../source/common/constants.cpp	/^uint32_t g_unitSizeDepth = NUM_CU_DEPTH;$/;"	m	namespace:X265_NS	file:
g_zscanToPelX	../../source/common/constants.cpp	/^const uint8_t g_zscanToPelX[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
g_zscanToPelY	../../source/common/constants.cpp	/^const uint8_t g_zscanToPelY[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
g_zscanToRaster	../../source/common/constants.cpp	/^const uint32_t g_zscanToRaster[MAX_NUM_PARTITIONS] =$/;"	m	namespace:X265_NS	file:
general_log	../../source/common/common.cpp	/^void general_log(const x265_param* param, const char* caller, int level, const char* fmt, ...)$/;"	f	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
general_log	../../source/common/common.h	/^void     general_log(const x265_param* param, const char* caller, int level, const char* fmt, ...);$/;"	p	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
general_log_file	../../source/common/common.cpp	/^void general_log_file(const x265_param* param, const char* caller, int level, const char* fmt, ...)$/;"	f	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
general_log_file	../../source/common/common.h	/^void     general_log_file(const x265_param* param, const char* caller, int level, const char* fmt, ...);$/;"	p	namespace:X265_NS	signature:(const x265_param* param, const char* caller, int level, const char* fmt, ...)
general_log_file	../../source/common/common.h	425;"	d
generateChromaOffsets	../../source/encoder/sao.cpp	/^void SAO::generateChromaOffsets(SaoCtuParam* ctuParam[3], int idxY, int idxX)$/;"	f	class:X265_NS::SAO	signature:(SaoCtuParam* ctuParam[3], int idxY, int idxX)
generateChromaOffsets	../../source/encoder/sao.h	/^    void generateChromaOffsets(SaoCtuParam* ctuParam[3], int idxY, int idxX);$/;"	p	class:X265_NS::SAO	access:public	signature:(SaoCtuParam* ctuParam[3], int idxY, int idxX)
generateLumaOffsets	../../source/encoder/sao.cpp	/^void SAO::generateLumaOffsets(SaoCtuParam* ctuParam, int idxY, int idxX)$/;"	f	class:X265_NS::SAO	signature:(SaoCtuParam* ctuParam, int idxY, int idxX)
generateLumaOffsets	../../source/encoder/sao.h	/^    void generateLumaOffsets(SaoCtuParam* ctuParam, int idxY, int idxX);$/;"	p	class:X265_NS::SAO	access:public	signature:(SaoCtuParam* ctuParam, int idxY, int idxX)
geomRecurId	../../source/common/cudata.h	/^    uint32_t geomRecurId;   \/\/ Unique geom id from 0 to MAX_GEOMS - 1 for every depth$/;"	m	struct:X265_NS::CUGeom	access:public
get	../../source/common/threading.h	/^    int get()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
getAddrOffset	../../source/common/shortyuv.h	/^    static int getAddrOffset(uint32_t idx, uint32_t width)$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t idx, uint32_t width)
getAddrOffset	../../source/common/yuv.h	/^    static int getAddrOffset(uint32_t absPartIdx, uint32_t width)$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx, uint32_t width)
getAllowedChromaDir	../../source/common/cudata.cpp	/^void CUData::getAllowedChromaDir(uint32_t absPartIdx, uint32_t* modeList) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t* modeList) const
getAllowedChromaDir	../../source/common/cudata.h	/^    void     getAllowedChromaDir(uint32_t absPartIdx, uint32_t* modeList) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t* modeList) const
getBestIntraModeChroma	../../source/encoder/search.cpp	/^void Search::getBestIntraModeChroma(Mode& intraMode, const CUGeom& cuGeom)$/;"	f	class:Search	signature:(Mode& intraMode, const CUGeom& cuGeom)
getBestIntraModeChroma	../../source/encoder/search.h	/^    void     getBestIntraModeChroma(Mode& intraMode, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& intraMode, const CUGeom& cuGeom)
getBestRefIdx	../../source/common/cudata.h	/^    uint32_t getBestRefIdx(uint32_t subPartIdx) const { return ((m_interDir[subPartIdx] & 1) << m_refIdx[0][subPartIdx]) | $/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t subPartIdx) const
getBlkBits	../../source/encoder/search.cpp	/^void Search::getBlkBits(PartSize cuMode, bool bPSlice, int partIdx, uint32_t lastMode, uint32_t blockBit[3])$/;"	f	class:Search	signature:(PartSize cuMode, bool bPSlice, int partIdx, uint32_t lastMode, uint32_t blockBit[3])
getBlkBits	../../source/encoder/search.h	/^    static void getBlkBits(PartSize cuMode, bool bPSlice, int puIdx, uint32_t lastMode, uint32_t blockBit[3]);$/;"	p	class:X265_NS::Search	access:protected	signature:(PartSize cuMode, bool bPSlice, int puIdx, uint32_t lastMode, uint32_t blockBit[3])
getBoundaryStrength	../../source/common/deblock.cpp	/^uint8_t Deblock::getBoundaryStrength(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[])
getBoundaryStrength	../../source/common/deblock.h	/^    static uint8_t getBoundaryStrength(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cuQ, int32_t dir, uint32_t partQ, const uint8_t blockStrength[])
getBsLength	../../source/encoder/frameencoder.cpp	/^uint32_t getBsLength( int32_t code )$/;"	f	namespace:X265_NS	signature:( int32_t code )
getCUHeight	../../source/encoder/framefilter.h	/^        uint32_t getCUHeight() const$/;"	f	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:() const
getCUWidth	../../source/encoder/framefilter.h	/^    uint32_t getCUWidth(int colNum) const$/;"	f	class:X265_NS::FrameFilter	access:public	signature:(int colNum) const
getCbAddr	../../source/common/lowres.h	/^    pixel* getCbAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return fpelPlane[1] + reconPic->m_cuOffsetC[ctuAddr] + reconPic->m_buOffsetC[absPartIdx]; }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
getCbAddr	../../source/common/picyuv.h	/^    const pixel* getCbAddr(uint32_t ctuAddr) const             { return m_picOrg[1] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr) const
getCbAddr	../../source/common/picyuv.h	/^    const pixel* getCbAddr(uint32_t ctuAddr, uint32_t absPartIdx) const   { return m_picOrg[1] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
getCbAddr	../../source/common/picyuv.h	/^    pixel*  getCbAddr(uint32_t ctuAddr)                        { return m_picOrg[1] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr)
getCbAddr	../../source/common/picyuv.h	/^    pixel*  getCbAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return m_picOrg[1] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
getCbAddr	../../source/common/shortyuv.h	/^    const int16_t* getCbAddr(uint32_t absPartIdx) const                         { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx) const
getCbAddr	../../source/common/shortyuv.h	/^    int16_t* getCbAddr(uint32_t absPartIdx)                         { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx)
getCbAddr	../../source/common/yuv.h	/^    const pixel* getCbAddr(uint32_t absPartIdx) const                        { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
getCbAddr	../../source/common/yuv.h	/^    pixel* getCbAddr(uint32_t absPartIdx)                        { return m_buf[1] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx)
getCbf	../../source/common/cudata.h	/^    uint8_t  getCbf(uint32_t absPartIdx, TextType ttype, uint32_t tuDepth) const { return (m_cbf[ttype][absPartIdx] >> tuDepth) & 0x1; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, TextType ttype, uint32_t tuDepth) const
getChromaAddr	../../source/common/picyuv.h	/^    const pixel* getChromaAddr(uint32_t chromaId, uint32_t ctuAddr) const { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr) const
getChromaAddr	../../source/common/picyuv.h	/^    const pixel* getChromaAddr(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx) const { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx) const
getChromaAddr	../../source/common/picyuv.h	/^    pixel*  getChromaAddr(uint32_t chromaId, uint32_t ctuAddr) { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr)
getChromaAddr	../../source/common/picyuv.h	/^    pixel*  getChromaAddr(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx) { return m_picOrg[chromaId] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t chromaId, uint32_t ctuAddr, uint32_t absPartIdx)
getChromaAddr	../../source/common/shortyuv.h	/^    const int16_t* getChromaAddr(uint32_t chromaId, uint32_t partUnitIdx) const { return m_buf[chromaId] + getChromaAddrOffset(partUnitIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t chromaId, uint32_t partUnitIdx) const
getChromaAddr	../../source/common/shortyuv.h	/^    int16_t* getChromaAddr(uint32_t chromaId, uint32_t partUnitIdx) { return m_buf[chromaId] + getChromaAddrOffset(partUnitIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t chromaId, uint32_t partUnitIdx)
getChromaAddr	../../source/common/yuv.h	/^    const pixel* getChromaAddr(uint32_t chromaId, uint32_t absPartIdx) const { return m_buf[chromaId] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t chromaId, uint32_t absPartIdx) const
getChromaAddr	../../source/common/yuv.h	/^    pixel* getChromaAddr(uint32_t chromaId, uint32_t absPartIdx) { return m_buf[chromaId] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t chromaId, uint32_t absPartIdx)
getChromaAddrOffset	../../source/common/picyuv.h	/^    intptr_t getChromaAddrOffset(uint32_t ctuAddr, uint32_t absPartIdx) const { return m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
getChromaAddrOffset	../../source/common/shortyuv.h	/^    int getChromaAddrOffset(uint32_t idx) const$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t idx) const
getChromaAddrOffset	../../source/common/yuv.h	/^    int getChromaAddrOffset(uint32_t absPartIdx) const$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
getColMVP	../../source/common/cudata.cpp	/^bool CUData::getColMVP(MV& outMV, int& outRefIdx, int picList, int cuAddr, int partUnitIdx) const$/;"	f	class:CUData	signature:(MV& outMV, int& outRefIdx, int picList, int cuAddr, int partUnitIdx) const
getColMVP	../../source/common/cudata.h	/^    bool getColMVP(MV& outMV, int& outRefIdx, int picList, int cuAddr, int absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(MV& outMV, int& outRefIdx, int picList, int cuAddr, int absPartIdx) const
getCollocatedMV	../../source/common/cudata.cpp	/^bool CUData::getCollocatedMV(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const$/;"	f	class:CUData	signature:(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const
getCollocatedMV	../../source/common/cudata.h	/^    bool getCollocatedMV(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(int cuAddr, int partUnitIdx, InterNeighbourMV *neighbour) const
getCost	../../source/encoder/rdcost.h	/^    inline uint32_t getCost(uint32_t bits) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint32_t bits) const
getCpuCount	../../source/common/threadpool.cpp	/^int ThreadPool::getCpuCount()$/;"	f	class:X265_NS::ThreadPool	signature:()
getCpuCount	../../source/common/threadpool.h	/^    static int  getCpuCount();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
getCrAddr	../../source/common/lowres.h	/^    pixel* getCrAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return fpelPlane[2] + reconPic->m_cuOffsetC[ctuAddr] + reconPic->m_buOffsetC[absPartIdx]; }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
getCrAddr	../../source/common/picyuv.h	/^    const pixel* getCrAddr(uint32_t ctuAddr) const             { return m_picOrg[2] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr) const
getCrAddr	../../source/common/picyuv.h	/^    const pixel* getCrAddr(uint32_t ctuAddr, uint32_t absPartIdx) const   { return m_picOrg[2] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
getCrAddr	../../source/common/picyuv.h	/^    pixel*  getCrAddr(uint32_t ctuAddr)                        { return m_picOrg[2] + m_cuOffsetC[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr)
getCrAddr	../../source/common/picyuv.h	/^    pixel*  getCrAddr(uint32_t ctuAddr, uint32_t absPartIdx)   { return m_picOrg[2] + m_cuOffsetC[ctuAddr] + m_buOffsetC[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
getCrAddr	../../source/common/shortyuv.h	/^    const int16_t* getCrAddr(uint32_t absPartIdx) const                         { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx) const
getCrAddr	../../source/common/shortyuv.h	/^    int16_t* getCrAddr(uint32_t absPartIdx)                         { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx)
getCrAddr	../../source/common/yuv.h	/^    const pixel* getCrAddr(uint32_t absPartIdx) const                        { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
getCrAddr	../../source/common/yuv.h	/^    pixel* getCrAddr(uint32_t absPartIdx)                        { return m_buf[2] + getChromaAddrOffset(absPartIdx); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx)
getCtxSkipFlag	../../source/common/cudata.cpp	/^uint32_t CUData::getCtxSkipFlag(uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx) const
getCtxSkipFlag	../../source/common/cudata.h	/^    uint32_t getCtxSkipFlag(uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
getCtxSplitFlag	../../source/common/cudata.cpp	/^uint32_t CUData::getCtxSplitFlag(uint32_t absPartIdx, uint32_t depth) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t depth) const
getCtxSplitFlag	../../source/common/cudata.h	/^    uint32_t getCtxSplitFlag(uint32_t absPartIdx, uint32_t depth) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t depth) const
getDecidedPicture	../../source/encoder/slicetype.cpp	/^Frame* Lookahead::getDecidedPicture()$/;"	f	class:Lookahead	signature:()
getDecidedPicture	../../source/encoder/slicetype.h	/^    Frame*  getDecidedPicture();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
getDiffLimitedQScale	../../source/encoder/ratecontrol.cpp	/^double RateControl::getDiffLimitedQScale(RateControlEntry *rce, double q)$/;"	f	class:RateControl	signature:(RateControlEntry *rce, double q)
getDiffLimitedQScale	../../source/encoder/ratecontrol.h	/^    double getDiffLimitedQScale(RateControlEntry *rce, double q);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(RateControlEntry *rce, double q)
getDirectPMV	../../source/common/cudata.cpp	/^bool CUData::getDirectPMV(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const$/;"	f	class:CUData	signature:(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const
getDirectPMV	../../source/common/cudata.h	/^    bool getDirectPMV(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(MV& pmv, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const
getEncodedPicture	../../source/encoder/frameencoder.cpp	/^Frame *FrameEncoder::getEncodedPicture(NALList& output)$/;"	f	class:X265_NS::FrameEncoder	signature:(NALList& output)
getEncodedPicture	../../source/encoder/frameencoder.h	/^    Frame *getEncodedPicture(NALList& list);$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:(NALList& list)
getEstimatedPictureCost	../../source/encoder/slicetype.cpp	/^void Lookahead::getEstimatedPictureCost(Frame *curFrame)$/;"	f	class:Lookahead	signature:(Frame *curFrame)
getEstimatedPictureCost	../../source/encoder/slicetype.h	/^    void    getEstimatedPictureCost(Frame *pic);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(Frame *pic)
getFIFO	../../source/common/bitstream.h	/^    const uint8_t* getFIFO() const           { return m_fifo; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:() const
getHeight	../../source/input/input.h	/^    virtual int getHeight() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
getHeight	../../source/input/y4m.h	/^    int getHeight() const                         { return height; }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
getHeight	../../source/input/yuv.h	/^    int getHeight() const                         { return height; }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
getICRate	../../source/common/quant.cpp	/^inline int getICRate(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, const uint32_t absGoRice, const uint32_t maxVlc, const uint32_t c1c2Rate)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, const uint32_t absGoRice, const uint32_t maxVlc, const uint32_t c1c2Rate)
getICRateCost	../../source/common/quant.cpp	/^inline uint32_t getICRateCost(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, uint32_t absGoRice, const uint32_t c1c2Rate)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, int32_t diffLevel, const int* greaterOneBits, const int* levelAbsBits, uint32_t absGoRice, const uint32_t c1c2Rate)
getICRateLessVlc	../../source/common/quant.cpp	/^inline int getICRateLessVlc(uint32_t absLevel, int32_t diffLevel, const uint32_t absGoRice)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, int32_t diffLevel, const uint32_t absGoRice)
getICRateNegDiff	../../source/common/quant.cpp	/^inline int getICRateNegDiff(uint32_t absLevel, const int* greaterOneBits, const int* levelAbsBits)$/;"	f	namespace:__anon29	signature:(uint32_t absLevel, const int* greaterOneBits, const int* levelAbsBits)
getIdrPicFlag	../../source/common/slice.h	/^    bool getIdrPicFlag() const$/;"	f	class:X265_NS::Slice	access:public	signature:() const
getIncr	../../source/common/threading.h	/^    int getIncr(int n = 1)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(int n = 1)
getIndirectPMV	../../source/common/cudata.cpp	/^bool CUData::getIndirectPMV(MV& outMV, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const$/;"	f	class:CUData	signature:(MV& outMV, InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx) const
getIndirectPMV	../../source/common/cudata.h	/^    bool getIndirectPMV(MV& outMV, InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(MV& outMV, InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx) const
getInitQScale	../../source/encoder/ratecontrol.cpp	/^double RateControl::getInitQScale(Frame *curFrame, RateControlEntry *rce)$/;"	f	class:RateControl	signature:(Frame *curFrame, RateControlEntry *rce)
getInitQScale	../../source/encoder/ratecontrol.h	/^    double getInitQScale(Frame *curFrame, RateControlEntry *rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame *curFrame, RateControlEntry *rce)
getInterMergeCandidates	../../source/common/cudata.cpp	/^uint32_t CUData::getInterMergeCandidates(uint32_t absPartIdx, uint32_t puIdx, MVField(*candMvField)[2], uint8_t* candDir) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t puIdx, MVField(*candMvField)[2], uint8_t* candDir) const
getInterMergeCandidates	../../source/common/cudata.h	/^    uint32_t getInterMergeCandidates(uint32_t absPartIdx, uint32_t puIdx, MVField (*candMvField)[2], uint8_t* candDir) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t puIdx, MVField (*candMvField)[2], uint8_t* candDir) const
getInterNeighbourMV	../../source/common/cudata.cpp	/^void CUData::getInterNeighbourMV(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const$/;"	f	class:CUData	signature:(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const
getInterNeighbourMV	../../source/common/cudata.h	/^    void getInterNeighbourMV(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(InterNeighbourMV *neighbour, uint32_t partUnitIdx, MVP_DIR dir) const
getInterTUQtDepthRange	../../source/common/cudata.cpp	/^void CUData::getInterTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
getInterTUQtDepthRange	../../source/common/cudata.h	/^    void     getInterTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
getIntraDirLumaPredictor	../../source/common/cudata.cpp	/^int CUData::getIntraDirLumaPredictor(uint32_t absPartIdx, uint32_t* intraDirPred) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, uint32_t* intraDirPred) const
getIntraDirLumaPredictor	../../source/common/cudata.h	/^    int      getIntraDirLumaPredictor(uint32_t absPartIdx, uint32_t* intraDirPred) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx, uint32_t* intraDirPred) const
getIntraRemModeBits	../../source/encoder/search.cpp	/^uint32_t Search::getIntraRemModeBits(CUData& cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const$/;"	f	class:Search	signature:(CUData& cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const
getIntraRemModeBits	../../source/encoder/search.h	/^    uint32_t getIntraRemModeBits(CUData & cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const;$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData & cu, uint32_t absPartIdx, uint32_t mpmModes[3], uint64_t& mpms) const
getIntraTUQtDepthRange	../../source/common/cudata.cpp	/^void CUData::getIntraTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
getIntraTUQtDepthRange	../../source/common/cudata.h	/^    void     getIntraTUQtDepthRange(uint32_t tuDepthRange[2], uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t tuDepthRange[2], uint32_t absPartIdx) const
getLSB	../../source/encoder/dpb.cpp	/^int DPB::getLSB(int poc, int maxLSB)$/;"	f	class:DPB	signature:(int poc, int maxLSB)
getLSB	../../source/encoder/dpb.h	/^    int  getLSB(int poc, int maxLSB);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int poc, int maxLSB)
getLastCodedQP	../../source/common/cudata.cpp	/^int8_t CUData::getLastCodedQP(uint32_t absPartIdx) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx) const
getLastCodedQP	../../source/common/cudata.h	/^    int8_t getLastCodedQP(uint32_t absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t absPartIdx) const
getLastValidPartIdx	../../source/common/cudata.cpp	/^int CUData::getLastValidPartIdx(int absPartIdx) const$/;"	f	class:CUData	signature:(int absPartIdx) const
getLastValidPartIdx	../../source/common/cudata.h	/^    int  getLastValidPartIdx(int absPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(int absPartIdx) const
getLowresMV	../../source/encoder/search.cpp	/^MV Search::getLowresMV(const CUData& cu, const PredictionUnit& pu, int list, int ref)$/;"	f	class:Search	signature:(const CUData& cu, const PredictionUnit& pu, int list, int ref)
getLowresMV	../../source/encoder/search.h	/^    MV getLowresMV(const CUData& cu, const PredictionUnit& pu, int list, int ref);$/;"	p	class:X265_NS::Search	access:public	signature:(const CUData& cu, const PredictionUnit& pu, int list, int ref)
getLumaAddr	../../source/common/lowres.h	/^    pixel* getLumaAddr(uint32_t ctuAddr, uint32_t absPartIdx) { return fpelPlane[0] + reconPic->m_cuOffsetY[ctuAddr] + reconPic->m_buOffsetY[absPartIdx]; }$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
getLumaAddr	../../source/common/picyuv.h	/^    const pixel* getLumaAddr(uint32_t ctuAddr) const           { return m_picOrg[0] + m_cuOffsetY[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr) const
getLumaAddr	../../source/common/picyuv.h	/^    const pixel* getLumaAddr(uint32_t ctuAddr, uint32_t absPartIdx) const { return m_picOrg[0] + m_cuOffsetY[ctuAddr] + m_buOffsetY[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx) const
getLumaAddr	../../source/common/picyuv.h	/^    pixel*  getLumaAddr(uint32_t ctuAddr)                      { return m_picOrg[0] + m_cuOffsetY[ctuAddr]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr)
getLumaAddr	../../source/common/picyuv.h	/^    pixel*  getLumaAddr(uint32_t ctuAddr, uint32_t absPartIdx) { return m_picOrg[0] + m_cuOffsetY[ctuAddr] + m_buOffsetY[absPartIdx]; }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t ctuAddr, uint32_t absPartIdx)
getLumaAddr	../../source/common/shortyuv.h	/^    const int16_t* getLumaAddr(uint32_t absPartIdx) const                       { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx) const
getLumaAddr	../../source/common/shortyuv.h	/^    int16_t* getLumaAddr(uint32_t absPartIdx)                       { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::ShortYuv	access:public	signature:(uint32_t absPartIdx)
getLumaAddr	../../source/common/yuv.h	/^    const pixel* getLumaAddr(uint32_t absPartIdx) const                      { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx) const
getLumaAddr	../../source/common/yuv.h	/^    pixel* getLumaAddr(uint32_t absPartIdx)                      { return m_buf[0] + getAddrOffset(absPartIdx, m_size); }$/;"	f	class:X265_NS::Yuv	access:public	signature:(uint32_t absPartIdx)
getLumaBufLen	../../source/common/picyuv.cpp	/^int PicYuv::getLumaBufLen(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp)$/;"	f	class:PicYuv	signature:(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp)
getLumaBufLen	../../source/common/picyuv.h	/^    int   getLumaBufLen(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp);$/;"	p	class:X265_NS::PicYuv	access:public	signature:(uint32_t picWidth, uint32_t picHeight, uint32_t picCsp)
getMvField	../../source/common/cudata.cpp	/^void CUData::getMvField(const CUData* cu, uint32_t absPartIdx, int picList, MVField& outMvField) const$/;"	f	class:CUData	signature:(const CUData* cu, uint32_t absPartIdx, int picList, MVField& outMvField) const
getMvField	../../source/common/cudata.h	/^    void     getMvField(const CUData* cu, uint32_t absPartIdx, int picList, MVField& mvField) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData* cu, uint32_t absPartIdx, int picList, MVField& mvField) const
getNalUnitType	../../source/encoder/dpb.cpp	/^NalUnitType DPB::getNalUnitType(int curPOC, bool bIsKeyFrame)$/;"	f	class:DPB	signature:(int curPOC, bool bIsKeyFrame)
getNalUnitType	../../source/encoder/dpb.h	/^    NalUnitType getNalUnitType(int curPoc, bool bIsKeyFrame);$/;"	p	class:X265_NS::DPB	access:protected	signature:(int curPoc, bool bIsKeyFrame)
getName	../../source/input/input.h	/^    virtual const char *getName() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
getName	../../source/input/y4m.h	/^    const char *getName() const   { return "y4m"; }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
getName	../../source/input/yuv.h	/^    const char *getName() const                   { return "yuv"; }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
getName	../../source/output/output.h	/^    virtual const char *getName() const = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:() const
getName	../../source/output/output.h	/^    virtual const char* getName() const = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:() const
getName	../../source/output/raw.h	/^    const char* getName() const { return "raw"; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:() const
getName	../../source/output/y4m.h	/^    const char *getName() const                   { return "y4m"; }$/;"	f	class:X265_NS::Y4MOutput	access:public	signature:() const
getName	../../source/output/yuv.h	/^    const char *getName() const                   { return "yuv"; }$/;"	f	class:X265_NS::YUVOutput	access:public	signature:() const
getNeighbourMV	../../source/common/cudata.cpp	/^void CUData::getNeighbourMV(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const$/;"	f	class:CUData	signature:(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const
getNeighbourMV	../../source/common/cudata.h	/^    void     getNeighbourMV(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t puIdx, uint32_t absPartIdx, InterNeighbourMV* neighbours) const
getNumPartInter	../../source/common/cudata.h	/^    uint32_t getNumPartInter(uint32_t absPartIdx) const              { return nbPartsTable[(int)m_partSize[absPartIdx]]; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
getNumaNodeCount	../../source/common/threadpool.cpp	/^int ThreadPool::getNumaNodeCount()$/;"	f	class:X265_NS::ThreadPool	signature:()
getNumaNodeCount	../../source/common/threadpool.h	/^    static int  getNumaNodeCount();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
getNumberOfWrittenBits	../../source/common/bitstream.h	/^    uint32_t getNumberOfWrittenBits()  const { return m_byteOccupancy * 8 + m_partialByteBits; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:() const
getNumberOfWrittenBits	../../source/common/bitstream.h	/^    uint32_t getNumberOfWrittenBits() const { return m_bitCounter; }$/;"	f	class:X265_NS::BitCounter	access:public	signature:() const
getNumberOfWrittenBits	../../source/common/bitstream.h	/^    virtual uint32_t getNumberOfWrittenBits() const         = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:() const
getNumberOfWrittenBits	../../source/encoder/entropy.h	/^    uint32_t getNumberOfWrittenBits()$/;"	f	class:X265_NS::Entropy	access:public	signature:()
getNumberOfWrittenBytes	../../source/common/bitstream.h	/^    uint32_t getNumberOfWrittenBytes() const { return m_byteOccupancy; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:() const
getPMV	../../source/common/cudata.cpp	/^int CUData::getPMV(InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx, MV* amvpCand, MV* pmv) const$/;"	f	class:CUData	signature:(InterNeighbourMV *neighbours, uint32_t picList, uint32_t refIdx, MV* amvpCand, MV* pmv) const
getPMV	../../source/common/cudata.h	/^    int      getPMV(InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx, MV* amvpCand, MV* pmv) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(InterNeighbourMV *neighbours, uint32_t reference_list, uint32_t refIdx, MV* amvpCand, MV* pmv) const
getPOC	../../source/common/piclist.cpp	/^Frame* PicList::getPOC(int poc)$/;"	f	class:PicList	signature:(int poc)
getPOC	../../source/common/piclist.h	/^    Frame* getPOC(int poc);$/;"	p	class:X265_NS::PicList	access:public	signature:(int poc)
getPUAbove	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAbove(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const
getPUAbove	../../source/common/cudata.h	/^    const CUData* getPUAbove(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& aPartUnitIdx, uint32_t curPartUnitIdx) const
getPUAboveLeft	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAboveLeft(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const
getPUAboveLeft	../../source/common/cudata.h	/^    const CUData* getPUAboveLeft(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& alPartUnitIdx, uint32_t curPartUnitIdx) const
getPUAboveRight	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAboveRight(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const
getPUAboveRight	../../source/common/cudata.h	/^    const CUData* getPUAboveRight(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx) const
getPUAboveRightAdi	../../source/common/cudata.cpp	/^const CUData* CUData::getPUAboveRightAdi(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const$/;"	f	class:CUData	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
getPUAboveRightAdi	../../source/common/cudata.h	/^    const CUData* getPUAboveRightAdi(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& arPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
getPUBelowLeft	../../source/common/cudata.cpp	/^const CUData* CUData::getPUBelowLeft(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const
getPUBelowLeft	../../source/common/cudata.h	/^    const CUData* getPUBelowLeft(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx) const
getPUBelowLeftAdi	../../source/common/cudata.cpp	/^const CUData* CUData::getPUBelowLeftAdi(uint32_t& blPartUnitIdx,  uint32_t curPartUnitIdx, uint32_t partUnitOffset) const$/;"	f	class:CUData	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
getPUBelowLeftAdi	../../source/common/cudata.h	/^    const CUData* getPUBelowLeftAdi(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& blPartUnitIdx, uint32_t curPartUnitIdx, uint32_t partUnitOffset) const
getPULeft	../../source/common/cudata.cpp	/^const CUData* CUData::getPULeft(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const$/;"	f	class:CUData	signature:(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const
getPULeft	../../source/common/cudata.h	/^    const CUData* getPULeft(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& lPartUnitIdx, uint32_t curPartUnitIdx) const
getPUOffset	../../source/common/cudata.h	/^    uint32_t getPUOffset(uint32_t puIdx, uint32_t absPartIdx) const { return (partAddrTable[(int)m_partSize[absPartIdx]][puIdx] << (m_slice->m_param->unitSizeDepth - m_cuDepth[absPartIdx]) * 2) >> 4; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t puIdx, uint32_t absPartIdx) const
getParamAspectRatio	../../source/common/param.cpp	/^void getParamAspectRatio(x265_param* p, int& width, int& height)$/;"	f	namespace:X265_NS	signature:(x265_param* p, int& width, int& height)
getParamAspectRatio	../../source/common/param.h	/^void  getParamAspectRatio(x265_param *p, int& width, int& height);$/;"	p	namespace:X265_NS	signature:(x265_param *p, int& width, int& height)
getPartIndexAndSize	../../source/common/cudata.cpp	/^void CUData::getPartIndexAndSize(uint32_t partIdx, uint32_t& outPartAddr, int& outWidth, int& outHeight) const$/;"	f	class:CUData	signature:(uint32_t partIdx, uint32_t& outPartAddr, int& outWidth, int& outHeight) const
getPartIndexAndSize	../../source/common/cudata.h	/^    void     getPartIndexAndSize(uint32_t puIdx, uint32_t& absPartIdx, int& puWidth, int& puHeight) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t puIdx, uint32_t& absPartIdx, int& puWidth, int& puHeight) const
getPicCTU	../../source/common/framedata.h	/^    inline CUData* getPicCTU(uint32_t ctuAddr) { return &m_picCTU[ctuAddr]; }$/;"	f	class:X265_NS::FrameData	access:public	signature:(uint32_t ctuAddr)
getPlaneAddr	../../source/common/picyuv.h	/^    const pixel* getPlaneAddr(uint32_t plane, uint32_t ctuAddr) const     { return m_picOrg[plane] + (plane ? m_cuOffsetC[ctuAddr] : m_cuOffsetY[ctuAddr]); }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t plane, uint32_t ctuAddr) const
getPlaneAddr	../../source/common/picyuv.h	/^    pixel*  getPlaneAddr(uint32_t plane, uint32_t ctuAddr)     { return m_picOrg[plane] + (plane ? m_cuOffsetC[ctuAddr] : m_cuOffsetY[ctuAddr]); }$/;"	f	class:X265_NS::PicYuv	access:public	signature:(uint32_t plane, uint32_t ctuAddr)
getPredictorType	../../source/encoder/ratecontrol.cpp	/^int RateControl::getPredictorType(int lowresSliceType, int sliceType)$/;"	f	class:RateControl	signature:(int lowresSliceType, int sliceType)
getPredictorType	../../source/encoder/ratecontrol.h	/^    int    getPredictorType(int lowresSliceType, int sliceType);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int lowresSliceType, int sliceType)
getQScale	../../source/encoder/ratecontrol.cpp	/^double RateControl::getQScale(RateControlEntry *rce, double rateFactor)$/;"	f	class:RateControl	signature:(RateControlEntry *rce, double rateFactor)
getQScale	../../source/encoder/ratecontrol.h	/^    double getQScale(RateControlEntry *rce, double rateFactor);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(RateControlEntry *rce, double rateFactor)
getQScaleI	../../source/encoder/ratecontrol.cpp	/^double RateControl::getQScaleI(Frame *curFrame, RateControlEntry *rce, double rateFactor)$/;"	f	class:RateControl	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor)
getQScaleI	../../source/encoder/ratecontrol.h	/^    double getQScaleI(Frame *curFrame, RateControlEntry *rce, double rateFactor);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor)
getQScaleP	../../source/encoder/ratecontrol.cpp	/^double RateControl::getQScaleP(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool&   bHighDiscrepency)$/;"	f	class:RateControl	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool& bHighDiscrepency)
getQScaleP	../../source/encoder/ratecontrol.h	/^    double getQScaleP(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool& bHighDiscrepency);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame *curFrame, RateControlEntry *rce, double rateFactor, bool& bHighDiscrepency)
getQpMinCuAbove	../../source/common/cudata.cpp	/^const CUData* CUData::getQpMinCuAbove(uint32_t& aPartUnitIdx, uint32_t curAbsIdxInCTU) const$/;"	f	class:CUData	signature:(uint32_t& aPartUnitIdx, uint32_t curAbsIdxInCTU) const
getQpMinCuAbove	../../source/common/cudata.h	/^    const CUData* getQpMinCuAbove(uint32_t& aPartUnitIdx, uint32_t currAbsIdxInCTU) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& aPartUnitIdx, uint32_t currAbsIdxInCTU) const
getQpMinCuLeft	../../source/common/cudata.cpp	/^const CUData* CUData::getQpMinCuLeft(uint32_t& lPartUnitIdx, uint32_t curAbsIdxInCTU) const$/;"	f	class:CUData	signature:(uint32_t& lPartUnitIdx, uint32_t curAbsIdxInCTU) const
getQpMinCuLeft	../../source/common/cudata.h	/^    const CUData* getQpMinCuLeft(uint32_t& lPartUnitIdx, uint32_t currAbsIdxInCTU) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t& lPartUnitIdx, uint32_t currAbsIdxInCTU) const
getQtRootCbf	../../source/common/cudata.h	/^    bool     getQtRootCbf(uint32_t absPartIdx) const                             { return (m_cbf[0][absPartIdx] || ((m_chromaFormat != X265_CSP_I400) && (m_cbf[1][absPartIdx] || m_cbf[2][absPartIdx]))); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
getRapPicFlag	../../source/common/slice.h	/^    bool getRapPicFlag() const$/;"	f	class:X265_NS::Slice	access:public	signature:() const
getRefQP	../../source/common/cudata.cpp	/^int8_t CUData::getRefQP(uint32_t curAbsIdxInCTU) const$/;"	f	class:CUData	signature:(uint32_t curAbsIdxInCTU) const
getRefQP	../../source/common/cudata.h	/^    int8_t   getRefQP(uint32_t currAbsIdxInCTU) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t currAbsIdxInCTU) const
getResidual	../../source/common/pixel.cpp	/^void getResidual(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)$/;"	f	namespace:__anon31	signature:(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)
getSCUAddr	../../source/common/cudata.h	/^    uint32_t getSCUAddr() const                  { return (m_cuAddr << m_slice->m_param->unitSizeDepth * 2) + m_absIdxInCTU; }$/;"	f	class:X265_NS::CUData	access:public	signature:() const
getScalingListDefaultAddress	../../source/common/scalinglist.cpp	/^const int32_t* ScalingList::getScalingListDefaultAddress(int sizeId, int listId) const$/;"	f	class:X265_NS::ScalingList	signature:(int sizeId, int listId) const
getScalingListDefaultAddress	../../source/common/scalinglist.h	/^    const int32_t* getScalingListDefaultAddress(int sizeId, int listId) const;$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int sizeId, int listId) const
getSigCoeffGroupCtxInc	../../source/common/quant.h	/^    static uint32_t getSigCoeffGroupCtxInc(uint64_t cgGroupMask, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)$/;"	f	class:X265_NS::Quant	access:public	signature:(uint64_t cgGroupMask, uint32_t cgPosX, uint32_t cgPosY, uint32_t cgBlkPos, uint32_t trSizeCG)
getSigCtxInc	../../source/common/quant.cpp	/^uint32_t Quant::getSigCtxInc(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma,$/;"	f	class:Quant	signature:(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma, uint32_t firstSignificanceMapContext)
getSigCtxInc	../../source/common/quant.h	/^    static uint32_t getSigCtxInc(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma, uint32_t firstSignificanceMapContext);$/;"	p	class:X265_NS::Quant	access:public	signature:(uint32_t patternSigCtx, uint32_t log2TrSize, uint32_t trSize, uint32_t blkPos, bool bIsLuma, uint32_t firstSignificanceMapContext)
getStreamHeaders	../../source/encoder/encoder.cpp	/^void Encoder::getStreamHeaders(NALList& list, Entropy& sbacCoder, Bitstream& bs)$/;"	f	class:Encoder	signature:(NALList& list, Entropy& sbacCoder, Bitstream& bs)
getStreamHeaders	../../source/encoder/encoder.h	/^    void getStreamHeaders(NALList& list, Entropy& sbacCoder, Bitstream& bs);$/;"	p	class:X265_NS::Encoder	access:public	signature:(NALList& list, Entropy& sbacCoder, Bitstream& bs)
getTUBits	../../source/encoder/search.h	/^inline int getTUBits(int idx, int numIdx)$/;"	f	namespace:X265_NS	signature:(int idx, int numIdx)
getTUEntropyCodingParameters	../../source/common/cudata.cpp	/^void CUData::getTUEntropyCodingParameters(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const$/;"	f	class:CUData	signature:(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const
getTUEntropyCodingParameters	../../source/common/cudata.h	/^    void     getTUEntropyCodingParameters(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(TUEntropyCodingParameters &result, uint32_t absPartIdx, uint32_t log2TrSize, bool bIsLuma) const
getWidth	../../source/input/input.h	/^    virtual int getWidth() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
getWidth	../../source/input/y4m.h	/^    int getWidth() const                          { return width; }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
getWidth	../../source/input/yuv.h	/^    int getWidth() const                          { return width; }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
getWorkerStats	../../source/encoder/slicetype.cpp	/^void Lookahead::getWorkerStats(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount)$/;"	f	class:Lookahead	signature:(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount)
getWorkerStats	../../source/encoder/slicetype.h	/^    void          getWorkerStats(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount);$/;"	p	class:X265_NS::Lookahead	access:public	signature:(int64_t& batchElapsedTime, uint64_t& batchCount, int64_t& coopSliceElapsedTime, uint64_t& coopSliceCount)
getZone	../../source/encoder/ratecontrol.cpp	/^x265_zone* RateControl::getZone()$/;"	f	class:RateControl	signature:()
getZone	../../source/encoder/ratecontrol.h	/^    x265_zone* getZone();$/;"	p	class:X265_NS::RateControl	access:protected	signature:()
getenv	../../source/compat/getopt/getopt.c	/^extern char *getenv ();$/;"	p	file:
getopt	../../source/compat/getopt/getopt.c	/^getopt (argc, argv, optstring)$/;"	f
getopt	../../source/compat/getopt/getopt.h	/^extern int getopt ();$/;"	p	signature:()
getopt	../../source/compat/getopt/getopt.h	/^extern int getopt (int argc, char *const *argv, const char *shortopts);$/;"	p	signature:(int argc, char *const *argv, const char *shortopts)
getopt_long	../../source/compat/getopt/getopt.c	/^getopt_long (argc, argv, options, long_options, opt_index)$/;"	f
getopt_long	../../source/compat/getopt/getopt.h	/^extern int getopt_long ();$/;"	p	signature:()
getopt_long	../../source/compat/getopt/getopt.h	/^extern int getopt_long (int argc, char *const *argv, const char *shortopts,$/;"	p	signature:(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int32_t *longind)
getopt_long_only	../../source/compat/getopt/getopt.h	/^extern int getopt_long_only ();$/;"	p	signature:()
getopt_long_only	../../source/compat/getopt/getopt.h	/^extern int getopt_long_only (int argc, char *const *argv,$/;"	p	signature:(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int32_t *longind)
greaterOneBits	../../source/encoder/entropy.h	/^    int greaterOneBits[NUM_ONE_FLAG_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
guessFrameCount	../../source/input/yuv.h	/^    int guessFrameCount();$/;"	p	class:X265_NS::YUVInput	access:protected	signature:()
h01	../../source/common/threadpool.cpp	/^const uint64_t h01 = 0x0101010101010101; \/\/the sum of 256 to the power of 0,1,2,3...$/;"	v
handle	../../source/common/threading.h	/^    CRITICAL_SECTION handle;$/;"	m	class:X265_NS::Lock	access:protected
handle	../../source/common/threading.h	/^    HANDLE handle;$/;"	m	class:X265_NS::Event	access:protected
hasEqualMotion	../../source/common/cudata.cpp	/^bool CUData::hasEqualMotion(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const$/;"	f	class:CUData	signature:(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const
hasEqualMotion	../../source/common/cudata.h	/^    bool hasEqualMotion(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(uint32_t absPartIdx, const CUData& candCU, uint32_t candAbsPartIdx) const
has_arg	../../source/compat/getopt/getopt.h	/^  int has_arg;$/;"	m	struct:option	access:public
hcQpOffset	../../source/common/lowres.h	/^    double hcQpOffset;$/;"	m	struct:X265_NS::Lowres	access:public
header	../../source/input/y4m.cpp	/^static const char header[] = "FRAME";$/;"	v	file:
header	../../source/output/y4m.h	/^    std::ofstream::pos_type header;$/;"	m	class:X265_NS::Y4MOutput	access:protected
height	../../source/common/predict.h	/^    int          height;$/;"	m	struct:X265_NS::PredictionUnit	access:public
height	../../source/input/input.h	/^    int height;$/;"	m	struct:X265_NS::InputFileInfo	access:public
height	../../source/input/y4m.h	/^    int height;$/;"	m	class:X265_NS::Y4MInput	access:protected
height	../../source/input/yuv.h	/^    int height;$/;"	m	class:X265_NS::YUVInput	access:protected
height	../../source/output/reconplay.h	/^    int    height;         \/* height of frame *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
height	../../source/output/y4m.h	/^    int height;$/;"	m	class:X265_NS::Y4MOutput	access:protected
height	../../source/output/yuv.h	/^    int height;$/;"	m	class:X265_NS::YUVOutput	access:protected
heightInCU	../../source/encoder/slicetype.h	/^    int             heightInCU;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
hex2	../../source/encoder/motion.cpp	/^const MV hex2[8] = { MV(-1, -2), MV(-2, 0), MV(-1, 2), MV(1, 2), MV(2, 0), MV(1, -2), MV(-1, -2), MV(-2, 0) };$/;"	m	namespace:__anon23	file:
hex4	../../source/encoder/motion.cpp	/^const MV hex4[16] =$/;"	m	namespace:__anon23	file:
highDistortionCtuCount	../../source/common/framedata.h	/^    uint32_t      highDistortionCtuCount;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
hmul_4p	../../source/common/x86/pixel-a.asm	/^hmul_4p:   times 4 db 1, 1, 1, 1, 1, -1, 1, -1$/;"	l
hmul_8p	../../source/common/x86/pixel-a.asm	/^hmul_8p:   times 8 db 1$/;"	l
hmul_8w	../../source/common/x86/pixel-a.asm	/^hmul_8w:   times 4 dw 1$/;"	l
hmulw_16p	../../source/common/x86/pixel-util8.asm	/^hmulw_16p:              times  8 dw 1$/;"	l
hpelIterationCount	../../source/encoder/motion.cpp	/^int MotionEstimate::hpelIterationCount(int subme)$/;"	f	class:MotionEstimate	signature:(int subme)
hpelIterationCount	../../source/encoder/motion.h	/^    static int hpelIterationCount(int subme);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(int subme)
hpel_dirs	../../source/encoder/motion.cpp	/^    int hpel_dirs;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
hpel_iters	../../source/encoder/motion.cpp	/^    int hpel_iters;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
hpel_satd	../../source/encoder/motion.cpp	/^    bool hpel_satd;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
hrdFullness	../../source/encoder/ratecontrol.cpp	/^void RateControl::hrdFullness(SEIBufferingPeriod *seiBP)$/;"	f	class:RateControl	signature:(SEIBufferingPeriod *seiBP)
hrdFullness	../../source/encoder/ratecontrol.h	/^    void hrdFullness(SEIBufferingPeriod* sei);$/;"	p	class:X265_NS::RateControl	access:public	signature:(SEIBufferingPeriod* sei)
hrdParameters	../../source/common/slice.h	/^    HRDInfo          hrdParameters;$/;"	m	struct:X265_NS::VPS	access:public
hrdParameters	../../source/common/slice.h	/^    HRDInfo    hrdParameters;$/;"	m	struct:X265_NS::VUI	access:public
hrdParametersPresentFlag	../../source/common/slice.h	/^    bool       hrdParametersPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
hrdTiming	../../source/encoder/ratecontrol.h	/^    HRDTiming        *hrdTiming;$/;"	m	struct:X265_NS::RateControlEntry	access:public
hshift	../../source/encoder/weightPrediction.cpp	/^    int         hshift;$/;"	m	struct:__anon22::Cache	file:	access:public
iBpRateRatio	../../source/encoder/ratecontrol.h	/^    double  iBpRateRatio;$/;"	m	struct:X265_NS::RateControlEntry	access:public
iCuCount	../../source/common/frame.h	/^    double   iCuCount;$/;"	m	struct:X265_NS::RcStats	access:public
iCuCount	../../source/encoder/ratecontrol.h	/^    double   iCuCount;$/;"	m	struct:X265_NS::RateControlEntry	access:public
idct	../../source/common/primitives.h	/^        idct_t          idct;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
idct16	../../source/common/vec/dct-sse3.cpp	/^static void idct16(const int16_t *src, int16_t *dst, intptr_t stride)$/;"	f	file:	signature:(const int16_t *src, int16_t *dst, intptr_t stride)
idct16_c	../../source/common/dct.cpp	/^static void idct16_c(const int16_t* src, int16_t* dst, intptr_t dstStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t dstStride)
idct16_shuff	../../source/common/x86/dct8.asm	/^idct16_shuff:   dd 0, 4, 2, 6, 1, 5, 3, 7$/;"	d
idct16_shuff1	../../source/common/x86/dct8.asm	/^idct16_shuff1:  dd 2, 6, 0, 4, 3, 7, 1, 5$/;"	d
idct32	../../source/common/vec/dct-sse3.cpp	/^static void idct32(const int16_t *src, int16_t *dst, intptr_t stride)$/;"	f	file:	signature:(const int16_t *src, int16_t *dst, intptr_t stride)
idct32_c	../../source/common/dct.cpp	/^static void idct32_c(const int16_t* src, int16_t* dst, intptr_t dstStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t dstStride)
idct4_c	../../source/common/dct.cpp	/^static void idct4_c(const int16_t* src, int16_t* dst, intptr_t dstStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t dstStride)
idct4_shuf2	../../source/common/x86/dct8.asm	/^idct4_shuf2:    times 2 db 4, 5, 6, 7, 0, 1, 2, 3, 12, 13, 14, 15, 8 ,9 ,10, 11$/;"	l
idct8	../../source/common/vec/dct-sse3.cpp	/^static void idct8(const int16_t* src, int16_t* dst, intptr_t stride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t stride)
idct8_c	../../source/common/dct.cpp	/^static void idct8_c(const int16_t* src, int16_t* dst, intptr_t dstStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t dstStride)
idct8_shuf1	../../source/common/x86/dct8.asm	/^idct8_shuf1:    dd 0, 2, 4, 6, 1, 3, 5, 7$/;"	d
idct8_shuf3	../../source/common/x86/dct8.asm	/^idct8_shuf3:    times 2 db 12, 13, 14, 15, 8, 9, 10, 11, 4, 5, 6, 7, 0, 1, 2, 3$/;"	l
idct_t	../../source/common/primitives.h	/^typedef void (*idct_t)(const int16_t* src, int16_t* dst, intptr_t dstStride);$/;"	t	namespace:X265_NS
idst4_avx2	../../source/common/x86/dct8.h	/^void PFX(idst4_avx2)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
idst4_c	../../source/common/dct.cpp	/^static void idst4_c(const int16_t* src, int16_t* dst, intptr_t dstStride)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, intptr_t dstStride)
idst4_sse2	../../source/common/x86/dct8.h	/^void PFX(idst4_sse2)(const int16_t* src, int16_t* dst, intptr_t srcStride);$/;"	p	signature:(const int16_t* src, int16_t* dst, intptr_t srcStride)
idst4x4	../../source/common/primitives.h	/^    idct_t                idst4x4;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
idx	../../source/encoder/encoder.h	/^    int idx;$/;"	m	struct:X265_NS::RPSListNode	access:public
ifs	../../source/input/y4m.h	/^    std::istream *ifs;$/;"	m	class:X265_NS::Y4MInput	access:protected
ifs	../../source/input/yuv.h	/^    std::istream *ifs;$/;"	m	class:X265_NS::YUVInput	access:protected
in	../../source/common/md5.h	/^    unsigned char in[64];$/;"	m	struct:X265_NS::MD5Context	access:public
incr	../../source/common/threading.h	/^    void incr()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
indB	../../source/common/lowres.h	/^    int       indB;$/;"	m	struct:X265_NS::Lowres	access:public
index	../../source/encoder/search.h	/^        uint32_t index;$/;"	m	struct:X265_NS::Search::MergeData	access:public
init	../../source/common/lowres.cpp	/^void Lowres::init(PicYuv *origPic, int poc)$/;"	f	class:Lowres	signature:(PicYuv *origPic, int poc)
init	../../source/common/lowres.h	/^    void init(PicYuv *origPic, int poc);$/;"	p	struct:X265_NS::Lowres	access:public	signature:(PicYuv *origPic, int poc)
init	../../source/common/quant.cpp	/^bool Quant::init(double psyScale, const ScalingList& scalingList, Entropy& entropy)$/;"	f	class:Quant	signature:(double psyScale, const ScalingList& scalingList, Entropy& entropy)
init	../../source/common/quant.h	/^    bool init(double psyScale, const ScalingList& scalingList, Entropy& entropy);$/;"	p	class:X265_NS::Quant	access:public	signature:(double psyScale, const ScalingList& scalingList, Entropy& entropy)
init	../../source/common/scalinglist.cpp	/^bool ScalingList::init()$/;"	f	class:X265_NS::ScalingList	signature:()
init	../../source/common/scalinglist.h	/^    bool     init();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
init	../../source/common/wavefront.cpp	/^bool WaveFront::init(int numRows)$/;"	f	class:X265_NS::WaveFront	signature:(int numRows)
init	../../source/common/wavefront.h	/^    bool init(int numRows);$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int numRows)
init	../../source/encoder/frameencoder.cpp	/^bool FrameEncoder::init(Encoder *top, int numRows, int numCols)$/;"	f	class:X265_NS::FrameEncoder	signature:(Encoder *top, int numRows, int numCols)
init	../../source/encoder/frameencoder.h	/^    virtual bool init(Encoder *top, int numRows, int numCols);$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:(Encoder *top, int numRows, int numCols)
init	../../source/encoder/frameencoder.h	/^    void init(Entropy& initContext, unsigned int sid)$/;"	f	struct:X265_NS::CTURow	access:public	signature:(Entropy& initContext, unsigned int sid)
init	../../source/encoder/framefilter.cpp	/^void FrameFilter::init(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols)$/;"	f	class:FrameFilter	signature:(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols)
init	../../source/encoder/framefilter.h	/^    void init(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(Encoder *top, FrameEncoder *frame, int numRows, uint32_t numCols)
init	../../source/encoder/motion.cpp	/^void MotionEstimate::init(int csp)$/;"	f	class:MotionEstimate	signature:(int csp)
init	../../source/encoder/motion.h	/^    void init(int csp);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(int csp)
init	../../source/encoder/ratecontrol.cpp	/^bool RateControl::init(const SPS& sps)$/;"	f	class:RateControl	signature:(const SPS& sps)
init	../../source/encoder/ratecontrol.h	/^    bool init(const SPS& sps);$/;"	p	class:X265_NS::RateControl	access:public	signature:(const SPS& sps)
init	../../source/encoder/reference.cpp	/^int MotionReference::init(PicYuv* recPic, WeightParam *wp, const x265_param& p)$/;"	f	class:MotionReference	signature:(PicYuv* recPic, WeightParam *wp, const x265_param& p)
init	../../source/encoder/reference.h	/^    int  init(PicYuv*, WeightParam* wp, const x265_param& p);$/;"	p	class:X265_NS::MotionReference	access:public	signature:(PicYuv*, WeightParam* wp, const x265_param& p)
init	../../source/encoder/slicetype.h	/^    void init(int w, int h, int n)$/;"	f	struct:X265_NS::LookaheadTLD	access:public	signature:(int w, int h, int n)
initAdiPattern	../../source/common/predict.cpp	/^void Predict::initAdiPattern(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode)$/;"	f	class:Predict	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode)
initAdiPattern	../../source/common/predict.h	/^    void initAdiPattern(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, int dirMode)
initAdiPatternChroma	../../source/common/predict.cpp	/^void Predict::initAdiPatternChroma(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId)$/;"	f	class:Predict	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId)
initAdiPatternChroma	../../source/common/predict.h	/^    void initAdiPatternChroma(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, const CUGeom& cuGeom, uint32_t puAbsPartIdx, const IntraNeighbors& intraNeighbors, uint32_t chromaId)
initBuffer	../../source/encoder/entropy.cpp	/^static void initBuffer(uint8_t* contextModel, SliceType sliceType, int qp, uint8_t* ctxModel, int size)$/;"	f	namespace:X265_NS	signature:(uint8_t* contextModel, SliceType sliceType, int qp, uint8_t* ctxModel, int size)
initCTU	../../source/common/cudata.cpp	/^void CUData::initCTU(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCuInSlice)$/;"	f	class:CUData	signature:(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCuInSlice)
initCTU	../../source/common/cudata.h	/^    void     initCTU(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCUInSlice);$/;"	p	class:X265_NS::CUData	access:public	signature:(const Frame& frame, uint32_t cuAddr, int qp, uint32_t firstRowInSlice, uint32_t lastRowInSlice, uint32_t lastCUInSlice)
initCosts	../../source/encoder/search.h	/^    void initCosts()$/;"	f	struct:X265_NS::Mode	access:public	signature:()
initFramePredictors	../../source/encoder/ratecontrol.cpp	/^void RateControl::initFramePredictors()$/;"	f	class:RateControl	signature:()
initFramePredictors	../../source/encoder/ratecontrol.h	/^    void   initFramePredictors();$/;"	p	class:X265_NS::RateControl	access:protected	signature:()
initHRD	../../source/encoder/ratecontrol.cpp	/^void RateControl::initHRD(SPS& sps)$/;"	f	class:RateControl	signature:(SPS& sps)
initHRD	../../source/encoder/ratecontrol.h	/^    void initHRD(SPS& sps);$/;"	p	class:X265_NS::RateControl	access:public	signature:(SPS& sps)
initIntraNeighbors	../../source/common/predict.cpp	/^void Predict::initIntraNeighbors(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *intraNeighbors)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *intraNeighbors)
initIntraNeighbors	../../source/common/predict.h	/^    static void initIntraNeighbors(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *IntraNeighbors);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t absPartIdx, uint32_t tuDepth, bool isLuma, IntraNeighbors *IntraNeighbors)
initLosslessCU	../../source/common/cudata.cpp	/^void CUData::initLosslessCU(const CUData& cu, const CUGeom& cuGeom)$/;"	f	class:CUData	signature:(const CUData& cu, const CUGeom& cuGeom)
initLosslessCU	../../source/common/cudata.h	/^    void     initLosslessCU(const CUData& cu, const CUGeom& cuGeom);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& cu, const CUGeom& cuGeom)
initPPS	../../source/encoder/encoder.cpp	/^void Encoder::initPPS(PPS *pps)$/;"	f	class:Encoder	signature:(PPS *pps)
initPPS	../../source/encoder/encoder.h	/^    void initPPS(PPS *pps);$/;"	p	class:X265_NS::Encoder	access:protected	signature:(PPS *pps)
initPass2	../../source/encoder/ratecontrol.cpp	/^bool RateControl::initPass2()$/;"	f	class:RateControl	signature:()
initPass2	../../source/encoder/ratecontrol.h	/^    bool   initPass2();$/;"	p	class:X265_NS::RateControl	access:public	signature:()
initRefIdx	../../source/encoder/encoder.cpp	/^void Encoder::initRefIdx()$/;"	f	class:Encoder	signature:()
initRefIdx	../../source/encoder/encoder.h	/^    void initRefIdx();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
initSPS	../../source/encoder/encoder.cpp	/^void Encoder::initSPS(SPS *sps)$/;"	f	class:Encoder	signature:(SPS *sps)
initSPS	../../source/encoder/encoder.h	/^    void initSPS(SPS *sps);$/;"	p	class:X265_NS::Encoder	access:protected	signature:(SPS *sps)
initScales	../../source/encoder/motion.cpp	/^void MotionEstimate::initScales(void)$/;"	f	class:MotionEstimate	signature:(void)
initScales	../../source/encoder/motion.h	/^    static void initScales();$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:()
initSearch	../../source/encoder/search.cpp	/^bool Search::initSearch(const x265_param& param, ScalingList& scalingList)$/;"	f	class:Search	signature:(const x265_param& param, ScalingList& scalingList)
initSearch	../../source/encoder/search.h	/^    bool     initSearch(const x265_param& param, ScalingList& scalingList);$/;"	p	class:X265_NS::Search	access:public	signature:(const x265_param& param, ScalingList& scalingList)
initSplitCUData	../../source/encoder/analysis.h	/^    void initSplitCUData()$/;"	f	struct:X265_NS::SplitData	access:public	signature:()
initSubCU	../../source/common/cudata.cpp	/^void CUData::initSubCU(const CUData& ctu, const CUGeom& cuGeom, int qp)$/;"	f	class:CUData	signature:(const CUData& ctu, const CUGeom& cuGeom, int qp)
initSubCU	../../source/common/cudata.h	/^    void     initSubCU(const CUData& ctu, const CUGeom& cuGeom, int qp);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUData& ctu, const CUGeom& cuGeom, int qp)
initVPS	../../source/encoder/encoder.cpp	/^void Encoder::initVPS(VPS *vps)$/;"	f	class:Encoder	signature:(VPS *vps)
initVPS	../../source/encoder/encoder.h	/^    void initVPS(VPS *vps);$/;"	p	class:X265_NS::Encoder	access:protected	signature:(VPS *vps)
initialCpbRemovalDelayLength	../../source/common/slice.h	/^    uint32_t initialCpbRemovalDelayLength;$/;"	m	struct:X265_NS::HRDInfo	access:public
initialize	../../source/common/cudata.cpp	/^void CUData::initialize(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance)$/;"	f	class:CUData	signature:(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance)
initialize	../../source/common/cudata.h	/^    void     initialize(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUDataMemPool& dataPool, uint32_t depth, const x265_param& param, int instance)
initializeGeoms	../../source/encoder/frameencoder.cpp	/^bool FrameEncoder::initializeGeoms()$/;"	f	class:X265_NS::FrameEncoder	signature:()
initializeGeoms	../../source/encoder/frameencoder.h	/^    bool initializeGeoms();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
inputOffset	../../source/common/slice.h	/^    int      inputOffset;$/;"	m	struct:X265_NS::WeightParam	access:public
inputWeight	../../source/common/slice.h	/^    int      inputWeight;$/;"	m	struct:X265_NS::WeightParam	access:public
inst	../../source/common/threading.h	/^    Lock &inst;$/;"	m	class:X265_NS::ScopedLock	access:protected
int16_t	../../source/compat/msvc/stdint.h	/^typedef short int int16_t;$/;"	t
int32_t	../../source/compat/msvc/stdint.h	/^typedef int int32_t;$/;"	t
int32_t	../../source/encoder/sao.h	/^    typedef int32_t (PerClass[MAX_NUM_SAO_TYPE][MAX_NUM_SAO_CLASS]);$/;"	t	class:X265_NS::SAO	access:public
int32_t	../../source/encoder/sao.h	/^    typedef int32_t (PerPlane[NUM_PLANE][MAX_NUM_SAO_TYPE][MAX_NUM_SAO_CLASS]);$/;"	t	class:X265_NS::SAO	access:public
int64_t	../../source/compat/msvc/stdint.h	/^typedef __int64 int64_t;$/;"	t
int8_t	../../source/compat/msvc/stdint.h	/^typedef signed char int8_t;$/;"	t
integral	../../source/encoder/motion.h	/^    uint32_t* integral[INTEGRAL_PLANE_NUM];$/;"	m	class:X265_NS::MotionEstimate	access:public
integral12h_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral12h_avx2)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	p	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral12v_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral12v_avx2)(uint32_t *sum, intptr_t stride);$/;"	p	signature:(uint32_t *sum, intptr_t stride)
integral16h_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral16h_avx2)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	p	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral16v_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral16v_avx2)(uint32_t *sum, intptr_t stride);$/;"	p	signature:(uint32_t *sum, intptr_t stride)
integral24h_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral24h_avx2)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	p	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral24v_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral24v_avx2)(uint32_t *sum, intptr_t stride);$/;"	p	signature:(uint32_t *sum, intptr_t stride)
integral32h_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral32h_avx2)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	p	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral32v_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral32v_avx2)(uint32_t *sum, intptr_t stride);$/;"	p	signature:(uint32_t *sum, intptr_t stride)
integral4h_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral4h_avx2)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	p	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral4v_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral4v_avx2)(uint32_t *sum, intptr_t stride);$/;"	p	signature:(uint32_t *sum, intptr_t stride)
integral8h_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral8h_avx2)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	p	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral8v_avx2	../../source/common/x86/seaintegral.h	/^void PFX(integral8v_avx2)(uint32_t *sum, intptr_t stride);$/;"	p	signature:(uint32_t *sum, intptr_t stride)
integralCompleted	../../source/encoder/framefilter.h	/^    ThreadSafeInteger integralCompleted;     \/* check if integral calculation is completed in this row *\/$/;"	m	class:X265_NS::FrameFilter	access:public
integral_init12h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init12h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral_init12v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init12v_c(uint32_t *sum12, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum12, intptr_t stride)
integral_init16h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init16h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral_init16v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init16v_c(uint32_t *sum16, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum16, intptr_t stride)
integral_init24h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init24h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral_init24v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init24v_c(uint32_t *sum24, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum24, intptr_t stride)
integral_init32h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init32h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral_init32v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init32v_c(uint32_t *sum32, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum32, intptr_t stride)
integral_init4h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init4h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral_init4v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init4v_c(uint32_t *sum4, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum4, intptr_t stride)
integral_init8h_c	../../source/encoder/framefilter.cpp	/^    static void integral_init8h_c(uint32_t *sum, pixel *pix, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum, pixel *pix, intptr_t stride)
integral_init8v_c	../../source/encoder/framefilter.cpp	/^    static void integral_init8v_c(uint32_t *sum8, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(uint32_t *sum8, intptr_t stride)
integral_inith	../../source/common/primitives.h	/^    integralh_t            integral_inith[NUM_INTEGRAL_SIZE];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
integral_initv	../../source/common/primitives.h	/^    integralv_t            integral_initv[NUM_INTEGRAL_SIZE];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
integralh_t	../../source/common/primitives.h	/^typedef void (*integralh_t)(uint32_t *sum, pixel *pix, intptr_t stride);$/;"	t	namespace:X265_NS
integralv_t	../../source/common/primitives.h	/^typedef void (*integralv_t)(uint32_t *sum, intptr_t stride);$/;"	t	namespace:X265_NS
intel_cpu_indicator_init	../../source/common/x86/asm-primitives.cpp	/^void PFX(intel_cpu_indicator_init)(void)$/;"	f	signature:(void)
inter8x8Cnt	../../source/common/framedata.h	/^    int         inter8x8Cnt;$/;"	m	struct:X265_NS::FrameStats	access:public
interDir	../../source/common/framedata.h	/^    uint8_t*    interDir;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
interNeighbours	../../source/encoder/search.h	/^    InterNeighbourMV interNeighbours[7];$/;"	m	struct:X265_NS::Mode	access:public
interRDOElapsedTime	../../source/encoder/search.h	/^    int64_t  interRDOElapsedTime[NUM_CU_DEPTH]; \/\/ elapsed worker time in inter RDO per CU depth$/;"	m	struct:X265_NS::CUStats	access:public
interlacedSourceFlag	../../source/common/slice.h	/^    bool     interlacedSourceFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
interleave_shuf	../../source/common/x86/pixel-util8.asm	/^interleave_shuf:        times  2 db 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15$/;"	l
interp4_hps_shuf	../../source/common/x86/ipfilter8.asm	/^interp4_hps_shuf: times 2 db 0, 1, 2, 3, 1, 2, 3, 4, 8, 9, 10, 11, 9, 10, 11, 12$/;"	l
interp_8tap_hv_pp_cpu	../../source/common/x86/asm-primitives.cpp	/^void interp_8tap_hv_pp_cpu(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)$/;"	f	namespace:X265_NS	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)
interp_horiz_pp_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void interp_horiz_pp_altivec(const pixel* __restrict__ src, intptr_t srcStride, pixel* __restrict__ dst, intptr_t dstStride, int coeffIdx)$/;"	f	signature:(const pixel* __restrict__ src, intptr_t srcStride, pixel* __restrict__ dst, intptr_t dstStride, int coeffIdx)
interp_horiz_pp_c	../../source/common/ipfilter.cpp	/^void interp_horiz_pp_c(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
interp_horiz_ps_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void interp_horiz_ps_altivec(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)$/;"	f	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
interp_horiz_ps_c	../../source/common/ipfilter.cpp	/^void interp_horiz_ps_c(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
interp_hv_pp_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void interp_hv_pp_altivec(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)$/;"	f	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)
interp_hv_pp_c	../../source/common/ipfilter.cpp	/^void interp_hv_pp_c(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY)
interp_vert_pp_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void interp_vert_pp_altivec(const pixel* __restrict__ src, intptr_t srcStride, pixel* __restrict__ dst, intptr_t dstStride, int coeffIdx)$/;"	f	signature:(const pixel* __restrict__ src, intptr_t srcStride, pixel* __restrict__ dst, intptr_t dstStride, int coeffIdx)
interp_vert_pp_c	../../source/common/ipfilter.cpp	/^void interp_vert_pp_c(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
interp_vert_ps_c	../../source/common/ipfilter.cpp	/^void interp_vert_ps_c(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
interp_vert_sp_c	../../source/common/ipfilter.cpp	/^void interp_vert_sp_c(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
interp_vert_ss_c	../../source/common/ipfilter.cpp	/^void interp_vert_ss_c(const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)$/;"	f	namespace:__anon14	signature:(const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
intra8x8Cnt	../../source/common/framedata.h	/^    int         intra8x8Cnt;$/;"	m	struct:X265_NS::FrameStats	access:public
intraAnalysisElapsedTime	../../source/encoder/search.h	/^    int64_t  intraAnalysisElapsedTime;          \/\/ elapsed worker time in intra sa8d analysis$/;"	m	struct:X265_NS::CUStats	access:public
intraConstraintFlag	../../source/common/slice.h	/^    bool     intraConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
intraCost	../../source/common/lowres.h	/^    int32_t*  intraCost;$/;"	m	struct:X265_NS::Lowres	access:public
intraCost	../../source/encoder/weightPrediction.cpp	/^    const int * intraCost;$/;"	m	struct:__anon22::Cache	file:	access:public
intraFilter	../../source/common/intrapred.cpp	/^void intraFilter(const pixel* samples, pixel* filtered) \/* 1:2:1 filtering of left and top reference samples *\/$/;"	f	namespace:__anon17	signature:(const pixel* samples, pixel* filtered)
intraMbs	../../source/common/lowres.h	/^    int       intraMbs[X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
intraMbs	../../source/encoder/slicetype.h	/^        int  intraMbs;$/;"	m	struct:X265_NS::CostEstimateGroup::Slice	access:public
intraMode	../../source/common/lowres.h	/^    uint8_t*  intraMode;$/;"	m	struct:X265_NS::Lowres	access:public
intraNeighbourBuf	../../source/common/predict.h	/^    pixel     intraNeighbourBuf[2][258];$/;"	m	class:X265_NS::Predict	access:public
intraRDOElapsedTime	../../source/encoder/search.h	/^    int64_t  intraRDOElapsedTime[NUM_CU_DEPTH]; \/\/ elapsed worker time in intra RDO per CU depth$/;"	m	struct:X265_NS::CUStats	access:public
intraSatdForVbv	../../source/common/framedata.h	/^        uint32_t intraSatdForVbv; \/* sum of lowres (estimated) intra costs for entire row *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
intraVbvCost	../../source/common/framedata.h	/^        uint32_t intraVbvCost;  \/* sum of lowres intra costs for 16x16 sub-blocks *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
intra_allangs_t	../../source/common/primitives.h	/^typedef void (*intra_allangs_t)(pixel *dst, pixel *refPix, pixel *filtPix, int bLuma);$/;"	t	namespace:X265_NS
intra_filter	../../source/common/primitives.h	/^        intra_filter_t  intra_filter;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
intra_filter4_shuf0	../../source/common/x86/intrapred16.asm	/^intra_filter4_shuf0:                db  2,  3,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10 ,11, 12, 13$/;"	d
intra_filter4_shuf0	../../source/common/x86/intrapred8.asm	/^intra_filter4_shuf0:  times 2 db  2,  3,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13$/;"	l
intra_filter4_shuf1	../../source/common/x86/intrapred16.asm	/^intra_filter4_shuf1:                db 14, 15,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10 ,11, 12, 13$/;"	d
intra_filter4_shuf1	../../source/common/x86/intrapred8.asm	/^intra_filter4_shuf1:  times 2 db 14, 15,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13$/;"	l
intra_filter4_shuf2	../../source/common/x86/intrapred16.asm	/^intra_filter4_shuf2:        times 2 db  4,  5,  0,  1,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15$/;"	l
intra_filter4_shuf2	../../source/common/x86/intrapred8.asm	/^intra_filter4_shuf2:  times 2 db  4,  5,  0,  1,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15$/;"	l
intra_filter_t	../../source/common/primitives.h	/^typedef void (*intra_filter_t)(const pixel* references, pixel* filtered);$/;"	t	namespace:X265_NS
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter){};$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<16, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<32, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<4, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 10>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 11>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 12>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 13>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 14>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 15>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 16>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 17>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 18>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 19>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 20>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 21>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 22>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 23>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 24>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 25>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 26>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 27>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 28>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 29>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 2>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 30>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 31>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 32>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 33>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 34>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 3>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 4>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 5>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 6>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 7>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 8>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred<8, 9>(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int bFilter)
intra_pred	../../source/common/primitives.h	/^        intra_pred_t    intra_pred[NUM_INTRA_MODE];$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
intra_pred4_shuff1	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff1:      db 0, 1, 1, 2, 2, 3, 3, 4, 0, 1, 1, 2, 2, 3, 3, 4, 0, 1, 1, 2, 2, 3, 3, 4, 1, 2, 2, 3, 3, 4, 4, 5$/;"	d
intra_pred4_shuff12	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff12:     db 0, 9, 9, 10, 10, 11, 11, 12, 0, 9, 9, 10, 10, 11, 11, 12, 0, 9, 9, 10, 10, 11, 11, 12,0, 9, 9, 10, 10, 11, 11, 12$/;"	d
intra_pred4_shuff13	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff13:     db 0, 9, 9, 10, 10, 11, 11, 12, 0, 9, 9, 10, 10, 11, 11, 12, 0, 9, 9, 10, 10, 11, 11, 12, 4, 0, 0, 9, 9, 10, 10, 11$/;"	d
intra_pred4_shuff14	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff14:     db 0, 9, 9, 10, 10, 11, 11, 12, 0, 9, 9, 10, 10, 11, 11, 12, 2, 0, 0, 9, 9, 10, 10, 11, 2, 0, 0, 9, 9, 10, 10, 11$/;"	d
intra_pred4_shuff15	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff15:     db 0, 9, 9, 10, 10, 11, 11, 12, 2, 0, 0, 9, 9, 10, 10, 11, 2, 0, 0, 9, 9, 10, 10, 11, 4, 2, 2, 0, 0, 9, 9, 10$/;"	d
intra_pred4_shuff16	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff16:     db 0, 9, 9, 10, 10, 11, 11, 12, 2, 0, 0, 9, 9, 10, 10, 11, 2, 0, 0, 9, 9, 10, 10, 11, 3, 2, 2, 0, 0, 9, 9, 10$/;"	d
intra_pred4_shuff17	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff17:     db 0, 9, 9, 10, 10, 11, 11, 12, 1, 0, 0, 9, 9, 10, 10, 11, 2, 1, 1, 0, 0, 9, 9, 10, 4, 2, 2, 1, 1, 0, 0, 9$/;"	d
intra_pred4_shuff19	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff19:     db 0, 1, 1, 2, 2, 3, 3, 4, 9, 0, 0, 1, 1, 2, 2, 3, 10, 9, 9, 0, 0, 1, 1, 2, 12, 10, 10, 9, 9, 0, 0, 1$/;"	d
intra_pred4_shuff2	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff2:      db 0, 1, 1, 2, 2, 3, 3, 4, 0, 1, 1, 2, 2, 3, 3, 4, 1, 2, 2, 3, 3, 4, 4, 5, 1, 2, 2, 3, 3, 4, 4, 5$/;"	d
intra_pred4_shuff20	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff20:     db 0, 1, 1, 2, 2, 3, 3, 4, 10, 0, 0, 1, 1, 2, 2, 3, 10, 0, 0, 1, 1, 2, 2, 3, 11, 10, 10, 0, 0, 1, 1, 2$/;"	d
intra_pred4_shuff21	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff21:     db 0, 1, 1, 2, 2, 3, 3, 4, 10, 0, 0, 1, 1, 2, 2, 3, 10, 0, 0, 1, 1, 2, 2, 3, 12, 10, 10, 0, 0, 1, 1, 2$/;"	d
intra_pred4_shuff22	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff22:     db 0, 1, 1, 2, 2, 3, 3, 4, 0, 1, 1, 2, 2, 3, 3, 4, 10, 0, 0, 1, 1, 2, 2, 3, 10, 0, 0, 1, 1, 2, 2, 3$/;"	d
intra_pred4_shuff23	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff23:     db 0, 1, 1, 2, 2, 3, 3, 4, 0, 1, 1, 2, 2, 3, 3, 4, 0, 1, 1, 2, 2, 3, 3, 4, 12, 0, 0, 1, 1, 2, 2, 3$/;"	d
intra_pred4_shuff3	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff3:      db 8, 9, 9, 10, 10, 11, 11, 12, 9, 10, 10, 11, 11, 12, 12, 13, 10, 11, 11, 12, 12, 13, 13, 14, 11, 12, 12, 13, 13, 14, 14, 15$/;"	d
intra_pred4_shuff31	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff31:     db 0, 1, 1, 2, 2, 3, 3, 4, 1, 2, 2, 3, 3, 4, 4, 5, 1, 2, 2, 3, 3, 4, 4, 5, 2, 3, 3, 4, 4, 5, 5, 6$/;"	d
intra_pred4_shuff33	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff33:     db 0, 1, 1, 2, 2, 3, 3, 4, 1, 2, 2, 3, 3, 4, 4, 5, 2, 3, 3, 4, 4, 5, 5, 6, 3, 4, 4, 5, 5, 6, 6, 7$/;"	d
intra_pred4_shuff4	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff4:      db 9, 10, 10, 11, 11, 12, 12, 13, 10, 11, 11, 12, 12, 13, 13, 14, 10, 11, 11, 12, 12, 13, 13, 14, 11, 12, 12, 13, 13, 14, 14, 15$/;"	d
intra_pred4_shuff5	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff5:      db 9, 10, 10, 11, 11, 12, 12, 13, 10, 11, 11, 12, 12, 13, 13, 14, 10, 11, 11, 12, 12, 13, 13, 14, 11, 12, 12, 13, 13, 14, 14, 15$/;"	d
intra_pred4_shuff6	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff6:      db 9, 10, 10, 11, 11, 12, 12, 13, 9, 10, 10, 11, 11, 12, 12, 13, 10, 11, 11, 12, 12, 13, 13, 14, 10, 11, 11, 12, 12, 13, 13, 14$/;"	d
intra_pred4_shuff7	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff7:      db 9, 10, 10, 11, 11, 12, 12, 13, 9, 10, 10, 11, 11, 12, 12, 13, 9, 10, 10, 11, 11, 12, 12, 13, 10, 11, 11, 12, 12, 13, 13, 14$/;"	d
intra_pred4_shuff9	../../source/common/x86/intrapred8.asm	/^intra_pred4_shuff9:      db 9, 10, 10, 11, 11, 12, 12, 13, 9, 10, 10, 11, 11, 12, 12, 13, 9, 10, 10, 11, 11, 12, 12, 13, 9, 10, 10, 11, 11, 12, 12, 13$/;"	d
intra_pred_allangs	../../source/common/primitives.h	/^        intra_allangs_t intra_pred_allangs;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
intra_pred_ang_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void intra_pred_ang_altivec(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)
intra_pred_ang_c	../../source/common/intrapred.cpp	/^void intra_pred_ang_c(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)$/;"	f	namespace:__anon17	signature:(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)
intra_pred_dc_c	../../source/common/intrapred.cpp	/^void intra_pred_dc_c(pixel* dst, intptr_t dstStride, const pixel* srcPix, int \/*dirMode*\/, int bFilter)$/;"	f	namespace:__anon17	signature:(pixel* dst, intptr_t dstStride, const pixel* srcPix, int , int bFilter)
intra_pred_shuff_0_15	../../source/common/x86/intrapred8.asm	/^intra_pred_shuff_0_15: db 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 15$/;"	d
intra_pred_shuff_0_4	../../source/common/x86/intrapred8.asm	/^intra_pred_shuff_0_4:    times 4 db 0, 1, 1, 2, 2, 3, 3, 4$/;"	l
intra_pred_shuff_15_0	../../source/common/x86/intrapred8.asm	/^intra_pred_shuff_15_0:   times 2 db 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0$/;"	l
intra_pred_t	../../source/common/primitives.h	/^typedef void (*intra_pred_t)(pixel* dst, intptr_t dstStride, const pixel *srcPix, int dirMode, int bFilter);$/;"	t	namespace:X265_NS
invQscaleFactor	../../source/common/lowres.h	/^    int*      invQscaleFactor; \/\/ qScale values for qp Aq Offsets$/;"	m	struct:X265_NS::Lowres	access:public
invQscaleFactor8x8	../../source/common/lowres.h	/^    int*      invQscaleFactor8x8; \/\/ temporary buffer for qg-size 8$/;"	m	struct:X265_NS::Lowres	access:public
invalidateContexts	../../source/encoder/search.cpp	/^void Search::invalidateContexts(int fromDepth)$/;"	f	class:Search	signature:(int fromDepth)
invalidateContexts	../../source/encoder/search.cpp	/^void Search::invalidateContexts(int) {}$/;"	f	class:Search	signature:(int)
invalidateContexts	../../source/encoder/search.h	/^    void     invalidateContexts(int fromDepth);$/;"	p	class:X265_NS::Search	access:public	signature:(int fromDepth)
inversedst	../../source/common/dct.cpp	/^static void inversedst(const int16_t* tmp, int16_t* block, int shift)  \/\/ input tmp, output block$/;"	f	file:	signature:(const int16_t* tmp, int16_t* block, int shift)
invtransformNxN	../../source/common/quant.cpp	/^void Quant::invtransformNxN(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff,$/;"	f	class:Quant	signature:(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff, uint32_t log2TrSize, TextType ttype, bool bIntra, bool useTransformSkip, uint32_t numSig)
invtransformNxN	../../source/common/quant.h	/^    void invtransformNxN(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff,$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& cu, int16_t* residual, uint32_t resiStride, const coeff_t* coeff, uint32_t log2TrSize, TextType ttype, bool bIntra, bool useTransformSkip, uint32_t numSig)
ipCostRatio	../../source/common/framedata.h	/^    double      ipCostRatio;$/;"	m	struct:X265_NS::FrameStats	access:public
ipCostRatio	../../source/common/lowres.h	/^    double ipCostRatio;$/;"	m	struct:X265_NS::Lowres	access:public
isAboveAvailable	../../source/common/predict.cpp	/^int Predict::isAboveAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags)
isAboveAvailable	../../source/common/predict.h	/^    static int  isAboveAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxRT, bool* bValidFlags)
isAboveLeftAvailable	../../source/common/predict.cpp	/^bool Predict::isAboveLeftAvailable(const CUData& cu, uint32_t partIdxLT)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLT)
isAboveLeftAvailable	../../source/common/predict.h	/^    static bool isAboveLeftAvailable(const CUData& cu, uint32_t partIdxLT);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLT)
isAboveRightAvailable	../../source/common/predict.cpp	/^int Predict::isAboveRightAvailable(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits)
isAboveRightAvailable	../../source/common/predict.h	/^    static int  isAboveRightAvailable(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxRT, bool* bValidFlags, uint32_t numUnits)
isActive	../../source/encoder/ratecontrol.h	/^    bool    isActive;$/;"	m	struct:X265_NS::RateControlEntry	access:public
isBelowLeftAvailable	../../source/common/predict.cpp	/^int Predict::isBelowLeftAvailable(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits)
isBelowLeftAvailable	../../source/common/predict.h	/^    static int  isBelowLeftAvailable(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLB, bool* bValidFlags, uint32_t numUnits)
isBipredRestriction	../../source/common/cudata.h	/^    bool     isBipredRestriction() const          { return m_log2CUSize[0] == 3 && m_partSize[0] != SIZE_2Nx2N; }$/;"	f	class:X265_NS::CUData	access:public	signature:() const
isDiffMER	../../source/common/cudata.h	/^    bool isDiffMER(int xN, int yN, int xP, int yP) const { return ((xN >> 2) != (xP >> 2)) || ((yN >> 2) != (yP >> 2)); }$/;"	f	class:X265_NS::CUData	access:protected	signature:(int xN, int yN, int xP, int yP) const
isEof	../../source/input/input.h	/^    virtual bool isEof() const = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:() const
isEof	../../source/input/y4m.h	/^    bool isEof() const            { return ifs && ifs->eof();  }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:() const
isEof	../../source/input/yuv.h	/^    bool isEof() const                            { return ifs && ifs->eof();  }$/;"	f	class:X265_NS::YUVInput	access:public	signature:() const
isEqualCol	../../source/common/cudata.cpp	/^inline bool isEqualCol(int addrA, int addrB)$/;"	f	namespace:__anon10	signature:(int addrA, int addrB)
isEqualRow	../../source/common/cudata.cpp	/^inline bool isEqualRow(int addrA, int addrB)$/;"	f	namespace:__anon10	signature:(int addrA, int addrB)
isEqualRowOrCol	../../source/common/cudata.cpp	/^inline bool isEqualRowOrCol(int addrA, int addrB)$/;"	f	namespace:__anon10	signature:(int addrA, int addrB)
isFail	../../source/input/input.h	/^    virtual bool isFail() = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:()
isFail	../../source/input/y4m.h	/^    bool isFail()                 { return !(ifs && !ifs->fail() && threadActive); }$/;"	f	class:X265_NS::Y4MInput	access:public	signature:()
isFail	../../source/input/yuv.h	/^    bool isFail()                                 { return !(ifs && !ifs->fail() && threadActive); }$/;"	f	class:X265_NS::YUVInput	access:public	signature:()
isFail	../../source/output/output.h	/^    virtual bool isFail() const = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:() const
isFail	../../source/output/output.h	/^    virtual bool isFail() const = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:() const
isFail	../../source/output/raw.h	/^    bool isFail() const { return b_fail; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:() const
isFail	../../source/output/y4m.h	/^    bool isFail() const                           { return ofs.fail(); }$/;"	f	class:X265_NS::Y4MOutput	access:public	signature:() const
isFail	../../source/output/yuv.h	/^    bool isFail() const                           { return ofs.fail(); }$/;"	f	class:X265_NS::YUVOutput	access:public	signature:() const
isIRAP	../../source/common/slice.h	/^    bool isIRAP() const   { return m_nalUnitType >= 16 && m_nalUnitType <= 23; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
isIdr	../../source/encoder/ratecontrol.h	/^    bool     isIdr;$/;"	m	struct:X265_NS::RateControlEntry	access:public
isInter	../../source/common/cudata.h	/^    bool     isInter(uint32_t absPartIdx) const   { return !!(m_predMode[absPartIdx] & MODE_INTER); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
isInterB	../../source/common/slice.h	/^    bool isInterB() const { return m_sliceType == B_SLICE; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
isInterP	../../source/common/slice.h	/^    bool isInterP() const { return m_sliceType == P_SLICE; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
isIntra	../../source/common/cudata.h	/^    bool     isIntra(uint32_t absPartIdx) const   { return m_predMode[absPartIdx] == MODE_INTRA; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
isIntra	../../source/common/slice.h	/^    bool isIntra()  const { return m_sliceType == I_SLICE; }$/;"	f	class:X265_NS::Slice	access:public	signature:() const
isKeyBslice	../../source/encoder/ratecontrol.h	/^    bool     isKeyBslice;$/;"	m	struct:X265_NS::RateControlEntry	access:public
isLastSection	../../source/encoder/entropy.h	/^    bool isLastSection() const$/;"	f	struct:X265_NS::TURecurse	access:public	signature:() const
isLeftAvailable	../../source/common/predict.cpp	/^int Predict::isLeftAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags)$/;"	f	class:Predict	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags)
isLeftAvailable	../../source/common/predict.h	/^    static int  isLeftAvailable(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, uint32_t partIdxLT, uint32_t partIdxLB, bool* bValidFlags)
isLowres	../../source/common/lowres.h	/^    bool     isLowres;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
isNextSection	../../source/encoder/entropy.h	/^    bool isNextSection()$/;"	f	struct:X265_NS::TURecurse	access:public	signature:()
isSkipped	../../source/common/cudata.h	/^    bool     isSkipped(uint32_t absPartIdx) const { return m_predMode[absPartIdx] == MODE_SKIP; }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint32_t absPartIdx) const
isSubpel	../../source/common/mv.h	/^    bool inline isSubpel() const               { return (this->word & 0x00030003) != 0; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
isWeighted	../../source/common/lowres.h	/^    bool     isWeighted;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
isZeroCol	../../source/common/cudata.cpp	/^inline bool isZeroCol(int addr)$/;"	f	namespace:__anon10	signature:(int addr)
isZeroRow	../../source/common/cudata.cpp	/^inline bool isZeroRow(int addr)$/;"	f	namespace:__anon10	signature:(int addr)
iterateCheckBidir2Nx2N	../../source/encoder/analysis.cpp	/^void Analysis::iterateCheckBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2])$/;"	f	class:Analysis	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2])
iterateCheckBidir2Nx2N	../../source/encoder/analysis.h	/^    void iterateCheckBidir2Nx2N(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2]);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(Mode& inter2Nx2N, Mode& bidir2Nx2N, const CUGeom& cuGeom, const uint32_t refMasks[2])
jmpbuf	../../source/common/cpu.cpp	/^static sigjmp_buf jmpbuf;$/;"	v	file:
jnz	../../source/common/x86/sad-a.asm	/^jnz .loop$/;"	l
jnz	../../source/common/x86/sad-a.asm	/^jnz .loop1$/;"	l
keptAsRef	../../source/common/frame.h	/^    int      keptAsRef;$/;"	m	struct:X265_NS::RcStats	access:public
keptAsRef	../../source/encoder/ratecontrol.h	/^    bool     keptAsRef;$/;"	m	struct:X265_NS::RateControlEntry	access:public
lambda	../../source/common/quant.h	/^    int32_t lambda;  \/* FIX8, dynamic range is 18-bits in Main and 20-bits in Main10 *\/$/;"	m	struct:X265_NS::QpParam	access:public
lambda2	../../source/common/quant.h	/^    int64_t lambda2; \/* FIX8 *\/$/;"	m	struct:X265_NS::QpParam	access:public
last	../../source/common/piclist.h	/^    Frame* last()         { return m_end;     }$/;"	f	class:X265_NS::PicList	access:public	signature:()
lastBits	../../source/encoder/entropy.h	/^    int lastBits[2][10];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
lastQScaleFor	../../source/common/frame.h	/^    double   lastQScaleFor[3];$/;"	m	struct:X265_NS::RcStats	access:public
lastSatd	../../source/encoder/ratecontrol.h	/^    int64_t lastSatd;      \/* Contains the picture cost of the previous frame, required for resetAbr and VBV *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
last_nonopt	../../source/compat/getopt/getopt.c	/^static int last_nonopt;$/;"	v	file:
lea	../../source/common/x86/blockcopy8.asm	/^lea          r3, [3 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r0,                 [r0 + 2 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r0,                 [r0 + 4 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r0,            [r0 + 2 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r0,            [r0 + 4 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r0, [r0 + 2 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r0, [r0 + 4 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r2,                 [r2 + 2 * r3]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r2,            [r2 + 2 * r3]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r2,      [r2 + 2 * r3]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r2,     [r2 + 2 * r3]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r2, [r2 + 2 * r3]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r3,            [3 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea        r4,            [3 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea    r4,  [3 * r1]$/;"	l
lea	../../source/common/x86/blockcopy8.asm	/^lea    r5,  [3 * r3]$/;"	l
lea	../../source/common/x86/intrapred16.asm	/^lea                 r2, [r2 + 16]$/;"	l
lea	../../source/common/x86/intrapred16.asm	/^lea     r2, [r2 + 16]$/;"	l
lea	../../source/common/x86/intrapred8_allangs.asm	/^lea           r3,        [ang_table]$/;"	l
leadingBframes	../../source/common/lowres.h	/^    int    leadingBframes;   \/\/ number of leading B frames for P or I$/;"	m	struct:X265_NS::Lowres	access:public
leadingNoBSatd	../../source/encoder/ratecontrol.h	/^    int64_t leadingNoBSatd;$/;"	m	struct:X265_NS::RateControlEntry	access:public
leftOffset	../../source/common/slice.h	/^    int  leftOffset;$/;"	m	struct:X265_NS::Window	access:public
leftUnits	../../source/common/predict.h	/^        int      leftUnits;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
lessThanCol	../../source/common/cudata.cpp	/^inline bool lessThanCol(int addr, int val)$/;"	f	namespace:__anon10	signature:(int addr, int val)
lessThanRow	../../source/common/cudata.cpp	/^inline bool lessThanRow(int addr, int val)$/;"	f	namespace:__anon10	signature:(int addr, int val)
levelAbsBits	../../source/encoder/entropy.h	/^    int levelAbsBits[NUM_ABS_FLAG_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
levelEnum	../../source/encoder/level.cpp	/^    Level::Name levelEnum;$/;"	m	struct:X265_NS::__anon13	file:	access:public
levelIdc	../../source/common/slice.h	/^    int      levelIdc;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
levelIdc	../../source/encoder/level.cpp	/^    int levelIdc;$/;"	m	struct:X265_NS::__anon13	file:	access:public
levels	../../source/encoder/level.cpp	/^LevelSpec levels[] =$/;"	m	namespace:X265_NS	file:
libapi	../../source/encoder/api.cpp	/^static const x265_api libapi =$/;"	v	file:
lines	../../source/common/lowres.h	/^    int    lines;            \/\/ height of lowres frame in pixel lines$/;"	m	struct:X265_NS::Lowres	access:public
load	../../source/encoder/entropy.h	/^    void load(const Entropy& src)            { copyFrom(src); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const Entropy& src)
loadContexts	../../source/encoder/entropy.h	/^    void loadContexts(const Entropy& src)    { copyContextsFrom(src); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(const Entropy& src)
loadIntraDirModeLuma	../../source/encoder/entropy.cpp	/^void Entropy::loadIntraDirModeLuma(const Entropy& src)$/;"	f	class:X265_NS::Entropy	signature:(const Entropy& src)
loadIntraDirModeLuma	../../source/encoder/entropy.h	/^    void loadIntraDirModeLuma(const Entropy& src);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Entropy& src)
loadTUDepth	../../source/encoder/analysis.cpp	/^int32_t Analysis::loadTUDepth(CUGeom cuGeom, CUData parentCTU)$/;"	f	class:Analysis	signature:(CUGeom cuGeom, CUData parentCTU)
loadTUDepth	../../source/encoder/analysis.h	/^    int32_t loadTUDepth(CUGeom cuGeom, CUData parentCTU);$/;"	p	class:X265_NS::Analysis	access:public	signature:(CUGeom cuGeom, CUData parentCTU)
lock	../../source/encoder/frameencoder.h	/^    Lock              lock;$/;"	m	struct:X265_NS::CTURow	access:public
log2CUSize	../../source/common/cudata.h	/^    uint32_t log2CUSize;    \/\/ Log of the CU size.$/;"	m	struct:X265_NS::CUGeom	access:public
log2DiffMaxMinCodingBlockSize	../../source/common/slice.h	/^    int      log2DiffMaxMinCodingBlockSize;$/;"	m	struct:X265_NS::SPS	access:public
log2MaxPocLsb	../../source/common/slice.h	/^    int      log2MaxPocLsb;$/;"	m	struct:X265_NS::SPS	access:public
log2MinCodingBlockSize	../../source/common/slice.h	/^    int      log2MinCodingBlockSize;$/;"	m	struct:X265_NS::SPS	access:public
log2TrSize	../../source/common/predict.h	/^        int      log2TrSize;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
log2WeightDenom	../../source/common/slice.h	/^    uint32_t log2WeightDenom;$/;"	m	struct:X265_NS::WeightParam	access:public
logLevelNames	../../source/common/param.h	/^static const char * const logLevelNames[] = { "none", "error", "warning", "info", "debug", "full", 0 };$/;"	m	namespace:X265_NS
longtermPicsDeltaPocMSBCycle	../../source/common/slice.h	/^    int  longtermPicsDeltaPocMSBCycle;$/;"	m	struct:X265_NS::RPS	access:public
longtermPicsLSB	../../source/common/slice.h	/^    int  longtermPicsLSB;$/;"	m	struct:X265_NS::RPS	access:public
loopFilterElapsedTime	../../source/encoder/search.h	/^    int64_t  loopFilterElapsedTime;             \/\/ elapsed worker time in deblock and SAO and PSNR\/SSIM$/;"	m	struct:X265_NS::CUStats	access:public
loop_24x32	../../source/common/arm/mc-a.S	/^loop_24x32:$/;"	l
loop_24x64	../../source/common/arm/mc-a.S	/^loop_24x64:$/;"	l
loop_48x64	../../source/common/arm/mc-a.S	/^loop_48x64:$/;"	l
loop_addAvg_12X16	../../source/common/arm/mc-a.S	/^loop_addAvg_12X16:$/;"	l
loop_addAvg_12X32	../../source/common/arm/mc-a.S	/^loop_addAvg_12X32:$/;"	l
loop_add_8x16	../../source/common/arm/pixel-util.S	/^loop_add_8x16:$/;"	l
loop_addavg_16x64_2	../../source/common/arm/mc-a.S	/^loop_addavg_16x64_2:                               \/\/ 16x64$/;"	l
loop_addavg_24x32	../../source/common/arm/mc-a.S	/^loop_addavg_24x32:$/;"	l
loop_addavg_24x64	../../source/common/arm/mc-a.S	/^loop_addavg_24x64:$/;"	l
loop_addps64	../../source/common/arm/pixel-util.S	/^loop_addps64:$/;"	l
loop_cps32	../../source/common/arm/blockcopy8.S	/^loop_cps32:$/;"	l
loop_cps64	../../source/common/arm/blockcopy8.S	/^loop_cps64:$/;"	l
loop_cps_16x32	../../source/common/arm/blockcopy8.S	/^loop_cps_16x32:$/;"	l
loop_cps_32x64	../../source/common/arm/blockcopy8.S	/^loop_cps_32x64:$/;"	l
loop_csp32	../../source/common/arm/blockcopy8.S	/^loop_csp32:$/;"	l
loop_csp64	../../source/common/arm/blockcopy8.S	/^loop_csp64:$/;"	l
loop_csp_16x32	../../source/common/arm/blockcopy8.S	/^loop_csp_16x32:$/;"	l
loop_csp_32x64	../../source/common/arm/blockcopy8.S	/^loop_csp_32x64:$/;"	l
loop_css32	../../source/common/arm/blockcopy8.S	/^loop_css32:$/;"	l
loop_css64	../../source/common/arm/blockcopy8.S	/^loop_css64:$/;"	l
loop_css_32x64	../../source/common/arm/blockcopy8.S	/^loop_css_32x64:$/;"	l
loop_pp_12x32	../../source/common/arm/mc-a.S	/^loop_pp_12x32:$/;"	l
loop_pp_8x64	../../source/common/arm/mc-a.S	/^loop_pp_8x64:$/;"	l
loop_res32	../../source/common/arm/pixel-util.S	/^loop_res32:$/;"	l
loop_scale2D	../../source/common/arm/pixel-util.S	/^loop_scale2D:$/;"	l
loop_sub16	../../source/common/arm/pixel-util.S	/^loop_sub16:$/;"	l
loop_sub32	../../source/common/arm/pixel-util.S	/^loop_sub32:$/;"	l
loop_sub64	../../source/common/arm/pixel-util.S	/^loop_sub64:$/;"	l
loop_sub_16x32	../../source/common/arm/pixel-util.S	/^loop_sub_16x32:$/;"	l
loop_sub_32x64	../../source/common/arm/pixel-util.S	/^loop_sub_32x64:$/;"	l
lowDistortionCtuCount	../../source/common/framedata.h	/^    uint32_t      lowDistortionCtuCount;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
lowerBitRateConstraintFlag	../../source/common/slice.h	/^    bool     lowerBitRateConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
lowresCostForRc	../../source/common/lowres.h	/^    uint16_t* lowresCostForRc;$/;"	m	struct:X265_NS::Lowres	access:public
lowresCosts	../../source/common/lowres.h	/^    uint16_t(*lowresCosts[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2]);$/;"	m	struct:X265_NS::Lowres	access:public
lowresHeightInCU	../../source/encoder/weightPrediction.cpp	/^    int         lowresHeightInCU;$/;"	m	struct:__anon22::Cache	file:	access:public
lowresIntraEstimate	../../source/encoder/slicetype.cpp	/^void LookaheadTLD::lowresIntraEstimate(Lowres& fenc, uint32_t qgSize)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc, uint32_t qgSize)
lowresIntraEstimate	../../source/encoder/slicetype.h	/^    void lowresIntraEstimate(Lowres& fenc, uint32_t qgSize);$/;"	p	struct:X265_NS::LookaheadTLD	access:public	signature:(Lowres& fenc, uint32_t qgSize)
lowresMC	../../source/common/lowres.h	/^    inline pixel *lowresMC(intptr_t blockOffset, const MV& qmv, pixel *buf, intptr_t& outstride)$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(intptr_t blockOffset, const MV& qmv, pixel *buf, intptr_t& outstride)
lowresMvCosts	../../source/common/lowres.h	/^    int32_t*  lowresMvCosts[2][X265_BFRAME_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
lowresMvs	../../source/common/lowres.h	/^    MV*       lowresMvs[2][X265_BFRAME_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
lowresPlane	../../source/common/lowres.h	/^    pixel*   lowresPlane[4];$/;"	m	struct:X265_NS::ReferencePlanes	access:public
lowresQPelCost	../../source/common/lowres.h	/^    inline int lowresQPelCost(pixel *fenc, intptr_t blockOffset, const MV& qmv, pixelcmp_t comp)$/;"	f	struct:X265_NS::ReferencePlanes	access:public	signature:(pixel *fenc, intptr_t blockOffset, const MV& qmv, pixelcmp_t comp)
lowresWidthInCU	../../source/encoder/weightPrediction.cpp	/^    int         lowresWidthInCU;$/;"	m	struct:__anon22::Cache	file:	access:public
lpavg_16x64	../../source/common/arm/mc-a.S	/^lpavg_16x64:$/;"	l
lpavg_24x32	../../source/common/arm/mc-a.S	/^lpavg_24x32:$/;"	l
lpavg_48x64	../../source/common/arm/mc-a.S	/^lpavg_48x64:$/;"	l
lumaDistortion	../../source/common/framedata.h	/^    uint64_t    lumaDistortion;$/;"	m	struct:X265_NS::FrameStats	access:public
lumaDistortion	../../source/encoder/search.h	/^    sse_t   lumaDistortion;$/;"	m	struct:X265_NS::Mode	access:public
lumaPartitionMapTable	../../source/common/primitives.cpp	/^extern const uint8_t lumaPartitionMapTable[] =$/;"	m	namespace:X265_NS	file:
lumaStride	../../source/common/lowres.h	/^    intptr_t lumaStride;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
lumaSumCu	../../source/encoder/slicetype.cpp	/^uint32_t LookaheadTLD::lumaSumCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize)$/;"	f	class:LookaheadTLD	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize)
lumaSumCu	../../source/encoder/slicetype.h	/^    uint32_t lumaSumCu(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Frame* curFrame, uint32_t blockX, uint32_t blockY, uint32_t qgSize)
luma_hpp	../../source/common/primitives.h	/^        filter_pp_t    luma_hpp;    \/\/ 8-tap luma motion compensation interpolation filters$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
luma_hps	../../source/common/primitives.h	/^        filter_hps_t   luma_hps;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
luma_hvpp	../../source/common/primitives.h	/^        filter_hv_pp_t luma_hvpp;   \/\/ combines hps + vsp$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
luma_vpp	../../source/common/primitives.h	/^        filter_pp_t    luma_vpp;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
luma_vps	../../source/common/primitives.h	/^        filter_ps_t    luma_vps;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
luma_vsp	../../source/common/primitives.h	/^        filter_sp_t    luma_vsp;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
luma_vss	../../source/common/primitives.h	/^        filter_ss_t    luma_vss;$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
m1	../../source/common/threadpool.cpp	/^const uint64_t m1 = 0x5555555555555555; \/\/binary: 0101...$/;"	v
m2	../../source/common/threadpool.cpp	/^const uint64_t m2 = 0x3333333333333333; \/\/binary: 00110011..$/;"	v
m3	../../source/common/threadpool.cpp	/^const uint64_t m3 = 0x0f0f0f0f0f0f0f0f; \/\/binary:  4 zeros,  4 ones ...$/;"	v
m_2pass	../../source/encoder/ratecontrol.h	/^    bool    m_2pass;$/;"	m	class:X265_NS::RateControl	access:public
m_8x8Blocks	../../source/encoder/slicetype.h	/^    int           m_8x8Blocks;$/;"	m	class:X265_NS::Lookahead	access:public
m_8x8Height	../../source/encoder/slicetype.h	/^    int           m_8x8Height;$/;"	m	class:X265_NS::Lookahead	access:public
m_8x8Width	../../source/encoder/slicetype.h	/^    int           m_8x8Width;$/;"	m	class:X265_NS::Lookahead	access:public
m_SSDU	../../source/encoder/frameencoder.h	/^    uint64_t                 m_SSDU;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_SSDV	../../source/encoder/frameencoder.h	/^    uint64_t                 m_SSDV;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_SSDY	../../source/encoder/frameencoder.h	/^    uint64_t                 m_SSDY;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_aborted	../../source/encoder/encoder.h	/^    bool               m_aborted;          \/\/ fatal error detected$/;"	m	class:X265_NS::Encoder	access:public
m_absIdxInCTU	../../source/common/cudata.h	/^    uint32_t      m_absIdxInCTU;      \/\/ address of CU within its CTU in Z scan order$/;"	m	class:X265_NS::CUData	access:public
m_accBits	../../source/encoder/encoder.h	/^    uint64_t      m_accBits;$/;"	m	struct:X265_NS::EncStats	access:public
m_accessUnitBits	../../source/encoder/frameencoder.h	/^    uint64_t                 m_accessUnitBits;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_accumPNorm	../../source/encoder/ratecontrol.h	/^    double  m_accumPNorm;$/;"	m	class:X265_NS::RateControl	access:public
m_accumPQp	../../source/encoder/ratecontrol.h	/^    double  m_accumPQp;          \/* for determining I-frame quant *\/$/;"	m	class:X265_NS::RateControl	access:public
m_activeWorkerCount	../../source/encoder/frameencoder.h	/^    volatile int             m_activeWorkerCount;        \/\/ count of workers currently encoding or filtering CTUs$/;"	m	class:X265_NS::FrameEncoder	access:public
m_activeWorkerCountSamples	../../source/encoder/frameencoder.h	/^    volatile int             m_activeWorkerCountSamples; \/\/ count of times m_activeWorkerCount was sampled (think vbv restarts)$/;"	m	class:X265_NS::FrameEncoder	access:public
m_addOnCtuInfo	../../source/common/frame.h	/^    uint8_t**              m_addOnCtuInfo;$/;"	m	class:X265_NS::Frame	access:public
m_addOnDepth	../../source/common/frame.h	/^    uint8_t**              m_addOnDepth;$/;"	m	class:X265_NS::Frame	access:public
m_addOnPrevChange	../../source/common/frame.h	/^    int**                  m_addOnPrevChange;$/;"	m	class:X265_NS::Frame	access:public
m_additionalCtuInfo	../../source/encoder/analysis.h	/^    uint8_t*                m_additionalCtuInfo;$/;"	m	class:X265_NS::Analysis	access:protected
m_adjWeight	../../source/encoder/ratecontrol.h	/^    double  m_adjWeight;$/;"	m	class:X265_NS::RateControl	access:public
m_allRowsAvailableTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_allRowsAvailableTime;     \/\/ timestamp when all reference dependencies are resolved$/;"	m	class:X265_NS::FrameEncoder	access:public
m_allocSize	../../source/encoder/nal.h	/^    uint32_t    m_allocSize;$/;"	m	class:X265_NS::NALList	access:public
m_allowedCol	../../source/encoder/framefilter.h	/^        ThreadSafeInteger   m_allowedCol;       \/* The column that processed from Encode pipeline *\/$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_amortizeFraction	../../source/encoder/ratecontrol.h	/^    double m_amortizeFraction;$/;"	m	class:X265_NS::RateControl	access:protected
m_amortizeFrames	../../source/encoder/ratecontrol.h	/^    int    m_amortizeFrames;$/;"	m	class:X265_NS::RateControl	access:protected
m_analysis2Pass	../../source/common/frame.h	/^    x265_analysis_2Pass    m_analysis2Pass;$/;"	m	class:X265_NS::Frame	access:public
m_analysisData	../../source/common/frame.h	/^    x265_analysis_data     m_analysisData;$/;"	m	class:X265_NS::Frame	access:public
m_analysisFile	../../source/encoder/encoder.h	/^    FILE*              m_analysisFile;$/;"	m	class:X265_NS::Encoder	access:public
m_analysisFileIn	../../source/encoder/encoder.h	/^    FILE*              m_analysisFileIn;$/;"	m	class:X265_NS::Encoder	access:public
m_analysisFileOut	../../source/encoder/encoder.h	/^    FILE*              m_analysisFileOut;$/;"	m	class:X265_NS::Encoder	access:public
m_analyzeAll	../../source/encoder/encoder.h	/^    EncStats           m_analyzeAll;$/;"	m	class:X265_NS::Encoder	access:public
m_analyzeB	../../source/encoder/encoder.h	/^    EncStats           m_analyzeB;$/;"	m	class:X265_NS::Encoder	access:public
m_analyzeI	../../source/encoder/encoder.h	/^    EncStats           m_analyzeI;$/;"	m	class:X265_NS::Encoder	access:public
m_analyzeP	../../source/encoder/encoder.h	/^    EncStats           m_analyzeP;$/;"	m	class:X265_NS::Encoder	access:public
m_annexB	../../source/encoder/nal.h	/^    bool        m_annexB;$/;"	m	class:X265_NS::NALList	access:public
m_associatedIRAPPOC	../../source/encoder/dpb.h	/^    int                m_associatedIRAPPOC;$/;"	m	class:X265_NS::DPB	access:public
m_associatedIRAPStationCURatio	../../source/encoder/dpb.h	/^    double             m_associatedIRAPStationCURatio;$/;"	m	class:X265_NS::DPB	access:public
m_associatedPreIRAPPOC	../../source/encoder/dpb.h	/^    int                m_associatedPreIRAPPOC;$/;"	m	class:X265_NS::DPB	access:public
m_associatedPreIRAPStationCURatio	../../source/encoder/dpb.h	/^    double             m_associatedPreIRAPStationCURatio;$/;"	m	class:X265_NS::DPB	access:public
m_auCpbRemovalDelay	../../source/encoder/sei.h	/^    uint32_t  m_auCpbRemovalDelay;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
m_auCpbRemovalDelayDelta	../../source/encoder/sei.h	/^    uint32_t m_auCpbRemovalDelayDelta;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
m_avgChromaULevel	../../source/common/picyuv.h	/^    double  m_avgChromaULevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_avgChromaVLevel	../../source/common/picyuv.h	/^    double  m_avgChromaVLevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_avgLumaLevel	../../source/common/picyuv.h	/^    double  m_avgLumaLevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_avgPFrameQp	../../source/encoder/ratecontrol.h	/^    double m_avgPFrameQp;$/;"	m	class:X265_NS::RateControl	access:public
m_avgQpAq	../../source/common/framedata.h	/^    double         m_avgQpAq;    \/* avg QP as decided by AQ in addition to rate-control *\/$/;"	m	class:X265_NS::FrameData	access:public
m_avgQpRc	../../source/common/framedata.h	/^    double         m_avgQpRc;    \/* avg QP as decided by rate-control *\/$/;"	m	class:X265_NS::FrameData	access:public
m_bAdaptiveQuant	../../source/encoder/slicetype.h	/^    bool          m_bAdaptiveQuant;$/;"	m	class:X265_NS::Lookahead	access:public
m_bAllRowsStop	../../source/encoder/frameencoder.h	/^    volatile bool            m_bAllRowsStop;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_bBatchFrameCosts	../../source/encoder/slicetype.h	/^    bool          m_bBatchFrameCosts;$/;"	m	class:X265_NS::Lookahead	access:public
m_bBatchMotionSearch	../../source/encoder/slicetype.h	/^    bool          m_bBatchMotionSearch;$/;"	m	class:X265_NS::Lookahead	access:public
m_bCheckLDC	../../source/common/slice.h	/^    bool        m_bCheckLDC;       \/\/ For P or GPB, m_bCheckLDC = true; for B, m_bCheckLDC = false$/;"	m	class:X265_NS::Slice	access:public
m_bChromaExtended	../../source/common/frame.h	/^    bool                   m_bChromaExtended;    \/\/ orig chroma planes motion extended for weight analysis$/;"	m	class:X265_NS::Frame	access:public
m_bChromaSa8d	../../source/encoder/analysis.h	/^    bool      m_bChromaSa8d;$/;"	m	class:X265_NS::Analysis	access:public
m_bDataPresent	../../source/common/scalinglist.h	/^    bool     m_bDataPresent; \/\/ non-default scaling lists must be signaled$/;"	m	class:X265_NS::ScalingList	access:public
m_bDiscardLTR	../../source/encoder/dpb.h	/^    bool               m_bDiscardLTR;$/;"	m	class:X265_NS::DPB	access:public
m_bEnabled	../../source/common/scalinglist.h	/^    bool     m_bEnabled;$/;"	m	class:X265_NS::ScalingList	access:public
m_bFirstRowInSlice	../../source/common/cudata.h	/^    uint8_t      m_bFirstRowInSlice;$/;"	m	class:X265_NS::CUData	access:public
m_bFrameParallel	../../source/encoder/search.h	/^    bool            m_bFrameParallel;$/;"	m	class:X265_NS::Search	access:public
m_bHD	../../source/encoder/analysis.h	/^    bool      m_bHD;$/;"	m	class:X265_NS::Analysis	access:public
m_bHasReferences	../../source/common/framedata.h	/^    bool           m_bHasReferences;   \/* used during DPB\/RPS updates *\/$/;"	m	class:X265_NS::FrameData	access:public
m_bLTRAvailable	../../source/encoder/dpb.h	/^    bool               m_bLTRAvailable;$/;"	m	class:X265_NS::DPB	access:public
m_bLastCuInSlice	../../source/common/cudata.h	/^    uint8_t      m_bLastCuInSlice;$/;"	m	class:X265_NS::CUData	access:public
m_bLastRowInSlice	../../source/common/cudata.h	/^    uint8_t      m_bLastRowInSlice;$/;"	m	class:X265_NS::CUData	access:public
m_bLowCorrIframe	../../source/encoder/dpb.h	/^    bool               m_bLowCorrIframe;$/;"	m	class:X265_NS::DPB	access:public
m_bOpenGOP	../../source/encoder/dpb.h	/^    int                m_bOpenGOP;$/;"	m	class:X265_NS::DPB	access:public
m_bQueuedIntraRefresh	../../source/encoder/encoder.h	/^    int                m_bQueuedIntraRefresh;$/;"	m	class:X265_NS::Encoder	access:public
m_bRefreshPending	../../source/encoder/dpb.h	/^    bool               m_bRefreshPending;$/;"	m	class:X265_NS::DPB	access:public
m_bTemporalSublayer	../../source/encoder/dpb.h	/^    bool               m_bTemporalSublayer;$/;"	m	class:X265_NS::DPB	access:public
m_bTerminated	../../source/encoder/ratecontrol.h	/^    bool    m_bTerminated;       \/* set true when encoder is closing *\/$/;"	m	class:X265_NS::RateControl	access:public
m_bToneMap	../../source/encoder/encoder.h	/^    int                     m_bToneMap; \/\/ Enables tone-mapping$/;"	m	class:X265_NS::Encoder	access:public
m_bTryLossless	../../source/encoder/analysis.h	/^    bool      m_bTryLossless;$/;"	m	class:X265_NS::Analysis	access:public
m_bZeroLatency	../../source/encoder/encoder.h	/^    bool               m_bZeroLatency;     \/\/ x265_encoder_encode() returns NALs for the input picture, zero lag$/;"	m	class:X265_NS::Encoder	access:public
m_backupStreams	../../source/encoder/frameencoder.h	/^    Bitstream*               m_backupStreams;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_batchMode	../../source/encoder/slicetype.h	/^    bool       m_batchMode;$/;"	m	class:X265_NS::CostEstimateGroup	access:public
m_bframeBits	../../source/encoder/ratecontrol.h	/^    int64_t m_bframeBits;$/;"	m	class:X265_NS::RateControl	access:public
m_bframeDelay	../../source/encoder/encoder.h	/^    int                m_bframeDelay;$/;"	m	class:X265_NS::Encoder	access:public
m_bframeDelayTime	../../source/encoder/encoder.h	/^    int64_t            m_bframeDelayTime;$/;"	m	class:X265_NS::Encoder	access:public
m_bitCounter	../../source/common/bitstream.h	/^    uint32_t  m_bitCounter;$/;"	m	class:X265_NS::BitCounter	access:protected
m_bitIf	../../source/common/bitstream.h	/^    BitInterface* m_bitIf;$/;"	m	class:X265_NS::SyntaxElementWriter	access:public
m_bitrate	../../source/encoder/ratecontrol.h	/^    double m_bitrate;$/;"	m	class:X265_NS::RateControl	access:public
m_bitsLeft	../../source/encoder/entropy.h	/^    int           m_bitsLeft;$/;"	m	class:X265_NS::Entropy	access:public
m_bondMaster	../../source/common/threadpool.cpp	/^    BondedTaskGroup* m_bondMaster;$/;"	m	class:X265_NS::WorkerThread	file:	access:public
m_bondedPeerCount	../../source/common/threadpool.h	/^    int               m_bondedPeerCount;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
m_brokenLinkFlag	../../source/encoder/sei.h	/^    bool m_brokenLinkFlag;$/;"	m	class:X265_NS::SEIRecoveryPoint	access:public
m_bs	../../source/encoder/frameencoder.h	/^    Bitstream                m_bs;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_buOffsetC	../../source/common/picyuv.h	/^    intptr_t* m_buOffsetC;$/;"	m	class:X265_NS::PicYuv	access:public
m_buOffsetY	../../source/common/picyuv.h	/^    intptr_t* m_buOffsetY;$/;"	m	class:X265_NS::PicYuv	access:public
m_buf	../../source/common/shortyuv.h	/^    int16_t* m_buf[3];$/;"	m	class:X265_NS::ShortYuv	access:public
m_buf	../../source/common/yuv.h	/^    pixel*   m_buf[3];$/;"	m	class:X265_NS::Yuv	access:public
m_bufPeriodSEI	../../source/encoder/ratecontrol.h	/^    SEIBufferingPeriod m_bufPeriodSEI;$/;"	m	class:X265_NS::RateControl	access:public
m_buffer	../../source/encoder/nal.h	/^    uint8_t*    m_buffer;$/;"	m	class:X265_NS::NALList	access:public
m_bufferExcess	../../source/encoder/ratecontrol.h	/^    double m_bufferExcess;$/;"	m	class:X265_NS::RateControl	access:public
m_bufferFill	../../source/encoder/ratecontrol.h	/^    double m_bufferFill;       \/* planned buffer, if all in-progress frames hit their bit budget *\/$/;"	m	class:X265_NS::RateControl	access:public
m_bufferFillActual	../../source/encoder/ratecontrol.h	/^    double m_bufferFillActual;$/;"	m	class:X265_NS::RateControl	access:public
m_bufferFillFinal	../../source/encoder/ratecontrol.h	/^    double m_bufferFillFinal;  \/* real buffer as of the last finished frame *\/$/;"	m	class:X265_NS::RateControl	access:public
m_bufferRate	../../source/encoder/ratecontrol.h	/^    double m_bufferRate;       \/* # of bits added to buffer_fill after each frame *\/$/;"	m	class:X265_NS::RateControl	access:public
m_bufferSize	../../source/encoder/ratecontrol.h	/^    double m_bufferSize;$/;"	m	class:X265_NS::RateControl	access:public
m_bufferedByte	../../source/encoder/entropy.h	/^    uint32_t      m_bufferedByte;$/;"	m	class:X265_NS::Entropy	access:public
m_byteAlloc	../../source/common/bitstream.h	/^    uint32_t m_byteAlloc;$/;"	m	class:X265_NS::Bitstream	access:private
m_byteOccupancy	../../source/common/bitstream.h	/^    uint32_t m_byteOccupancy;$/;"	m	class:X265_NS::Bitstream	access:private
m_cB	../../source/encoder/encoder.h	/^    double                m_cB;$/;"	m	class:X265_NS::Encoder	access:public
m_cR	../../source/encoder/encoder.h	/^    double                m_cR;$/;"	m	class:X265_NS::Encoder	access:public
m_cacheTU	../../source/encoder/search.h	/^    } m_cacheTU;$/;"	m	class:X265_NS::Search	typeref:struct:X265_NS::Search::TUInfoCache	access:protected
m_cbf	../../source/common/cudata.h	/^    uint8_t*      m_cbf[3];           \/\/ array of coded block flags (CBF) per plane$/;"	m	class:X265_NS::CUData	access:public
m_checksum	../../source/encoder/frameencoder.h	/^    uint32_t                 m_checksum[3];$/;"	m	class:X265_NS::FrameEncoder	access:public
m_chromaDistWeight	../../source/encoder/rdcost.h	/^    uint32_t  m_chromaDistWeight[2];$/;"	m	class:X265_NS::RDCost	access:public
m_chromaFormat	../../source/common/cudata.h	/^    uint32_t      m_chromaFormat;$/;"	m	class:X265_NS::CUData	access:public
m_chromaFormat	../../source/encoder/sao.h	/^    int         m_chromaFormat;$/;"	m	class:X265_NS::SAO	access:protected
m_chromaIntraDir	../../source/common/cudata.h	/^    uint8_t*      m_chromaIntraDir;   \/\/ array of intra directions (chroma)$/;"	m	class:X265_NS::CUData	access:public
m_chromaMarginX	../../source/common/picyuv.h	/^    uint32_t m_chromaMarginX;$/;"	m	class:X265_NS::PicYuv	access:public
m_chromaMarginY	../../source/common/picyuv.h	/^    uint32_t m_chromaMarginY;$/;"	m	class:X265_NS::PicYuv	access:public
m_chromaQpOffset	../../source/common/slice.h	/^    int         m_chromaQpOffset[2];$/;"	m	class:X265_NS::Slice	access:public
m_clipTable	../../source/encoder/sao.h	/^    pixel*      m_clipTable;$/;"	m	class:X265_NS::SAO	access:protected
m_clipTableBase	../../source/encoder/sao.h	/^    pixel*      m_clipTableBase;$/;"	m	class:X265_NS::SAO	access:protected
m_colFromL0Flag	../../source/common/slice.h	/^    bool        m_colFromL0Flag;   \/\/ collocated picture from List0 or List1 flag$/;"	m	class:X265_NS::Slice	access:public
m_colRefIdx	../../source/common/slice.h	/^    uint32_t    m_colRefIdx;       \/\/ never modified$/;"	m	class:X265_NS::Slice	access:public
m_completionCount	../../source/encoder/frameencoder.h	/^    volatile int             m_completionCount;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_completionEvent	../../source/encoder/frameencoder.h	/^    Event                    m_completionEvent;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_conformanceMode	../../source/encoder/encoder.h	/^    int                m_conformanceMode;$/;"	m	class:X265_NS::Encoder	access:public
m_conformanceWindow	../../source/encoder/encoder.h	/^    Window             m_conformanceWindow;$/;"	m	class:X265_NS::Encoder	access:public
m_contextState	../../source/encoder/entropy.h	/^    uint8_t       m_contextState[160]; \/\/ MAX_OFF_CTX_MOD + padding$/;"	m	class:X265_NS::Entropy	access:public
m_coop	../../source/encoder/slicetype.h	/^    } m_coop;$/;"	m	class:X265_NS::CostEstimateGroup	typeref:struct:X265_NS::CostEstimateGroup::Coop	access:public
m_copied	../../source/common/frame.h	/^    Event                  m_copied;$/;"	m	class:X265_NS::Frame	access:public
m_cost	../../source/encoder/bitcost.h	/^    uint16_t *m_cost;$/;"	m	class:X265_NS::BitCost	access:protected
m_cost_mvx	../../source/encoder/bitcost.h	/^    uint16_t *m_cost_mvx;$/;"	m	class:X265_NS::BitCost	access:protected
m_cost_mvy	../../source/encoder/bitcost.h	/^    uint16_t *m_cost_mvy;$/;"	m	class:X265_NS::BitCost	access:protected
m_count	../../source/common/piclist.h	/^    int      m_count;$/;"	m	class:X265_NS::PicList	access:protected
m_count	../../source/encoder/sao.h	/^    PerPlane    m_count;$/;"	m	class:X265_NS::SAO	access:protected
m_countEmergency	../../source/encoder/encoder.h	/^    uint32_t           m_countEmergency[MAX_NUM_TR_CATEGORIES];$/;"	m	class:X265_NS::Encoder	access:public
m_countPreDblk	../../source/encoder/sao.h	/^    PerPlane*   m_countPreDblk;$/;"	m	class:X265_NS::SAO	access:protected
m_countPreLookahead	../../source/encoder/slicetype.h	/^    uint64_t      m_countPreLookahead;$/;"	m	class:X265_NS::Lookahead	access:public
m_countRefEncoders	../../source/common/frame.h	/^    volatile uint32_t      m_countRefEncoders;   \/\/ count of FrameEncoder threads monitoring m_reconRowCount$/;"	m	class:X265_NS::Frame	access:public
m_countRowBlocks	../../source/encoder/frameencoder.h	/^    volatile int             m_countRowBlocks;           \/\/ count of workers forced to abandon a row because of top dependency$/;"	m	class:X265_NS::FrameEncoder	access:public
m_countSlicetypeDecide	../../source/encoder/slicetype.h	/^    uint64_t      m_countSlicetypeDecide;$/;"	m	class:X265_NS::Lookahead	access:public
m_cpbDelayOffset	../../source/encoder/sei.h	/^    bool     m_cpbDelayOffset;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
m_cplxrPartSumB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrPartSumB[MAX_TLAYER];$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrRatioB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrRatioB[MAX_TLAYER];$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrRatioP	../../source/encoder/ratecontrol.h	/^    double  m_cplxrRatioP;$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrSum	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSum;          \/* sum of bits*qscale\/rceq *\/$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrSumB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumB[MAX_TLAYER];         \/* sum of bits*adjqscale of B frames *\/$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrSumLowresB	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumLowresB[MAX_TLAYER];   \/* sum of complex of low resolution B frames *\/$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrSumLowresP	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumLowresP;   \/* sum of complex of low resolution P frames *\/$/;"	m	class:X265_NS::RateControl	access:public
m_cplxrSumP	../../source/encoder/ratecontrol.h	/^    double  m_cplxrSumP;         \/* sum of bits*adjqscale of P frames *\/$/;"	m	class:X265_NS::RateControl	access:public
m_crc	../../source/encoder/frameencoder.h	/^    uint32_t                 m_crc[3];$/;"	m	class:X265_NS::FrameEncoder	access:public
m_cs	../../source/common/threading.h	/^    CRITICAL_SECTION   m_cs;$/;"	m	class:X265_NS::ThreadSafeInteger	access:protected
m_csize	../../source/common/shortyuv.h	/^    uint32_t m_csize;$/;"	m	class:X265_NS::ShortYuv	access:public
m_csize	../../source/common/yuv.h	/^    uint32_t m_csize;$/;"	m	class:X265_NS::Yuv	access:public
m_csp	../../source/common/predict.h	/^    int       m_csp;$/;"	m	class:X265_NS::Predict	access:public
m_csp	../../source/common/shortyuv.h	/^    int      m_csp;$/;"	m	class:X265_NS::ShortYuv	access:public
m_csp	../../source/common/yuv.h	/^    int      m_csp;$/;"	m	class:X265_NS::Yuv	access:public
m_ctuGeomMap	../../source/encoder/frameencoder.h	/^    uint32_t*                m_ctuGeomMap;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_ctuInfo	../../source/common/frame.h	/^    x265_ctu_info_t**      m_ctuInfo;$/;"	m	class:X265_NS::Frame	access:public
m_cuAbove	../../source/common/cudata.h	/^    const CUData* m_cuAbove;          \/\/ pointer to above neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
m_cuAboveLeft	../../source/common/cudata.h	/^    const CUData* m_cuAboveLeft;      \/\/ pointer to above-left neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
m_cuAboveRight	../../source/common/cudata.h	/^    const CUData* m_cuAboveRight;     \/\/ pointer to above-right neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
m_cuAddr	../../source/common/cudata.h	/^    uint32_t      m_cuAddr;           \/\/ address of CTU within the picture in raster order$/;"	m	class:X265_NS::CUData	access:public
m_cuCount	../../source/encoder/slicetype.h	/^    int           m_cuCount;$/;"	m	class:X265_NS::Lookahead	access:public
m_cuDepth	../../source/common/cudata.h	/^    uint8_t*      m_cuDepth;          \/\/ array of depths$/;"	m	class:X265_NS::CUData	access:public
m_cuGeoms	../../source/encoder/frameencoder.h	/^    CUGeom*                  m_cuGeoms;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_cuLeft	../../source/common/cudata.h	/^    const CUData* m_cuLeft;           \/\/ pointer to left neighbor CTU$/;"	m	class:X265_NS::CUData	access:public
m_cuMemPool	../../source/common/framedata.h	/^    CUDataMemPool  m_cuMemPool;$/;"	m	class:X265_NS::FrameData	access:public
m_cuOffsetC	../../source/common/picyuv.h	/^    intptr_t* m_cuOffsetC;$/;"	m	class:X265_NS::PicYuv	access:public
m_cuOffsetY	../../source/common/picyuv.h	/^    intptr_t* m_cuOffsetY;  \/* these four buffers are owned by the top-level encoder *\/$/;"	m	class:X265_NS::PicYuv	access:public
m_cuPelX	../../source/common/cudata.h	/^    uint32_t      m_cuPelX;           \/\/ CU position within the picture, in pixels (X)$/;"	m	class:X265_NS::CUData	access:public
m_cuPelY	../../source/common/cudata.h	/^    uint32_t      m_cuPelY;           \/\/ CU position within the picture, in pixels (Y)$/;"	m	class:X265_NS::CUData	access:public
m_cuStat	../../source/common/framedata.h	/^    RCStatCU*      m_cuStat;$/;"	m	class:X265_NS::FrameData	access:public
m_cuStats	../../source/encoder/frameencoder.h	/^    CUStats                  m_cuStats;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_cuTreeStats	../../source/encoder/ratecontrol.h	/^    } m_cuTreeStats;$/;"	m	class:X265_NS::RateControl	typeref:struct:X265_NS::RateControl::__anon19	access:public
m_cuTreeStrength	../../source/encoder/slicetype.h	/^    double        m_cuTreeStrength;$/;"	m	class:X265_NS::Lookahead	access:public
m_curBsliceAccumNum	../../source/encoder/ratecontrol.h	/^    int     m_curBsliceAccumNum;$/;"	m	class:X265_NS::RateControl	access:public
m_curEncoder	../../source/encoder/encoder.h	/^    int                m_curEncoder;$/;"	m	class:X265_NS::Encoder	access:public
m_curJobProvider	../../source/common/threadpool.cpp	/^    JobProvider*     m_curJobProvider;$/;"	m	class:X265_NS::WorkerThread	file:	access:public
m_curSlice	../../source/encoder/ratecontrol.h	/^    Slice*      m_curSlice;      \/* all info about the current frame *\/$/;"	m	class:X265_NS::RateControl	access:public
m_currentSatd	../../source/encoder/ratecontrol.h	/^    int64_t m_currentSatd;$/;"	m	class:X265_NS::RateControl	access:public
m_cutreeStatFileIn	../../source/encoder/ratecontrol.h	/^    FILE*   m_cutreeStatFileIn;$/;"	m	class:X265_NS::RateControl	access:public
m_cutreeStatFileOut	../../source/encoder/ratecontrol.h	/^    FILE*   m_cutreeStatFileOut;$/;"	m	class:X265_NS::RateControl	access:public
m_cv	../../source/common/threading.h	/^    CONDITION_VARIABLE m_cv;$/;"	m	class:X265_NS::ThreadSafeInteger	access:protected
m_depthSaoRate	../../source/encoder/sao.h	/^    double*     m_depthSaoRate;$/;"	m	class:X265_NS::SAO	access:protected
m_dequantCoef	../../source/common/scalinglist.h	/^    int32_t* m_dequantCoef[NUM_SIZES][NUM_LISTS][NUM_REM]; \/\/ array of dequantization matrix coefficient 4x4$/;"	m	class:X265_NS::ScalingList	access:public
m_digest	../../source/encoder/sei.h	/^    uint8_t m_digest[3][16];$/;"	m	class:X265_NS::SEIDecodedPictureHash	access:public
m_distortion	../../source/common/cudata.h	/^    sse_t*        m_distortion;$/;"	m	class:X265_NS::CUData	access:public
m_done	../../source/encoder/frameencoder.h	/^    Event                    m_done;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_dpb	../../source/encoder/encoder.h	/^    DPB*               m_dpb;$/;"	m	class:X265_NS::Encoder	access:public
m_dpbDelayOffset	../../source/encoder/sei.h	/^    bool     m_dpbDelayOffset;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
m_dts	../../source/common/frame.h	/^    int64_t                m_dts;$/;"	m	class:X265_NS::Frame	access:public
m_duplicateFlag	../../source/encoder/sei.h	/^    bool      m_duplicateFlag;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
m_emitCLLSEI	../../source/encoder/encoder.h	/^    bool               m_emitCLLSEI;$/;"	m	class:X265_NS::Encoder	access:public
m_enable	../../source/encoder/frameencoder.h	/^    Event                    m_enable;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_encData	../../source/common/cudata.h	/^    FrameData*    m_encData;$/;"	m	class:X265_NS::CUData	access:public
m_encData	../../source/common/frame.h	/^    FrameData*             m_encData;$/;"	m	class:X265_NS::Frame	access:public
m_encData	../../source/encoder/framefilter.h	/^        FrameData*          m_encData;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_encOrder	../../source/encoder/ratecontrol.h	/^    int     *m_encOrder;$/;"	m	class:X265_NS::RateControl	access:public
m_encodeOrder	../../source/common/frame.h	/^    int                    m_encodeOrder;$/;"	m	class:X265_NS::Frame	access:public
m_encodeStartTime	../../source/common/frame.h	/^    int64_t                m_encodeStartTime;$/;"	m	class:X265_NS::Frame	access:public
m_encodeStartTime	../../source/encoder/encoder.h	/^    int64_t            m_encodeStartTime;$/;"	m	class:X265_NS::Encoder	access:public
m_encodedBits	../../source/encoder/ratecontrol.h	/^    int64_t m_encodedBits;      \/* bits used for encoded frames (without ammortization) *\/$/;"	m	class:X265_NS::RateControl	access:public
m_encodedBitsWindow	../../source/encoder/ratecontrol.h	/^    int64_t m_encodedBitsWindow[50];$/;"	m	class:X265_NS::RateControl	access:public
m_encodedFrameNum	../../source/encoder/encoder.h	/^    int                m_encodedFrameNum;$/;"	m	class:X265_NS::Encoder	access:public
m_end	../../source/common/piclist.h	/^    Frame*   m_end;$/;"	m	class:X265_NS::PicList	access:protected
m_endCUAddr	../../source/common/slice.h	/^    uint32_t    m_endCUAddr;$/;"	m	class:X265_NS::Slice	access:public
m_endCompressTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_endCompressTime;          \/\/ timestamp after all CTUs are compressed$/;"	m	class:X265_NS::FrameEncoder	access:public
m_endFrameTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_endFrameTime;             \/\/ timestamp after RCEnd, NR updates, etc$/;"	m	class:X265_NS::FrameEncoder	access:public
m_entropyCoder	../../source/common/quant.h	/^    Entropy*           m_entropyCoder;$/;"	m	class:X265_NS::Quant	access:protected
m_entropyCoder	../../source/encoder/frameencoder.h	/^    Entropy                  m_entropyCoder;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_entropyCoder	../../source/encoder/sao.h	/^    Entropy     m_entropyCoder;$/;"	m	class:X265_NS::SAO	access:public
m_entropyCoder	../../source/encoder/search.h	/^    Entropy         m_entropyCoder;$/;"	m	class:X265_NS::Search	access:public
m_estBitsSbac	../../source/encoder/entropy.h	/^    EstBitsSbac   m_estBitsSbac;$/;"	m	class:X265_NS::Entropy	access:public
m_estimates	../../source/encoder/slicetype.h	/^    } m_estimates[MAX_BATCH_SIZE];$/;"	m	class:X265_NS::CostEstimateGroup	typeref:struct:X265_NS::CostEstimateGroup::Estimate	access:public
m_evaluateInter	../../source/encoder/analysis.h	/^    uint8_t                 m_evaluateInter;$/;"	m	class:X265_NS::Analysis	access:protected
m_exactMatchingFlag	../../source/encoder/sei.h	/^    bool m_exactMatchingFlag;$/;"	m	class:X265_NS::SEIRecoveryPoint	access:public
m_exitedPeerCount	../../source/common/threadpool.h	/^    ThreadSafeInteger m_exitedPeerCount;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
m_expectedBitsSum	../../source/encoder/ratecontrol.h	/^    double  m_expectedBitsSum;   \/* sum of qscale2bits after rceq, ratefactor, and overflow, only includes finished frames *\/$/;"	m	class:X265_NS::RateControl	access:public
m_exportedPic	../../source/encoder/encoder.h	/^    Frame*             m_exportedPic;$/;"	m	class:X265_NS::Encoder	access:public
m_externalDependencyBitmap	../../source/common/wavefront.h	/^    uint32_t volatile *m_externalDependencyBitmap;$/;"	m	class:X265_NS::WaveFront	access:private
m_extraAllocSize	../../source/encoder/nal.h	/^    uint32_t    m_extraAllocSize;$/;"	m	class:X265_NS::NALList	access:public
m_extraBuffer	../../source/encoder/nal.h	/^    uint8_t*    m_extraBuffer;$/;"	m	class:X265_NS::NALList	access:public
m_extraOccupancy	../../source/encoder/nal.h	/^    uint32_t    m_extraOccupancy;$/;"	m	class:X265_NS::NALList	access:public
m_fAc_den	../../source/common/cudata.h	/^    uint64_t      m_fAc_den[3];$/;"	m	class:X265_NS::CUData	access:public
m_fDc_den	../../source/common/cudata.h	/^    uint64_t      m_fDc_den[3];$/;"	m	class:X265_NS::CUData	access:public
m_fencDctCoeff	../../source/common/quant.h	/^    int16_t*           m_fencDctCoeff;$/;"	m	class:X265_NS::Quant	access:protected
m_fencPic	../../source/common/frame.h	/^    PicYuv*                m_fencPic;$/;"	m	class:X265_NS::Frame	access:public
m_fencScaled	../../source/encoder/search.h	/^    pixel*          m_fencScaled;     \/* 32x32 buffer for down-scaled version of 64x64 CU fenc *\/$/;"	m	class:X265_NS::Search	access:public
m_fencShortBuf	../../source/common/quant.h	/^    int16_t*           m_fencShortBuf;$/;"	m	class:X265_NS::Quant	access:protected
m_fencTransposed	../../source/encoder/search.h	/^    pixel*          m_fencTransposed; \/* 32x32 buffer for transposed copy of fenc *\/$/;"	m	class:X265_NS::Search	access:public
m_fifo	../../source/common/bitstream.h	/^    uint8_t *m_fifo;$/;"	m	class:X265_NS::Bitstream	access:private
m_filled	../../source/encoder/slicetype.h	/^    bool          m_filled;$/;"	m	class:X265_NS::Lookahead	access:public
m_filterRowDelay	../../source/encoder/frameencoder.h	/^    uint32_t                 m_filterRowDelay;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_filterRowDelayCus	../../source/encoder/frameencoder.h	/^    uint32_t                 m_filterRowDelayCus;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_finalFrameCount	../../source/encoder/ratecontrol.h	/^    int     m_finalFrameCount;   \/* set when encoder begins flushing *\/$/;"	m	class:X265_NS::RateControl	access:public
m_firstPts	../../source/encoder/encoder.h	/^    int64_t            m_firstPts;$/;"	m	class:X265_NS::Encoder	access:public
m_forceqp	../../source/common/frame.h	/^    int32_t                m_forceqp;            \/\/ Force to use the qp specified in qp file$/;"	m	class:X265_NS::Frame	access:public
m_fpelMvCosts	../../source/encoder/bitcost.h	/^    uint16_t *m_fpelMvCosts[4];$/;"	m	class:X265_NS::BitCost	access:protected
m_fps	../../source/encoder/ratecontrol.h	/^    double  m_fps;$/;"	m	class:X265_NS::RateControl	access:public
m_fracBits	../../source/encoder/entropy.h	/^    uint64_t      m_fracBits;$/;"	m	class:X265_NS::Entropy	access:public
m_frame	../../source/encoder/frameencoder.h	/^    Frame*                   m_frame;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_frame	../../source/encoder/framefilter.h	/^    Frame*        m_frame;$/;"	m	class:X265_NS::FrameFilter	access:public
m_frame	../../source/encoder/sao.h	/^    Frame*      m_frame;$/;"	m	class:X265_NS::SAO	access:public
m_frame	../../source/encoder/search.h	/^    Frame*          m_frame;$/;"	m	class:X265_NS::Search	access:public
m_frameDataFreeList	../../source/encoder/dpb.h	/^    FrameData*         m_frameDataFreeList;$/;"	m	class:X265_NS::DPB	access:public
m_frameDuration	../../source/encoder/ratecontrol.h	/^    double m_frameDuration;     \/* current frame duration in seconds *\/$/;"	m	class:X265_NS::RateControl	access:public
m_frameEncoder	../../source/encoder/encoder.h	/^    FrameEncoder*      m_frameEncoder[X265_MAX_FRAME_THREADS];$/;"	m	class:X265_NS::Encoder	access:public
m_frameEncoder	../../source/encoder/framefilter.h	/^    FrameEncoder* m_frameEncoder;$/;"	m	class:X265_NS::FrameFilter	access:public
m_frameEncoderID	../../source/common/framedata.h	/^    int            m_frameEncoderID;   \/* the ID of the FrameEncoder encoding this frame *\/$/;"	m	class:X265_NS::FrameData	access:public
m_frameFilter	../../source/encoder/frameencoder.h	/^    FrameFilter              m_frameFilter;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_frameFilter	../../source/encoder/framefilter.h	/^        FrameFilter*        m_frameFilter;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_frameNr	../../source/common/quant.h	/^    NoiseReduction*    m_frameNr; \/\/ Array of NR structures, one for each frameEncoder$/;"	m	class:X265_NS::Quant	access:public
m_frameStats	../../source/common/framedata.h	/^    FrameStats     m_frameStats; \/\/ stats of current frame for multi-pass encodes$/;"	m	class:X265_NS::FrameData	access:public
m_frames	../../source/encoder/slicetype.h	/^    Lowres**   m_frames;$/;"	m	class:X265_NS::CostEstimateGroup	access:public
m_framesDone	../../source/encoder/ratecontrol.h	/^    int     m_framesDone;        \/* # of frames passed through RateCotrol already *\/$/;"	m	class:X265_NS::RateControl	access:public
m_framesDoneGlobal	../../source/encoder/ratecontrol.h	/^    int     m_framesDoneGlobal;   \/* total # of frames passed through RateCotrol *\/$/;"	m	class:X265_NS::RateControl	access:public
m_freeList	../../source/encoder/dpb.h	/^    PicList            m_freeList;$/;"	m	class:X265_NS::DPB	access:public
m_freeListNext	../../source/common/framedata.h	/^    FrameData*     m_freeListNext;$/;"	m	class:X265_NS::FrameData	access:public
m_fullQueueSize	../../source/encoder/slicetype.h	/^    int           m_fullQueueSize;$/;"	m	class:X265_NS::Lookahead	access:public
m_globalSsim	../../source/encoder/encoder.h	/^    double        m_globalSsim;$/;"	m	struct:X265_NS::EncStats	access:public
m_groupAffinity	../../source/common/threadpool.h	/^    GROUP_AFFINITY m_groupAffinity;$/;"	m	class:X265_NS::ThreadPool	access:public
m_hChromaShift	../../source/common/cudata.h	/^    uint32_t      m_hChromaShift;$/;"	m	class:X265_NS::CUData	access:public
m_hChromaShift	../../source/common/picyuv.h	/^    uint32_t m_hChromaShift;$/;"	m	class:X265_NS::PicYuv	access:public
m_hChromaShift	../../source/common/predict.h	/^    int       m_hChromaShift;$/;"	m	class:X265_NS::Predict	access:public
m_hChromaShift	../../source/common/shortyuv.h	/^    int      m_hChromaShift;$/;"	m	class:X265_NS::ShortYuv	access:public
m_hChromaShift	../../source/common/yuv.h	/^    int      m_hChromaShift;$/;"	m	class:X265_NS::Yuv	access:public
m_hChromaShift	../../source/encoder/framefilter.h	/^    int           m_hChromaShift;$/;"	m	class:X265_NS::FrameFilter	access:public
m_hChromaShift	../../source/encoder/sao.h	/^    int         m_hChromaShift;$/;"	m	class:X265_NS::SAO	access:protected
m_hdr10plus_api	../../source/encoder/encoder.h	/^    const hdr10plus_api     *m_hdr10plus_api;$/;"	m	class:X265_NS::Encoder	access:public
m_helpWanted	../../source/common/threadpool.h	/^    bool          m_helpWanted;$/;"	m	class:X265_NS::JobProvider	access:public
m_histogram	../../source/encoder/slicetype.h	/^    int           m_histogram[X265_BFRAME_MAX + 1];$/;"	m	class:X265_NS::Lookahead	access:public
m_iBitsCostSum	../../source/encoder/encoder.h	/^    int64_t            m_iBitsCostSum[QP_MAX_MAX + 1];$/;"	m	class:X265_NS::Encoder	access:public
m_iFrameNum	../../source/encoder/encoder.h	/^    int                m_iFrameNum;   $/;"	m	class:X265_NS::Encoder	access:public
m_iNumRPSInSPS	../../source/common/slice.h	/^    int         m_iNumRPSInSPS;$/;"	m	class:X265_NS::Slice	access:public
m_iPPSQpMinus26	../../source/common/slice.h	/^    int         m_iPPSQpMinus26;$/;"	m	class:X265_NS::Slice	access:public
m_iPPSQpMinus26	../../source/encoder/encoder.h	/^    int                m_iPPSQpMinus26;$/;"	m	class:X265_NS::Encoder	access:public
m_id	../../source/common/threadpool.cpp	/^    int          m_id;$/;"	m	class:X265_NS::WorkerThread	file:	access:private
m_initSliceContext	../../source/encoder/frameencoder.h	/^    Entropy                  m_initSliceContext;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_initialCpbRemovalDelay	../../source/encoder/sei.h	/^    uint32_t m_initialCpbRemovalDelay;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
m_initialCpbRemovalDelayOffset	../../source/encoder/sei.h	/^    uint32_t m_initialCpbRemovalDelayOffset;$/;"	m	class:X265_NS::SEIBufferingPeriod	access:public
m_inputLock	../../source/encoder/slicetype.h	/^    Lock          m_inputLock;$/;"	m	class:X265_NS::Lookahead	access:public
m_inputQueue	../../source/encoder/slicetype.h	/^    PicList       m_inputQueue;      \/\/ input pictures in order received$/;"	m	class:X265_NS::Lookahead	access:public
m_integral	../../source/common/yuv.h	/^    uint32_t *m_integral[2][MAX_NUM_REF][INTEGRAL_PLANE_NUM];$/;"	m	class:X265_NS::Yuv	access:public
m_interDir	../../source/common/cudata.h	/^    uint8_t*      m_interDir;         \/\/ array of inter directions$/;"	m	class:X265_NS::CUData	access:public
m_internalDependencyBitmap	../../source/common/wavefront.h	/^    uint32_t volatile *m_internalDependencyBitmap;$/;"	m	class:X265_NS::WaveFront	access:private
m_intraPred	../../source/encoder/search.h	/^    pixel*          m_intraPred;      \/* 32x32 buffer for individual intra predictions *\/$/;"	m	class:X265_NS::Search	access:public
m_intraPredAngs	../../source/encoder/search.h	/^    pixel*          m_intraPredAngs;  \/* allocation for 33 consecutive (all angular) 32x32 intra predictions *\/$/;"	m	class:X265_NS::Search	access:public
m_ipOffset	../../source/encoder/ratecontrol.h	/^    double  m_ipOffset;$/;"	m	class:X265_NS::RateControl	access:public
m_isAbr	../../source/encoder/ratecontrol.h	/^    bool   m_isAbr;$/;"	m	class:X265_NS::RateControl	access:public
m_isAbrReset	../../source/encoder/ratecontrol.h	/^    bool   m_isAbrReset;$/;"	m	class:X265_NS::RateControl	access:public
m_isActive	../../source/common/threadpool.h	/^    bool          m_isActive;$/;"	m	class:X265_NS::ThreadPool	access:public
m_isActive	../../source/encoder/slicetype.h	/^    bool          m_isActive;$/;"	m	class:X265_NS::Lookahead	access:public
m_isCbr	../../source/encoder/ratecontrol.h	/^    bool   m_isCbr;$/;"	m	class:X265_NS::RateControl	access:public
m_isFirstMiniGop	../../source/encoder/ratecontrol.h	/^    bool   m_isFirstMiniGop;$/;"	m	class:X265_NS::RateControl	access:public
m_isFrameEncoder	../../source/common/threadpool.h	/^    bool          m_isFrameEncoder; \/* rather ugly hack, but nothing better presents itself *\/$/;"	m	class:X265_NS::JobProvider	access:public
m_isGopReEncoded	../../source/encoder/ratecontrol.h	/^    bool    m_isGopReEncoded;$/;"	m	class:X265_NS::RateControl	access:public
m_isGrainEnabled	../../source/encoder/ratecontrol.h	/^    bool   m_isGrainEnabled;$/;"	m	class:X265_NS::RateControl	access:public
m_isNextGop	../../source/encoder/ratecontrol.h	/^    bool   m_isNextGop;$/;"	m	class:X265_NS::RateControl	access:public
m_isPatternPresent	../../source/encoder/ratecontrol.h	/^    bool    m_isPatternPresent;$/;"	m	class:X265_NS::RateControl	access:public
m_isQpModified	../../source/encoder/ratecontrol.h	/^    bool    m_isQpModified;$/;"	m	class:X265_NS::RateControl	access:public
m_isSceneTransition	../../source/encoder/ratecontrol.h	/^    bool    m_isSceneTransition;$/;"	m	class:X265_NS::RateControl	access:public
m_isSceneTransition	../../source/encoder/slicetype.h	/^    bool          m_isSceneTransition;$/;"	m	class:X265_NS::Lookahead	access:public
m_isVbv	../../source/encoder/ratecontrol.h	/^    bool   m_isVbv;$/;"	m	class:X265_NS::RateControl	access:public
m_isWeakCorr	../../source/encoder/ratecontrol.h	/^    bool   m_isWeakCorr;$/;"	m	class:X265_NS::RateControl	access:public
m_jobAcquired	../../source/common/threadpool.h	/^    int               m_jobAcquired;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
m_jobProvider	../../source/common/framedata.h	/^    JobProvider*   m_jobProvider;$/;"	m	class:X265_NS::FrameData	access:public
m_jobTotal	../../source/common/threadpool.h	/^    int               m_jobTotal;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
m_jobs	../../source/encoder/search.h	/^        } m_jobs;$/;"	m	class:X265_NS::Search::PME	typeref:struct:X265_NS::Search::PME::__anon2	access:public
m_jpId	../../source/common/threadpool.h	/^    int           m_jpId;$/;"	m	class:X265_NS::JobProvider	access:public
m_jpTable	../../source/common/threadpool.h	/^    JobProvider** m_jpTable;$/;"	m	class:X265_NS::ThreadPool	access:public
m_keepQ	../../source/encoder/ratecontrol.h	/^    bool    m_keepQ;$/;"	m	class:X265_NS::RateControl	access:public
m_lambda	../../source/encoder/rdcost.h	/^    uint64_t  m_lambda;$/;"	m	class:X265_NS::RDCost	access:public
m_lambda2	../../source/encoder/rdcost.h	/^    uint64_t  m_lambda2;$/;"	m	class:X265_NS::RDCost	access:public
m_lastAbrResetPoc	../../source/encoder/ratecontrol.h	/^    int    m_lastAbrResetPoc;$/;"	m	class:X265_NS::RateControl	access:public
m_lastAccumPNorm	../../source/encoder/ratecontrol.h	/^    double  m_lastAccumPNorm;$/;"	m	class:X265_NS::RateControl	access:public
m_lastBPSEI	../../source/encoder/encoder.h	/^    int                m_lastBPSEI;$/;"	m	class:X265_NS::Encoder	access:public
m_lastBsliceSatdCost	../../source/encoder/ratecontrol.h	/^    int64_t m_lastBsliceSatdCost;$/;"	m	class:X265_NS::RateControl	access:public
m_lastCol	../../source/encoder/framefilter.h	/^        ThreadSafeInteger   m_lastCol;          \/* The column that next to process *\/$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_lastDeblocked	../../source/encoder/framefilter.h	/^        ThreadSafeInteger   m_lastDeblocked;   \/* The column that finished all of Deblock stages  *\/$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_lastHeight	../../source/encoder/framefilter.h	/^    int           m_lastHeight;$/;"	m	class:X265_NS::FrameFilter	access:public
m_lastIDR	../../source/common/slice.h	/^    int         m_lastIDR;$/;"	m	class:X265_NS::Slice	access:public
m_lastIDR	../../source/encoder/dpb.h	/^    int                m_lastIDR;$/;"	m	class:X265_NS::DPB	access:public
m_lastKeyframe	../../source/encoder/slicetype.h	/^    int           m_lastKeyframe;$/;"	m	class:X265_NS::Lookahead	access:public
m_lastNonB	../../source/encoder/slicetype.h	/^    Lowres*       m_lastNonB;$/;"	m	class:X265_NS::Lookahead	access:public
m_lastNonBPictType	../../source/encoder/ratecontrol.h	/^    int     m_lastNonBPictType;$/;"	m	class:X265_NS::RateControl	access:public
m_lastPFrame	../../source/encoder/ratecontrol.h	/^    Frame*  m_lastPFrame;$/;"	m	class:X265_NS::RateControl	access:public
m_lastPredictorReset	../../source/encoder/ratecontrol.h	/^    int     m_lastPredictorReset;$/;"	m	class:X265_NS::RateControl	access:public
m_lastQScaleFor	../../source/encoder/ratecontrol.h	/^    double  m_lastQScaleFor[3];  \/* last qscale for a specific pict type, used for max_diff & ipb factor stuff *\/$/;"	m	class:X265_NS::RateControl	access:public
m_lastRceq	../../source/encoder/ratecontrol.h	/^    double  m_lastRceq;$/;"	m	class:X265_NS::RateControl	access:public
m_lastRemovedSatdCost	../../source/encoder/ratecontrol.h	/^    int64_t m_lastRemovedSatdCost;$/;"	m	class:X265_NS::RateControl	access:public
m_lastWidth	../../source/encoder/framefilter.h	/^    int           m_lastWidth;$/;"	m	class:X265_NS::FrameFilter	access:public
m_latestParam	../../source/encoder/encoder.h	/^    x265_param*        m_latestParam;     \/\/ Holds latest param during a reconfigure$/;"	m	class:X265_NS::Encoder	access:public
m_leadingNoBSatd	../../source/encoder/ratecontrol.h	/^    int64_t m_leadingNoBSatd;$/;"	m	class:X265_NS::RateControl	access:public
m_limitTU	../../source/encoder/search.h	/^    uint16_t        m_limitTU;$/;"	m	class:X265_NS::Search	access:public
m_listSelBits	../../source/encoder/search.h	/^    uint32_t      m_listSelBits[3];$/;"	m	class:X265_NS::Search	access:protected
m_lmax	../../source/encoder/ratecontrol.h	/^    double  m_lmax[3];$/;"	m	class:X265_NS::RateControl	access:public
m_lmin	../../source/encoder/ratecontrol.h	/^    double  m_lmin[3];$/;"	m	class:X265_NS::RateControl	access:public
m_localTldIdx	../../source/encoder/frameencoder.h	/^    int                      m_localTldIdx;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_lock	../../source/common/threadpool.h	/^    Lock              m_lock;$/;"	m	class:X265_NS::BondedTaskGroup	access:public
m_log2CUSize	../../source/common/cudata.h	/^    uint8_t*      m_log2CUSize;       \/\/ array of cu log2Size TODO: seems redundant to depth$/;"	m	class:X265_NS::CUData	access:public
m_lookahead	../../source/encoder/encoder.h	/^    Lookahead*         m_lookahead;$/;"	m	class:X265_NS::Encoder	access:public
m_lookahead	../../source/encoder/slicetype.h	/^    Lookahead& m_lookahead;$/;"	m	class:X265_NS::CostEstimateGroup	access:public
m_lookahead	../../source/encoder/slicetype.h	/^    Lookahead& m_lookahead;$/;"	m	class:X265_NS::PreLookaheadGroup	access:public
m_low	../../source/encoder/entropy.h	/^    uint32_t      m_low;$/;"	m	class:X265_NS::Entropy	access:public
m_lowres	../../source/common/frame.h	/^    Lowres                 m_lowres;$/;"	m	class:X265_NS::Frame	access:public
m_lowresInit	../../source/common/frame.h	/^    bool                   m_lowresInit;         \/\/ lowres init complete (pre-analysis)$/;"	m	class:X265_NS::Frame	access:public
m_lstep	../../source/encoder/ratecontrol.h	/^    double  m_lstep;$/;"	m	class:X265_NS::RateControl	access:public
m_lumaIntraDir	../../source/common/cudata.h	/^    uint8_t*      m_lumaIntraDir;     \/\/ array of intra directions (luma)$/;"	m	class:X265_NS::CUData	access:public
m_lumaMarginX	../../source/common/picyuv.h	/^    uint32_t m_lumaMarginX;$/;"	m	class:X265_NS::PicYuv	access:public
m_lumaMarginY	../../source/common/picyuv.h	/^    uint32_t m_lumaMarginY;$/;"	m	class:X265_NS::PicYuv	access:public
m_maxCLL	../../source/encoder/encoder.h	/^    uint16_t      m_maxCLL;$/;"	m	struct:X265_NS::EncStats	access:public
m_maxChromaULevel	../../source/common/picyuv.h	/^    pixel   m_maxChromaULevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_maxChromaVLevel	../../source/common/picyuv.h	/^    pixel   m_maxChromaVLevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_maxFALL	../../source/encoder/encoder.h	/^    double        m_maxFALL;$/;"	m	struct:X265_NS::EncStats	access:public
m_maxLumaLevel	../../source/common/picyuv.h	/^    pixel   m_maxLumaLevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_maxNumMergeCand	../../source/common/slice.h	/^    uint32_t    m_maxNumMergeCand; \/\/ use param$/;"	m	class:X265_NS::Slice	access:public
m_maxNumReferences	../../source/encoder/dpb.h	/^    int                m_maxNumReferences;$/;"	m	class:X265_NS::DPB	access:public
m_maxTUDepth	../../source/encoder/search.h	/^    int32_t         m_maxTUDepth;$/;"	m	class:X265_NS::Search	access:public
m_me	../../source/encoder/search.h	/^    MotionEstimate  m_me;$/;"	m	class:X265_NS::Search	access:public
m_meBuffer	../../source/common/framedata.h	/^    uint32_t*              m_meBuffer[INTEGRAL_PLANE_NUM];$/;"	m	class:X265_NS::FrameData	access:public
m_meIntegral	../../source/common/framedata.h	/^    uint32_t*              m_meIntegral[INTEGRAL_PLANE_NUM];       \/\/ 12 integral planes for 32x32, 32x24, 32x8, 24x32, 16x16, 16x12, 16x4, 12x16, 8x32, 8x8, 4x16 and 4x4.$/;"	m	class:X265_NS::FrameData	access:public
m_meLock	../../source/encoder/search.h	/^    Lock          m_meLock;$/;"	m	class:X265_NS::Search	access:protected
m_meanQP	../../source/common/cudata.h	/^    double m_meanQP;$/;"	m	class:X265_NS::CUData	access:public
m_meanQP	../../source/encoder/entropy.h	/^    double        m_meanQP;$/;"	m	class:X265_NS::Entropy	access:public
m_mergeFlag	../../source/common/cudata.h	/^    uint8_t*      m_mergeFlag;        \/\/ array of merge flags$/;"	m	class:X265_NS::CUData	access:public
m_method	../../source/encoder/sei.h	/^    } m_method;$/;"	m	class:X265_NS::SEIDecodedPictureHash	typeref:enum:X265_NS::SEIDecodedPictureHash::Method	access:public
m_minChromaULevel	../../source/common/picyuv.h	/^    pixel   m_minChromaULevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_minChromaVLevel	../../source/common/picyuv.h	/^    pixel   m_minChromaVLevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_minLumaLevel	../../source/common/picyuv.h	/^    pixel   m_minLumaLevel;$/;"	m	class:X265_NS::PicYuv	access:public
m_miniGopNum	../../source/encoder/ratecontrol.h	/^    int     m_miniGopNum;$/;"	m	class:X265_NS::RateControl	access:public
m_modeDepth	../../source/encoder/analysis.h	/^    ModeDepth m_modeDepth[NUM_CU_DEPTH];$/;"	m	class:X265_NS::Analysis	access:public
m_movingAvgSum	../../source/encoder/ratecontrol.h	/^    double  m_movingAvgSum;$/;"	m	class:X265_NS::RateControl	access:public
m_mref	../../source/common/slice.h	/^    MotionReference (*m_mref)[MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
m_mref	../../source/encoder/frameencoder.h	/^    MotionReference          m_mref[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::FrameEncoder	access:public
m_multipassAnalysis	../../source/encoder/analysis.h	/^    analysis2PassFrameData* m_multipassAnalysis;$/;"	m	class:X265_NS::Analysis	access:protected
m_multipassDepth	../../source/encoder/analysis.h	/^    uint8_t*                m_multipassDepth;$/;"	m	class:X265_NS::Analysis	access:protected
m_multipassModes	../../source/encoder/analysis.h	/^    uint8_t*                m_multipassModes;$/;"	m	class:X265_NS::Analysis	access:protected
m_multipassMv	../../source/encoder/analysis.h	/^    MV*                     m_multipassMv[2];$/;"	m	class:X265_NS::Analysis	access:protected
m_multipassMvpIdx	../../source/encoder/analysis.h	/^    int*                    m_multipassMvpIdx[2];$/;"	m	class:X265_NS::Analysis	access:protected
m_multipassRef	../../source/encoder/analysis.h	/^    int32_t*                m_multipassRef[2];$/;"	m	class:X265_NS::Analysis	access:protected
m_mv	../../source/common/cudata.h	/^    MV*           m_mv[2];            \/\/ array of motion vectors per list$/;"	m	class:X265_NS::CUData	access:public
m_mv	../../source/common/framedata.h	/^    MV*           m_mv[2];$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
m_mvd	../../source/common/cudata.h	/^    MV*           m_mvd[2];           \/\/ array of coded motion vector deltas per list$/;"	m	class:X265_NS::CUData	access:public
m_mvp	../../source/encoder/bitcost.h	/^    MV        m_mvp;$/;"	m	class:X265_NS::BitCost	access:protected
m_mvpIdx	../../source/common/cudata.h	/^    uint8_t*      m_mvpIdx[2];        \/\/ array of motion vector predictor candidates or merge candidate indices [0]$/;"	m	class:X265_NS::CUData	access:public
m_nal	../../source/encoder/nal.h	/^    x265_nal    m_nal[MAX_NAL_UNITS];$/;"	m	class:X265_NS::NALList	access:public
m_nalList	../../source/encoder/encoder.h	/^    NALList            m_nalList;$/;"	m	class:X265_NS::Encoder	access:public
m_nalList	../../source/encoder/frameencoder.h	/^    NALList                  m_nalList;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_nalUnitType	../../source/common/slice.h	/^    NalUnitType m_nalUnitType;$/;"	m	class:X265_NS::Slice	access:public
m_ncu	../../source/encoder/ratecontrol.h	/^    int         m_ncu;           \/* number of CUs in a frame *\/$/;"	m	class:X265_NS::RateControl	access:public
m_next	../../source/common/frame.h	/^    Frame*                 m_next;               \/\/ PicList doubly linked list pointers$/;"	m	class:X265_NS::Frame	access:public
m_noParamSetUpdateFlag	../../source/encoder/sei.h	/^    bool m_noParamSetUpdateFlag;$/;"	m	class:X265_NS::SEIActiveParameterSets	access:public
m_noise	../../source/encoder/ratecontrol.h	/^    int    m_noise;$/;"	m	class:X265_NS::RateControl	access:public
m_nominalRemovalTime	../../source/encoder/ratecontrol.h	/^    double  m_nominalRemovalTime;$/;"	m	class:X265_NS::RateControl	access:public
m_nr	../../source/common/quant.h	/^    NoiseReduction*    m_nr;$/;"	m	class:X265_NS::Quant	access:public
m_nr	../../source/encoder/frameencoder.h	/^    NoiseReduction*          m_nr;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_numBframesInPattern	../../source/encoder/ratecontrol.h	/^    int     m_numBframesInPattern;$/;"	m	class:X265_NS::RateControl	access:public
m_numBufferedBytes	../../source/encoder/entropy.h	/^    int           m_numBufferedBytes;$/;"	m	class:X265_NS::Entropy	access:public
m_numChromaWPBiFrames	../../source/encoder/encoder.h	/^    int                m_numChromaWPBiFrames; \/\/ number of B frames with weighted chroma reference$/;"	m	class:X265_NS::Encoder	access:public
m_numChromaWPFrames	../../source/encoder/encoder.h	/^    int                m_numChromaWPFrames;  \/\/ number of P frames with weighted chroma reference$/;"	m	class:X265_NS::Encoder	access:public
m_numCols	../../source/encoder/frameencoder.h	/^    uint32_t                 m_numCols;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_numCols	../../source/encoder/framefilter.h	/^    int           m_numCols;$/;"	m	class:X265_NS::FrameFilter	access:public
m_numCoopSlices	../../source/encoder/slicetype.h	/^    int           m_numCoopSlices;$/;"	m	class:X265_NS::Lookahead	access:public
m_numCuInHeight	../../source/encoder/sao.h	/^    int         m_numCuInHeight;$/;"	m	class:X265_NS::SAO	access:protected
m_numCuInWidth	../../source/encoder/sao.h	/^    int         m_numCuInWidth;$/;"	m	class:X265_NS::SAO	access:protected
m_numDelayedPic	../../source/encoder/encoder.h	/^    uint32_t           m_numDelayedPic;$/;"	m	class:X265_NS::Encoder	access:public
m_numEntries	../../source/encoder/ratecontrol.h	/^    int     m_numEntries;$/;"	m	class:X265_NS::RateControl	access:public
m_numLayers	../../source/encoder/search.h	/^    uint32_t        m_numLayers;$/;"	m	class:X265_NS::Search	access:public
m_numLumaWPBiFrames	../../source/encoder/encoder.h	/^    int                m_numLumaWPBiFrames;  \/\/ number of B frames with weighted luma reference$/;"	m	class:X265_NS::Encoder	access:public
m_numLumaWPFrames	../../source/encoder/encoder.h	/^    int                m_numLumaWPFrames;    \/\/ number of P frames with weighted luma reference$/;"	m	class:X265_NS::Encoder	access:public
m_numNal	../../source/encoder/nal.h	/^    uint32_t    m_numNal;$/;"	m	class:X265_NS::NALList	access:public
m_numNoSao	../../source/encoder/sao.h	/^    int         m_numNoSao[2];$/;"	m	class:X265_NS::SAO	access:public
m_numPartitions	../../source/common/cudata.h	/^    uint32_t      m_numPartitions;    \/\/ maximum number of 4x4 partitions within this CU$/;"	m	class:X265_NS::CUData	access:public
m_numPics	../../source/encoder/encoder.h	/^    uint32_t      m_numPics;$/;"	m	struct:X265_NS::EncStats	access:public
m_numPools	../../source/encoder/encoder.h	/^    int                m_numPools;$/;"	m	class:X265_NS::Encoder	access:public
m_numPools	../../source/encoder/slicetype.h	/^    int           m_numPools;$/;"	m	class:X265_NS::Lookahead	access:public
m_numProviders	../../source/common/threadpool.h	/^    int           m_numProviders;$/;"	m	class:X265_NS::ThreadPool	access:public
m_numRefIdx	../../source/common/slice.h	/^    int         m_numRefIdx[2];$/;"	m	class:X265_NS::Slice	access:public
m_numRows	../../source/common/frame.h	/^    int32_t                m_numRows;$/;"	m	class:X265_NS::Frame	access:public
m_numRows	../../source/common/wavefront.h	/^    int m_numRows;$/;"	m	class:X265_NS::WaveFront	access:private
m_numRows	../../source/encoder/frameencoder.h	/^    uint32_t                 m_numRows;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_numRows	../../source/encoder/framefilter.h	/^    int           m_numRows;$/;"	m	class:X265_NS::FrameFilter	access:public
m_numRowsPerSlice	../../source/encoder/slicetype.h	/^    int           m_numRowsPerSlice;$/;"	m	class:X265_NS::Lookahead	access:public
m_numWords	../../source/common/wavefront.h	/^    int m_numWords;$/;"	m	class:X265_NS::WaveFront	access:private
m_numWorkers	../../source/common/threadpool.h	/^    int           m_numWorkers;$/;"	m	class:X265_NS::ThreadPool	access:public
m_numaMask	../../source/common/threadpool.h	/^    void*         m_numaMask; \/\/ node mask in linux, cpu mask in windows$/;"	m	class:X265_NS::ThreadPool	access:public
m_occupancy	../../source/encoder/nal.h	/^    uint32_t    m_occupancy;$/;"	m	class:X265_NS::NALList	access:public
m_offset	../../source/encoder/sao.h	/^    PerPlane    m_offset;$/;"	m	class:X265_NS::SAO	access:protected
m_offsetBo	../../source/encoder/sao.h	/^    int8_t      m_offsetBo[NUM_PLANE][MAX_NUM_SAO_CLASS];$/;"	m	class:X265_NS::SAO	access:protected
m_offsetEmergency	../../source/encoder/encoder.h	/^    uint16_t           (*m_offsetEmergency)[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS];$/;"	m	class:X265_NS::Encoder	access:public
m_offsetEo	../../source/encoder/sao.h	/^    int8_t      m_offsetEo[NUM_PLANE][NUM_EDGETYPE];$/;"	m	class:X265_NS::SAO	access:protected
m_offsetOrg	../../source/encoder/sao.h	/^    PerPlane    m_offsetOrg;$/;"	m	class:X265_NS::SAO	access:protected
m_offsetOrgPreDblk	../../source/encoder/sao.h	/^    PerPlane*   m_offsetOrgPreDblk;$/;"	m	class:X265_NS::SAO	access:protected
m_outStreams	../../source/encoder/frameencoder.h	/^    Bitstream*               m_outStreams;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_outputCount	../../source/encoder/encoder.h	/^    int                m_outputCount;$/;"	m	class:X265_NS::Encoder	access:public
m_outputLock	../../source/encoder/slicetype.h	/^    Lock          m_outputLock;$/;"	m	class:X265_NS::Lookahead	access:public
m_outputQueue	../../source/encoder/slicetype.h	/^    PicList       m_outputQueue;     \/\/ pictures to be encoded, in encode order$/;"	m	class:X265_NS::Lookahead	access:public
m_outputSignal	../../source/encoder/slicetype.h	/^    Event         m_outputSignal;$/;"	m	class:X265_NS::Lookahead	access:public
m_outputSignalRequired	../../source/encoder/slicetype.h	/^    bool          m_outputSignalRequired;$/;"	m	class:X265_NS::Lookahead	access:public
m_ownerBitmap	../../source/common/threadpool.h	/^    sleepbitmap_t m_ownerBitmap;$/;"	m	class:X265_NS::JobProvider	access:public
m_pad	../../source/encoder/entropy.h	/^    uint64_t      m_pad;$/;"	m	class:X265_NS::Entropy	access:public
m_pad	../../source/encoder/framefilter.h	/^    int           m_pad[2];$/;"	m	class:X265_NS::FrameFilter	access:public
m_parallelFilter	../../source/encoder/framefilter.h	/^    ParallelFilter*     m_parallelFilter;$/;"	m	class:X265_NS::FrameFilter	access:public
m_param	../../source/common/frame.h	/^    x265_param*            m_param;              \/\/ Points to the latest param set for the frame.$/;"	m	class:X265_NS::Frame	access:public
m_param	../../source/common/framedata.h	/^    const x265_param* m_param;$/;"	m	class:X265_NS::FrameData	access:public
m_param	../../source/common/picyuv.h	/^    x265_param *m_param;$/;"	m	class:X265_NS::PicYuv	access:public
m_param	../../source/common/slice.h	/^    const x265_param *m_param;$/;"	m	class:X265_NS::Slice	access:public
m_param	../../source/encoder/encoder.h	/^    x265_param*        m_param;$/;"	m	class:X265_NS::Encoder	access:public
m_param	../../source/encoder/frameencoder.h	/^    x265_param*              m_param;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_param	../../source/encoder/framefilter.h	/^    x265_param*   m_param;$/;"	m	class:X265_NS::FrameFilter	access:public
m_param	../../source/encoder/ratecontrol.h	/^    x265_param* m_param;$/;"	m	class:X265_NS::RateControl	access:public
m_param	../../source/encoder/sao.h	/^    x265_param* m_param;$/;"	m	class:X265_NS::SAO	access:public
m_param	../../source/encoder/search.h	/^    const x265_param* m_param;$/;"	m	class:X265_NS::Search	access:public
m_param	../../source/encoder/slicetype.h	/^    x265_param*   m_param;$/;"	m	class:X265_NS::Lookahead	access:public
m_part	../../source/common/yuv.h	/^    int      m_part;         \/\/ cached partition enum size$/;"	m	class:X265_NS::Yuv	access:public
m_partCopy	../../source/common/cudata.h	/^    cucopy_t      m_partCopy;         \/\/ pointer to function that copies m_numPartitions elements$/;"	m	class:X265_NS::CUData	access:public
m_partSet	../../source/common/cudata.h	/^    cubcast_t     m_partSet;          \/\/ pointer to function that sets m_numPartitions elements$/;"	m	class:X265_NS::CUData	access:public
m_partSize	../../source/common/cudata.h	/^    uint8_t*      m_partSize;         \/\/ array of partition sizes$/;"	m	class:X265_NS::CUData	access:public
m_partialByte	../../source/common/bitstream.h	/^    uint8_t  m_partialByte;$/;"	m	class:X265_NS::Bitstream	access:private
m_partialByteBits	../../source/common/bitstream.h	/^    uint32_t m_partialByteBits;$/;"	m	class:X265_NS::Bitstream	access:private
m_partialResidualCost	../../source/encoder/ratecontrol.h	/^    int    m_partialResidualCost;$/;"	m	class:X265_NS::RateControl	access:protected
m_partialResidualFrames	../../source/encoder/ratecontrol.h	/^    int    m_partialResidualFrames;$/;"	m	class:X265_NS::RateControl	access:protected
m_payloadSize	../../source/encoder/sei.h	/^    uint32_t        m_payloadSize;$/;"	m	class:X265_NS::SEI	access:protected
m_payloadType	../../source/encoder/sei.h	/^    SEIPayloadType  m_payloadType;$/;"	m	class:X265_NS::SEI	access:protected
m_pbOffset	../../source/encoder/ratecontrol.h	/^    double  m_pbOffset;$/;"	m	class:X265_NS::RateControl	access:public
m_picBuf	../../source/common/picyuv.h	/^    pixel*   m_picBuf[3];  \/\/ full allocated buffers, including margins$/;"	m	class:X265_NS::PicYuv	access:public
m_picCTU	../../source/common/framedata.h	/^    CUData*        m_picCTU;$/;"	m	class:X265_NS::FrameData	access:public
m_picCsp	../../source/common/framedata.h	/^    int            m_picCsp;$/;"	m	class:X265_NS::FrameData	access:public
m_picCsp	../../source/common/picyuv.h	/^    uint32_t m_picCsp;$/;"	m	class:X265_NS::PicYuv	access:public
m_picDpbOutputDelay	../../source/encoder/sei.h	/^    uint32_t  m_picDpbOutputDelay;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
m_picHeight	../../source/common/picyuv.h	/^    uint32_t m_picHeight;$/;"	m	class:X265_NS::PicYuv	access:public
m_picList	../../source/encoder/dpb.h	/^    PicList            m_picList;$/;"	m	class:X265_NS::DPB	access:public
m_picOrg	../../source/common/picyuv.h	/^    pixel*   m_picOrg[3];  \/\/ pointers to plane starts$/;"	m	class:X265_NS::PicYuv	access:public
m_picStruct	../../source/encoder/sei.h	/^    uint32_t  m_picStruct;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
m_picWidth	../../source/common/picyuv.h	/^    uint32_t m_picWidth;$/;"	m	class:X265_NS::PicYuv	access:public
m_pir	../../source/common/framedata.h	/^    PeriodicIR     m_pir;$/;"	m	class:X265_NS::FrameData	access:public
m_poc	../../source/common/frame.h	/^    int                    m_poc;$/;"	m	class:X265_NS::Frame	access:public
m_poc	../../source/common/slice.h	/^    int         m_poc;$/;"	m	class:X265_NS::Slice	access:public
m_pocCRA	../../source/encoder/dpb.h	/^    int                m_pocCRA;$/;"	m	class:X265_NS::DPB	access:public
m_pocLast	../../source/encoder/encoder.h	/^    int                m_pocLast;         \/\/ time index (POC)$/;"	m	class:X265_NS::Encoder	access:public
m_pool	../../source/common/threadpool.cpp	/^    ThreadPool&  m_pool;$/;"	m	class:X265_NS::WorkerThread	file:	access:private
m_pool	../../source/common/threadpool.h	/^    ThreadPool*   m_pool;$/;"	m	class:X265_NS::JobProvider	access:public
m_pps	../../source/common/slice.h	/^    const PPS*  m_pps;$/;"	m	class:X265_NS::Slice	access:public
m_pps	../../source/encoder/encoder.h	/^    PPS                m_pps;$/;"	m	class:X265_NS::Encoder	access:public
m_preLookaheadElapsedTime	../../source/encoder/slicetype.h	/^    int64_t       m_preLookaheadElapsedTime;$/;"	m	class:X265_NS::Lookahead	access:public
m_pred	../../source/encoder/ratecontrol.h	/^    Predictor m_pred[4];       \/* Slice predictors to preidct bits for each Slice type - I,P,Bref and B *\/$/;"	m	class:X265_NS::RateControl	access:public
m_predMode	../../source/common/cudata.h	/^    uint8_t*      m_predMode;         \/\/ array of prediction modes$/;"	m	class:X265_NS::CUData	access:public
m_predShortYuv	../../source/common/predict.h	/^    ShortYuv  m_predShortYuv[2]; \/* temporary storage for weighted prediction *\/$/;"	m	class:X265_NS::Predict	access:public
m_predType	../../source/encoder/ratecontrol.h	/^    int     m_predType;       \/* Type of slice predictors to be used - depends on the slice type *\/$/;"	m	class:X265_NS::RateControl	access:public
m_predictedBits	../../source/encoder/ratecontrol.h	/^    int64_t m_predictedBits;$/;"	m	class:X265_NS::RateControl	access:public
m_preframes	../../source/encoder/slicetype.h	/^    Frame* m_preframes[X265_LOOKAHEAD_MAX];$/;"	m	class:X265_NS::PreLookaheadGroup	access:public
m_prev	../../source/common/frame.h	/^    Frame*                 m_prev;$/;"	m	class:X265_NS::Frame	access:public
m_prevCpbFinalAT	../../source/encoder/ratecontrol.h	/^    double  m_prevCpbFinalAT;$/;"	m	class:X265_NS::RateControl	access:public
m_prevCtuInfoChange	../../source/common/frame.h	/^    int*                   m_prevCtuInfoChange;$/;"	m	class:X265_NS::Frame	access:public
m_prevCtuInfoChange	../../source/encoder/analysis.h	/^    int*                    m_prevCtuInfoChange;$/;"	m	class:X265_NS::Analysis	access:protected
m_prevOutputTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_prevOutputTime;           \/\/ timestamp when prev frame was retrieved by API thread$/;"	m	class:X265_NS::FrameEncoder	access:public
m_prevReorderedPts	../../source/encoder/encoder.h	/^    int64_t            m_prevReorderedPts[MAX_TLAYER];$/;"	m	class:X265_NS::Encoder	access:public
m_prevRow	../../source/encoder/framefilter.h	/^        ParallelFilter*     m_prevRow;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_prevTonemapPayload	../../source/encoder/encoder.h	/^    x265_sei_payload        m_prevTonemapPayload;$/;"	m	class:X265_NS::Encoder	access:public
m_propCoeff	../../source/encoder/ratecontrol.h	/^    double  m_propCoeff;$/;"	m	class:X265_NS::RateControl	access:public
m_psnrSumU	../../source/encoder/encoder.h	/^    double        m_psnrSumU;$/;"	m	struct:X265_NS::EncStats	access:public
m_psnrSumV	../../source/encoder/encoder.h	/^    double        m_psnrSumV;$/;"	m	struct:X265_NS::EncStats	access:public
m_psnrSumY	../../source/encoder/encoder.h	/^    double        m_psnrSumY;$/;"	m	struct:X265_NS::EncStats	access:public
m_psyRd	../../source/encoder/rdcost.h	/^    uint32_t  m_psyRd;$/;"	m	class:X265_NS::RDCost	access:public
m_psyRdBase	../../source/encoder/rdcost.h	/^    uint32_t  m_psyRdBase;$/;"	m	class:X265_NS::RDCost	access:public
m_psyRdoqScale	../../source/common/quant.h	/^    int32_t            m_psyRdoqScale;  \/\/ dynamic range [0,50] * 256 = 14-bits$/;"	m	class:X265_NS::Quant	access:protected
m_pts	../../source/common/frame.h	/^    int64_t                m_pts;                \/\/ user provided presentation time stamp$/;"	m	class:X265_NS::Frame	access:public
m_qCompress	../../source/encoder/ratecontrol.h	/^    double  m_qCompress;$/;"	m	class:X265_NS::RateControl	access:public
m_qScaleForFramePlannedSize	../../source/encoder/ratecontrol.h	/^    double  m_qScaleForFramePlannedSize;$/;"	m	class:X265_NS::RateControl	access:public
m_qp	../../source/common/cudata.h	/^    int8_t*       m_qp;               \/\/ array of QP values$/;"	m	class:X265_NS::CUData	access:public
m_qp	../../source/encoder/ratecontrol.h	/^    int         m_qp;            \/* updated qp for current frame *\/$/;"	m	class:X265_NS::RateControl	access:public
m_qp	../../source/encoder/rdcost.h	/^    int       m_qp; \/* QP used to configure lambda, may be higher than QP_MAX_SPEC but <= QP_MAX_MAX *\/$/;"	m	class:X265_NS::RDCost	access:public
m_qpConstant	../../source/encoder/ratecontrol.h	/^    int     m_qpConstant[3];$/;"	m	class:X265_NS::RateControl	access:public
m_qpParam	../../source/common/quant.h	/^    QpParam            m_qpParam[3];$/;"	m	class:X265_NS::Quant	access:protected
m_qpToEncodedBits	../../source/encoder/ratecontrol.h	/^    double  m_qpToEncodedBits[QP_MAX_MAX + 1];$/;"	m	class:X265_NS::RateControl	access:public
m_qtTempCbf	../../source/encoder/search.h	/^    uint8_t*        m_qtTempCbf[3];$/;"	m	class:X265_NS::Search	access:public
m_qtTempTransformSkipFlag	../../source/encoder/search.h	/^    uint8_t*        m_qtTempTransformSkipFlag[3];$/;"	m	class:X265_NS::Search	access:public
m_quant	../../source/encoder/search.h	/^    Quant           m_quant;$/;"	m	class:X265_NS::Search	access:public
m_quantCoef	../../source/common/scalinglist.h	/^    int32_t* m_quantCoef[NUM_SIZES][NUM_LISTS][NUM_REM];   \/\/ array of quantization matrix coefficient 4x4$/;"	m	class:X265_NS::ScalingList	access:public
m_quantOffsets	../../source/common/frame.h	/^    float*                 m_quantOffsets;       \/\/ points to quantOffsets in x265_picture$/;"	m	class:X265_NS::Frame	access:public
m_range	../../source/encoder/entropy.h	/^    uint32_t      m_range;$/;"	m	class:X265_NS::Entropy	access:public
m_rateControl	../../source/encoder/encoder.h	/^    RateControl*       m_rateControl;$/;"	m	class:X265_NS::Encoder	access:public
m_rateControl	../../source/encoder/slicetype.h	/^    RateControl*  m_rateControl;$/;"	m	class:X265_NS::Lookahead	access:public
m_rateFactor	../../source/common/framedata.h	/^    double         m_rateFactor; \/* calculated based on the Frame QP *\/$/;"	m	class:X265_NS::FrameData	access:public
m_rateFactorConstant	../../source/encoder/ratecontrol.h	/^    double m_rateFactorConstant;$/;"	m	class:X265_NS::RateControl	access:public
m_rateFactorMaxDecrement	../../source/encoder/ratecontrol.h	/^    double m_rateFactorMaxDecrement; \/* don't allow RF below (this value). *\/$/;"	m	class:X265_NS::RateControl	access:public
m_rateFactorMaxIncrement	../../source/encoder/ratecontrol.h	/^    double m_rateFactorMaxIncrement; \/* Don't allow RF above (CRF + this value). *\/$/;"	m	class:X265_NS::RateControl	access:public
m_rateTolerance	../../source/encoder/ratecontrol.h	/^    double m_rateTolerance;$/;"	m	class:X265_NS::RateControl	access:public
m_rcData	../../source/common/frame.h	/^    RcStats*               m_rcData;$/;"	m	class:X265_NS::Frame	access:public
m_rce	../../source/encoder/frameencoder.h	/^    RateControlEntry         m_rce;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_rce2Pass	../../source/encoder/ratecontrol.h	/^    RateControlEntry* m_rce2Pass;$/;"	m	class:X265_NS::RateControl	access:public
m_rdContexts	../../source/encoder/sao.h	/^    SAOContexts m_rdContexts;$/;"	m	class:X265_NS::SAO	access:public
m_rdCost	../../source/encoder/search.h	/^    RDCost          m_rdCost;$/;"	m	class:X265_NS::Search	access:public
m_rdoqLevel	../../source/common/quant.h	/^    int                m_rdoqLevel;$/;"	m	class:X265_NS::Quant	access:protected
m_reconColCount	../../source/common/frame.h	/^    ThreadSafeInteger*     m_reconColCount;      \/\/ count of CTU cols completely reconstructed and extended for motion reference$/;"	m	class:X265_NS::Frame	access:public
m_reconPic	../../source/common/frame.h	/^    PicYuv*                m_reconPic;$/;"	m	class:X265_NS::Frame	access:public
m_reconPic	../../source/common/framedata.h	/^    PicYuv*        m_reconPic;$/;"	m	class:X265_NS::FrameData	access:public
m_reconRowFlag	../../source/common/frame.h	/^    ThreadSafeInteger*     m_reconRowFlag;       \/\/ flag of CTU rows completely reconstructed and extended for motion reference$/;"	m	class:X265_NS::Frame	access:public
m_reconfigure	../../source/encoder/encoder.h	/^    bool               m_reconfigure;      \/\/ Encoder reconfigure in progress$/;"	m	class:X265_NS::Encoder	access:public
m_reconfigure	../../source/encoder/frameencoder.h	/^    bool                     m_reconfigure; \/* reconfigure in progress *\/$/;"	m	class:X265_NS::FrameEncoder	access:public
m_reconfigureRc	../../source/common/frame.h	/^    bool                   m_reconfigureRc;$/;"	m	class:X265_NS::Frame	access:public
m_reconfigureRc	../../source/encoder/encoder.h	/^    bool               m_reconfigureRc;$/;"	m	class:X265_NS::Encoder	access:public
m_recoveryPocCnt	../../source/encoder/sei.h	/^    int  m_recoveryPocCnt;$/;"	m	class:X265_NS::SEIRecoveryPoint	access:public
m_reencode	../../source/encoder/ratecontrol.h	/^    int     m_reencode;$/;"	m	class:X265_NS::RateControl	access:public
m_refDepth	../../source/encoder/sao.h	/^    int         m_refDepth;$/;"	m	class:X265_NS::SAO	access:public
m_refFrameList	../../source/common/slice.h	/^    Frame*      m_refFrameList[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
m_refIdx	../../source/common/cudata.h	/^    int8_t*       m_refIdx[2];        \/\/ array of motion reference indices per list$/;"	m	class:X265_NS::CUData	access:public
m_refIdxLastGOP	../../source/encoder/encoder.h	/^    RefIdxLastGOP      m_refIdxLastGOP;$/;"	m	class:X265_NS::Encoder	access:public
m_refLagPixels	../../source/encoder/search.h	/^    uint32_t        m_refLagPixels;$/;"	m	class:X265_NS::Search	access:public
m_refLagRows	../../source/encoder/frameencoder.h	/^    uint32_t                 m_refLagRows;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_refPOCList	../../source/common/slice.h	/^    int         m_refPOCList[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
m_refReconPicList	../../source/common/slice.h	/^    PicYuv*     m_refReconPicList[2][MAX_NUM_REF + 1];$/;"	m	class:X265_NS::Slice	access:public
m_refTuDepth	../../source/common/cudata.h	/^    int8_t        m_refTuDepth[NUM_TU_DEPTH];   \/\/ TU depth of CU at depths 0, 1 and 2$/;"	m	class:X265_NS::CUData	access:public
m_reorderedPts	../../source/common/frame.h	/^    int64_t                m_reorderedPts;$/;"	m	class:X265_NS::Frame	access:public
m_resiDctCoeff	../../source/common/quant.h	/^    int16_t*           m_resiDctCoeff;$/;"	m	class:X265_NS::Quant	access:protected
m_residualCost	../../source/encoder/ratecontrol.h	/^    int    m_residualCost;$/;"	m	class:X265_NS::RateControl	access:protected
m_residualFrames	../../source/encoder/ratecontrol.h	/^    int    m_residualFrames;$/;"	m	class:X265_NS::RateControl	access:protected
m_residualSumEmergency	../../source/encoder/encoder.h	/^    uint32_t           m_residualSumEmergency[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS];$/;"	m	class:X265_NS::Encoder	access:public
m_reuseDepth	../../source/encoder/analysis.h	/^    uint8_t*             m_reuseDepth;$/;"	m	class:X265_NS::Analysis	access:protected
m_reuseInterDataCTU	../../source/encoder/analysis.h	/^    analysis_inter_data* m_reuseInterDataCTU;$/;"	m	class:X265_NS::Analysis	access:protected
m_reuseMergeFlag	../../source/encoder/analysis.h	/^    uint8_t*             m_reuseMergeFlag;$/;"	m	class:X265_NS::Analysis	access:protected
m_reuseModes	../../source/encoder/analysis.h	/^    uint8_t*             m_reuseModes;$/;"	m	class:X265_NS::Analysis	access:protected
m_reusePartSize	../../source/encoder/analysis.h	/^    uint8_t*             m_reusePartSize;$/;"	m	class:X265_NS::Analysis	access:protected
m_reuseRef	../../source/encoder/analysis.h	/^    int32_t*             m_reuseRef;$/;"	m	class:X265_NS::Analysis	access:protected
m_row	../../source/encoder/framefilter.h	/^        int                 m_row;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_row0WaitTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_row0WaitTime;             \/\/ timestamp when row 0 is allowed to start$/;"	m	class:X265_NS::FrameEncoder	access:public
m_rowAddr	../../source/encoder/framefilter.h	/^        uint32_t            m_rowAddr;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_rowHeight	../../source/encoder/framefilter.h	/^        uint32_t            m_rowHeight;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_rowStat	../../source/common/framedata.h	/^    RCStatRow*     m_rowStat;$/;"	m	class:X265_NS::FrameData	access:public
m_rows	../../source/encoder/frameencoder.h	/^    CTURow*                  m_rows;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_rps	../../source/common/slice.h	/^    RPS         m_rps;$/;"	m	class:X265_NS::Slice	access:public
m_rpsIdx	../../source/common/slice.h	/^    int         m_rpsIdx;$/;"	m	class:X265_NS::Slice	access:public
m_rpsInSpsCount	../../source/encoder/encoder.h	/^    int                m_rpsInSpsCount;$/;"	m	class:X265_NS::Encoder	access:public
m_rpsInSpsLock	../../source/encoder/encoder.h	/^    Lock               m_rpsInSpsLock;$/;"	m	class:X265_NS::Encoder	access:public
m_rqt	../../source/encoder/search.h	/^    RQTData         m_rqt[NUM_FULL_DEPTH];$/;"	m	class:X265_NS::Search	access:public
m_sLFaseFlag	../../source/common/slice.h	/^    bool        m_sLFaseFlag;      \/\/ loop filter boundary flag$/;"	m	class:X265_NS::Slice	access:public
m_sao	../../source/encoder/framefilter.h	/^        SAO                 m_sao;$/;"	m	class:X265_NS::FrameFilter::ParallelFilter	access:public
m_saoParam	../../source/common/framedata.h	/^    SAOParam*      m_saoParam;$/;"	m	class:X265_NS::FrameData	access:public
m_saoRowDelay	../../source/encoder/framefilter.h	/^    int           m_saoRowDelay;$/;"	m	class:X265_NS::FrameFilter	access:public
m_satdCostWindow	../../source/encoder/ratecontrol.h	/^    int64_t m_satdCostWindow[50];$/;"	m	class:X265_NS::RateControl	access:public
m_scalingList	../../source/common/quant.h	/^    const ScalingList* m_scalingList;$/;"	m	class:X265_NS::Quant	access:protected
m_scalingList	../../source/encoder/encoder.h	/^    ScalingList        m_scalingList;      \/\/ quantization matrix information$/;"	m	class:X265_NS::Encoder	access:public
m_scalingListCoef	../../source/common/scalinglist.h	/^    int32_t* m_scalingListCoef[NUM_SIZES][NUM_LISTS]; \/\/ quantization matrix$/;"	m	class:X265_NS::ScalingList	access:public
m_scalingListDC	../../source/common/scalinglist.h	/^    int32_t  m_scalingListDC[NUM_SIZES][NUM_LISTS];   \/\/ the DC value of the matrix coefficient for 16x16$/;"	m	class:X265_NS::ScalingList	access:public
m_scratch	../../source/encoder/slicetype.h	/^    int*          m_scratch;         \/\/ temp buffer for cutree propagate$/;"	m	class:X265_NS::Lookahead	access:public
m_seiReconPictureDigest	../../source/encoder/frameencoder.h	/^    SEIDecodedPictureHash    m_seiReconPictureDigest;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_selfContainedCvsFlag	../../source/encoder/sei.h	/^    bool m_selfContainedCvsFlag;$/;"	m	class:X265_NS::SEIActiveParameterSets	access:public
m_shortTermCplxCount	../../source/encoder/ratecontrol.h	/^    double  m_shortTermCplxCount;$/;"	m	class:X265_NS::RateControl	access:public
m_shortTermCplxSum	../../source/encoder/ratecontrol.h	/^    double  m_shortTermCplxSum;$/;"	m	class:X265_NS::RateControl	access:public
m_singleFrameVbv	../../source/encoder/ratecontrol.h	/^    bool   m_singleFrameVbv;$/;"	m	class:X265_NS::RateControl	access:public
m_size	../../source/common/shortyuv.h	/^    uint32_t m_size;$/;"	m	class:X265_NS::ShortYuv	access:public
m_size	../../source/common/yuv.h	/^    uint32_t m_size;$/;"	m	class:X265_NS::Yuv	access:public
m_sleepBitmap	../../source/common/threadpool.h	/^    sleepbitmap_t m_sleepBitmap;$/;"	m	class:X265_NS::ThreadPool	access:public
m_slice	../../source/common/cudata.h	/^    const Slice*  m_slice;$/;"	m	class:X265_NS::CUData	access:public
m_slice	../../source/common/framedata.h	/^    Slice*         m_slice;$/;"	m	class:X265_NS::FrameData	access:public
m_slice	../../source/encoder/search.h	/^    const Slice*    m_slice;$/;"	m	class:X265_NS::Search	access:public
m_slice	../../source/encoder/slicetype.h	/^    } m_slice[MAX_COOP_SLICES];$/;"	m	class:X265_NS::CostEstimateGroup	typeref:struct:X265_NS::CostEstimateGroup::Slice	access:public
m_sliceAddrBits	../../source/encoder/frameencoder.h	/^    uint16_t                 m_sliceAddrBits;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_sliceBaseRow	../../source/encoder/frameencoder.h	/^    uint32_t*                m_sliceBaseRow;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_sliceGroupSize	../../source/encoder/frameencoder.h	/^    uint16_t                 m_sliceGroupSize;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_sliceMaxY	../../source/encoder/search.h	/^    int16_t         m_sliceMaxY;$/;"	m	class:X265_NS::Search	access:public
m_sliceMinY	../../source/encoder/search.h	/^    int16_t         m_sliceMinY;$/;"	m	class:X265_NS::Search	access:public
m_sliceQp	../../source/common/slice.h	/^    int         m_sliceQp;$/;"	m	class:X265_NS::Slice	access:public
m_sliceQpLock	../../source/encoder/encoder.h	/^    Lock               m_sliceQpLock;$/;"	m	class:X265_NS::Encoder	access:public
m_sliceRefIdxLock	../../source/encoder/encoder.h	/^    Lock               m_sliceRefIdxLock;$/;"	m	class:X265_NS::Encoder	access:public
m_sliceType	../../source/common/slice.h	/^    SliceType   m_sliceType;$/;"	m	class:X265_NS::Slice	access:public
m_sliceType	../../source/common/threadpool.h	/^    int           m_sliceType;$/;"	m	class:X265_NS::JobProvider	access:public
m_sliceType	../../source/encoder/ratecontrol.h	/^    SliceType   m_sliceType;     \/* Current frame type *\/$/;"	m	class:X265_NS::RateControl	access:public
m_sliceTypeBusy	../../source/encoder/slicetype.h	/^    bool          m_sliceTypeBusy;$/;"	m	class:X265_NS::Lookahead	access:public
m_slicetypeDecideElapsedTime	../../source/encoder/slicetype.h	/^    int64_t       m_slicetypeDecideElapsedTime;$/;"	m	class:X265_NS::Lookahead	access:public
m_slicetypeWaitTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_slicetypeWaitTime;        \/\/ total elapsed time waiting for decided frame$/;"	m	class:X265_NS::FrameEncoder	access:public
m_sliderPos	../../source/encoder/ratecontrol.h	/^    int     m_sliderPos;$/;"	m	class:X265_NS::RateControl	access:public
m_sourceScanType	../../source/encoder/sei.h	/^    uint32_t  m_sourceScanType;$/;"	m	class:X265_NS::SEIPictureTiming	access:public
m_splitRefIdx	../../source/encoder/analysis.h	/^    uint32_t             m_splitRefIdx[4];$/;"	m	class:X265_NS::Analysis	access:protected
m_sps	../../source/common/slice.h	/^    const SPS*  m_sps;$/;"	m	class:X265_NS::Slice	access:public
m_sps	../../source/encoder/encoder.h	/^    SPS                m_sps;$/;"	m	class:X265_NS::Encoder	access:public
m_spsrps	../../source/common/framedata.h	/^    RPS*           m_spsrps;$/;"	m	class:X265_NS::FrameData	access:public
m_spsrpsIdx	../../source/common/framedata.h	/^    int            m_spsrpsIdx;$/;"	m	class:X265_NS::FrameData	access:public
m_ssim	../../source/encoder/frameencoder.h	/^    double                   m_ssim;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_ssimBuf	../../source/encoder/framefilter.h	/^    void*         m_ssimBuf;        \/* Temp storage for ssim computation *\/$/;"	m	class:X265_NS::FrameFilter	access:public
m_ssimCnt	../../source/encoder/frameencoder.h	/^    uint32_t                 m_ssimCnt;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_ssimRd	../../source/encoder/rdcost.h	/^    uint32_t  m_ssimRd;$/;"	m	class:X265_NS::RDCost	access:public
m_stallStartTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_stallStartTime;           \/\/ timestamp when worker count becomes 0$/;"	m	class:X265_NS::FrameEncoder	access:public
m_start	../../source/common/piclist.h	/^    Frame*   m_start;$/;"	m	class:X265_NS::PicList	access:protected
m_start	../../source/encoder/ratecontrol.h	/^    int     m_start;$/;"	m	class:X265_NS::RateControl	access:public
m_startCompressTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_startCompressTime;        \/\/ timestamp when frame encoder is given a frame$/;"	m	class:X265_NS::FrameEncoder	access:public
m_startEndOrder	../../source/encoder/ratecontrol.h	/^    ThreadSafeInteger m_startEndOrder;$/;"	m	class:X265_NS::RateControl	access:public
m_statFileOut	../../source/encoder/ratecontrol.h	/^    FILE*   m_statFileOut;$/;"	m	class:X265_NS::RateControl	access:public
m_state	../../source/common/md5.h	/^    MD5Context m_state;$/;"	m	class:X265_NS::MD5	access:private
m_state	../../source/encoder/frameencoder.h	/^    MD5Context               m_state[3];$/;"	m	class:X265_NS::FrameEncoder	access:public
m_stationCuCost	../../source/encoder/slicetype.h	/^    uint64_t      m_stationCuCost;$/;"	m	class:X265_NS::Lookahead	access:public
m_stationCuNum	../../source/encoder/slicetype.h	/^    uint64_t      m_stationCuNum;$/;"	m	class:X265_NS::Lookahead	access:public
m_stats	../../source/encoder/search.h	/^    CUStats         m_stats[X265_MAX_FRAME_THREADS];$/;"	m	class:X265_NS::Search	access:public
m_stride	../../source/common/picyuv.h	/^    intptr_t m_stride;$/;"	m	class:X265_NS::PicYuv	access:public
m_strideC	../../source/common/picyuv.h	/^    intptr_t m_strideC;$/;"	m	class:X265_NS::PicYuv	access:public
m_subPartCopy	../../source/common/cudata.h	/^    cucopy_t      m_subPartCopy;      \/\/ pointer to function that copies m_numPartitions\/4 elements, may be NULL$/;"	m	class:X265_NS::CUData	access:public
m_subPartSet	../../source/common/cudata.h	/^    cubcast_t     m_subPartSet;       \/\/ pointer to function that sets m_numPartitions\/4 elements, may be NULL$/;"	m	class:X265_NS::CUData	access:public
m_substreamSizes	../../source/encoder/frameencoder.h	/^    uint32_t*                m_substreamSizes;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_threadActive	../../source/encoder/frameencoder.h	/^    volatile bool            m_threadActive;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_threadPool	../../source/encoder/encoder.h	/^    ThreadPool*        m_threadPool;$/;"	m	class:X265_NS::Encoder	access:public
m_tld	../../source/encoder/frameencoder.h	/^    ThreadLocalData*         m_tld; \/* for --no-wpp *\/$/;"	m	class:X265_NS::FrameEncoder	access:public
m_tld	../../source/encoder/search.h	/^    ThreadLocalData* m_tld;$/;"	m	class:X265_NS::Search	access:protected
m_tld	../../source/encoder/slicetype.h	/^    LookaheadTLD* m_tld;$/;"	m	class:X265_NS::Lookahead	access:public
m_tmpL1	../../source/encoder/sao.h	/^    pixel*      m_tmpL1[3];$/;"	m	class:X265_NS::SAO	access:protected
m_tmpL2	../../source/encoder/sao.h	/^    pixel*      m_tmpL2[3];$/;"	m	class:X265_NS::SAO	access:protected
m_tmpU	../../source/encoder/sao.h	/^    pixel*      m_tmpU[3];$/;"	m	class:X265_NS::SAO	access:protected
m_top	../../source/encoder/frameencoder.h	/^    Encoder*                 m_top;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_totalActiveWorkerCount	../../source/encoder/frameencoder.h	/^    volatile int             m_totalActiveWorkerCount;   \/\/ sum of m_activeWorkerCount sampled at end of each CTU$/;"	m	class:X265_NS::FrameEncoder	access:public
m_totalBits	../../source/encoder/ratecontrol.h	/^    int64_t m_totalBits;        \/* total bits used for already encoded frames (after ammortization) *\/$/;"	m	class:X265_NS::RateControl	access:public
m_totalCuNum	../../source/encoder/slicetype.h	/^    uint64_t      m_totalCuNum;$/;"	m	class:X265_NS::Lookahead	access:public
m_totalNoWorkerTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_totalNoWorkerTime;        \/\/ total elapsed time without any active worker threads$/;"	m	class:X265_NS::FrameEncoder	access:public
m_totalQp	../../source/encoder/encoder.h	/^    double        m_totalQp;$/;"	m	struct:X265_NS::EncStats	access:public
m_totalWorkerElapsedTime	../../source/encoder/frameencoder.h	/^    int64_t                  m_totalWorkerElapsedTime;   \/\/ total elapsed time spent by worker threads processing CTUs$/;"	m	class:X265_NS::FrameEncoder	access:public
m_tqBypass	../../source/common/cudata.h	/^    uint8_t*      m_tqBypass;         \/\/ array of CU lossless flags$/;"	m	class:X265_NS::CUData	access:public
m_trCoeff	../../source/common/cudata.h	/^    coeff_t*      m_trCoeff[3];       \/\/ transformed coefficient buffer per plane$/;"	m	class:X265_NS::CUData	access:public
m_transformSkip	../../source/common/cudata.h	/^    uint8_t*      m_transformSkip[3]; \/\/ array of transform skipping flags per plane$/;"	m	class:X265_NS::CUData	access:public
m_tsCoeff	../../source/encoder/search.h	/^    coeff_t*        m_tsCoeff;        \/* transform skip coeff 32x32 *\/$/;"	m	class:X265_NS::Search	access:public
m_tsRecon	../../source/encoder/search.h	/^    pixel*          m_tsRecon;        \/* transform skip reconstructed pixels 32x32 *\/$/;"	m	class:X265_NS::Search	access:public
m_tsResidual	../../source/encoder/search.h	/^    int16_t*        m_tsResidual;     \/* transform skip residual 32x32 *\/$/;"	m	class:X265_NS::Search	access:public
m_tuDepth	../../source/common/cudata.h	/^    uint8_t*      m_tuDepth;          \/\/ array of transform indices$/;"	m	class:X265_NS::CUData	access:public
m_userData	../../source/common/frame.h	/^    void*                  m_userData;           \/\/ user provided pointer passed in with this picture$/;"	m	class:X265_NS::Frame	access:public
m_userData	../../source/encoder/sei.h	/^    uint8_t *m_userData;$/;"	m	class:X265_NS::SEIuserDataUnregistered	access:public
m_userSEI	../../source/common/frame.h	/^    x265_sei               m_userSEI;$/;"	m	class:X265_NS::Frame	access:public
m_uuid_iso_iec_11578	../../source/encoder/sei.cpp	/^const uint8_t SEIuserDataUnregistered::m_uuid_iso_iec_11578[16] = {$/;"	m	class:SEIuserDataUnregistered	file:
m_uuid_iso_iec_11578	../../source/encoder/sei.h	/^    static const uint8_t m_uuid_iso_iec_11578[16];$/;"	m	class:X265_NS::SEIuserDataUnregistered	access:public
m_vChromaShift	../../source/common/cudata.h	/^    uint32_t      m_vChromaShift;$/;"	m	class:X265_NS::CUData	access:public
m_vChromaShift	../../source/common/picyuv.h	/^    uint32_t m_vChromaShift;$/;"	m	class:X265_NS::PicYuv	access:public
m_vChromaShift	../../source/common/predict.h	/^    int       m_vChromaShift;$/;"	m	class:X265_NS::Predict	access:public
m_vChromaShift	../../source/common/shortyuv.h	/^    int      m_vChromaShift;$/;"	m	class:X265_NS::ShortYuv	access:public
m_vChromaShift	../../source/common/yuv.h	/^    int      m_vChromaShift;$/;"	m	class:X265_NS::Yuv	access:public
m_vChromaShift	../../source/encoder/framefilter.h	/^    int           m_vChromaShift;$/;"	m	class:X265_NS::FrameFilter	access:public
m_vChromaShift	../../source/encoder/sao.h	/^    int         m_vChromaShift;$/;"	m	class:X265_NS::SAO	access:protected
m_val	../../source/common/threading.h	/^    int                m_val;$/;"	m	class:X265_NS::ThreadSafeInteger	access:protected
m_valid	../../source/encoder/entropy.h	/^    bool m_valid;$/;"	m	class:X265_NS::Entropy	access:public
m_vbvAffected	../../source/common/cudata.h	/^    bool          m_vbvAffected;$/;"	m	class:X265_NS::CUData	access:public
m_vbvMaxRate	../../source/encoder/ratecontrol.h	/^    double m_vbvMaxRate;       \/* in kbps *\/$/;"	m	class:X265_NS::RateControl	access:public
m_vbvResetTriggerRow	../../source/encoder/frameencoder.h	/^    volatile int             m_vbvResetTriggerRow;$/;"	m	class:X265_NS::FrameEncoder	access:public
m_vps	../../source/encoder/encoder.h	/^    VPS                m_vps;$/;"	m	class:X265_NS::Encoder	access:public
m_wakeEvent	../../source/common/threadpool.cpp	/^    Event        m_wakeEvent;$/;"	m	class:X265_NS::WorkerThread	file:	access:private
m_wantedBitsWindow	../../source/encoder/ratecontrol.h	/^    double  m_wantedBitsWindow;  \/* target bitrate * window *\/$/;"	m	class:X265_NS::RateControl	access:public
m_weightPredTable	../../source/common/slice.h	/^    WeightParam m_weightPredTable[2][MAX_NUM_REF][3]; \/\/ [list][refIdx][0:Y, 1:U, 2:V]$/;"	m	class:X265_NS::Slice	access:public
m_workers	../../source/common/threadpool.h	/^    WorkerThread* m_workers;$/;"	m	class:X265_NS::ThreadPool	access:public
main	../../source/compat/getopt/getopt.c	/^main (argc, argv)$/;"	f
markInvalid	../../source/encoder/entropy.h	/^    void markInvalid()                 { m_valid = false; }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
markValid	../../source/encoder/entropy.h	/^    void markValid()                   { m_valid = true; }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
markValid	../../source/encoder/entropy.h	/^    void markValid()                   { }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
mask_10	../../source/common/x86/pixel-a.asm	/^mask_10:   times 4 dw 0, -1$/;"	l
mask_1100	../../source/common/x86/pixel-a.asm	/^mask_1100: times 2 dd 0, -1$/;"	l
mask_ff	../../source/common/x86/pixel-util8.asm	/^mask_ff:                times 16 db 0xff$/;"	l
master	../../source/encoder/analysis.h	/^        Analysis&     master;$/;"	m	class:X265_NS::Analysis::PMODE	access:public
master	../../source/encoder/frameencoder.h	/^        FrameEncoder& master;$/;"	m	class:X265_NS::FrameEncoder::WeightAnalysis	access:public
master	../../source/encoder/search.h	/^        Search&       master;$/;"	m	class:X265_NS::Search::PME	access:public
matrixCoefficients	../../source/common/slice.h	/^    int        matrixCoefficients;$/;"	m	struct:X265_NS::VUI	access:public
maxAMPDepth	../../source/common/slice.h	/^    uint32_t maxAMPDepth;$/;"	m	struct:X265_NS::SPS	access:public
maxBitrateHigh	../../source/encoder/level.cpp	/^    uint32_t maxBitrateHigh;$/;"	m	struct:X265_NS::__anon13	file:	access:public
maxBitrateMain	../../source/encoder/level.cpp	/^    uint32_t maxBitrateMain;$/;"	m	struct:X265_NS::__anon13	file:	access:public
maxBlocksInCol	../../source/common/lowres.h	/^    uint32_t  maxBlocksInCol;$/;"	m	struct:X265_NS::Lowres	access:public
maxBlocksInColFullRes	../../source/common/lowres.h	/^    uint32_t  maxBlocksInColFullRes;$/;"	m	struct:X265_NS::Lowres	access:public
maxBlocksInRow	../../source/common/lowres.h	/^    uint32_t  maxBlocksInRow;$/;"	m	struct:X265_NS::Lowres	access:public
maxBlocksInRowFullRes	../../source/common/lowres.h	/^    uint32_t  maxBlocksInRowFullRes;$/;"	m	struct:X265_NS::Lowres	access:public
maxCpbSizeHigh	../../source/encoder/level.cpp	/^    uint32_t maxCpbSizeHigh;$/;"	m	struct:X265_NS::__anon13	file:	access:public
maxCpbSizeMain	../../source/encoder/level.cpp	/^    uint32_t maxCpbSizeMain;$/;"	m	struct:X265_NS::__anon13	file:	access:public
maxCuDQPDepth	../../source/common/slice.h	/^    uint32_t maxCuDQPDepth;$/;"	m	struct:X265_NS::PPS	access:public
maxDecPicBuffering	../../source/common/slice.h	/^    uint32_t         maxDecPicBuffering;$/;"	m	struct:X265_NS::VPS	access:public
maxDecPicBuffering	../../source/common/slice.h	/^    uint32_t maxDecPicBuffering; \/\/ these are dups of VPS values$/;"	m	struct:X265_NS::SPS	access:public
maxDisplayMasteringLuminance	../../source/encoder/sei.h	/^    uint32_t maxDisplayMasteringLuminance;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
maxLatencyIncrease	../../source/common/slice.h	/^    uint32_t         maxLatencyIncrease;$/;"	m	struct:X265_NS::VPS	access:public
maxLatencyIncrease	../../source/common/slice.h	/^    uint32_t maxLatencyIncrease;$/;"	m	struct:X265_NS::SPS	access:public
maxLumaSamples	../../source/encoder/level.cpp	/^    uint32_t maxLumaSamples;$/;"	m	struct:X265_NS::__anon13	file:	access:public
maxLumaSamplesPerSecond	../../source/encoder/level.cpp	/^    uint32_t maxLumaSamplesPerSecond;$/;"	m	struct:X265_NS::__anon13	file:	access:public
maxLumaSrForLevel	../../source/common/slice.h	/^    uint32_t maxLumaSrForLevel;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
maxTempSubLayers	../../source/common/slice.h	/^    uint32_t         maxTempSubLayers;$/;"	m	struct:X265_NS::VPS	access:public
maxTempSubLayers	../../source/common/slice.h	/^    uint32_t maxTempSubLayers;   \/\/ max number of Temporal Sub layers$/;"	m	struct:X265_NS::SPS	access:public
max_bit_depth	../../source/common/version.cpp	/^const int PFX(max_bit_depth) = 10;$/;"	v
max_bit_depth	../../source/common/version.cpp	/^const int PFX(max_bit_depth) = 12;$/;"	v
max_bit_depth	../../source/common/version.cpp	/^const int PFX(max_bit_depth) = 8;$/;"	v
max_content_light_level	../../source/encoder/sei.h	/^    uint16_t max_content_light_level;$/;"	m	class:X265_NS::SEIContentLightLevel	access:public
max_pic_average_light_level	../../source/encoder/sei.h	/^    uint16_t max_pic_average_light_level;$/;"	m	class:X265_NS::SEIContentLightLevel	access:public
mcChroma	../../source/encoder/weightPrediction.cpp	/^void mcChroma(pixel *      mcout,$/;"	f	namespace:__anon22	signature:(pixel * mcout, pixel * src, intptr_t stride, const MV * mvs, const Cache& cache, int height, int width)
mcLuma	../../source/encoder/weightPrediction.cpp	/^void mcLuma(pixel* mcout, Lowres& ref, const MV * mvs)$/;"	f	namespace:__anon22	signature:(pixel* mcout, Lowres& ref, const MV * mvs)
md5_block	../../source/common/picyuv.cpp	/^static void md5_block(MD5Context& md5, const pixel* plane, uint32_t n)$/;"	f	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t n)
md5_plane	../../source/common/picyuv.cpp	/^static void md5_plane(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)
me	../../source/encoder/slicetype.h	/^    MotionEstimate  me;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
mergeEstimation	../../source/encoder/search.cpp	/^uint32_t Search::mergeEstimation(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m)$/;"	f	class:Search	signature:(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m)
mergeEstimation	../../source/encoder/search.h	/^    uint32_t mergeEstimation(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, const CUGeom& cuGeom, const PredictionUnit& pu, int puIdx, MergeData& m)
mergeFlag	../../source/common/framedata.h	/^    uint8_t*    mergeFlag;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
mergeMode	../../source/common/common.h	/^    SaoMergeMode mergeMode;$/;"	m	struct:X265_NS::SaoCtuParam	access:public
minCompressionRatio	../../source/encoder/level.cpp	/^    uint32_t minCompressionRatio;$/;"	m	struct:X265_NS::__anon13	file:	access:public
minCrForLevel	../../source/common/slice.h	/^    uint32_t minCrForLevel;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
minDisplayMasteringLuminance	../../source/encoder/sei.h	/^    uint32_t minDisplayMasteringLuminance;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
min_s16v	../../source/common/ppc/intrapred_altivec.cpp	/^vec_s16_t min_s16v = (vec_s16_t){255, 255, 255, 255, 255, 255, 255, 255}; $/;"	m	namespace:X265_NS	file:
miniGopBCost	../../source/common/lowres.h	/^    int64_t   miniGopBCost[MAX_TLAYER];$/;"	m	struct:X265_NS::Lowres	access:public
miniGopBCostAq	../../source/common/lowres.h	/^    int64_t   miniGopBCostAq[MAX_TLAYER];$/;"	m	struct:X265_NS::Lowres	access:public
miniGopNum	../../source/common/lowres.h	/^    int       miniGopNum;$/;"	m	struct:X265_NS::Lowres	access:public
miniGopPCost	../../source/common/lowres.h	/^    int64_t   miniGopPCost;$/;"	m	struct:X265_NS::Lowres	access:public
miniGopPCostAq	../../source/common/lowres.h	/^    int64_t   miniGopPCostAq;$/;"	m	struct:X265_NS::Lowres	access:public
miscBits	../../source/common/frame.h	/^    int      miscBits;$/;"	m	struct:X265_NS::RcStats	access:public
miscBits	../../source/common/framedata.h	/^    int         miscBits;$/;"	m	struct:X265_NS::FrameStats	access:public
miscBits	../../source/encoder/ratecontrol.h	/^    int      miscBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
miscBitsExp	../../source/encoder/ratecontrol.h	/^const double miscBitsExp[5]     = {-0.0689, 0.2030, 0.7293, 0.9523, 0.9259};$/;"	m	namespace:X265_NS
mmx	../../source/common/x86/pixel.h	/^DECL_PIXELS(mmx);$/;"	v
mmx2	../../source/common/x86/pixel.h	/^DECL_PIXELS(mmx2);$/;"	v
mod6m1	../../source/encoder/motion.cpp	/^const uint8_t mod6m1[8] = { 5, 0, 1, 2, 3, 4, 5, 0 };  \/* (x-1)%6 *\/$/;"	m	namespace:__anon23	file:
mode	../../source/encoder/search.h	/^        Mode&         mode;$/;"	m	class:X265_NS::Search::PME	access:public
modes	../../source/common/framedata.h	/^    uint8_t*      modes;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
modes	../../source/common/framedata.h	/^    uint8_t*    modes;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
modes	../../source/common/framedata.h	/^    uint8_t*  modes;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
modes	../../source/encoder/analysis.h	/^        int           modes[MAX_PRED_TYPES];$/;"	m	class:X265_NS::Analysis::PMODE	access:public
motionCompensation	../../source/common/predict.cpp	/^void Predict::motionCompensation(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)$/;"	f	class:Predict	signature:(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
motionCompensation	../../source/common/predict.h	/^    void motionCompensation(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma);$/;"	p	class:X265_NS::Predict	access:public	signature:(const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
motionCompensationIterate	../../source/common/predict.cpp	/^void Predict::motionCompensationIterate(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)$/;"	f	class:Predict	signature:(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
motionCompensationIterate	../../source/common/predict.h	/^    void motionCompensationIterate(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma);$/;"	p	class:X265_NS::Predict	access:public	signature:(uint32_t &listFlag, const CUData& cu, const PredictionUnit& pu, Yuv& predYuv, bool bLuma, bool bChroma)
motionEstimate	../../source/encoder/motion.cpp	/^int MotionEstimate::motionEstimate(ReferencePlanes *ref,$/;"	f	class:MotionEstimate	signature:(ReferencePlanes *ref, const MV & mvmin, const MV & mvmax, const MV & qmvp, int numCandidates, const MV * mvc, int merange, MV & outQMv, uint32_t maxSlices, pixel * srcReferencePlane)
motionEstimate	../../source/encoder/motion.h	/^    int motionEstimate(ReferencePlanes* ref, const MV & mvmin, const MV & mvmax, const MV & qmvp, int numCandidates, const MV * mvc, int merange, MV & outQMv, uint32_t maxSlices, pixel *srcReferencePlane = 0);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(ReferencePlanes* ref, const MV & mvmin, const MV & mvmax, const MV & qmvp, int numCandidates, const MV * mvc, int merange, MV & outQMv, uint32_t maxSlices, pixel *srcReferencePlane = 0)
motionEstimationElapsedTime	../../source/encoder/search.h	/^    int64_t  motionEstimationElapsedTime;       \/\/ elapsed worker time in predInterSearch()$/;"	m	struct:X265_NS::CUStats	access:public
mov	../../source/common/x86/blockcopy8.asm	/^mov             r4d,       %2$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov             r4d,     %2$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov             r4d,     %2\/2$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov             r4d,     %2\/4$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov         r4d,    %2\/8$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov        [r0 + 2 * r1], r4w$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov        [r0], r4w$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov        r3d,           %2\/8$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov        r4d,     %2\/2$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov        r4d,     %2\/4$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov    r4d,      %2\/4$/;"	l
mov	../../source/common/x86/blockcopy8.asm	/^mov    r6d, 24\/8$/;"	l
mova	../../source/common/x86/intrapred8_allangs.asm	/^mova          m2,        [pw_1024]$/;"	l
mova	../../source/common/x86/intrapred8_allangs.asm	/^mova          m7,        [r3 + 20 * 16]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd         xm0, r2d$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + 2 * r1], m0$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + 2 * r1], m2$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + 2 * r1], m4$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + 2 * r1], m6$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + r1],     m0$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + r1],     m2$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + r1],     m4$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + r1],     m6$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0 + r1], m0$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0],          m0$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       [r0],      m0$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0,            [r2 + 2 * r3]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0,            [r2 + r3]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0,            [r2]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0,            r2d$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0,         [r2 + r3]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0,         [r2]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0, [r2 + 2 * r3]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m0, [r2]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       m1, [r2 + r3]$/;"	l
movd	../../source/common/x86/blockcopy8.asm	/^movd       r4d, m0$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 100], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 104], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 108], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 112], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 116], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 120], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 124], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 144], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 148], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 152], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 156], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 160], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 164], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 168], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 16], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 172], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 176], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 180], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 184], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 188], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 192], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 196], m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 200], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 204], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 208], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 20], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 212], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 216], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 220], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 224], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 228], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 232], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 236], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 240],  m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 244], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 248], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 24], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 252], m1$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 256], m1$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 260], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 264], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 268], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 272], m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 276], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 280], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 284], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 288], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 28], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 292], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 296], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 300], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 304], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 308], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 312], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 316], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 320], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 324], m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 328], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 32], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 332], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 336], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 340], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 344], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 348], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 352], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 356], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 360], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 364], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 368], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 36], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 372], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 376], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 380], m1$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 400], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 404], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 408], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 40], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 412], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 416], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 420], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 424], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 428], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 432], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 436], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 440], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 444], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 448], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 44], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 452], m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 456], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 460], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 464], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 468], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 472], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 476], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 480], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 484], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 488], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 48], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 492], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 496], m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 500], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 504], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 508], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 52], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 56], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 60], m4$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 64], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 68], m6$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 72], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 76], m3$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 80], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 84], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 88], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 92], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd          [r0 + 96], m5$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd         m3,         [r1 + 9]$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd         m5,         [r1 + 9]$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd         m7,         [r1 + 1]$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 12],  m1$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 4],   m1$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 512],     m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 516],     m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 520],     m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 524],     m7$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0 + 8],   m1$/;"	l
movd	../../source/common/x86/intrapred8_allangs.asm	/^movd      [r0],       m0$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       [r0 + 2 * r1], m0$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       [r0 + r1],     m0$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       [r0 + r1],  m0$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       [r0],          m0$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       [r0],       m0$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,            [r2 + 2 * r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,            [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,            [r2]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,         [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,         [r2]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,        [r2]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,      [r2]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m0,     [r2]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m1,        [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m1,      [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m1,     [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m2,      [r2 + 2 * r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m2,     [r2 + 2 * r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m3,      [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m3,     [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m4,      [r2 + 2 * r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m5,      [r2 + r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m6,      [r2 + 2 * r3]$/;"	l
movh	../../source/common/x86/blockcopy8.asm	/^movh       m7,      [r2 + r3]$/;"	l
movh	../../source/common/x86/intrapred8_allangs.asm	/^movh          m1,         [r1]$/;"	l
movh	../../source/common/x86/intrapred8_allangs.asm	/^movh         m1,         [r1 + 1]$/;"	l
movh	../../source/common/x86/intrapred8_allangs.asm	/^movh      m0,         [r1 + 10]$/;"	l
movh	../../source/common/x86/intrapred8_allangs.asm	/^movh      m7,             [r1 + 2]$/;"	l
movhps	../../source/common/x86/blockcopy8.asm	/^movhps     [r0 + r1],     m0$/;"	l
movhps	../../source/common/x86/blockcopy8.asm	/^movhps     [r0 + r1],     m2$/;"	l
movhps	../../source/common/x86/blockcopy8.asm	/^movhps     [r0 + r1],     m4$/;"	l
movhps	../../source/common/x86/blockcopy8.asm	/^movhps     [r0 + r1],     m6$/;"	l
movhps	../../source/common/x86/blockcopy8.asm	/^movhps     [r0 + r1],  m0$/;"	l
movingAvgSum	../../source/encoder/ratecontrol.h	/^    double  movingAvgSum;$/;"	m	struct:X265_NS::RateControlEntry	access:public
movlps	../../source/common/x86/blockcopy8.asm	/^movlps     [r0 + 2 * r1], m2$/;"	l
movlps	../../source/common/x86/blockcopy8.asm	/^movlps     [r0 + 2 * r1], m4$/;"	l
movlps	../../source/common/x86/blockcopy8.asm	/^movlps     [r0 + 2 * r1], m6$/;"	l
movlps	../../source/common/x86/blockcopy8.asm	/^movlps     [r0],          m0$/;"	l
movlps	../../source/common/x86/blockcopy8.asm	/^movlps     [r0],       m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 16],          m1$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 16],      m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1 + 16], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1 + 16], m1$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1 + 32], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1],      m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1],      m2$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1],  m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 2 * r1], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 32], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 4 * r1 + 16], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + 4 * r1],      m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1 + 16],     m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1 + 16],     m1$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1 + 16], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1 + 32], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1],          m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1],          m2$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1],      m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1],     m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1],  m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r1], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r3 + 16],     m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r3 + 32], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r3],          m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r3],     m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0 + r3], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0],               m2$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0],           m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0],          m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0],       m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       [r0], m0$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m0,         [r2]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m0,      [r2]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m0,     [r2]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m1,                 [r2 + 2 * r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m1,                 [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m1,                 [r2]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m1,         [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m1,      [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m1,     [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m2,      [r2 + 2 * r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m2,     [r2 + 2 * r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m3,      [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m3,     [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m4,      [r2 + 2 * r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m5,      [r2 + r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m6,      [r2 + 2 * r3]$/;"	l
movu	../../source/common/x86/blockcopy8.asm	/^movu       m7,      [r2 + r3]$/;"	l
movu	../../source/common/x86/intrapred8_allangs.asm	/^movu         [r0 + 128], m4$/;"	l
movu	../../source/common/x86/intrapred8_allangs.asm	/^movu         [r0 + 384], m3$/;"	l
multiply_accumulate_pixel_coeff	../../source/common/ppc/ipfilter_altivec.cpp	57;"	d	file:
multiply_accumulate_sp_pixel_coeff	../../source/common/ppc/ipfilter_altivec.cpp	421;"	d	file:
multiply_pixel_coeff	../../source/common/ppc/ipfilter_altivec.cpp	33;"	d	file:
multiply_sp_pixel_coeff	../../source/common/ppc/ipfilter_altivec.cpp	403;"	d	file:
mv	../../source/common/cudata.h	/^    MV  mv;$/;"	m	struct:X265_NS::MVField	access:public
mv	../../source/common/cudata.h	/^    MV mv[2];$/;"	m	struct:X265_NS::InterNeighbourMV	access:public
mv	../../source/common/framedata.h	/^    MV*         mv[2];$/;"	m	struct:X265_NS::analysis_inter_data	access:public
mv	../../source/encoder/search.h	/^    MV       mv;$/;"	m	struct:X265_NS::MotionData	access:public
mvBits	../../source/common/frame.h	/^    int      mvBits;$/;"	m	struct:X265_NS::RcStats	access:public
mvBits	../../source/common/framedata.h	/^    int         mvBits;    \/* MV bits (MV+Ref+Block Type) *\/$/;"	m	struct:X265_NS::FrameStats	access:public
mvBits	../../source/encoder/ratecontrol.h	/^    int      mvBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
mvBits	../../source/encoder/search.h	/^    uint32_t    mvBits;     \/\/ Mv bits + Ref + block type (or intra mode)$/;"	m	struct:X265_NS::Mode	access:public
mvBitsExp	../../source/encoder/ratecontrol.h	/^const double mvBitsExp [5][9]    = {{0.0661, 0.4106, 0.5994, 0.6981, 0.7089, 0.7017, 0.7461, 0.7461, 0.6183},$/;"	m	namespace:X265_NS
mvCost	../../source/encoder/analysis.h	/^    uint32_t mvCost[2];$/;"	m	struct:X265_NS::SplitData	access:public
mvCost	../../source/encoder/search.h	/^    uint32_t mvCost;$/;"	m	struct:X265_NS::MotionData	access:public
mvField	../../source/encoder/search.h	/^        MVField  mvField[2];$/;"	m	struct:X265_NS::Search::MergeData	access:public
mvMemBlock	../../source/common/cudata.h	/^    MV*      mvMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
mvcost	../../source/encoder/bitcost.h	/^    inline uint16_t mvcost(const MV& mv) const      { return m_cost_mvx[mv.x] + m_cost_mvy[mv.y]; }$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mv) const
mvmax	../../source/common/mv.h	/^    MV mvmax(const MV& m) const                { return MV(x < m.x ? m.x : x, y < m.y ? m.y : y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& m) const
mvmin	../../source/common/mv.h	/^    MV mvmin(const MV& m) const                { return MV(x > m.x ? m.x : x, y > m.y ? m.y : y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& m) const
mvp	../../source/encoder/search.h	/^    MV       mvp;$/;"	m	struct:X265_NS::MotionData	access:public
mvpIdx	../../source/common/framedata.h	/^    int*          mvpIdx[2];$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
mvpIdx	../../source/common/framedata.h	/^    uint8_t*    mvpIdx[2];$/;"	m	struct:X265_NS::analysis_inter_data	access:public
mvpIdx	../../source/encoder/search.h	/^    int      mvpIdx;$/;"	m	struct:X265_NS::MotionData	access:public
my_index	../../source/compat/getopt/getopt.c	/^my_index (str, chr)$/;"	f	file:
my_index	../../source/compat/getopt/getopt.c	199;"	d	file:
name	../../source/common/cpu.h	/^    char name[16];$/;"	m	struct:X265_NS::cpu_name_t	access:public
name	../../source/compat/getopt/getopt.h	/^  const char *name;$/;"	m	struct:option	access:public
name	../../source/encoder/level.cpp	/^    const char* name;$/;"	m	struct:X265_NS::__anon13	file:	access:public
nbPartsTable	../../source/common/cudata.h	/^const uint32_t nbPartsTable[8] = { 1, 2, 2, 4, 2, 2, 2, 2 };$/;"	m	namespace:X265_NS
ncu	../../source/encoder/slicetype.h	/^    int             ncu;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
needPTS	../../source/output/output.h	/^    virtual bool needPTS() const = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:() const
needPTS	../../source/output/raw.h	/^    bool needPTS() const { return false; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:() const
newQScale	../../source/common/frame.h	/^    double   newQScale;$/;"	m	struct:X265_NS::RcStats	access:public
newQScale	../../source/encoder/ratecontrol.h	/^    double   newQScale;$/;"	m	struct:X265_NS::RateControlEntry	access:public
newQp	../../source/encoder/ratecontrol.h	/^    double   newQp;$/;"	m	struct:X265_NS::RateControlEntry	access:public
next	../../source/encoder/encoder.h	/^    RPSListNode* next;$/;"	m	struct:X265_NS::RPSListNode	access:public
next	../../source/encoder/sao.h	/^        Entropy next;$/;"	m	struct:X265_NS::SAO::SAOContexts	access:public
nextchar	../../source/compat/getopt/getopt.c	/^static char *nextchar;$/;"	v	file:
nnzBeforePos0	../../source/common/quant.cpp	/^    int     nnzBeforePos0;     \/* indicates coeff other than pos 0 are coded *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
no_argument	../../source/compat/getopt/getopt.h	112;"	d
no_atomic_add	../../source/common/threading.cpp	/^int no_atomic_add(int* ptr, int val)$/;"	f	namespace:X265_NS	signature:(int* ptr, int val)
no_atomic_add	../../source/common/threading.h	/^int no_atomic_add(int* ptr, int val);$/;"	p	namespace:X265_NS	signature:(int* ptr, int val)
no_atomic_and	../../source/common/threading.cpp	/^int no_atomic_and(int* ptr, int mask)$/;"	f	namespace:X265_NS	signature:(int* ptr, int mask)
no_atomic_and	../../source/common/threading.h	/^int no_atomic_and(int* ptr, int mask);$/;"	p	namespace:X265_NS	signature:(int* ptr, int mask)
no_atomic_dec	../../source/common/threading.cpp	/^int no_atomic_dec(int* ptr)$/;"	f	namespace:X265_NS	signature:(int* ptr)
no_atomic_dec	../../source/common/threading.h	/^int no_atomic_dec(int* ptr);$/;"	p	namespace:X265_NS	signature:(int* ptr)
no_atomic_inc	../../source/common/threading.cpp	/^int no_atomic_inc(int* ptr)$/;"	f	namespace:X265_NS	signature:(int* ptr)
no_atomic_inc	../../source/common/threading.h	/^int no_atomic_inc(int* ptr);$/;"	p	namespace:X265_NS	signature:(int* ptr)
no_atomic_or	../../source/common/threading.cpp	/^int no_atomic_or(int* ptr, int mask)$/;"	f	namespace:X265_NS	signature:(int* ptr, int mask)
no_atomic_or	../../source/common/threading.h	/^int no_atomic_or(int* ptr, int mask);$/;"	p	namespace:X265_NS	signature:(int* ptr, int mask)
noiseReductionUpdate	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::noiseReductionUpdate()$/;"	f	class:X265_NS::FrameEncoder	signature:()
noiseReductionUpdate	../../source/encoder/frameencoder.h	/^    void noiseReductionUpdate();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
nonPackedConstraintFlag	../../source/common/slice.h	/^    bool     nonPackedConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
nonoption_flags_len	../../source/compat/getopt/getopt.c	/^static int nonoption_flags_len;$/;"	v	file:
nonoption_flags_max_len	../../source/compat/getopt/getopt.c	/^static int nonoption_flags_max_len;$/;"	v	file:
normFactor	../../source/encoder/analysis.cpp	/^void Analysis::normFactor(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype)$/;"	f	class:Analysis	signature:(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype)
normFactor	../../source/encoder/analysis.h	/^    void normFactor(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const pixel* src, uint32_t blockSize, CUData& ctu, int qp, TextType ttype)
notZero	../../source/common/mv.h	/^    bool inline notZero() const                { return this->word != 0; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
nquant	../../source/common/primitives.h	/^    nquant_t              nquant;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
nquant_c	../../source/common/dct.cpp	/^static uint32_t nquant_c(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff)$/;"	f	file:	signature:(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff)
nquant_t	../../source/common/primitives.h	/^typedef uint32_t (*nquant_t)(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff);$/;"	t	namespace:X265_NS
nrCount	../../source/common/quant.h	/^    uint32_t nrCount[MAX_NUM_TR_CATEGORIES];$/;"	m	struct:X265_NS::NoiseReduction	access:public
nrOffsetDenoise	../../source/common/quant.h	/^    uint16_t nrOffsetDenoise[MAX_NUM_TR_CATEGORIES][MAX_NUM_TR_COEFFS];$/;"	m	struct:X265_NS::NoiseReduction	access:public
numCUsInFrame	../../source/common/slice.h	/^    uint32_t numCUsInFrame;$/;"	m	struct:X265_NS::SPS	access:public
numCimInfo	../../source/encoder/encoder.h	/^    int                     numCimInfo;$/;"	m	class:X265_NS::Encoder	access:public
numCuInHeight	../../source/common/slice.h	/^    uint32_t numCuInHeight;$/;"	m	struct:X265_NS::SPS	access:public
numCuInWidth	../../source/common/common.h	/^    int          numCuInWidth;$/;"	m	struct:X265_NS::SAOParam	access:public
numCuInWidth	../../source/common/slice.h	/^    uint32_t numCuInWidth;$/;"	m	struct:X265_NS::SPS	access:public
numEncodedCUs	../../source/common/framedata.h	/^        uint32_t numEncodedCUs; \/* ctuAddr of last encoded CTU in row *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
numGOPBegin	../../source/common/slice.h	/^    int      numGOPBegin;$/;"	m	struct:X265_NS::SPS	access:public
numInterpPlanes	../../source/encoder/reference.h	/^    int         numInterpPlanes;$/;"	m	class:X265_NS::MotionReference	access:public
numIntraNeighbor	../../source/common/predict.h	/^        int      numIntraNeighbor;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
numPartInCUSize	../../source/common/slice.h	/^    uint32_t numPartInCUSize;$/;"	m	struct:X265_NS::SPS	access:public
numPartitions	../../source/common/cudata.h	/^    uint32_t numPartitions; \/\/ Number of 4x4 blocks in the CU$/;"	m	struct:X265_NS::CUGeom	access:public
numPartitions	../../source/common/slice.h	/^    uint32_t numPartitions;$/;"	m	struct:X265_NS::SPS	access:public
numPredDir	../../source/encoder/weightPrediction.cpp	/^    int         numPredDir;$/;"	m	struct:__anon22::Cache	file:	access:public
numRefIdxDefault	../../source/common/slice.h	/^    int         numRefIdxDefault[2];$/;"	m	class:X265_NS::Slice	access:public
numRefIdxDefault	../../source/common/slice.h	/^    int      numRefIdxDefault[2];$/;"	m	struct:X265_NS::PPS	access:public
numRefIdxDefault	../../source/encoder/encoder.h	/^    int numRefIdxDefault[2];$/;"	m	struct:X265_NS::RefIdxLastGOP	access:public
numRefIdxl0	../../source/encoder/encoder.h	/^    int numRefIdxl0[MAX_NUM_REF_IDX];$/;"	m	struct:X265_NS::RefIdxLastGOP	access:public
numRefIdxl1	../../source/encoder/encoder.h	/^    int numRefIdxl1[MAX_NUM_REF_IDX];$/;"	m	struct:X265_NS::RefIdxLastGOP	access:public
numReorderPics	../../source/common/slice.h	/^    int      numReorderPics;$/;"	m	struct:X265_NS::SPS	access:public
numReorderPics	../../source/common/slice.h	/^    uint32_t         numReorderPics;$/;"	m	struct:X265_NS::VPS	access:public
numSliceWeightedRows	../../source/encoder/reference.h	/^    uint32_t*   numSliceWeightedRows;$/;"	m	class:X265_NS::MotionReference	access:public
numUnitsInTick	../../source/common/slice.h	/^    uint32_t numUnitsInTick;$/;"	m	struct:X265_NS::TimingInfo	access:public
numberOfLongTermPictures	../../source/common/slice.h	/^    int  numberOfLongTermPictures;$/;"	m	struct:X265_NS::RPS	access:public
numberOfNegativePictures	../../source/common/slice.h	/^    int  numberOfNegativePictures;$/;"	m	struct:X265_NS::RPS	access:public
numberOfPictures	../../source/common/slice.h	/^    int  numberOfPictures;$/;"	m	struct:X265_NS::RPS	access:public
numberOfPositivePictures	../../source/common/slice.h	/^    int  numberOfPositivePictures;$/;"	m	struct:X265_NS::RPS	access:public
o	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
offset	../../source/common/common.h	/^    int  offset[SAO_NUM_OFFSET];$/;"	m	struct:X265_NS::SaoCtuParam	access:public
offset	../../source/common/frame.h	/^    double   offset[4];$/;"	m	struct:X265_NS::RcStats	access:public
offset	../../source/common/framedata.h	/^    double*       offset;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
offset	../../source/common/lowres.h	/^        int      offset;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
offset	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
offset	../../source/common/quant.h	/^    uint16_t (*offset)[MAX_NUM_TR_COEFFS];$/;"	m	struct:X265_NS::NoiseReduction	access:public
offset	../../source/encoder/ratecontrol.h	/^    double offset;$/;"	m	struct:X265_NS::Predictor	access:public
offsetCBFs	../../source/encoder/search.cpp	/^inline void offsetCBFs(uint8_t subTUCBF[2])$/;"	f	signature:(uint8_t subTUCBF[2])
offsetSubTUCBFs	../../source/encoder/search.cpp	/^void Search::offsetSubTUCBFs(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx)$/;"	f	class:Search	signature:(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx)
offsetSubTUCBFs	../../source/encoder/search.h	/^    void     offsetSubTUCBFs(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, TextType ttype, uint32_t tuDepth, uint32_t absPartIdx)
offsets	../../source/encoder/motion.cpp	/^const MV offsets[] =$/;"	m	namespace:__anon23	file:
ofs	../../source/output/raw.h	/^    FILE* ofs;$/;"	m	class:X265_NS::RAWOutput	access:protected
ofs	../../source/output/y4m.h	/^    std::ofstream ofs;$/;"	m	class:X265_NS::Y4MOutput	access:protected
ofs	../../source/output/yuv.h	/^    std::ofstream ofs;$/;"	m	class:X265_NS::YUVOutput	access:protected
onePictureOnlyConstraintFlag	../../source/common/slice.h	/^    bool     onePictureOnlyConstraintFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec(pixel* dst, const pixel *srcPix0, int bFilter){};$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<16, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<32, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<4, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 10>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 11>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 12>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 13>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 14>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 15>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 16>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 17>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 18>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 19>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 20>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 21>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 22>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 23>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 24>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 25>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 26>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 27>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 28>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 29>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 2>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 30>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 31>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 32>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 33>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 34>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 3>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 4>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 5>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 6>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 7>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 8>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_ang_pred_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void one_ang_pred_altivec<8, 9>(pixel* dst, const pixel *srcPix0, int bFilter)$/;"	f	namespace:X265_NS	signature:(pixel* dst, const pixel *srcPix0, int bFilter)
one_line	../../source/common/ppc/intrapred_altivec.cpp	202;"	d	file:
one_u16v	../../source/common/ppc/intrapred_altivec.cpp	/^vec_u16_t one_u16v = (vec_u16_t)vec_splat_u16(1);$/;"	m	namespace:X265_NS	file:
open	../../source/input/input.cpp	/^InputFile* InputFile::open(InputFileInfo& info, bool bForceY4m)$/;"	f	class:InputFile	signature:(InputFileInfo& info, bool bForceY4m)
open	../../source/input/input.h	/^    static InputFile* open(InputFileInfo& info, bool bForceY4m);$/;"	p	class:X265_NS::InputFile	access:public	signature:(InputFileInfo& info, bool bForceY4m)
open	../../source/output/output.cpp	/^OutputFile* OutputFile::open(const char *fname, InputFileInfo& inputInfo)$/;"	f	class:OutputFile	signature:(const char *fname, InputFileInfo& inputInfo)
open	../../source/output/output.cpp	/^ReconFile* ReconFile::open(const char *fname, int width, int height, uint32_t bitdepth, uint32_t fpsNum, uint32_t fpsDenom, int csp)$/;"	f	class:ReconFile	signature:(const char *fname, int width, int height, uint32_t bitdepth, uint32_t fpsNum, uint32_t fpsDenom, int csp)
open	../../source/output/output.h	/^    static OutputFile* open(const char* fname, InputFileInfo& inputInfo);$/;"	p	class:X265_NS::OutputFile	access:public	signature:(const char* fname, InputFileInfo& inputInfo)
open	../../source/output/output.h	/^    static ReconFile* open(const char *fname, int width, int height, uint32_t bitdepth,$/;"	p	class:X265_NS::ReconFile	access:public	signature:(const char *fname, int width, int height, uint32_t bitdepth, uint32_t fpsNum, uint32_t fpsDenom, int csp)
operator !	../../source/common/mv.h	/^    bool operator !() const                    { return !word; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
operator !=	../../source/common/mv.h	/^    bool operator !=(const MV& other) const    { return word != other.word; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
operator *	../../source/common/mv.h	/^    MV operator *(int16_t i) const             { return MV(x * i, y * i); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int16_t i) const
operator +	../../source/common/mv.h	/^    MV operator +(const MV& other) const       { return MV(x + other.x, y + other.y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
operator +=	../../source/common/mv.h	/^    MV& operator +=(const MV& other)           { x += other.x; y += other.y; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other)
operator -	../../source/common/mv.h	/^    MV operator -(const MV& other) const       { return MV(x - other.x, y - other.y); }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
operator -=	../../source/common/mv.h	/^    MV& operator -=(const MV& other)           { x -= other.x; y -= other.y; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other)
operator <<	../../source/common/mv.h	/^    MV operator <<(int i) const                { return MV(x * (1 << i), y * (1 << i)); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i) const
operator <<	../../source/common/mv.h	/^    MV operator <<(int i) const                { return MV(x << i, y << i); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i) const
operator <<=	../../source/common/mv.h	/^    MV& operator <<=(int i)                    { x *= (1 << i); y *= (1 << i); return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i)
operator <<=	../../source/common/mv.h	/^    MV& operator <<=(int i)                    { x <<= i; y <<= i; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i)
operator =	../../source/common/mv.h	/^    MV& operator =(uint32_t w)                 { word = w; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(uint32_t w)
operator =	../../source/common/threading.h	/^    ScopedElapsedTime &operator =(const ScopedElapsedTime &);$/;"	p	struct:X265_NS::ScopedElapsedTime	access:protected	signature:(const ScopedElapsedTime &)
operator =	../../source/common/threading.h	/^    ScopedLock &operator =(const ScopedLock &);$/;"	p	class:X265_NS::ScopedLock	access:protected	signature:(const ScopedLock &)
operator =	../../source/common/threadpool.cpp	/^    WorkerThread& operator =(const WorkerThread&);$/;"	p	class:X265_NS::WorkerThread	file:	access:private	signature:(const WorkerThread&)
operator =	../../source/encoder/analysis.h	/^        PMODE operator=(const PMODE&);$/;"	p	class:X265_NS::Analysis::PMODE	access:protected	signature:(const PMODE&)
operator =	../../source/encoder/bitcost.h	/^    BitCost& operator =(const BitCost&);$/;"	p	class:X265_NS::BitCost	access:protected	signature:(const BitCost&)
operator =	../../source/encoder/frameencoder.h	/^        WeightAnalysis operator=(const WeightAnalysis&);$/;"	p	class:X265_NS::FrameEncoder::WeightAnalysis	access:protected	signature:(const WeightAnalysis&)
operator =	../../source/encoder/framefilter.h	/^        ParallelFilter operator=(const ParallelFilter&);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:protected	signature:(const ParallelFilter&)
operator =	../../source/encoder/motion.h	/^    MotionEstimate& operator =(const MotionEstimate&);$/;"	p	class:X265_NS::MotionEstimate	access:protected	signature:(const MotionEstimate&)
operator =	../../source/encoder/reference.h	/^    MotionReference& operator =(const MotionReference&);$/;"	p	class:X265_NS::MotionReference	access:protected	signature:(const MotionReference&)
operator =	../../source/encoder/search.h	/^        PME operator=(const PME&);$/;"	p	class:X265_NS::Search::PME	access:protected	signature:(const PME&)
operator =	../../source/encoder/slicetype.h	/^    CostEstimateGroup& operator=(const CostEstimateGroup&);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(const CostEstimateGroup&)
operator =	../../source/encoder/slicetype.h	/^    PreLookaheadGroup& operator=(const PreLookaheadGroup&);$/;"	p	class:X265_NS::PreLookaheadGroup	access:protected	signature:(const PreLookaheadGroup&)
operator ==	../../source/common/mv.h	/^    bool operator ==(const MV& other) const    { return word == other.word; }$/;"	f	struct:X265_NS::MV	access:public	signature:(const MV& other) const
operator >>	../../source/common/mv.h	/^    MV operator >>(int i) const                { return MV(x >> i, y >> i); }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i) const
operator >>=	../../source/common/mv.h	/^    MV& operator >>=(int i)                    { x >>= i; y >>= i; return *this; }$/;"	f	struct:X265_NS::MV	access:public	signature:(int i)
operator bool	../../source/common/piclist.h	/^    operator bool() const { return !!m_count; }$/;"	f	class:X265_NS::PicList	access:public	signature:() const
optarg	../../source/compat/getopt/getopt.c	/^char *optarg;$/;"	v
opterr	../../source/compat/getopt/getopt.c	/^int opterr = 1;$/;"	v
optind	../../source/compat/getopt/getopt.c	/^int optind = 1;$/;"	v
option	../../source/compat/getopt/getopt.h	/^struct option$/;"	s
option::flag	../../source/compat/getopt/getopt.h	/^  int32_t *flag;$/;"	m	struct:option	access:public
option::has_arg	../../source/compat/getopt/getopt.h	/^  int has_arg;$/;"	m	struct:option	access:public
option::name	../../source/compat/getopt/getopt.h	/^  const char *name;$/;"	m	struct:option	access:public
option::val	../../source/compat/getopt/getopt.h	/^  int val;$/;"	m	struct:option	access:public
optional_argument	../../source/compat/getopt/getopt.h	114;"	d
optopt	../../source/compat/getopt/getopt.c	/^int optopt = '?';$/;"	v
ordering	../../source/compat/getopt/getopt.c	/^} ordering;$/;"	v	typeref:enum:__anon1	file:
origCUSampleRestoration	../../source/encoder/framefilter.cpp	/^static void origCUSampleRestoration(const CUData* cu, const CUGeom& cuGeom, Frame& frame)$/;"	f	file:	signature:(const CUData* cu, const CUGeom& cuGeom, Frame& frame)
outputFrame	../../source/output/reconplay.cpp	/^bool ReconPlay::outputFrame()$/;"	f	class:ReconPlay	signature:()
outputFrame	../../source/output/reconplay.h	/^    bool outputFrame();$/;"	p	class:X265_NS::ReconPlay	access:protected	signature:()
outputPipe	../../source/output/reconplay.h	/^    FILE*  outputPipe;     \/* The output pipe for player *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
overscanAppropriateFlag	../../source/common/slice.h	/^    bool       overscanAppropriateFlag;$/;"	m	struct:X265_NS::VUI	access:public
overscanInfoPresentFlag	../../source/common/slice.h	/^    bool       overscanInfoPresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
p0	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
p0	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Estimate	access:public
p1	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Coop	access:public
p1	../../source/encoder/slicetype.h	/^        int  p0, b, p1;$/;"	m	struct:X265_NS::CostEstimateGroup::Estimate	access:public
p2s	../../source/common/primitives.h	/^            filter_p2s_t p2s;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
pCuCount	../../source/common/frame.h	/^    double   pCuCount;$/;"	m	struct:X265_NS::RcStats	access:public
pCuCount	../../source/encoder/ratecontrol.h	/^    double   pCuCount;$/;"	m	struct:X265_NS::RateControlEntry	access:public
pLowresCnt	../../source/common/lowres.h	/^    int       pLowresCnt;$/;"	m	struct:X265_NS::Lowres	access:public
pLowresCostSum	../../source/common/lowres.h	/^    int64_t   pLowresCostSum;$/;"	m	struct:X265_NS::Lowres	access:public
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m0,            m1$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m0,         m1$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m0,        m1$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m0,      m1$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m0, m1$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m2,            m3$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m2,      m3$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m4,            m5$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m4,      m5$/;"	l
packuswb	../../source/common/x86/blockcopy8.asm	/^packuswb   m6,      m7$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m1,         m1$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m3,         m3$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m3,        m3$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m4,         m4$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m4,        m4$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m5,         m5$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m5,        m5$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m6,         m6$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m6,        m6$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb      m7,         m7$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb     m4,         m5$/;"	l
packuswb	../../source/common/x86/intrapred8_allangs.asm	/^packuswb     m5,         m4$/;"	l
paddedLines	../../source/encoder/slicetype.h	/^    int             paddedLines;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
paddw	../../source/common/x86/intrapred8_allangs.asm	/^paddw        m4,         m6$/;"	l
paddw	../../source/common/x86/intrapred8_allangs.asm	/^paddw        m5,         m6$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m0,        m1,        2$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m3,         m1,        1$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m3,         m1,     1$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m3,         m1,     2$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m3,        m1,       4$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m4,         m3,     2$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr       m4,        m1,        6$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr   m1,         m0,      1$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr   m1,         m0,      2$/;"	l
palignr	../../source/common/x86/intrapred8_allangs.asm	/^palignr   m1,         m0,      3$/;"	l
parse	../../source/encoder/sei.h	/^    bool parse(const char* value)$/;"	f	class:X265_NS::SEIMasteringDisplayColorVolume	access:public	signature:(const char* value)
parseCpuName	../../source/common/param.cpp	/^int parseCpuName(const char* value, bool& bError)$/;"	f	namespace:X265_NS	signature:(const char* value, bool& bError)
parseCpuName	../../source/common/param.h	/^int   parseCpuName(const char *value, bool& bError);$/;"	p	namespace:X265_NS	signature:(const char *value, bool& bError)
parseHeader	../../source/input/y4m.cpp	/^bool Y4MInput::parseHeader()$/;"	f	class:Y4MInput	signature:()
parseHeader	../../source/input/y4m.h	/^    bool parseHeader();$/;"	p	class:X265_NS::Y4MInput	access:protected	signature:()
parseLambdaFile	../../source/common/param.cpp	/^bool parseLambdaFile(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
parseLambdaFile	../../source/common/param.h	/^bool  parseLambdaFile(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
parseName	../../source/common/param.cpp	/^static int parseName(const char* arg, const char* const* names, bool& bError)$/;"	f	file:	signature:(const char* arg, const char* const* names, bool& bError)
parseScalingList	../../source/common/scalinglist.cpp	/^bool ScalingList::parseScalingList(const char* filename)$/;"	f	class:X265_NS::ScalingList	signature:(const char* filename)
parseScalingList	../../source/common/scalinglist.h	/^    bool     parseScalingList(const char* filename);$/;"	p	class:X265_NS::ScalingList	access:public	signature:(const char* filename)
partAddrTable	../../source/common/cudata.h	/^const uint32_t partAddrTable[8][4] =$/;"	m	namespace:X265_NS
partEnum	../../source/encoder/motion.h	/^    int partEnum;$/;"	m	class:X265_NS::MotionEstimate	access:public
partSize	../../source/common/framedata.h	/^    uint8_t*    partSize;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
partSizes	../../source/common/framedata.h	/^    char*     partSizes;$/;"	m	struct:X265_NS::analysis_intra_data	access:public
partTable	../../source/common/cudata.h	/^const uint32_t partTable[8][4][2] =$/;"	m	namespace:X265_NS
partialButterfly16	../../source/common/dct.cpp	/^static void partialButterfly16(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterfly16_transposedSrc_altivec	../../source/common/ppc/dct_altivec.cpp	/^inline static void partialButterfly16_transposedSrc_altivec(const int16_t* __restrict__ src, int16_t* __restrict__ dst, int shift)$/;"	f	file:	signature:(const int16_t* __restrict__ src, int16_t* __restrict__ dst, int shift)
partialButterfly32	../../source/common/dct.cpp	/^static void partialButterfly32(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterfly32_transposedSrc_altivec	../../source/common/ppc/dct_altivec.cpp	/^inline static void partialButterfly32_transposedSrc_altivec(const int16_t* __restrict__ src, int16_t* __restrict__ dst, int shift)$/;"	f	file:	signature:(const int16_t* __restrict__ src, int16_t* __restrict__ dst, int shift)
partialButterfly4	../../source/common/dct.cpp	/^static void partialButterfly4(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterfly8	../../source/common/dct.cpp	/^static void partialButterfly8(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterflyInverse16	../../source/common/dct.cpp	/^static void partialButterflyInverse16(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterflyInverse32	../../source/common/dct.cpp	/^static void partialButterflyInverse32(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterflyInverse4	../../source/common/dct.cpp	/^static void partialButterflyInverse4(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partialButterflyInverse8	../../source/common/dct.cpp	/^static void partialButterflyInverse8(const int16_t* src, int16_t* dst, int shift, int line)$/;"	f	file:	signature:(const int16_t* src, int16_t* dst, int shift, int line)
partitionFromLog2Size	../../source/common/primitives.h	/^inline int partitionFromLog2Size(int log2Size)$/;"	f	namespace:X265_NS	signature:(int log2Size)
partitionFromSizes	../../source/common/primitives.h	/^inline int partitionFromSizes(int width, int height)$/;"	f	namespace:X265_NS	signature:(int width, int height)
pbFactor	../../source/common/lowres.h	/^    double pbFactor;$/;"	m	struct:X265_NS::Lowres	access:public
pbFactor	../../source/encoder/ratecontrol.h	/^    double  pbFactor;$/;"	m	struct:X265_NS::RateControlEntry	access:public
pbQpOffset	../../source/common/lowres.h	/^    double pbQpOffset;$/;"	m	struct:X265_NS::Lowres	access:public
pbQpOffset	../../source/encoder/ratecontrol.h	/^    double   pbQpOffset;$/;"	m	struct:X265_NS::RateControlEntry	access:public
pb_0_8	../../source/common/x86/intrapred8.asm	/^pb_0_8        times 8 db  0,  8$/;"	l
pb_fact0	../../source/common/x86/intrapred8.asm	/^pb_fact0:             db  0,  2,  4,  6,  8, 10, 12, 14,  0,  0,  0,  0,  0,  0,  0,  0$/;"	d
pb_idct8even	../../source/common/x86/dct8.asm	/^pb_idct8even:   db 0, 1, 8, 9, 4, 5, 12, 13, 0, 1, 8, 9, 4, 5, 12, 13$/;"	d
pb_idct8odd	../../source/common/x86/dct8.asm	/^pb_idct8odd:    db 2, 3, 6, 7, 10, 11, 14, 15, 2, 3, 6, 7, 10, 11, 14, 15$/;"	d
pb_idst4_shuf	../../source/common/x86/dct8.asm	/^pb_idst4_shuf:  times 2 db 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 12, 13, 6, 7, 14, 15$/;"	l
pb_swap8	../../source/common/x86/intrapred8.asm	/^pb_swap8:     times 2 db  7,  6,  5,  4,  3,  2,  1,  0$/;"	l
pb_unpackbq	../../source/common/x86/intrapred8.asm	/^pb_unpackbq:          db  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1$/;"	d
pb_unpackbw1	../../source/common/x86/intrapred8.asm	/^pb_unpackbw1  times 2 db  1,  8,  2,  8,  3,  8,  4,  8$/;"	l
pb_unpackhlw1	../../source/common/x86/dct8.asm	/^pb_unpackhlw1:  db 0,1,8,9,2,3,10,11,4,5,12,13,6,7,14,15$/;"	d
pclose	../../source/output/reconplay.cpp	34;"	d	file:
pd_524800	../../source/common/x86/ipfilter16.asm	/^pd_524800:        times 8 dd 524800$/;"	l
pelFilterChroma	../../source/common/primitives.h	/^    pelFilterChroma_t     pelFilterChroma[2];     \/\/ EDGE_VER = 0, EDGE_HOR = 1$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
pelFilterChroma_H_sse4	../../source/common/x86/loopfilter.h	/^void PFX(pelFilterChroma_H_sse4)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ);$/;"	p	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ)
pelFilterChroma_V_sse4	../../source/common/x86/loopfilter.h	/^void PFX(pelFilterChroma_V_sse4)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ);$/;"	p	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ)
pelFilterChroma_c	../../source/common/loopfilter.cpp	/^static void pelFilterChroma_c(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ)$/;"	f	namespace:__anon2	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ)
pelFilterChroma_t	../../source/common/primitives.h	/^typedef void (*pelFilterChroma_t)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ);$/;"	t	namespace:X265_NS
pelFilterLuma	../../source/common/deblock.cpp	/^static inline void pelFilterLuma(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ,$/;"	f	file:	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ, int32_t maskP1, int32_t maskQ1)
pelFilterLumaStrong	../../source/common/primitives.h	/^    pelFilterLumaStrong_t pelFilterLumaStrong[2]; \/\/ EDGE_VER = 0, EDGE_HOR = 1$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
pelFilterLumaStrong_H_sse4	../../source/common/x86/loopfilter.h	/^void PFX(pelFilterLumaStrong_H_sse4)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ);$/;"	p	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ)
pelFilterLumaStrong_V_sse4	../../source/common/x86/loopfilter.h	/^void PFX(pelFilterLumaStrong_V_sse4)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ);$/;"	p	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ)
pelFilterLumaStrong_c	../../source/common/loopfilter.cpp	/^static void pelFilterLumaStrong_c(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ)$/;"	f	namespace:__anon2	signature:(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ)
pelFilterLumaStrong_t	../../source/common/primitives.h	/^typedef void (*pelFilterLumaStrong_t)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ);$/;"	t	namespace:X265_NS
per	../../source/common/quant.h	/^    int per;$/;"	m	struct:X265_NS::QpParam	access:public
percent8x8Inter	../../source/common/framedata.h	/^    double      percent8x8Inter;$/;"	m	struct:X265_NS::FrameStats	access:public
percent8x8Intra	../../source/common/framedata.h	/^    double      percent8x8Intra;$/;"	m	struct:X265_NS::FrameStats	access:public
percent8x8Skip	../../source/common/framedata.h	/^    double      percent8x8Skip;$/;"	m	struct:X265_NS::FrameStats	access:public
percentInterDistribution	../../source/common/framedata.h	/^    double      percentInterDistribution[NUM_CU_DEPTH][3];           \/\/ 2Nx2N, RECT, AMP modes percentage$/;"	m	struct:X265_NS::FrameStats	access:public
percentIntraDistribution	../../source/common/framedata.h	/^    double      percentIntraDistribution[NUM_CU_DEPTH][INTRA_MODES];$/;"	m	struct:X265_NS::FrameStats	access:public
percentIntraNxN	../../source/common/framedata.h	/^    double      percentIntraNxN;$/;"	m	struct:X265_NS::FrameStats	access:public
percentMergeCu	../../source/common/framedata.h	/^    double      percentMergeCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
percentSkipCu	../../source/common/framedata.h	/^    double      percentSkipCu[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::FrameStats	access:public
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 128],  m4,    0$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 132],  m4,    1$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 136],  m4,    2$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 140],  m4,    3$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 384], m5,    0$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 388], m5,    1$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 392], m5,    2$/;"	l
pextrb	../../source/common/x86/intrapred8_allangs.asm	/^pextrb       [r0 + 396], m5,    3$/;"	l
pextrw	../../source/common/x86/blockcopy8.asm	/^pextrw     [r0 + r1], m0, 4$/;"	l
pf_128	../../source/common/x86/pixel-util8.asm	/^pf_128:    times 4 dd 128.0$/;"	l
pf_64	../../source/common/x86/pixel-util8.asm	/^pf_64:     times 4 dd 64.0$/;"	l
picHeightInLumaSamples	../../source/common/slice.h	/^    uint32_t picHeightInLumaSamples; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
picTimingSEI	../../source/encoder/ratecontrol.h	/^    SEIPictureTiming *picTimingSEI;$/;"	m	struct:X265_NS::RateControlEntry	access:public
picWidthInLumaSamples	../../source/common/slice.h	/^    uint32_t picWidthInLumaSamples;  \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb         m3,        [r1 + 12],   0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,         [r1 + 0],  1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,         [r1 + 1],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,         [r1 + 1],  1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,         [r1 + 2],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,         [r1 + 2],  1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,         [r1 + 4],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,        [r1 + 9],   0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,        [r1 + 9],   1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m1,        [r1],       0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m3,         [r1 + 10],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m3,         [r1 + 9],   0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m3,         [r1],       1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 10],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 10],  1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 11],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 12],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 2],   1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 3],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 4],   0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m4,         [r1 + 9],   1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m5,         [r1 + 0],  1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m5,         [r1 + 2],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m5,         [r1 + 4],  0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m6,         [r1 + 10], 1$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m6,         [r1 + 11], 0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb        m6,         [r1 + 12],   0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb       m6,         [r1],      0$/;"	l
pinsrb	../../source/common/x86/intrapred8_allangs.asm	/^pinsrb       m7,         [r1],      0$/;"	l
pipeValid	../../source/output/reconplay.h	/^    static bool pipeValid;$/;"	m	class:X265_NS::ReconPlay	access:public
pipemode	../../source/output/reconplay.cpp	35;"	d	file:
pirEndCol	../../source/common/framedata.h	/^        uint32_t   pirEndCol;$/;"	m	struct:X265_NS::FrameData::PeriodicIR	access:public
pirStartCol	../../source/common/framedata.h	/^        uint32_t   pirStartCol;$/;"	m	struct:X265_NS::FrameData::PeriodicIR	access:public
pixel	../../source/common/common.h	/^typedef uint16_t pixel;$/;"	t
pixel	../../source/common/ppc/pixel_altivec.cpp	/^typedef uint8_t  pixel;$/;"	t	namespace:X265_NS	file:
pixel4	../../source/common/common.h	/^typedef uint64_t pixel4;$/;"	t
pixel_add_ps_16xN_neon	../../source/common/arm/pixel-util.S	/^pixel_add_ps_16xN_neon 16 2$/;"	l
pixel_add_ps_16xN_neon	../../source/common/arm/pixel-util.S	/^pixel_add_ps_16xN_neon 32 4$/;"	l
pixel_add_ps_32xN_neon	../../source/common/arm/pixel-util.S	/^pixel_add_ps_32xN_neon 32 8$/;"	l
pixel_add_ps_32xN_neon	../../source/common/arm/pixel-util.S	/^pixel_add_ps_32xN_neon 64 16$/;"	l
pixel_add_ps_c	../../source/common/pixel.cpp	/^void pixel_add_ps_c(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)$/;"	f	namespace:__anon31	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
pixel_add_ps_t	../../source/common/primitives.h	/^typedef void (*pixel_add_ps_t)(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	t	namespace:X265_NS
pixel_avg_pp_16xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_16xN_neon 12$/;"	l
pixel_avg_pp_16xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_16xN_neon 16$/;"	l
pixel_avg_pp_16xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_16xN_neon 32$/;"	l
pixel_avg_pp_16xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_16xN_neon 4$/;"	l
pixel_avg_pp_16xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_16xN_neon 8$/;"	l
pixel_avg_pp_32xN1_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_32xN1_neon 32 4 $/;"	l
pixel_avg_pp_32xN1_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_32xN1_neon 64 8$/;"	l
pixel_avg_pp_32xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_32xN_neon 16$/;"	l
pixel_avg_pp_32xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_32xN_neon 24$/;"	l
pixel_avg_pp_32xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_32xN_neon 8$/;"	l
pixel_avg_pp_4xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_4xN_neon 16$/;"	l
pixel_avg_pp_4xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_4xN_neon 4$/;"	l
pixel_avg_pp_4xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_4xN_neon 8$/;"	l
pixel_avg_pp_64xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_64xN_neon 16 4$/;"	l
pixel_avg_pp_64xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_64xN_neon 32 8$/;"	l
pixel_avg_pp_64xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_64xN_neon 48 12$/;"	l
pixel_avg_pp_64xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_64xN_neon 64 16$/;"	l
pixel_avg_pp_8xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_8xN_neon 16$/;"	l
pixel_avg_pp_8xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_8xN_neon 32$/;"	l
pixel_avg_pp_8xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_8xN_neon 4$/;"	l
pixel_avg_pp_8xN_neon	../../source/common/arm/mc-a.S	/^pixel_avg_pp_8xN_neon 8$/;"	l
pixel_satd_16x8_internal	../../source/common/x86/pixel-a.asm	/^pixel_satd_16x8_internal:$/;"	l
pixel_ssd_s_c	../../source/common/pixel.cpp	/^sse_t pixel_ssd_s_c(const int16_t* a, intptr_t dstride)$/;"	f	namespace:__anon31	signature:(const int16_t* a, intptr_t dstride)
pixel_ssd_s_t	../../source/common/primitives.h	/^typedef sse_t (*pixel_ssd_s_t)(const int16_t* fenc, intptr_t fencstride);$/;"	t	namespace:X265_NS
pixel_sse_ss_t	../../source/common/primitives.h	/^typedef sse_t (*pixel_sse_ss_t)(const int16_t* fenc, intptr_t fencstride, const int16_t* fref, intptr_t frefstride);$/;"	t	namespace:X265_NS
pixel_sse_t	../../source/common/primitives.h	/^typedef sse_t (*pixel_sse_t)(const pixel* fenc, intptr_t fencstride, const pixel* fref, intptr_t frefstride); \/\/ fenc is aligned$/;"	t	namespace:X265_NS
pixel_ssim_4x4x2_core_avx	../../source/common/x86/pixel-util.h	/^void PFX(pixel_ssim_4x4x2_core_avx(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]));$/;"	p	signature:(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])
pixel_ssim_4x4x2_core_sse2	../../source/common/x86/pixel-util.h	/^void PFX(pixel_ssim_4x4x2_core_sse2(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]));$/;"	p	signature:(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])
pixel_ssim_end4_avx	../../source/common/x86/pixel-util.h	/^float PFX(pixel_ssim_end4_avx(int sum0[5][4], int sum1[5][4], int width));$/;"	p	signature:(int sum0[5][4], int sum1[5][4], int width)
pixel_ssim_end4_sse2	../../source/common/x86/pixel-util.h	/^float PFX(pixel_ssim_end4_sse2(int sum0[5][4], int sum1[5][4], int width));$/;"	p	signature:(int sum0[5][4], int sum1[5][4], int width)
pixel_sub_ps_c	../../source/common/pixel.cpp	/^void pixel_sub_ps_c(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)$/;"	f	namespace:__anon31	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
pixel_sub_ps_t	../../source/common/primitives.h	/^typedef void (*pixel_sub_ps_t)(int16_t* dst, intptr_t dstride, const pixel* src0, const pixel* src1, intptr_t sstride0, intptr_t sstride1);$/;"	t	namespace:X265_NS
pixel_var	../../source/common/pixel.cpp	/^uint64_t pixel_var(const pixel* pix, intptr_t i_stride)$/;"	f	namespace:__anon31	signature:(const pixel* pix, intptr_t i_stride)
pixelavg_pp	../../source/common/pixel.cpp	/^void pixelavg_pp(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)$/;"	f	namespace:__anon31	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
pixelavg_pp	../../source/common/primitives.h	/^        pixelavg_pp_t  pixelavg_pp; \/\/ quick bidir using pixels (borrowed from x264)$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
pixelavg_pp_t	../../source/common/primitives.h	/^typedef void (*pixelavg_pp_t)(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int weight);$/;"	t	namespace:X265_NS
pixelcmp_ads_t	../../source/common/primitives.h	/^typedef int(*pixelcmp_ads_t)(int encDC[], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh);$/;"	t	namespace:X265_NS
pixelcmp_ss_t	../../source/common/primitives.h	/^typedef int  (*pixelcmp_ss_t)(const int16_t* fenc, intptr_t fencstride, const int16_t* fref, intptr_t frefstride);$/;"	t	namespace:X265_NS
pixelcmp_t	../../source/common/primitives.h	/^typedef int  (*pixelcmp_t)(const pixel* fenc, intptr_t fencstride, const pixel* fref, intptr_t frefstride); \/\/ fenc is aligned$/;"	t	namespace:X265_NS
pixelcmp_x3_t	../../source/common/primitives.h	/^typedef void (*pixelcmp_x3_t)(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	t	namespace:X265_NS
pixelcmp_x4_t	../../source/common/primitives.h	/^typedef void (*pixelcmp_x4_t)(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	t	namespace:X265_NS
planar_pred_c	../../source/common/intrapred.cpp	/^void planar_pred_c(pixel* dst, intptr_t dstStride, const pixel* srcPix, int \/*dirMode*\/, int \/*bFilter*\/)$/;"	f	namespace:__anon17	signature:(pixel* dst, intptr_t dstStride, const pixel* srcPix, int , int )
planeClipAndMax	../../source/common/primitives.h	/^    planeClipAndMax_t     planeClipAndMax;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
planeClipAndMax_avx2	../../source/common/x86/pixel.h	/^pixel PFX(planeClipAndMax_avx2)(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix);$/;"	p	signature:(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix)
planeClipAndMax_c	../../source/common/pixel.cpp	/^static pixel planeClipAndMax_c(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, $/;"	f	namespace:__anon31	signature:(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix)
planeClipAndMax_t	../../source/common/primitives.h	/^typedef pixel (*planeClipAndMax_t)(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix);$/;"	t	namespace:X265_NS
plane_copy_deinterleave_t	../../source/common/primitives.h	/^typedef void (*plane_copy_deinterleave_t)(pixel* dstu, intptr_t dstuStride, pixel* dstv, intptr_t dstvStride, const pixel* src, intptr_t srcStride, int w, int h);$/;"	t	namespace:X265_NS
planecopy_cp	../../source/common/primitives.h	/^    planecopy_cp_t        planecopy_cp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
planecopy_cp_c	../../source/common/pixel.cpp	/^static void planecopy_cp_c(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)$/;"	f	namespace:__anon31	signature:(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)
planecopy_cp_t	../../source/common/primitives.h	/^typedef void (*planecopy_cp_t) (const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);$/;"	t	namespace:X265_NS
planecopy_sp	../../source/common/primitives.h	/^    planecopy_sp_t        planecopy_sp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
planecopy_sp_c	../../source/common/pixel.cpp	/^static void planecopy_sp_c(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)$/;"	f	namespace:__anon31	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
planecopy_sp_shl	../../source/common/primitives.h	/^    planecopy_sp_t        planecopy_sp_shl;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
planecopy_sp_shl_c	../../source/common/pixel.cpp	/^static void planecopy_sp_shl_c(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)$/;"	f	namespace:__anon31	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
planecopy_sp_t	../../source/common/primitives.h	/^typedef void (*planecopy_sp_t) (const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);$/;"	t	namespace:X265_NS
plannedSatd	../../source/common/lowres.h	/^    int64_t   plannedSatd[X265_LOOKAHEAD_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
plannedType	../../source/common/lowres.h	/^    int       plannedType[X265_LOOKAHEAD_MAX + 1];$/;"	m	struct:X265_NS::Lowres	access:public
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m1,         [r3 + 24 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         [r3 + 28 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 12 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 17 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 22 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 26 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 27 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 28 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,         [r3 + 30 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 12 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 14 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 17 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 18 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 22 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 23 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 24 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 26 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 27 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 28 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 30 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,        [r3 + 5 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 10 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 15 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 18 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 2 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 20 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 27 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 4 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 5 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 6 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 8 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,         m1,     [r3 + 9 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m3,        m0,        m7$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         [r3 + 12 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         [r3 + 24 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         [r3 + 8 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,         [r3 + 14 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,         [r3 + 19 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,         [r3 + 23 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,         [r3 + 5 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,        [r3 + 11 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,        [r3 + 15 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,        [r3 + 19 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,     [r3 + 13 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m1,     [r3 + 17 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,         [r3 + 12 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,        [r3 + 1 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,        [r3 + 13 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,        [r3 + 22 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,        [r3 + 25 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,        [r3 + 30 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m3,     [r3 + 4 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m5,        [r3 + 12 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m5,        [r3 + 13 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m5,        [r3 + 25 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m5,        [r3 + 28 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,         m5,        [r3 + 30 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,        [r3 + 8 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,        m3,        [r3 + 14 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,        m3,        [r3 + 4 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m4,        m3,        m7$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,        [r3 + 15 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,        [r3 + 2 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,        [r3 + 20 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,        [r3 + 4 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,        [r3 + 6 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,        [r3 + 8 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,       [r3 + 10 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m1,     [r3 + 21 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m3,     [r3 + 10 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m3,     [r3 + 19 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m3,     [r3 + 2 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m3,     [r3 + 31 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m3,     [r3 + 7 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m4,         [r3 + 14 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m4,         [r3 + 18 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m4,     [r3 + 20 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m4,     [r3 + 4 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,         m6,        [r3 + 12 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m0,        [r3 + 10 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m0,        [r3 + 19 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m0,        [r3 + 2 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m0,        [r3 + 31 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m0,        [r3 + 4 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m0,        [r3 + 7 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 13 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 17 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 18 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 21 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 27 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 5 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m5,        m1,        [r3 + 9 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,         [r3 + 28 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,         m1,        [r3 + 11 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,         m3,     [r3 + 20 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,         m4,         [r3 + 28 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,         m5,        [r3 + 1 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,         m5,        [r3 + 22 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m6,        m1,        [r3 + 26 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m7,         m1,        [r3 + 6 * 16]$/;"	l
pmaddubsw	../../source/common/x86/intrapred8_allangs.asm	/^pmaddubsw     m7,         m1,     [r3 + 26 * 16]$/;"	l
pmeBlockTime	../../source/encoder/search.h	/^    int64_t  pmeBlockTime;                      \/\/ elapsed worker time blocked for pme batch completion$/;"	m	struct:X265_NS::CUStats	access:public
pmeTime	../../source/encoder/search.h	/^    int64_t  pmeTime;                           \/\/ elapsed worker time processing ME slave jobs$/;"	m	struct:X265_NS::CUStats	access:public
pmodeBlockTime	../../source/encoder/search.h	/^    int64_t  pmodeBlockTime;                    \/\/ elapsed worker time blocked for pmode batch completion$/;"	m	struct:X265_NS::CUStats	access:public
pmodeTime	../../source/encoder/search.h	/^    int64_t  pmodeTime;                         \/\/ elapsed worker time processing pmode slave jobs$/;"	m	struct:X265_NS::CUStats	access:public
pmovzxbw	../../source/common/x86/blockcopy8.asm	/^pmovzxbw   m0,            m0$/;"	l
pmovzxbw	../../source/common/x86/blockcopy8.asm	/^pmovzxbw   m0,         m0$/;"	l
pmovzxbw	../../source/common/x86/blockcopy8.asm	/^pmovzxbw   m2,                 m1$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m1,         m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m3,         m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m3,        m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m4,         m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m4,        m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m5,         m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m5,        m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m6,         m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m6,        m2$/;"	l
pmulhrsw	../../source/common/x86/intrapred8_allangs.asm	/^pmulhrsw      m7,         m2$/;"	l
poc	../../source/common/frame.h	/^    int      poc;$/;"	m	struct:X265_NS::RcStats	access:public
poc	../../source/common/slice.h	/^    int  poc[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
poc	../../source/encoder/ratecontrol.h	/^    int     poc;$/;"	m	struct:X265_NS::RateControlEntry	access:public
poc	../../source/output/reconplay.h	/^    int    poc[RECON_BUF_SIZE];$/;"	m	class:X265_NS::ReconPlay	access:protected
poke	../../source/common/threading.h	/^    void poke(void)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(void)
popBack	../../source/common/piclist.cpp	/^Frame *PicList::popBack()$/;"	f	class:PicList	signature:()
popBack	../../source/common/piclist.h	/^    Frame* popBack();$/;"	p	class:X265_NS::PicList	access:public	signature:()
popCount	../../source/common/threadpool.cpp	/^static int popCount(uint64_t x)$/;"	f	file:	signature:(uint64_t x)
popFront	../../source/common/piclist.cpp	/^Frame *PicList::popFront()$/;"	f	class:PicList	signature:()
popFront	../../source/common/piclist.h	/^    Frame* popFront();$/;"	p	class:X265_NS::PicList	access:public	signature:()
popen	../../source/output/reconplay.cpp	33;"	d	file:
populateFrameQueue	../../source/input/y4m.cpp	/^bool Y4MInput::populateFrameQueue()$/;"	f	class:Y4MInput	signature:()
populateFrameQueue	../../source/input/y4m.h	/^    bool populateFrameQueue();$/;"	p	class:X265_NS::Y4MInput	access:protected	signature:()
populateFrameQueue	../../source/input/yuv.cpp	/^bool YUVInput::populateFrameQueue()$/;"	f	class:YUVInput	signature:()
populateFrameQueue	../../source/input/yuv.h	/^    bool populateFrameQueue();$/;"	p	class:X265_NS::YUVInput	access:protected	signature:()
posixly_correct	../../source/compat/getopt/getopt.c	/^static char *posixly_correct;$/;"	v	file:
pps_slice_chroma_qp_offsets_present_flag	../../source/common/slice.h	/^    bool     pps_slice_chroma_qp_offsets_present_flag;$/;"	m	struct:X265_NS::PPS	access:public
pred	../../source/encoder/analysis.h	/^        Mode           pred[MAX_PRED_TYPES];$/;"	m	struct:X265_NS::Analysis::ModeDepth	access:public
predInterChromaPixel	../../source/common/predict.cpp	/^void Predict::predInterChromaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
predInterChromaPixel	../../source/common/predict.h	/^    void predInterChromaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
predInterChromaShort	../../source/common/predict.cpp	/^void Predict::predInterChromaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
predInterChromaShort	../../source/common/predict.h	/^    void predInterChromaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
predInterLumaPixel	../../source/common/predict.cpp	/^void Predict::predInterLumaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
predInterLumaPixel	../../source/common/predict.h	/^    void predInterLumaPixel(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, Yuv& dstYuv, const PicYuv& refPic, const MV& mv) const
predInterLumaShort	../../source/common/predict.cpp	/^void Predict::predInterLumaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const$/;"	f	class:Predict	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
predInterLumaShort	../../source/common/predict.h	/^    void predInterLumaShort(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const;$/;"	p	class:X265_NS::Predict	access:public	signature:(const PredictionUnit& pu, ShortYuv& dstSYuv, const PicYuv& refPic, const MV& mv) const
predInterSearch	../../source/encoder/search.cpp	/^void Search::predInterSearch(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t refMasks[2])$/;"	f	class:Search	signature:(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t refMasks[2])
predInterSearch	../../source/encoder/search.h	/^    void     predInterSearch(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t masks[2]);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const CUGeom& cuGeom, bool bChromaMC, uint32_t masks[2])
predIntraChromaAng	../../source/common/predict.cpp	/^void Predict::predIntraChromaAng(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSizeC)$/;"	f	class:Predict	signature:(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSizeC)
predIntraChromaAng	../../source/common/predict.h	/^    void predIntraChromaAng(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSizeC);$/;"	p	class:X265_NS::Predict	access:public	signature:(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSizeC)
predIntraLumaAng	../../source/common/predict.cpp	/^void Predict::predIntraLumaAng(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSize)$/;"	f	class:Predict	signature:(uint32_t dirMode, pixel* dst, intptr_t stride, uint32_t log2TrSize)
predIntraLumaAng	../../source/common/predict.h	/^    void predIntraLumaAng(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSize);$/;"	p	class:X265_NS::Predict	access:public	signature:(uint32_t dirMode, pixel* pred, intptr_t stride, uint32_t log2TrSize)
predYuv	../../source/encoder/search.h	/^    Yuv        predYuv;$/;"	m	struct:X265_NS::Mode	access:public
predictRowsSizeSum	../../source/encoder/ratecontrol.cpp	/^double RateControl::predictRowsSizeSum(Frame* curFrame, RateControlEntry* rce, double qpVbv, int32_t& encodedBitsSoFar)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce, double qpVbv, int32_t& encodedBitsSoFar)
predictRowsSizeSum	../../source/encoder/ratecontrol.h	/^    double predictRowsSizeSum(Frame* pic, RateControlEntry* rce, double qpm, int32_t& encodedBits);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame* pic, RateControlEntry* rce, double qpm, int32_t& encodedBits)
predictSize	../../source/encoder/ratecontrol.cpp	/^double RateControl::predictSize(Predictor *p, double q, double var)$/;"	f	class:RateControl	signature:(Predictor *p, double q, double var)
predictSize	../../source/encoder/ratecontrol.h	/^    double predictSize(Predictor *p, double q, double var);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Predictor *p, double q, double var)
predictorDifference	../../source/encoder/motion.cpp	/^inline int predictorDifference(const MV *mvc, intptr_t numCandidates)$/;"	f	namespace:__anon23	signature:(const MV *mvc, intptr_t numCandidates)
prepareEncode	../../source/encoder/dpb.cpp	/^void DPB::prepareEncode(Frame *newFrame)$/;"	f	class:DPB	signature:(Frame *newFrame)
prepareEncode	../../source/encoder/dpb.h	/^    void prepareEncode(Frame*);$/;"	p	class:X265_NS::DPB	access:public	signature:(Frame*)
primitives	../../source/common/primitives.cpp	/^EncoderPrimitives primitives;$/;"	m	namespace:X265_NS	file:
printReconfigureParams	../../source/encoder/encoder.cpp	/^void Encoder::printReconfigureParams()$/;"	f	class:Encoder	signature:()
printReconfigureParams	../../source/encoder/encoder.h	/^    void printReconfigureParams();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
printSummary	../../source/encoder/encoder.cpp	/^void Encoder::printSummary()$/;"	f	class:Encoder	signature:()
printSummary	../../source/encoder/encoder.h	/^    void printSummary();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
prior	../../source/encoder/encoder.h	/^    RPSListNode* prior;$/;"	m	struct:X265_NS::RPSListNode	access:public
processDefaultMarix	../../source/common/scalinglist.cpp	/^void ScalingList::processDefaultMarix(int sizeId, int listId)$/;"	f	class:X265_NS::ScalingList	signature:(int sizeId, int listId)
processDefaultMarix	../../source/common/scalinglist.h	/^    void     processDefaultMarix(int sizeId, int listId);$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int sizeId, int listId)
processPME	../../source/encoder/search.cpp	/^void Search::processPME(PME& pme, Search& slave)$/;"	f	class:Search	signature:(PME& pme, Search& slave)
processPME	../../source/encoder/search.h	/^    void     processPME(PME& pme, Search& slave);$/;"	p	class:X265_NS::Search	access:public	signature:(PME& pme, Search& slave)
processPmode	../../source/encoder/analysis.cpp	/^void Analysis::processPmode(PMODE& pmode, Analysis& slave)$/;"	f	class:Analysis	signature:(PMODE& pmode, Analysis& slave)
processPmode	../../source/encoder/analysis.h	/^    void processPmode(PMODE& pmode, Analysis& slave);$/;"	p	class:X265_NS::Analysis	access:public	signature:(PMODE& pmode, Analysis& slave)
processPostCu	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::processPostCu(int col) const$/;"	f	class:FrameFilter::ParallelFilter	signature:(int col) const
processPostCu	../../source/encoder/framefilter.h	/^        void processPostCu(int col) const;$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(int col) const
processPostRow	../../source/encoder/framefilter.cpp	/^void FrameFilter::processPostRow(int row)$/;"	f	class:FrameFilter	signature:(int row)
processPostRow	../../source/encoder/framefilter.h	/^    void processPostRow(int row);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(int row)
processRow	../../source/common/wavefront.h	/^    virtual void processRow(int row, int threadId) = 0;$/;"	p	class:X265_NS::WaveFront	access:public	signature:(int row, int threadId)
processRow	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::processRow(int row, int threadId)$/;"	f	class:X265_NS::FrameEncoder	signature:(int row, int threadId)
processRow	../../source/encoder/frameencoder.h	/^    virtual void processRow(int row, int threadId);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(int row, int threadId)
processRow	../../source/encoder/framefilter.cpp	/^void FrameFilter::processRow(int row)$/;"	f	class:FrameFilter	signature:(int row)
processRow	../../source/encoder/framefilter.h	/^    void processRow(int row);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(int row)
processRowEncoder	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::processRowEncoder(int intRow, ThreadLocalData& tld)$/;"	f	class:X265_NS::FrameEncoder	signature:(int intRow, ThreadLocalData& tld)
processRowEncoder	../../source/encoder/frameencoder.h	/^    virtual void processRowEncoder(int row, ThreadLocalData& tld);$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:(int row, ThreadLocalData& tld)
processSaoCTU	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::processSaoCTU(SAOParam *saoParam, int col)$/;"	f	class:FrameFilter::ParallelFilter	signature:(SAOParam *saoParam, int col)
processSaoCTU	../../source/encoder/framefilter.h	/^        void processSaoCTU(SAOParam *saoParam, int col);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(SAOParam *saoParam, int col)
processSaoCUB0	../../source/common/loopfilter.cpp	/^static void processSaoCUB0(pixel* rec, const int8_t* offset, int ctuWidth, int ctuHeight, intptr_t stride)$/;"	f	namespace:__anon2	signature:(pixel* rec, const int8_t* offset, int ctuWidth, int ctuHeight, intptr_t stride)
processSaoCUE0	../../source/common/loopfilter.cpp	/^static void processSaoCUE0(pixel * rec, int8_t * offsetEo, int width, int8_t* signLeft, intptr_t stride)$/;"	f	namespace:__anon2	signature:(pixel * rec, int8_t * offsetEo, int width, int8_t* signLeft, intptr_t stride)
processSaoCUE1	../../source/common/loopfilter.cpp	/^static void processSaoCUE1(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)$/;"	f	namespace:__anon2	signature:(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)
processSaoCUE1_2Rows	../../source/common/loopfilter.cpp	/^static void processSaoCUE1_2Rows(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)$/;"	f	namespace:__anon2	signature:(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width)
processSaoCUE2	../../source/common/loopfilter.cpp	/^static void processSaoCUE2(pixel * rec, int8_t * bufft, int8_t * buff1, int8_t * offsetEo, int width, intptr_t stride)$/;"	f	namespace:__anon2	signature:(pixel * rec, int8_t * bufft, int8_t * buff1, int8_t * offsetEo, int width, intptr_t stride)
processSaoCUE3	../../source/common/loopfilter.cpp	/^static void processSaoCUE3(pixel *rec, int8_t *upBuff1, int8_t *offsetEo, intptr_t stride, int startX, int endX)$/;"	f	namespace:__anon2	signature:(pixel *rec, int8_t *upBuff1, int8_t *offsetEo, intptr_t stride, int startX, int endX)
processSaoUnitRow	../../source/encoder/sao.h	/^    void processSaoUnitRow(SaoCtuParam* ctuParam, int idxY, int plane);$/;"	p	class:X265_NS::SAO	access:public	signature:(SaoCtuParam* ctuParam, int idxY, int plane)
processScalingListDec	../../source/common/scalinglist.cpp	/^void ScalingList::processScalingListDec(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width,$/;"	f	class:X265_NS::ScalingList	signature:(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width, int ratio, int stride, int32_t dc)
processScalingListDec	../../source/common/scalinglist.h	/^    void     processScalingListDec(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width, int ratio, int stride, int32_t dc);$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int32_t *coeff, int32_t *dequantcoeff, int32_t invQuantScales, int height, int width, int ratio, int stride, int32_t dc)
processScalingListEnc	../../source/common/scalinglist.cpp	/^void ScalingList::processScalingListEnc(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width,$/;"	f	class:X265_NS::ScalingList	signature:(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width, int ratio, int stride, int32_t dc)
processScalingListEnc	../../source/common/scalinglist.h	/^    void     processScalingListEnc(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width, int ratio, int stride, int32_t dc);$/;"	p	class:X265_NS::ScalingList	access:protected	signature:(int32_t *coeff, int32_t *quantcoeff, int32_t quantScales, int height, int width, int ratio, int stride, int32_t dc)
processTasks	../../source/common/threadpool.h	/^    virtual void processTasks(int workerThreadId) = 0;$/;"	p	class:X265_NS::BondedTaskGroup	access:public	signature:(int workerThreadId)
processTasks	../../source/encoder/analysis.cpp	/^void Analysis::PMODE::processTasks(int workerThreadId)$/;"	f	class:Analysis::PMODE	signature:(int workerThreadId)
processTasks	../../source/encoder/analysis.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::Analysis::PMODE	access:public	signature:(int workerThreadId)
processTasks	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::WeightAnalysis::processTasks(int \/* workerThreadId *\/)$/;"	f	class:X265_NS::FrameEncoder::WeightAnalysis	signature:(int )
processTasks	../../source/encoder/frameencoder.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::FrameEncoder::WeightAnalysis	access:public	signature:(int workerThreadId)
processTasks	../../source/encoder/framefilter.cpp	/^void FrameFilter::ParallelFilter::processTasks(int \/*workerThreadId*\/)$/;"	f	class:FrameFilter::ParallelFilter	signature:(int )
processTasks	../../source/encoder/framefilter.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:(int workerThreadId)
processTasks	../../source/encoder/search.cpp	/^void Search::PME::processTasks(int workerThreadId)$/;"	f	class:Search::PME	signature:(int workerThreadId)
processTasks	../../source/encoder/search.h	/^        void processTasks(int workerThreadId);$/;"	p	class:X265_NS::Search::PME	access:public	signature:(int workerThreadId)
processTasks	../../source/encoder/slicetype.cpp	/^void CostEstimateGroup::processTasks(int workerThreadID)$/;"	f	class:CostEstimateGroup	signature:(int workerThreadID)
processTasks	../../source/encoder/slicetype.cpp	/^void PreLookaheadGroup::processTasks(int workerThreadID)$/;"	f	class:PreLookaheadGroup	signature:(int workerThreadID)
processTasks	../../source/encoder/slicetype.h	/^    void    processTasks(int workerThreadID);$/;"	p	class:X265_NS::CostEstimateGroup	access:protected	signature:(int workerThreadID)
processTasks	../../source/encoder/slicetype.h	/^    void processTasks(int workerThreadID);$/;"	p	class:X265_NS::PreLookaheadGroup	access:public	signature:(int workerThreadID)
profileCompatibilityFlag	../../source/common/slice.h	/^    bool     profileCompatibilityFlag[32];$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
profileIdc	../../source/common/slice.h	/^    int      profileIdc;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
progressiveSourceFlag	../../source/common/slice.h	/^    bool     progressiveSourceFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
propagateCost	../../source/common/lowres.h	/^    uint16_t* propagateCost;$/;"	m	struct:X265_NS::Lowres	access:public
propagateCost	../../source/common/primitives.h	/^    cutree_propagate_cost propagateCost;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
propagateRatio	../../source/common/lowres.h	/^    double propagateRatio;$/;"	m	struct:X265_NS::Lowres	access:public
pshufb	../../source/common/x86/intrapred8_allangs.asm	/^pshufb       m6,         m1,        m4$/;"	l
pshufb	../../source/common/x86/intrapred8_allangs.asm	/^pshufb       m6,         m3,       m5$/;"	l
pshufb	../../source/common/x86/intrapred8_allangs.asm	/^pshufb       m6,         m4$/;"	l
pshufb	../../source/common/x86/intrapred8_allangs.asm	/^pshufb       m6,         m7,        m5$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m0,            m0,         0$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m0,            m0,         2$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m0,            m0,       0$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m0,        m0,        2$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m2,            m2,         2$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m4,            m4,         2$/;"	l
pshufd	../../source/common/x86/blockcopy8.asm	/^pshufd     m6,            m6,         2$/;"	l
pshufd	../../source/common/x86/intrapred8_allangs.asm	/^pshufd       m3,         m1,        0$/;"	l
pshufd	../../source/common/x86/intrapred8_allangs.asm	/^pshufd       m4,         m3,        0$/;"	l
pshufd	../../source/common/x86/intrapred8_allangs.asm	/^pshufd       m4,         m7,        0$/;"	l
pshufd	../../source/common/x86/intrapred8_allangs.asm	/^pshufd       m5,         m5,        0$/;"	l
pshuflw	../../source/common/x86/blockcopy8.asm	/^pshuflw    m0,            m0,         0$/;"	l
pshuflw	../../source/common/x86/blockcopy8.asm	/^pshuflw    m0,            m0,       0$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m1,         2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m1,        m0,         1$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m1,        m1,         2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m3,         m1,         1$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m3,         m1,         2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m4,         1$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m4,         2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m4,         m3,         1$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m4,         m3,         2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m4,         m5,         2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m5,         m1,        2$/;"	l
pslldq	../../source/common/x86/intrapred8_allangs.asm	/^pslldq        m6,         m3,        2$/;"	l
psraw	../../source/common/x86/intrapred8_allangs.asm	/^psraw        m4,         1$/;"	l
psraw	../../source/common/x86/intrapred8_allangs.asm	/^psraw        m5,         1$/;"	l
psrldq	../../source/common/x86/intrapred8_allangs.asm	/^psrldq        m4,         2$/;"	l
psrldq	../../source/common/x86/intrapred8_allangs.asm	/^psrldq    m7,      1$/;"	l
psubw	../../source/common/x86/intrapred8_allangs.asm	/^psubw        m4,         m6$/;"	l
psubw	../../source/common/x86/intrapred8_allangs.asm	/^psubw        m5,         m6$/;"	l
psyCost	../../source/encoder/rdcost.h	/^    inline int psyCost(int size, const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(int size, const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride) const
psyCost_4x4_neon	../../source/common/arm/pixel-util.h	/^int PFX(psyCost_4x4_neon)(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride);$/;"	p	signature:(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride)
psyCost_8x8_neon	../../source/common/arm/pixel-util.h	/^int PFX(psyCost_8x8_neon)(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride);$/;"	p	signature:(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride)
psyCost_pp	../../source/common/pixel.cpp	/^int psyCost_pp(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride)$/;"	f	namespace:__anon31	signature:(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride)
psyEnergy	../../source/common/framedata.h	/^    uint64_t    psyEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
psyEnergy	../../source/encoder/search.h	/^    uint32_t    psyEnergy;  \/\/ sum of partition psycho-visual energy difference$/;"	m	struct:X265_NS::Mode	access:public
psy_cost_pp	../../source/common/primitives.h	/^        pixelcmp_t      psy_cost_pp;   \/\/ difference in AC energy between two pixel blocks$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
ptl	../../source/common/slice.h	/^    ProfileTierLevel ptl;$/;"	m	struct:X265_NS::VPS	access:public
pu	../../source/common/primitives.h	/^        pu[NUM_PU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma	typeref:struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
pu	../../source/common/primitives.h	/^    pu[NUM_PU_SIZES];$/;"	m	struct:X265_NS::EncoderPrimitives	typeref:struct:X265_NS::EncoderPrimitives::PU	access:public
pu	../../source/encoder/search.h	/^        const PredictionUnit& pu;$/;"	m	class:X265_NS::Search::PME	access:public
puAbsPartIdx	../../source/common/predict.h	/^    uint32_t     puAbsPartIdx; \/\/ z-order offset of current PU with its CU$/;"	m	struct:X265_NS::PredictionUnit	access:public
puIdx	../../source/encoder/search.h	/^        int           puIdx;$/;"	m	class:X265_NS::Search::PME	access:public
punpckhbw	../../source/common/x86/blockcopy8.asm	/^punpckhbw  m1,                 m0$/;"	l
punpcklbw	../../source/common/x86/intrapred8_allangs.asm	/^punpcklbw     m1,         m3$/;"	l
punpcklbw	../../source/common/x86/intrapred8_allangs.asm	/^punpcklbw     m1,        m0$/;"	l
punpcklbw	../../source/common/x86/intrapred8_allangs.asm	/^punpcklbw    m4,         m5$/;"	l
punpcklbw	../../source/common/x86/intrapred8_allangs.asm	/^punpcklbw    m5,         m4$/;"	l
punpcklbw	../../source/common/x86/intrapred8_allangs.asm	/^punpcklbw    m6,         m4$/;"	l
punpcklbw	../../source/common/x86/intrapred8_allangs.asm	/^punpcklbw    m6,         m5$/;"	l
pushBack	../../source/common/piclist.cpp	/^void PicList::pushBack(Frame& curFrame)$/;"	f	class:PicList	signature:(Frame& curFrame)
pushBack	../../source/common/piclist.h	/^    void pushBack(Frame& pic);$/;"	p	class:X265_NS::PicList	access:public	signature:(Frame& pic)
pushFront	../../source/common/piclist.cpp	/^void PicList::pushFront(Frame& curFrame)$/;"	f	class:PicList	signature:(Frame& curFrame)
pushFront	../../source/common/piclist.h	/^    void pushFront(Frame& pic);$/;"	p	class:X265_NS::PicList	access:public	signature:(Frame& pic)
push_back	../../source/common/bitstream.cpp	/^void Bitstream::push_back(uint8_t val)$/;"	f	class:Bitstream	signature:(uint8_t val)
push_back	../../source/common/bitstream.h	/^    void     push_back(uint8_t val);$/;"	p	class:X265_NS::Bitstream	access:private	signature:(uint8_t val)
pw_dst4_tab	../../source/common/x86/dct8.asm	/^pw_dst4_tab:    times 4 dw 29,  55,  74,  84$/;"	l
pw_idst4_tab	../../source/common/x86/dct8.asm	/^pw_idst4_tab:   times 4 dw  29,  84$/;"	l
pw_planar4_0	../../source/common/x86/intrapred16.asm	/^pw_planar4_0:                       dw  3,  2,  1,  0,  3,  2,  1,  0$/;"	d
pw_planar4_0	../../source/common/x86/intrapred8.asm	/^pw_planar4_0:         dw 3,  2,  1,  0,  3,  2,  1,  0$/;"	d
pw_tr16	../../source/common/arm/dct-a.S	/^pw_tr16: .hword 90, 87, 80, 70,  57, 43, 25,  9     \/\/ q0 = [ 9 25 43 57 70 80 87 90]$/;"	l
pxor	../../source/common/x86/blockcopy8.asm	/^pxor       m0,      m0$/;"	l
pxor	../../source/common/x86/intrapred8_allangs.asm	/^pxor         m4,         m4$/;"	l
pxor	../../source/common/x86/intrapred8_allangs.asm	/^pxor         m5,         m5$/;"	l
pyramidCutreeFinish	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidCutreeFinish(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb)$/;"	f	class:Lookahead	signature:(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb)
pyramidCutreeFinish	../../source/encoder/slicetype.h	/^    void    pyramidCutreeFinish(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb)
pyramidEstimateCUPropagate	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidEstimateCUPropagate(Lowres **frames, double averageDuration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip)$/;"	f	class:Lookahead	signature:(Lowres **frames, double averageDuration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip)
pyramidEstimateCUPropagate	../../source/encoder/slicetype.h	/^    void    pyramidEstimateCUPropagate(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip = false);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, double average_duration, int temporalLayer, int p0, int p1, int curnonb, int lastnonb, bool list0Skip = false)
pyramidEstimateFrameCost	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidEstimateFrameCost(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost)$/;"	f	class:Lookahead	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost)
pyramidEstimateFrameCost	../../source/encoder/slicetype.h	/^    void    pyramidEstimateFrameCost(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost=NULL);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t *pyramidCost, int64_t *pyramidScaleAqCost=NULL)
pyramidInsertBref	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidInsertBref(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum)$/;"	f	class:Lookahead	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum)
pyramidInsertBref	../../source/encoder/slicetype.h	/^    void    pyramidInsertBref(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int &refNum)
pyramidRatecontrolEstimateMinigop	../../source/encoder/slicetype.cpp	/^void  Lookahead::pyramidRatecontrolEstimateMinigop(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt)$/;"	f	class:Lookahead	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt)
pyramidRatecontrolEstimateMinigop	../../source/encoder/slicetype.h	/^    void    pyramidRatecontrolEstimateMinigop(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int temporalLayer, int p0, int p1, int64_t &bfCost, int64_t &bCost, int &bfCnt, int &bCnt)
pyramidSetFrameOrderForEncode	../../source/encoder/slicetype.cpp	/^void Lookahead::pyramidSetFrameOrderForEncode(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx)$/;"	f	class:Lookahead	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx)
pyramidSetFrameOrderForEncode	../../source/encoder/slicetype.h	/^    void    pyramidSetFrameOrderForEncode(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Frame **pFrameList, int firstNonrefIdx, int lastRefIdx, int temporalLayer, int64_t *pPts, int &ptsIdx)
qRceq	../../source/common/frame.h	/^    double   qRceq;$/;"	m	struct:X265_NS::RcStats	access:public
qRceq	../../source/encoder/ratecontrol.h	/^    double  qRceq;$/;"	m	struct:X265_NS::RateControlEntry	access:public
qScale	../../source/common/frame.h	/^    double   qScale;$/;"	m	struct:X265_NS::RcStats	access:public
qScale	../../source/encoder/ratecontrol.h	/^    double   qScale;$/;"	m	struct:X265_NS::RateControlEntry	access:public
qScale2bits	../../source/encoder/ratecontrol.cpp	/^inline double qScale2bits(RateControlEntry *rce, double qScale, const double expCoeffBits, const double expMvBits, const double expMiscBits)$/;"	f	namespace:__anon4	signature:(RateControlEntry *rce, double qScale, const double expCoeffBits, const double expMvBits, const double expMiscBits)
qp	../../source/common/quant.h	/^    int qp;$/;"	m	struct:X265_NS::QpParam	access:public
qpAq	../../source/common/frame.h	/^    double   qpAq;$/;"	m	struct:X265_NS::RcStats	access:public
qpAq	../../source/encoder/ratecontrol.h	/^    double  qpAq;$/;"	m	struct:X265_NS::RateControlEntry	access:public
qpAqOffset	../../source/common/lowres.h	/^    double*   qpAqOffset;      \/\/ AQ QP offset values for each 16x16 CU$/;"	m	struct:X265_NS::Lowres	access:public
qpBufValid	../../source/encoder/ratecontrol.h	/^        uint8_t qpBufValid;      \/* In order to handle pyramid reordering, QP buffer acts as a stack.$/;"	m	struct:X265_NS::RateControl::__anon19	access:public
qpBuffer	../../source/encoder/ratecontrol.h	/^        uint16_t *qpBuffer[MAX_TLAYER+1];$/;"	m	struct:X265_NS::RateControl::__anon19	access:public
qpCuTreeOffset	../../source/common/lowres.h	/^    double*   qpCuTreeOffset;  \/\/ cuTree QP offset values for each 16x16 CU$/;"	m	struct:X265_NS::Lowres	access:public
qpCuTreeOffsetPure	../../source/common/lowres.h	/^    double*   qpCuTreeOffsetPure;$/;"	m	struct:X265_NS::Lowres	access:public
qpNoVbv	../../source/common/frame.h	/^    double   qpNoVbv;$/;"	m	struct:X265_NS::RcStats	access:public
qpNoVbv	../../source/encoder/ratecontrol.h	/^    double  qpNoVbv;$/;"	m	struct:X265_NS::RateControlEntry	access:public
qpOffsetAvg	../../source/common/lowres.h	/^    double qpOffsetAvg;$/;"	m	struct:X265_NS::Lowres	access:public
qpOffsetCutreeAvg	../../source/common/lowres.h	/^    double qpOffsetCutreeAvg;$/;"	m	struct:X265_NS::Lowres	access:public
qpPrev	../../source/encoder/ratecontrol.h	/^    double  qpPrev;$/;"	m	struct:X265_NS::RateControlEntry	access:public
qpaRc	../../source/common/frame.h	/^    double   qpaRc;$/;"	m	struct:X265_NS::RcStats	access:public
qpaRc	../../source/encoder/ratecontrol.h	/^    double  qpaRc;$/;"	m	struct:X265_NS::RateControlEntry	access:public
qpel_dirs	../../source/encoder/motion.cpp	/^    int qpel_dirs;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
qpel_iters	../../source/encoder/motion.cpp	/^    int qpel_iters;$/;"	m	struct:__anon23::SubpelWorkload	file:	access:public
qprdRefine	../../source/encoder/analysis.cpp	/^void Analysis::qprdRefine(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)
qprdRefine	../../source/encoder/analysis.h	/^    void qprdRefine(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)
quadtreeTULog2MaxSize	../../source/common/slice.h	/^    uint32_t quadtreeTULog2MaxSize;$/;"	m	struct:X265_NS::SPS	access:public
quadtreeTULog2MinSize	../../source/common/slice.h	/^    uint32_t quadtreeTULog2MinSize;$/;"	m	struct:X265_NS::SPS	access:public
quadtreeTUMaxDepthInter	../../source/common/slice.h	/^    uint32_t quadtreeTUMaxDepthInter; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
quadtreeTUMaxDepthIntra	../../source/common/slice.h	/^    uint32_t quadtreeTUMaxDepthIntra; \/\/ use param$/;"	m	struct:X265_NS::SPS	access:public
quant	../../source/common/primitives.h	/^    quant_t               quant;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
quantInterDefault8x8	../../source/common/scalinglist.cpp	/^static int quantInterDefault8x8[64] =$/;"	m	namespace:__anon15	file:
quantIntraDefault8x8	../../source/common/scalinglist.cpp	/^static int quantIntraDefault8x8[64] =$/;"	m	namespace:__anon15	file:
quantTSDefault4x4	../../source/common/scalinglist.cpp	/^static int quantTSDefault4x4[16] =$/;"	m	namespace:__anon15	file:
quant_altivec	../../source/common/ppc/dct_altivec.cpp	/^static uint32_t quant_altivec(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff)$/;"	f	file:	signature:(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff)
quant_c	../../source/common/dct.cpp	/^static uint32_t quant_c(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff)$/;"	f	file:	signature:(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff)
quant_t	../../source/common/primitives.h	/^typedef uint32_t (*quant_t)(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff);$/;"	t	namespace:X265_NS
rateControlEnd	../../source/encoder/ratecontrol.cpp	/^int RateControl::rateControlEnd(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler)$/;"	f	class:RateControl	signature:(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler)
rateControlEnd	../../source/encoder/ratecontrol.h	/^    int  rateControlEnd(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, int64_t bits, RateControlEntry* rce, int *filler)
rateControlSliceType	../../source/encoder/ratecontrol.cpp	/^int RateControl::rateControlSliceType(int frameNum)$/;"	f	class:RateControl	signature:(int frameNum)
rateControlSliceType	../../source/encoder/ratecontrol.h	/^    int  rateControlSliceType(int frameNum);$/;"	p	class:X265_NS::RateControl	access:public	signature:(int frameNum)
rateControlStart	../../source/encoder/ratecontrol.cpp	/^int RateControl::rateControlStart(Frame* curFrame, RateControlEntry* rce, Encoder* enc)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce, Encoder* enc)
rateControlStart	../../source/encoder/ratecontrol.h	/^    int  rateControlStart(Frame* curFrame, RateControlEntry* rce, Encoder* enc);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, RateControlEntry* rce, Encoder* enc)
rateControlUpdateStats	../../source/encoder/ratecontrol.cpp	/^void RateControl::rateControlUpdateStats(RateControlEntry* rce)$/;"	f	class:RateControl	signature:(RateControlEntry* rce)
rateControlUpdateStats	../../source/encoder/ratecontrol.h	/^    void rateControlUpdateStats(RateControlEntry* rce);$/;"	p	class:X265_NS::RateControl	access:public	signature:(RateControlEntry* rce)
rateDenom	../../source/input/y4m.h	/^    uint32_t rateDenom;$/;"	m	class:X265_NS::Y4MInput	access:protected
rateEstimateQscale	../../source/encoder/ratecontrol.cpp	/^double RateControl::rateEstimateQscale(Frame* curFrame, RateControlEntry *rce, Encoder *enc)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry *rce, Encoder *enc)
rateEstimateQscale	../../source/encoder/ratecontrol.h	/^    double rateEstimateQscale(Frame* curFrame, RateControlEntry *rce, Encoder *enc);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Frame* curFrame, RateControlEntry *rce, Encoder *enc)
rateNum	../../source/input/y4m.h	/^    uint32_t rateNum;$/;"	m	class:X265_NS::Y4MInput	access:protected
rdCost	../../source/encoder/search.h	/^    uint64_t    rdCost;     \/\/ sum of partition (psy) RD costs          (sse(fenc, recon) + lambda2 * bits)$/;"	m	struct:X265_NS::Mode	access:public
rdcost	../../source/encoder/search.h	/^        uint64_t rdcost;$/;"	m	struct:X265_NS::Search::Cost	access:public
rdoQuant	../../source/common/quant.cpp	/^uint32_t Quant::rdoQuant(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy)$/;"	f	class:Quant	signature:(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy)
rdoQuant	../../source/common/quant.h	/^    uint32_t rdoQuant(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy);$/;"	p	class:X265_NS::Quant	access:protected	signature:(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy)
rdoQuant_func	../../source/common/quant.h	/^    static rdoQuant_t rdoQuant_func[NUM_CU_DEPTH];$/;"	m	class:X265_NS::Quant	access:private
rdoQuant_t	../../source/common/quant.h	/^    typedef uint32_t (Quant::*rdoQuant_t)(const CUData& cu, int16_t* dstCoeff, TextType ttype, uint32_t absPartIdx, bool usePsy);$/;"	t	class:X265_NS::Quant	access:public
rdoSaoUnitCu	../../source/encoder/sao.cpp	/^void SAO::rdoSaoUnitCu(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr)$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr)
rdoSaoUnitCu	../../source/encoder/sao.h	/^    void rdoSaoUnitCu(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam, int rowBaseAddr, int idxX, int addr)
rdoSaoUnitRowEnd	../../source/encoder/sao.cpp	/^void SAO::rdoSaoUnitRowEnd(const SAOParam* saoParam, int numctus)$/;"	f	class:X265_NS::SAO	signature:(const SAOParam* saoParam, int numctus)
rdoSaoUnitRowEnd	../../source/encoder/sao.h	/^    void rdoSaoUnitRowEnd(const SAOParam* saoParam, int numctus);$/;"	p	class:X265_NS::SAO	access:public	signature:(const SAOParam* saoParam, int numctus)
readAnalysis2PassFile	../../source/encoder/encoder.cpp	/^void Encoder::readAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, int curPoc, int sliceType)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis2Pass, int curPoc, int sliceType)
readAnalysis2PassFile	../../source/encoder/encoder.h	/^    void readAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, int poc, int sliceType);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis2Pass, int poc, int sliceType)
readAnalysisFile	../../source/encoder/encoder.cpp	/^void Encoder::readAnalysisFile(x265_analysis_data* analysis, int curPoc, const x265_picture* picIn)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis, int curPoc, const x265_picture* picIn)
readAnalysisFile	../../source/encoder/encoder.h	/^    void readAnalysisFile(x265_analysis_data* analysis, int poc, const x265_picture* picIn);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* analysis, int poc, const x265_picture* picIn)
readCount	../../source/input/y4m.h	/^    ThreadSafeInteger readCount;$/;"	m	class:X265_NS::Y4MInput	access:protected
readCount	../../source/input/yuv.h	/^    ThreadSafeInteger readCount;$/;"	m	class:X265_NS::YUVInput	access:protected
readCount	../../source/output/reconplay.h	/^    ThreadSafeInteger readCount;$/;"	m	class:X265_NS::ReconPlay	access:protected
readPicture	../../source/input/input.h	/^    virtual bool readPicture(x265_picture& pic) = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:(x265_picture& pic)
readPicture	../../source/input/y4m.cpp	/^bool Y4MInput::readPicture(x265_picture& pic)$/;"	f	class:Y4MInput	signature:(x265_picture& pic)
readPicture	../../source/input/y4m.h	/^    bool readPicture(x265_picture&);$/;"	p	class:X265_NS::Y4MInput	access:public	signature:(x265_picture&)
readPicture	../../source/input/yuv.cpp	/^bool YUVInput::readPicture(x265_picture& pic)$/;"	f	class:YUVInput	signature:(x265_picture& pic)
readPicture	../../source/input/yuv.h	/^    bool readPicture(x265_picture&);$/;"	p	class:X265_NS::YUVInput	access:public	signature:(x265_picture&)
realEndAddress	../../source/common/slice.cpp	/^uint32_t Slice::realEndAddress(uint32_t endCUAddr) const$/;"	f	class:Slice	signature:(uint32_t endCUAddr) const
realEndAddress	../../source/common/slice.h	/^    uint32_t realEndAddress(uint32_t endCUAddr) const;$/;"	p	class:X265_NS::Slice	access:public	signature:(uint32_t endCUAddr) const
recodeCU	../../source/encoder/analysis.cpp	/^void Analysis::recodeCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t lqp)
recodeCU	../../source/encoder/analysis.h	/^    void recodeCU(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t origqp = -1);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, int32_t qp, int32_t origqp = -1)
reconPic	../../source/common/lowres.h	/^    PicYuv*  reconPic;$/;"	m	struct:X265_NS::ReferencePlanes	access:public
reconQtYuv	../../source/encoder/search.h	/^    Yuv      reconQtYuv;   \/* recon storage for entire CTU for each RQT layer (intra) *\/$/;"	m	struct:X265_NS::RQTData	access:public
reconYuv	../../source/encoder/search.h	/^    Yuv        reconYuv;$/;"	m	struct:X265_NS::Mode	access:public
reconfigureParam	../../source/encoder/encoder.cpp	/^int Encoder::reconfigureParam(x265_param* encParam, x265_param* param)$/;"	f	class:Encoder	signature:(x265_param* encParam, x265_param* param)
reconfigureParam	../../source/encoder/encoder.h	/^    int reconfigureParam(x265_param* encParam, x265_param* param);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_param* encParam, x265_param* param)
reconfigureRC	../../source/encoder/ratecontrol.cpp	/^void RateControl::reconfigureRC()$/;"	f	class:RateControl	signature:()
reconfigureRC	../../source/encoder/ratecontrol.h	/^    void reconfigureRC();$/;"	p	class:X265_NS::RateControl	access:public	signature:()
recursionDepthCheck	../../source/encoder/analysis.cpp	/^bool Analysis::recursionDepthCheck(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode)
recursionDepthCheck	../../source/encoder/analysis.h	/^    bool recursionDepthCheck(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom, const Mode& bestMode)
recycleUnreferenced	../../source/encoder/dpb.cpp	/^void DPB::recycleUnreferenced()$/;"	f	class:DPB	signature:()
recycleUnreferenced	../../source/encoder/dpb.h	/^    void recycleUnreferenced();$/;"	p	class:X265_NS::DPB	access:public	signature:()
ref	../../source/common/framedata.h	/^    int32_t*      ref[2];$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
ref	../../source/common/framedata.h	/^    int32_t*    ref;$/;"	m	struct:X265_NS::analysis_inter_data	access:public
ref	../../source/encoder/search.h	/^            int ref[2][MAX_NUM_REF];$/;"	m	struct:X265_NS::Search::PME::__anon2	access:public
ref	../../source/encoder/search.h	/^    int8_t   ref;$/;"	m	struct:X265_NS::MotionData	access:public
refCnt	../../source/encoder/search.h	/^            int refCnt[2];$/;"	m	struct:X265_NS::Search::PME::__anon2	access:public
refIdx	../../source/common/cudata.h	/^    int refIdx;$/;"	m	struct:X265_NS::MVField	access:public
refIdx	../../source/common/cudata.h	/^    union { int16_t refIdx[2]; int32_t unifiedRef; };$/;"	m	union:X265_NS::InterNeighbourMV::__anon7	access:public
refIdx	../../source/common/framedata.h	/^    int8_t*     refIdx[2];$/;"	m	struct:X265_NS::analysis_inter_data	access:public
refineMV	../../source/encoder/motion.cpp	/^void MotionEstimate::refineMV(ReferencePlanes* ref,$/;"	f	class:MotionEstimate	signature:(ReferencePlanes* ref, const MV& mvmin, const MV& mvmax, const MV& qmvp, MV& outQMv)
refineMV	../../source/encoder/motion.h	/^    void refineMV(ReferencePlanes* ref, const MV& mvmin, const MV& mvmax, const MV& qmvp, MV& outQMv);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(ReferencePlanes* ref, const MV& mvmin, const MV& mvmax, const MV& qmvp, MV& outQMv)
reinit	../../source/common/frame.cpp	/^void Frame::reinit(const SPS& sps)$/;"	f	class:Frame	signature:(const SPS& sps)
reinit	../../source/common/frame.h	/^    void reinit(const SPS& sps);$/;"	p	class:X265_NS::Frame	access:public	signature:(const SPS& sps)
reinit	../../source/common/framedata.cpp	/^void FrameData::reinit(const SPS& sps)$/;"	f	class:FrameData	signature:(const SPS& sps)
reinit	../../source/common/framedata.h	/^    void reinit(const SPS& sps);$/;"	p	class:X265_NS::FrameData	access:public	signature:(const SPS& sps)
release	../../source/common/threading.h	/^    void release()$/;"	f	class:X265_NS::Lock	access:public	signature:()
release	../../source/input/input.h	/^    virtual void release() = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:()
release	../../source/input/y4m.cpp	/^void Y4MInput::release()$/;"	f	class:Y4MInput	signature:()
release	../../source/input/y4m.h	/^    void release();$/;"	p	class:X265_NS::Y4MInput	access:public	signature:()
release	../../source/input/yuv.cpp	/^void YUVInput::release()$/;"	f	class:YUVInput	signature:()
release	../../source/input/yuv.h	/^    void release();$/;"	p	class:X265_NS::YUVInput	access:public	signature:()
release	../../source/output/output.h	/^    virtual void release() = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:()
release	../../source/output/output.h	/^    virtual void release() = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:()
release	../../source/output/raw.h	/^    void release() { delete this; }$/;"	f	class:X265_NS::RAWOutput	access:public	signature:()
release	../../source/output/y4m.h	/^    void release()                                { delete this; }$/;"	f	class:X265_NS::Y4MOutput	access:public	signature:()
release	../../source/output/yuv.h	/^    void release()                                { delete this; }$/;"	f	class:X265_NS::YUVOutput	access:public	signature:()
rem	../../source/common/quant.h	/^    int rem;$/;"	m	struct:X265_NS::QpParam	access:public
remove	../../source/common/piclist.cpp	/^void PicList::remove(Frame& curFrame)$/;"	f	class:PicList	signature:(Frame& curFrame)
remove	../../source/common/piclist.h	/^    void remove(Frame& pic);$/;"	p	class:X265_NS::PicList	access:public	signature:(Frame& pic)
required_argument	../../source/compat/getopt/getopt.h	113;"	d
resEnergy	../../source/common/framedata.h	/^    uint64_t    resEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
resEnergy	../../source/encoder/search.h	/^    sse_t   resEnergy;  \/\/ sum of partition residual energy after motion prediction$/;"	m	struct:X265_NS::Mode	access:public
reset	../../source/common/common.h	/^    void reset()$/;"	f	struct:X265_NS::SaoCtuParam	access:public	signature:()
resetBits	../../source/common/bitstream.h	/^    virtual void     resetBits()                            = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:()
resetBits	../../source/common/bitstream.h	/^    void     resetBits()                     { m_partialByteBits = m_byteOccupancy = 0; m_partialByte = 0; }$/;"	f	class:X265_NS::Bitstream	access:public	signature:()
resetBits	../../source/common/bitstream.h	/^    void     resetBits()                    { m_bitCounter = 0;    }$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
resetBits	../../source/encoder/entropy.cpp	/^void Entropy::resetBits()$/;"	f	class:X265_NS::Entropy	signature:()
resetBits	../../source/encoder/entropy.h	/^    void resetBits();$/;"	p	class:X265_NS::Entropy	access:public	signature:()
resetEntropy	../../source/encoder/entropy.cpp	/^void Entropy::resetEntropy(const Slice& slice)$/;"	f	class:X265_NS::Entropy	signature:(const Slice& slice)
resetEntropy	../../source/encoder/entropy.h	/^    void resetEntropy(const Slice& slice);$/;"	p	class:X265_NS::Entropy	access:public	signature:(const Slice& slice)
resetStats	../../source/encoder/sao.cpp	/^void SAO::resetStats()$/;"	f	class:X265_NS::SAO	signature:()
resetStats	../../source/encoder/sao.h	/^    void resetStats();$/;"	p	class:X265_NS::SAO	access:public	signature:()
resiQtYuv	../../source/encoder/search.h	/^    ShortYuv resiQtYuv;    \/* residual storage for entire CTU for each RQT layer (inter) *\/$/;"	m	struct:X265_NS::RQTData	access:public
residualQTIntraChroma	../../source/encoder/search.cpp	/^void Search::residualQTIntraChroma(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth)
residualQTIntraChroma	../../source/encoder/search.h	/^    void     residualQTIntraChroma(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth)
residualSum	../../source/common/quant.h	/^    uint32_t (*residualSum)[MAX_NUM_TR_COEFFS];$/;"	m	struct:X265_NS::NoiseReduction	access:public
residualTransformQuantInter	../../source/encoder/search.cpp	/^void Search::residualTransformQuantInter(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
residualTransformQuantInter	../../source/encoder/search.h	/^    void     residualTransformQuantInter(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
residualTransformQuantIntra	../../source/encoder/search.cpp	/^void Search::residualTransformQuantIntra(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
residualTransformQuantIntra	../../source/encoder/search.h	/^    void     residualTransformQuantIntra(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2]);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, const uint32_t depthRange[2])
restoreOrigLosslessYuv	../../source/encoder/framefilter.cpp	/^static void restoreOrigLosslessYuv(const CUData* cu, Frame& frame, uint32_t absPartIdx)$/;"	f	file:	signature:(const CUData* cu, Frame& frame, uint32_t absPartIdx)
ret	../../source/common/x86/ssd-a.asm	/^ret$/;"	l
rightOffset	../../source/common/slice.h	/^    int  rightOffset;$/;"	m	struct:X265_NS::Window	access:public
round	../../source/common/lowres.h	/^        int      round;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
round	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
roundIBDI	../../source/encoder/sao.cpp	/^inline int32_t roundIBDI(int32_t num, int32_t den)$/;"	f	namespace:__anon14	signature:(int32_t num, int32_t den)
roundToFPel	../../source/common/mv.h	/^    MV roundToFPel() const                     { return MV((x + 2) >> 2, (y + 2) >> 2); }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
rowCplxrSum	../../source/encoder/ratecontrol.h	/^    double  rowCplxrSum;$/;"	m	struct:X265_NS::RateControlEntry	access:public
rowGoOnCoder	../../source/encoder/frameencoder.h	/^    Entropy           rowGoOnCoder;     \/* store context between CTUs, code bitstream if !SAO *\/$/;"	m	struct:X265_NS::CTURow	access:public
rowIntraSatd	../../source/common/framedata.h	/^        uint32_t rowIntraSatd;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
rowPred	../../source/encoder/ratecontrol.h	/^    Predictor* rowPred[2];$/;"	m	struct:X265_NS::RateControlEntry	access:public
rowPreds	../../source/encoder/ratecontrol.h	/^    Predictor  rowPreds[3][2];$/;"	m	struct:X265_NS::RateControlEntry	access:public
rowQp	../../source/common/framedata.h	/^        double   rowQp;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
rowQpScale	../../source/common/framedata.h	/^        double   rowQpScale;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
rowSatd	../../source/common/framedata.h	/^        uint32_t rowSatd;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
rowSatds	../../source/common/lowres.h	/^    int32_t*  rowSatds[X265_BFRAME_MAX + 2][X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
rowStats	../../source/encoder/frameencoder.h	/^    FrameStats        rowStats;$/;"	m	struct:X265_NS::CTURow	access:public
rowTotalBits	../../source/encoder/ratecontrol.h	/^    int64_t rowTotalBits;  \/* update cplxrsum and totalbits at the end of 2 rows *\/$/;"	m	struct:X265_NS::RateControlEntry	access:public
rowVbvRateControl	../../source/encoder/ratecontrol.cpp	/^int RateControl::rowVbvRateControl(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv)$/;"	f	class:RateControl	signature:(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv)
rowVbvRateControl	../../source/encoder/ratecontrol.h	/^    int  rowVbvRateControl(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, uint32_t row, RateControlEntry* rce, double& qpVbv)
rowWantedBits	../../source/encoder/ratecontrol.h	/^    double  rowWantedBits;$/;"	m	struct:X265_NS::RateControlEntry	access:public
rps	../../source/encoder/encoder.h	/^    RPS* rps;$/;"	m	struct:X265_NS::RPSListNode	access:public
rpsData	../../source/encoder/ratecontrol.h	/^    RPS      rpsData;$/;"	m	struct:X265_NS::RateControlEntry	access:public
rpsIdx	../../source/encoder/ratecontrol.h	/^    int      rpsIdx;$/;"	m	struct:X265_NS::RateControlEntry	access:public
rqtRoot	../../source/encoder/search.h	/^    Entropy  rqtRoot;      \/* residual quad-tree start context *\/$/;"	m	struct:X265_NS::RQTData	access:public
rqtStore	../../source/encoder/search.h	/^        Entropy rqtStore[NUM_SUBPART];$/;"	m	struct:X265_NS::Search::TUInfoCache	access:public
rqtTemp	../../source/encoder/search.h	/^    Entropy  rqtTemp;      \/* residual quad-tree temp context *\/$/;"	m	struct:X265_NS::RQTData	access:public
rqtTest	../../source/encoder/search.h	/^    Entropy  rqtTest;      \/* residual quad-tree test context *\/$/;"	m	struct:X265_NS::RQTData	access:public
s_betaTable	../../source/common/deblock.cpp	/^const uint8_t Deblock::s_betaTable[52] =$/;"	m	class:Deblock	file:
s_betaTable	../../source/common/deblock.h	/^    static const uint8_t s_betaTable[52];$/;"	m	class:X265_NS::Deblock	access:protected
s_bitsizes	../../source/encoder/bitcost.cpp	/^float *BitCost::s_bitsizes;$/;"	m	class:BitCost	file:
s_bitsizes	../../source/encoder/bitcost.h	/^    static float *s_bitsizes;$/;"	m	class:X265_NS::BitCost	access:private
s_costCalcLock	../../source/encoder/bitcost.cpp	/^Lock BitCost::s_costCalcLock;$/;"	m	class:BitCost	file:
s_costCalcLock	../../source/encoder/bitcost.h	/^    static Lock s_costCalcLock;$/;"	m	class:X265_NS::BitCost	access:private
s_costs	../../source/encoder/bitcost.cpp	/^uint16_t *BitCost::s_costs[BC_MAX_QP];$/;"	m	class:BitCost	file:
s_costs	../../source/encoder/bitcost.h	/^    static uint16_t *s_costs[BC_MAX_QP];$/;"	m	class:X265_NS::BitCost	access:private
s_defaultStatFileName	../../source/encoder/ratecontrol.cpp	/^const char *RateControl::s_defaultStatFileName = "x265_2pass.log";$/;"	m	class:RateControl	file:
s_defaultStatFileName	../../source/encoder/ratecontrol.h	/^    static const char* s_defaultStatFileName;$/;"	m	class:X265_NS::RateControl	access:protected
s_eoTable	../../source/encoder/sao.cpp	/^const uint32_t SAO::s_eoTable[NUM_EDGETYPE] =$/;"	m	class:X265_NS::SAO	file:
s_eoTable	../../source/encoder/sao.h	/^    static const uint32_t s_eoTable[NUM_EDGETYPE];$/;"	m	class:X265_NS::SAO	access:public
s_fpelMvCosts	../../source/encoder/bitcost.cpp	/^uint16_t* BitCost::s_fpelMvCosts[BC_MAX_QP][4];$/;"	m	class:BitCost	file:
s_fpelMvCosts	../../source/encoder/bitcost.h	/^    static uint16_t *s_fpelMvCosts[BC_MAX_QP][4];$/;"	m	class:X265_NS::BitCost	access:private
s_invQuantScales	../../source/common/scalinglist.cpp	/^const int32_t ScalingList::s_invQuantScales[NUM_REM] = { 40, 45, 51, 57, 64, 72 };$/;"	m	class:X265_NS::ScalingList	file:
s_invQuantScales	../../source/common/scalinglist.h	/^    static const int32_t s_invQuantScales[NUM_REM];$/;"	m	class:X265_NS::ScalingList	access:public
s_merange	../../source/encoder/slicetype.h	/^    static const int s_merange = 16;$/;"	m	class:X265_NS::CostEstimateGroup	access:protected
s_numCoefPerSize	../../source/common/scalinglist.cpp	/^const int     ScalingList::s_numCoefPerSize[NUM_SIZES] = { 16, 64, 256, 1024 };$/;"	m	class:X265_NS::ScalingList	file:
s_numCoefPerSize	../../source/common/scalinglist.h	/^    static const int     s_numCoefPerSize[NUM_SIZES];$/;"	m	class:X265_NS::ScalingList	access:public
s_numPartInCUSize	../../source/common/cudata.h	/^    uint32_t  s_numPartInCUSize;$/;"	m	class:X265_NS::CUData	access:public
s_partSet	../../source/common/cudata.h	/^    cubcast_t s_partSet[NUM_FULL_DEPTH]; \/\/ pointer to broadcast set functions per absolute depth$/;"	m	class:X265_NS::CUData	access:public
s_quantScales	../../source/common/scalinglist.cpp	/^const int32_t ScalingList::s_quantScales[NUM_REM] = { 26214, 23302, 20560, 18396, 16384, 14564 };$/;"	m	class:X265_NS::ScalingList	file:
s_quantScales	../../source/common/scalinglist.h	/^    static const int32_t s_quantScales[NUM_REM];$/;"	m	class:X265_NS::ScalingList	access:public
s_slidingWindowFrames	../../source/encoder/ratecontrol.cpp	/^const int RateControl::s_slidingWindowFrames = 20;$/;"	m	class:RateControl	file:
s_slidingWindowFrames	../../source/encoder/ratecontrol.h	/^    static const int   s_slidingWindowFrames;$/;"	m	class:X265_NS::RateControl	access:protected
s_tcTable	../../source/common/deblock.cpp	/^const uint8_t Deblock::s_tcTable[54] =$/;"	m	class:Deblock	file:
s_tcTable	../../source/common/deblock.h	/^    static const uint8_t s_tcTable[54];$/;"	m	class:X265_NS::Deblock	access:protected
sa8d	../../source/common/primitives.h	/^            pixelcmp_t     sa8d;    \/\/ if chroma CU is not multiple of 8x8, will use satd$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
sa8d	../../source/common/primitives.h	/^        pixelcmp_t      sa8d;          \/\/ Sum of Transformed Differences (8x8 Hadamard), uses satd for 4x4 intra TU$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
sa8d16	../../source/common/pixel.cpp	/^int sa8d16(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d8	../../source/common/pixel.cpp	/^int sa8d8(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8dBits	../../source/encoder/search.h	/^    uint32_t    sa8dBits;   \/\/ signal bits used in sa8dCost calculation$/;"	m	struct:X265_NS::Mode	access:public
sa8dCost	../../source/encoder/analysis.h	/^    uint64_t sa8dCost;$/;"	m	struct:X265_NS::SplitData	access:public
sa8dCost	../../source/encoder/search.h	/^    uint64_t    sa8dCost;   \/\/ sum of partition sa8d distortion costs   (sa8d(fenc, pred) + lambda * bits)$/;"	m	struct:X265_NS::Mode	access:public
sa8d_16x16	../../source/common/pixel.cpp	/^static int sa8d_16x16(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_16x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_16x16_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_16x32_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_16x32_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_16x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_16x8_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_32x32_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_32x32_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_32x64_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_32x64_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_64x64_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_64x64_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_8x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_8x16_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_8x8	../../source/common/pixel.cpp	/^inline int sa8d_8x8(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_8x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^inline int sa8d_8x8_altivec(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
sa8d_8x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sa8d_8x8_altivec(const int16_t* pix1, intptr_t i_pix1)$/;"	f	namespace:X265_NS	signature:(const int16_t* pix1, intptr_t i_pix1)
sa8d_satd_8x8	../../source/common/arm/pixel-util.S	/^sa8d_satd_8x8$/;"	l
sad	../../source/common/pixel.cpp	/^int sad(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
sad	../../source/common/pixel.cpp	/^int sad(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad	../../source/common/primitives.h	/^        pixelcmp_t     sad;         \/\/ Sum of Absolute Differences$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
sad	../../source/encoder/motion.h	/^    pixelcmp_t sad;$/;"	m	class:X265_NS::MotionEstimate	access:protected
sad12_mask	../../source/common/arm/sad-a.S	/^sad12_mask:$/;"	l
sad16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad16_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sad16_altivec(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
sad16_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad16_x3_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad16_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad16_x4_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2){ return 0; }$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<24, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<32, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<48, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 48>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int inline sad_altivec<64, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
sad_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int sad_altivec(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
sad_x3	../../source/common/pixel.cpp	/^void sad_x3(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3	../../source/common/primitives.h	/^        pixelcmp_x3_t  sad_x3;      \/\/ Sum of Absolute Differences, 3 mv offsets at once$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
sad_x3	../../source/encoder/motion.h	/^    pixelcmp_x3_t sad_x3;$/;"	m	class:X265_NS::MotionEstimate	access:protected
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res){}$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<24, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 24>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<32, 8>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<48, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 48>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x3_altivec<64, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x3_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void sad_x3_altivec<32, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, intptr_t frefstride, int32_t* res)
sad_x4	../../source/common/pixel.cpp	/^void sad_x4(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4	../../source/common/primitives.h	/^        pixelcmp_x4_t  sad_x4;      \/\/ Sum of Absolute Differences, 4 mv offsets at once$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
sad_x4	../../source/encoder/motion.h	/^    pixelcmp_x4_t sad_x4;$/;"	m	class:X265_NS::MotionEstimate	access:protected
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res){}$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<24, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<32, 24>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<32, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<32, 8>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<48, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 48>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sad_x4_altivec<64, 64>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void sad_x4_altivec<32,16>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
sad_x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void sad_x4_altivec<32,32>(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, const pixel* pix2, const pixel* pix3, const pixel* pix4, const pixel* pix5, intptr_t frefstride, int32_t* res)
safe_intel_cpu_indicator_init	../../source/common/cpu.h	/^extern "C" void PFX(safe_intel_cpu_indicator_init)(void);$/;"	p	signature:(void)
saoChromaComponentParamDist	../../source/encoder/sao.cpp	/^void SAO::saoChromaComponentParamDist(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)
saoChromaComponentParamDist	../../source/encoder/sao.h	/^    void saoChromaComponentParamDist(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost)
saoCuOrgB0	../../source/common/primitives.h	/^    saoCuOrgB0_t          saoCuOrgB0;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuOrgB0_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgB0_t)(pixel* rec, const int8_t* offsetBo, int ctuWidth, int ctuHeight, intptr_t stride);$/;"	t	namespace:X265_NS
saoCuOrgE0	../../source/common/primitives.h	/^    saoCuOrgE0_t          saoCuOrgE0;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuOrgE0_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE0_t)(pixel* rec, int8_t* offsetEo, int width, int8_t* signLeft, intptr_t stride);$/;"	t	namespace:X265_NS
saoCuOrgE1	../../source/common/primitives.h	/^    saoCuOrgE1_t          saoCuOrgE1, saoCuOrgE1_2Rows;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuOrgE1_2Rows	../../source/common/primitives.h	/^    saoCuOrgE1_t          saoCuOrgE1, saoCuOrgE1_2Rows;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuOrgE1_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE1_t)(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width);$/;"	t	namespace:X265_NS
saoCuOrgE2	../../source/common/primitives.h	/^    saoCuOrgE2_t          saoCuOrgE2[2];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuOrgE2_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE2_t)(pixel* rec, int8_t* pBufft, int8_t* pBuff1, int8_t* offsetEo, int lcuWidth, intptr_t stride);$/;"	t	namespace:X265_NS
saoCuOrgE3	../../source/common/primitives.h	/^    saoCuOrgE3_t          saoCuOrgE3[2];$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuOrgE3_t	../../source/common/primitives.h	/^typedef void (*saoCuOrgE3_t)(pixel* rec, int8_t* upBuff1, int8_t* m_offsetEo, intptr_t stride, int startX, int endX);$/;"	t	namespace:X265_NS
saoCuStatsBO	../../source/common/primitives.h	/^    saoCuStatsBO_t        saoCuStatsBO;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuStatsBO_c	../../source/encoder/sao.cpp	/^void saoCuStatsBO_c(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)
saoCuStatsBO_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsBO_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
saoCuStatsE0	../../source/common/primitives.h	/^    saoCuStatsE0_t        saoCuStatsE0;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuStatsE0_c	../../source/encoder/sao.cpp	/^void saoCuStatsE0_c(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count)
saoCuStatsE0_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE0_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
saoCuStatsE1	../../source/common/primitives.h	/^    saoCuStatsE1_t        saoCuStatsE1;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuStatsE1_c	../../source/encoder/sao.cpp	/^void saoCuStatsE1_c(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)
saoCuStatsE1_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE1_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
saoCuStatsE2	../../source/common/primitives.h	/^    saoCuStatsE2_t        saoCuStatsE2;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuStatsE2_c	../../source/encoder/sao.cpp	/^void saoCuStatsE2_c(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBufft, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBufft, int endX, int endY, int32_t *stats, int32_t *count)
saoCuStatsE2_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE2_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBuff, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
saoCuStatsE3	../../source/common/primitives.h	/^    saoCuStatsE3_t        saoCuStatsE3;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
saoCuStatsE3_c	../../source/encoder/sao.cpp	/^void saoCuStatsE3_c(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)$/;"	f	namespace:X265_NS	signature:(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count)
saoCuStatsE3_t	../../source/common/primitives.h	/^typedef void (*saoCuStatsE3_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count);$/;"	t	namespace:X265_NS
saoLumaComponentParamDist	../../source/encoder/sao.cpp	/^void SAO::saoLumaComponentParamDist(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)$/;"	f	class:X265_NS::SAO	signature:(SAOParam* saoParam, int32_t addr, int64_t& rateDist, int64_t* lambda, int64_t &bestCost)
saoLumaComponentParamDist	../../source/encoder/sao.h	/^    void saoLumaComponentParamDist(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost);$/;"	p	class:X265_NS::SAO	access:public	signature:(SAOParam* saoParam, int addr, int64_t& rateDist, int64_t* lambda, int64_t& bestCost)
saoStatsInitialOffset	../../source/encoder/sao.cpp	/^void SAO::saoStatsInitialOffset(int addr, int planes)$/;"	f	class:X265_NS::SAO	signature:(int addr, int planes)
saoStatsInitialOffset	../../source/encoder/sao.h	/^    void saoStatsInitialOffset(int addr, int planes);$/;"	p	class:X265_NS::SAO	access:public	signature:(int addr, int planes)
sarHeight	../../source/common/slice.h	/^    int        sarHeight;$/;"	m	struct:X265_NS::VUI	access:public
sarHeight	../../source/input/input.h	/^    int sarHeight;$/;"	m	struct:X265_NS::InputFileInfo	access:public
sarHeight	../../source/input/y4m.h	/^    uint32_t sarHeight;$/;"	m	class:X265_NS::Y4MInput	access:protected
sarWidth	../../source/common/slice.h	/^    int        sarWidth;$/;"	m	struct:X265_NS::VUI	access:public
sarWidth	../../source/input/input.h	/^    int sarWidth;$/;"	m	struct:X265_NS::InputFileInfo	access:public
sarWidth	../../source/input/y4m.h	/^    uint32_t sarWidth;$/;"	m	class:X265_NS::Y4MInput	access:protected
satd	../../source/common/primitives.h	/^            pixelcmp_t   satd;      \/\/ if chroma PU is not multiple of 4x4, will be NULL$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::PUChroma	access:public
satd	../../source/common/primitives.h	/^        pixelcmp_t     satd;        \/\/ Sum of Absolute Transformed Differences (4x4 Hadamard)$/;"	m	struct:X265_NS::EncoderPrimitives::PU	access:public
satd	../../source/encoder/motion.h	/^    pixelcmp_t satd;$/;"	m	class:X265_NS::MotionEstimate	access:protected
satd4	../../source/common/pixel.cpp	/^int satd4(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd8	../../source/common/pixel.cpp	/^int satd8(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satdCost	../../source/common/lowres.h	/^    int64_t   satdCost;$/;"	m	struct:X265_NS::Lowres	access:public
satdForVbv	../../source/common/framedata.h	/^        uint32_t satdForVbv;    \/* sum of lowres (estimated) costs for entire row *\/$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
satd_16x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_16x16_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_16x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_16x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_16x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_16x8_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_4x4	../../source/common/pixel.cpp	/^static int satd_4x4(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_4x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_4x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_4x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_4x8_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_8x16_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_8x16_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_8x4	../../source/common/pixel.cpp	/^static int satd_8x4(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_8x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_8x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_8x4_altivec	../../source/common/ppc/pixel_altivec.cpp	/^static int satd_8x4_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_8x8_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_8x8_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	namespace:X265_NS	file:	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<12, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<16, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<24, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 48>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<32, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<4, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<48, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 48>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<64, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8, 12>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8, 4>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8, 8>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,16>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,24>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,32>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
satd_altivec	../../source/common/ppc/pixel_altivec.cpp	/^int satd_altivec<8,64>(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)$/;"	f	namespace:X265_NS	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
saveResidualQTData	../../source/encoder/search.cpp	/^void Search::saveResidualQTData(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth)$/;"	f	class:Search	signature:(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth)
saveResidualQTData	../../source/encoder/search.h	/^    void     saveResidualQTData(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth);$/;"	p	class:X265_NS::Search	access:protected	signature:(CUData& cu, ShortYuv& resiYuv, uint32_t absPartIdx, uint32_t tuDepth)
sbacGetEntropyBits	../../source/common/contexts.h	117;"	d
sbacGetEntropyBitsTrm	../../source/common/contexts.h	118;"	d
sbacGetMps	../../source/common/contexts.h	114;"	d
sbacGetState	../../source/common/contexts.h	115;"	d
sbacInit	../../source/encoder/entropy.cpp	/^uint8_t sbacInit(int qp, int initValue)$/;"	f	namespace:X265_NS	signature:(int qp, int initValue)
sbacNext	../../source/common/contexts.h	116;"	d
scale1D_128to64	../../source/common/pixel.cpp	/^static void scale1D_128to64(pixel *dst, const pixel *src)$/;"	f	namespace:__anon31	signature:(pixel *dst, const pixel *src)
scale1D_128to64	../../source/common/primitives.h	/^    scale1D_t             scale1D_128to64;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
scale1D_t	../../source/common/primitives.h	/^typedef void (*scale1D_t)(pixel* dst, const pixel* src);$/;"	t	namespace:X265_NS
scale2D_64to32	../../source/common/pixel.cpp	/^static void scale2D_64to32(pixel* dst, const pixel* src, intptr_t stride)$/;"	f	namespace:__anon31	signature:(pixel* dst, const pixel* src, intptr_t stride)
scale2D_64to32	../../source/common/primitives.h	/^    scale2D_t             scale2D_64to32;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
scale2D_t	../../source/common/primitives.h	/^typedef void (*scale2D_t)(pixel* dst, const pixel* src, intptr_t stride);$/;"	t	namespace:X265_NS
scaleChromaDist	../../source/encoder/rdcost.h	/^    inline sse_t scaleChromaDist(uint32_t plane, sse_t dist) const$/;"	f	class:X265_NS::RDCost	access:public	signature:(uint32_t plane, sse_t dist) const
scaleMv	../../source/common/cudata.cpp	/^inline MV scaleMv(MV mv, int scale)$/;"	f	namespace:__anon10	signature:(MV mv, int scale)
scaleMvByPOCDist	../../source/common/cudata.cpp	/^MV CUData::scaleMvByPOCDist(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const$/;"	f	class:CUData	signature:(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const
scaleMvByPOCDist	../../source/common/cudata.h	/^    MV scaleMvByPOCDist(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const;$/;"	p	class:X265_NS::CUData	access:protected	signature:(const MV& inMV, int curPOC, int curRefPOC, int colPOC, int colRefPOC) const
scaledDistortion	../../source/common/framedata.h	/^    double*       scaledDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
scan	../../source/common/cudata.h	/^    const uint16_t *scan;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
scanCG	../../source/common/cudata.h	/^    const uint16_t *scanCG;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
scanPosLast	../../source/common/primitives.h	/^    scanPosLast_t         scanPosLast;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
scanPosLast_avx2_bmi2	../../source/common/x86/pixel-util.h	/^int PFX(scanPosLast_avx2_bmi2(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize));$/;"	p	signature:(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize)
scanPosLast_c	../../source/common/dct.cpp	/^static int scanPosLast_c(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* \/*scanCG4x4*\/, const int \/*trSize*\/)$/;"	f	file:	signature:(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* , const int )
scanPosLast_t	../../source/common/primitives.h	/^typedef int (*scanPosLast_t)(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize);$/;"	t	namespace:X265_NS
scanPosLast_x64	../../source/common/x86/pixel-util.h	/^int PFX(scanPosLast_x64(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize));$/;"	p	signature:(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize)
scanType	../../source/common/cudata.h	/^    ScanType        scanType;$/;"	m	struct:X265_NS::TUEntropyCodingParameters	access:public
scenecut	../../source/encoder/ratecontrol.h	/^    bool     scenecut;$/;"	m	struct:X265_NS::RateControlEntry	access:public
scenecut	../../source/encoder/slicetype.cpp	/^bool Lookahead::scenecut(Lowres **frames, int numFrames)$/;"	f	class:Lookahead	signature:(Lowres **frames, int numFrames)
scenecut	../../source/encoder/slicetype.h	/^    bool    scenecut(Lowres **frames, int numFrames);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int numFrames)
sdDistortion	../../source/common/framedata.h	/^    double        sdDistortion;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
searchMV	../../source/encoder/search.cpp	/^void Search::searchMV(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv)$/;"	f	class:Search	signature:(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv)
searchMV	../../source/encoder/search.h	/^    void     searchMV(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv);$/;"	p	class:X265_NS::Search	access:public	signature:(Mode& interMode, const PredictionUnit& pu, int list, int ref, MV& outmv)
searchMethod	../../source/encoder/motion.h	/^    int searchMethod;$/;"	m	class:X265_NS::MotionEstimate	access:protected
section	../../source/encoder/entropy.h	/^    uint32_t section;$/;"	m	struct:X265_NS::TURecurse	access:public
selectMVP	../../source/encoder/search.cpp	/^int Search::selectMVP(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref)$/;"	f	class:Search	signature:(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref)
selectMVP	../../source/encoder/search.h	/^    int       selectMVP(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref);$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, const PredictionUnit& pu, const MV amvp[AMVP_NUM_CANDS], int list, int ref)
semaphore	../../source/common/winxp.h	/^    HANDLE semaphore;$/;"	m	struct:X265_NS::__anon21	access:public
serialize	../../source/encoder/nal.cpp	/^void NALList::serialize(NalUnitType nalUnitType, const Bitstream& bs)$/;"	f	class:NALList	signature:(NalUnitType nalUnitType, const Bitstream& bs)
serialize	../../source/encoder/nal.h	/^    void serialize(NalUnitType nalUnitType, const Bitstream& bs);$/;"	p	class:X265_NS::NALList	access:public	signature:(NalUnitType nalUnitType, const Bitstream& bs)
serializeSubstreams	../../source/encoder/nal.cpp	/^uint32_t NALList::serializeSubstreams(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams)$/;"	f	class:NALList	signature:(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams)
serializeSubstreams	../../source/encoder/nal.h	/^    uint32_t serializeSubstreams(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams);$/;"	p	class:X265_NS::NALList	access:public	signature:(uint32_t* streamSizeBytes, uint32_t streamCount, const Bitstream* streams)
set	../../source/common/threading.h	/^    void set(int newval)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(int newval)
setAllPU	../../source/common/cudata.cpp	/^void CUData::setAllPU(T* p, const T& val, int absPartIdx, int puIdx)$/;"	f	class:CUData	signature:(T* p, const T& val, int absPartIdx, int puIdx)
setAllPU	../../source/common/cudata.h	/^    void setAllPU(T *p, const T& val, int absPartIdx, int puIdx);$/;"	p	class:X265_NS::CUData	access:protected	signature:(T *p, const T& val, int absPartIdx, int puIdx)
setBitstream	../../source/encoder/entropy.h	/^    void setBitstream(Bitstream* p)    { m_bitIf = p; }$/;"	f	class:X265_NS::Entropy	access:public	signature:(Bitstream* p)
setCbfPartRange	../../source/common/cudata.h	/^    void     setCbfPartRange(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes) { memset(m_cbf[ttype] + absPartIdx, cbf, coveredPartIdxes); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes)
setCbfSubParts	../../source/common/cudata.h	/^    void     setCbfSubParts(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t depth) { s_partSet[depth](m_cbf[ttype] + absPartIdx, cbf); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t cbf, TextType ttype, uint32_t absPartIdx, uint32_t depth)
setChromIntraDirSubParts	../../source/common/cudata.h	/^    void     setChromIntraDirSubParts(uint8_t dir, uint32_t absPartIdx, uint32_t depth)       { s_partSet[depth](m_chromaIntraDir + absPartIdx, dir); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t depth)
setChromaQP	../../source/common/quant.cpp	/^void Quant::setChromaQP(int qpin, TextType ttype, int chFmt)$/;"	f	class:Quant	signature:(int qpin, TextType ttype, int chFmt)
setChromaQP	../../source/common/quant.h	/^    void setChromaQP(int qpin, TextType ttype, int chFmt);$/;"	p	class:X265_NS::Quant	access:protected	signature:(int qpin, TextType ttype, int chFmt)
setCurrentThreadAffinity	../../source/common/threadpool.cpp	/^void ThreadPool::setCurrentThreadAffinity()$/;"	f	class:X265_NS::ThreadPool	signature:()
setCurrentThreadAffinity	../../source/common/threadpool.h	/^    void setCurrentThreadAffinity();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
setDefaultScalingList	../../source/common/scalinglist.cpp	/^void ScalingList::setDefaultScalingList()$/;"	f	class:X265_NS::ScalingList	signature:()
setDefaultScalingList	../../source/common/scalinglist.h	/^    void     setDefaultScalingList();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
setEdgefilterMultiple	../../source/common/deblock.cpp	/^void Deblock::setEdgefilterMultiple(uint32_t scanIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits)$/;"	f	class:Deblock	signature:(uint32_t scanIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits)
setEdgefilterMultiple	../../source/common/deblock.h	/^    static void setEdgefilterMultiple(uint32_t absPartIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(uint32_t absPartIdx, int32_t dir, int32_t edgeIdx, uint8_t value, uint8_t blockStrength[], uint32_t numUnits)
setEdgefilterPU	../../source/common/deblock.cpp	/^void Deblock::setEdgefilterPU(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits)$/;"	f	class:Deblock	signature:(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits)
setEdgefilterPU	../../source/common/deblock.h	/^    static void setEdgefilterPU(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cu, uint32_t absPartIdx, int32_t dir, uint8_t blockStrength[], uint32_t numUnits)
setEdgefilterTU	../../source/common/deblock.cpp	/^void Deblock::setEdgefilterTU(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[])$/;"	f	class:Deblock	signature:(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[])
setEdgefilterTU	../../source/common/deblock.h	/^    static void setEdgefilterTU(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[]);$/;"	p	class:X265_NS::Deblock	access:protected	signature:(const CUData* cu, uint32_t absPartIdx, uint32_t tuDepth, int32_t dir, uint8_t blockStrength[])
setEmptyPart	../../source/common/cudata.cpp	/^void CUData::setEmptyPart(const CUGeom& childGeom, uint32_t subPartIdx)$/;"	f	class:CUData	signature:(const CUGeom& childGeom, uint32_t subPartIdx)
setEmptyPart	../../source/common/cudata.h	/^    void     setEmptyPart(const CUGeom& childGeom, uint32_t subPartIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(const CUGeom& childGeom, uint32_t subPartIdx)
setFinalFrameCount	../../source/encoder/ratecontrol.cpp	/^void RateControl::setFinalFrameCount(int count)$/;"	f	class:RateControl	signature:(int count)
setFinalFrameCount	../../source/encoder/ratecontrol.h	/^    void setFinalFrameCount(int count);$/;"	p	class:X265_NS::RateControl	access:public	signature:(int count)
setFromWeightAndOffset	../../source/common/slice.h	/^    void setFromWeightAndOffset(int w, int o, int denom, bool bNormalize)$/;"	f	struct:X265_NS::WeightParam	access:public	signature:(int w, int o, int denom, bool bNormalize)
setLambda	../../source/encoder/rdcost.h	/^    void setLambda(double lambda2, double lambda)$/;"	f	class:X265_NS::RDCost	access:public	signature:(double lambda2, double lambda)
setLambdaFromQP	../../source/encoder/search.cpp	/^int Search::setLambdaFromQP(const CUData& ctu, int qp, int lambdaQp)$/;"	f	class:Search	signature:(const CUData& ctu, int qp, int lambdaQp)
setLambdaFromQP	../../source/encoder/search.h	/^    int      setLambdaFromQP(const CUData& ctu, int qp, int lambdaQP = -1); \/* returns real quant QP in valid spec range *\/$/;"	p	class:X265_NS::Search	access:public	signature:(const CUData& ctu, int qp, int lambdaQP = -1)
setLumaIntraDirSubParts	../../source/common/cudata.h	/^    void     setLumaIntraDirSubParts(uint8_t dir, uint32_t absPartIdx, uint32_t depth)        { s_partSet[depth](m_lumaIntraDir + absPartIdx, dir); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t depth)
setMVP	../../source/encoder/bitcost.h	/^    void setMVP(const MV& mvp)                      { m_mvp = mvp; m_cost_mvx = m_cost - mvp.x; m_cost_mvy = m_cost - mvp.y; }$/;"	f	class:X265_NS::BitCost	access:public	signature:(const MV& mvp)
setPUInterDir	../../source/common/cudata.cpp	/^void CUData::setPUInterDir(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx)$/;"	f	class:CUData	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx)
setPUInterDir	../../source/common/cudata.h	/^    void     setPUInterDir(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(uint8_t dir, uint32_t absPartIdx, uint32_t puIdx)
setPUMv	../../source/common/cudata.cpp	/^void CUData::setPUMv(int list, const MV& mv, int absPartIdx, int puIdx)$/;"	f	class:CUData	signature:(int list, const MV& mv, int absPartIdx, int puIdx)
setPUMv	../../source/common/cudata.h	/^    void     setPUMv(int list, const MV& mv, int absPartIdx, int puIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(int list, const MV& mv, int absPartIdx, int puIdx)
setPURefIdx	../../source/common/cudata.cpp	/^void CUData::setPURefIdx(int list, int8_t refIdx, int absPartIdx, int puIdx)$/;"	f	class:CUData	signature:(int list, int8_t refIdx, int absPartIdx, int puIdx)
setPURefIdx	../../source/common/cudata.h	/^    void     setPURefIdx(int list, int8_t refIdx, int absPartIdx, int puIdx);$/;"	p	class:X265_NS::CUData	access:public	signature:(int list, int8_t refIdx, int absPartIdx, int puIdx)
setParam	../../source/output/output.h	/^    virtual void setParam(x265_param* param) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(x265_param* param)
setParam	../../source/output/raw.cpp	/^void RAWOutput::setParam(x265_param* param)$/;"	f	class:RAWOutput	signature:(x265_param* param)
setParam	../../source/output/raw.h	/^    void setParam(x265_param* param);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(x265_param* param)
setParamAspectRatio	../../source/common/param.cpp	/^void setParamAspectRatio(x265_param* p, int width, int height)$/;"	f	namespace:X265_NS	signature:(x265_param* p, int width, int height)
setParamAspectRatio	../../source/common/param.h	/^void  setParamAspectRatio(x265_param *p, int width, int height);$/;"	p	namespace:X265_NS	signature:(x265_param *p, int width, int height)
setPartSizeSubParts	../../source/common/cudata.h	/^    void     setPartSizeSubParts(PartSize size)    { m_partSet(m_partSize, (uint8_t)size); }$/;"	f	class:X265_NS::CUData	access:public	signature:(PartSize size)
setPredModeSubParts	../../source/common/cudata.h	/^    void     setPredModeSubParts(PredMode mode)    { m_partSet(m_predMode, (uint8_t)mode); }$/;"	f	class:X265_NS::CUData	access:public	signature:(PredMode mode)
setPsyRdScale	../../source/encoder/rdcost.h	/^    void setPsyRdScale(double scale)                { m_psyRdBase = (uint32_t)floor(65536.0 * scale * 0.33); }$/;"	f	class:X265_NS::RDCost	access:public	signature:(double scale)
setQP	../../source/encoder/bitcost.cpp	/^void BitCost::setQP(unsigned int qp)$/;"	f	class:BitCost	signature:(unsigned int qp)
setQP	../../source/encoder/bitcost.h	/^    void setQP(unsigned int qp);$/;"	p	class:X265_NS::BitCost	access:public	signature:(unsigned int qp)
setQP	../../source/encoder/rdcost.h	/^    void setQP(const Slice& slice, int qp)$/;"	f	class:X265_NS::RDCost	access:public	signature:(const Slice& slice, int qp)
setQPSubCUs	../../source/common/cudata.cpp	/^bool CUData::setQPSubCUs(int8_t qp, uint32_t absPartIdx, uint32_t depth)$/;"	f	class:CUData	signature:(int8_t qp, uint32_t absPartIdx, uint32_t depth)
setQPSubCUs	../../source/common/cudata.h	/^    bool     setQPSubCUs(int8_t qp, uint32_t absPartIdx, uint32_t depth);$/;"	p	class:X265_NS::CUData	access:public	signature:(int8_t qp, uint32_t absPartIdx, uint32_t depth)
setQPSubParts	../../source/common/cudata.h	/^    void     setQPSubParts(int8_t qp, uint32_t absPartIdx, uint32_t depth)                    { s_partSet[depth]((uint8_t*)m_qp + absPartIdx, (uint8_t)qp); }$/;"	f	class:X265_NS::CUData	access:public	signature:(int8_t qp, uint32_t absPartIdx, uint32_t depth)
setQPforQuant	../../source/common/quant.cpp	/^void Quant::setQPforQuant(const CUData& ctu, int qp)$/;"	f	class:Quant	signature:(const CUData& ctu, int qp)
setQPforQuant	../../source/common/quant.h	/^    void setQPforQuant(const CUData& ctu, int qp);$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& ctu, int qp)
setQpParam	../../source/common/quant.h	/^    void setQpParam(int qpScaled)$/;"	f	struct:X265_NS::QpParam	access:public	signature:(int qpScaled)
setRefPicList	../../source/common/slice.cpp	/^void Slice::setRefPicList(PicList& picList)$/;"	f	class:Slice	signature:(PicList& picList)
setRefPicList	../../source/common/slice.h	/^    void setRefPicList(PicList& picList);$/;"	p	class:X265_NS::Slice	access:public	signature:(PicList& picList)
setSearchRange	../../source/encoder/search.cpp	/^void Search::setSearchRange(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const$/;"	f	class:Search	signature:(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const
setSearchRange	../../source/encoder/search.h	/^    void     setSearchRange(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const;$/;"	p	class:X265_NS::Search	access:protected	signature:(const CUData& cu, const MV& mvp, int merange, MV& mvmin, MV& mvmax) const
setSize	../../source/encoder/sei.cpp	/^void SEI::setSize(uint32_t size)$/;"	f	class:SEI	signature:(uint32_t size)
setSize	../../source/encoder/sei.h	/^    void setSize(uint32_t size);$/;"	p	class:X265_NS::SEI	access:public	signature:(uint32_t size)
setSourcePU	../../source/encoder/motion.cpp	/^void MotionEstimate::setSourcePU(const Yuv& srcFencYuv, int _ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int method, const int refine, bool bChroma)$/;"	f	class:MotionEstimate	signature:(const Yuv& srcFencYuv, int _ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int method, const int refine, bool bChroma)
setSourcePU	../../source/encoder/motion.cpp	/^void MotionEstimate::setSourcePU(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int method, const int refine)$/;"	f	class:MotionEstimate	signature:(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int method, const int refine)
setSourcePU	../../source/encoder/motion.h	/^    void setSourcePU(const Yuv& srcFencYuv, int ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int searchMethod, const int subpelRefine, bool bChroma);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(const Yuv& srcFencYuv, int ctuAddr, int cuPartIdx, int puPartIdx, int pwidth, int pheight, const int searchMethod, const int subpelRefine, bool bChroma)
setSourcePU	../../source/encoder/motion.h	/^    void setSourcePU(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int searchMethod, const int subpelRefine);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(pixel *fencY, intptr_t stride, intptr_t offset, int pwidth, int pheight, const int searchMethod, const int subpelRefine)
setSsimRd	../../source/encoder/rdcost.h	/^    void setSsimRd(int ssimRd) { m_ssimRd = ssimRd; };$/;"	f	class:X265_NS::RDCost	access:public	signature:(int ssimRd)
setTUDepthSubParts	../../source/common/cudata.h	/^    void     setTUDepthSubParts(uint8_t tuDepth, uint32_t absPartIdx, uint32_t depth)         { s_partSet[depth](m_tuDepth + absPartIdx, tuDepth); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t tuDepth, uint32_t absPartIdx, uint32_t depth)
setThreadNodeAffinity	../../source/common/threadpool.cpp	/^void ThreadPool::setThreadNodeAffinity(void *numaMask)$/;"	f	class:X265_NS::ThreadPool	signature:(void *numaMask)
setThreadNodeAffinity	../../source/common/threadpool.h	/^    void setThreadNodeAffinity(void *numaMask);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(void *numaMask)
setTransformSkipPartRange	../../source/common/cudata.h	/^    void     setTransformSkipPartRange(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes) { memset(m_transformSkip[ttype] + absPartIdx, tskip, coveredPartIdxes); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t coveredPartIdxes)
setTransformSkipSubParts	../../source/common/cudata.h	/^    void     setTransformSkipSubParts(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t depth) { s_partSet[depth](m_transformSkip[ttype] + absPartIdx, tskip); }$/;"	f	class:X265_NS::CUData	access:public	signature:(uint8_t tskip, TextType ttype, uint32_t absPartIdx, uint32_t depth)
setupAliasPrimitives	../../source/common/primitives.cpp	/^void setupAliasPrimitives(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupAliasPrimitives	../../source/common/primitives.h	/^void setupAliasPrimitives(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupAssemblyPrimitives	../../source/common/arm/asm-primitives.cpp	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
setupAssemblyPrimitives	../../source/common/primitives.h	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
setupAssemblyPrimitives	../../source/common/x86/asm-primitives.cpp	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask) \/\/ Main$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
setupAssemblyPrimitives	../../source/common/x86/asm-primitives.cpp	/^void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask) \/\/ Main10$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
setupCPrimitives	../../source/common/primitives.cpp	/^void setupCPrimitives(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupCPrimitives	../../source/common/primitives.h	/^void setupCPrimitives(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupDCTPrimitives_altivec	../../source/common/ppc/dct_altivec.cpp	/^void setupDCTPrimitives_altivec(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
setupDCTPrimitives_altivec	../../source/common/primitives.h	/^void setupDCTPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupDCTPrimitives_c	../../source/common/dct.cpp	/^void setupDCTPrimitives_c(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
setupDCTPrimitives_c	../../source/common/primitives.cpp	/^void setupDCTPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupFilterPrimitives_altivec	../../source/common/ppc/ipfilter_altivec.cpp	/^void setupFilterPrimitives_altivec(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
setupFilterPrimitives_altivec	../../source/common/primitives.h	/^void setupFilterPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupFilterPrimitives_c	../../source/common/ipfilter.cpp	/^void setupFilterPrimitives_c(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
setupFilterPrimitives_c	../../source/common/primitives.cpp	/^void setupFilterPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupInstrinsicPrimitives	../../source/common/primitives.h	/^void setupInstrinsicPrimitives(EncoderPrimitives &p, int cpuMask);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
setupInstrinsicPrimitives	../../source/common/vec/vec-primitives.cpp	/^void setupInstrinsicPrimitives(EncoderPrimitives &p, int cpuMask)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p, int cpuMask)
setupIntraPrimitives_altivec	../../source/common/ppc/intrapred_altivec.cpp	/^void setupIntraPrimitives_altivec(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupIntraPrimitives_altivec	../../source/common/primitives.h	/^void setupIntraPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupIntraPrimitives_c	../../source/common/intrapred.cpp	/^void setupIntraPrimitives_c(EncoderPrimitives& p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives& p)
setupIntraPrimitives_c	../../source/common/primitives.cpp	/^void setupIntraPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupIntrinsicDCT_sse3	../../source/common/vec/dct-sse3.cpp	/^void setupIntrinsicDCT_sse3(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupIntrinsicDCT_sse3	../../source/common/vec/vec-primitives.cpp	/^void setupIntrinsicDCT_sse3(EncoderPrimitives&);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives&)
setupIntrinsicDCT_sse41	../../source/common/vec/dct-sse41.cpp	/^void setupIntrinsicDCT_sse41(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupIntrinsicDCT_sse41	../../source/common/vec/vec-primitives.cpp	/^void setupIntrinsicDCT_sse41(EncoderPrimitives&);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives&)
setupIntrinsicDCT_ssse3	../../source/common/vec/dct-ssse3.cpp	/^void setupIntrinsicDCT_ssse3(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupIntrinsicDCT_ssse3	../../source/common/vec/vec-primitives.cpp	/^void setupIntrinsicDCT_ssse3(EncoderPrimitives&);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives&)
setupLoopFilterPrimitives_c	../../source/common/loopfilter.cpp	/^void setupLoopFilterPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupLoopFilterPrimitives_c	../../source/common/primitives.cpp	/^void setupLoopFilterPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupPixelPrimitives_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void setupPixelPrimitives_altivec(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupPixelPrimitives_altivec	../../source/common/primitives.h	/^void setupPixelPrimitives_altivec(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupPixelPrimitives_c	../../source/common/pixel.cpp	/^void setupPixelPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupPixelPrimitives_c	../../source/common/primitives.cpp	/^void setupPixelPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupQuantMatrices	../../source/common/scalinglist.cpp	/^void ScalingList::setupQuantMatrices(int internalCsp)$/;"	f	class:X265_NS::ScalingList	signature:(int internalCsp)
setupQuantMatrices	../../source/common/scalinglist.h	/^    void     setupQuantMatrices(int internalCsp);$/;"	p	class:X265_NS::ScalingList	access:public	signature:(int internalCsp)
setupSaoPrimitives_c	../../source/common/primitives.cpp	/^void setupSaoPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupSaoPrimitives_c	../../source/encoder/sao.cpp	/^void setupSaoPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
setupSeaIntegralPrimitives_c	../../source/common/primitives.cpp	/^void setupSeaIntegralPrimitives_c(EncoderPrimitives &p);$/;"	p	namespace:X265_NS	file:	signature:(EncoderPrimitives &p)
setupSeaIntegralPrimitives_c	../../source/encoder/framefilter.cpp	/^    void setupSeaIntegralPrimitives_c(EncoderPrimitives &p)$/;"	f	namespace:X265_NS	signature:(EncoderPrimitives &p)
shift	../../source/common/lowres.h	/^        int      shift;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
shift	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
shortTermCplxCount	../../source/common/frame.h	/^    double   shortTermCplxCount;$/;"	m	struct:X265_NS::RcStats	access:public
shortTermCplxSum	../../source/common/frame.h	/^    double   shortTermCplxSum;$/;"	m	struct:X265_NS::RcStats	access:public
sigCost	../../source/common/quant.cpp	/^    int64_t sigCost;           \/* cost of signaling significant coeff bitmap *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
sigCost0	../../source/common/quant.cpp	/^    int64_t sigCost0;          \/* cost of signaling sig coeff bit of coeff 0 *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
sigill_handler	../../source/common/cpu.cpp	/^static void sigill_handler(int sig)$/;"	f	file:	signature:(int sig)
sign	../../source/common/primitives.h	/^    sign_t                sign;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
signBitHidingHDQ	../../source/common/quant.cpp	/^uint32_t Quant::signBitHidingHDQ(int16_t* coeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codeParams, uint32_t log2TrSize)$/;"	f	class:Quant	signature:(int16_t* coeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codeParams, uint32_t log2TrSize)
signBitHidingHDQ	../../source/common/quant.h	/^    uint32_t signBitHidingHDQ(int16_t* qcoeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codingParameters, uint32_t log2TrSize);$/;"	p	class:X265_NS::Quant	access:protected	signature:(int16_t* qcoeff, int32_t* deltaU, uint32_t numSig, const TUEntropyCodingParameters &codingParameters, uint32_t log2TrSize)
signOf	../../source/common/loopfilter.cpp	/^inline int8_t signOf(int x)$/;"	f	namespace:__anon2	signature:(int x)
signOf	../../source/encoder/sao.cpp	/^inline int8_t signOf(int x)$/;"	f	namespace:__anon14	signature:(int x)
signOf2	../../source/encoder/sao.cpp	/^inline int signOf2(const int a, const int b)$/;"	f	namespace:__anon14	signature:(const int a, const int b)
sign_t	../../source/common/primitives.h	/^typedef void (*sign_t)(int8_t *dst, const pixel *src1, const pixel *src2, const int endX);$/;"	t	namespace:X265_NS
significantBits	../../source/encoder/entropy.h	/^    int significantBits[2][NUM_SIG_FLAG_CTX];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
significantCoeffGroupBits	../../source/encoder/entropy.h	/^    int significantCoeffGroupBits[NUM_SIG_CG_FLAG_CTX][2];$/;"	m	struct:X265_NS::EstBitsSbac	access:public
sigpipe_handler	../../source/output/reconplay.cpp	/^static void sigpipe_handler(int)$/;"	f	file:	signature:(int)
singleCost	../../source/encoder/slicetype.cpp	/^int64_t CostEstimateGroup::singleCost(int p0, int p1, int b, bool intraPenalty)$/;"	f	class:CostEstimateGroup	signature:(int p0, int p1, int b, bool intraPenalty)
singleCost	../../source/encoder/slicetype.h	/^    int64_t singleCost(int p0, int p1, int b, bool intraPenalty = false);$/;"	p	class:X265_NS::CostEstimateGroup	access:public	signature:(int p0, int p1, int b, bool intraPenalty = false)
singleMotionEstimation	../../source/encoder/search.cpp	/^void Search::singleMotionEstimation(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref)$/;"	f	class:Search	signature:(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref)
singleMotionEstimation	../../source/encoder/search.h	/^    void     singleMotionEstimation(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref);$/;"	p	class:X265_NS::Search	access:public	signature:(Search& master, Mode& interMode, const PredictionUnit& pu, int part, int list, int ref)
size	../../source/common/piclist.h	/^    int size()            { return m_count;   }$/;"	f	class:X265_NS::PicList	access:public	signature:()
sizeScale	../../source/encoder/motion.cpp	/^static int sizeScale[NUM_PU_SIZES];$/;"	m	namespace:__anon23	file:
sizesFromPartition	../../source/common/primitives.h	/^inline void sizesFromPartition(int part, int *width, int *height)$/;"	f	namespace:X265_NS	signature:(int part, int *width, int *height)
skip	../../source/common/arm/pixel-util.S	/^skip:$/;"	l
skip8x8Cnt	../../source/common/framedata.h	/^    int         skip8x8Cnt;$/;"	m	struct:X265_NS::FrameStats	access:public
skipCuCount	../../source/common/frame.h	/^    double   skipCuCount;$/;"	m	struct:X265_NS::RcStats	access:public
skipCuCount	../../source/encoder/ratecontrol.h	/^    double   skipCuCount;$/;"	m	struct:X265_NS::RateControlEntry	access:public
skipFrames	../../source/input/input.h	/^    int skipFrames;$/;"	m	struct:X265_NS::InputFileInfo	access:public
skippedIntraCU	../../source/encoder/search.h	/^    uint32_t skippedIntraCU[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
skippedMotionReferences	../../source/encoder/search.h	/^    uint32_t skippedMotionReferences[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
sleepbitmap_t	../../source/common/threadpool.h	/^typedef uint32_t sleepbitmap_t;$/;"	t	namespace:X265_NS
sleepbitmap_t	../../source/common/threadpool.h	/^typedef uint64_t sleepbitmap_t;$/;"	t	namespace:X265_NS
sliceHeaderCost	../../source/encoder/weightPrediction.cpp	/^int sliceHeaderCost(WeightParam *w, int lambda, int bChroma)$/;"	f	namespace:__anon22	signature:(WeightParam *w, int lambda, int bChroma)
sliceId	../../source/encoder/frameencoder.h	/^    unsigned int      sliceId;          \/* store current row slice id *\/$/;"	m	struct:X265_NS::CTURow	access:public
sliceType	../../source/common/frame.h	/^    int      sliceType;$/;"	m	struct:X265_NS::RcStats	access:public
sliceType	../../source/common/lowres.h	/^    int    sliceType;        \/\/ Slice type decided by lookahead$/;"	m	struct:X265_NS::Lowres	access:public
sliceType	../../source/encoder/ratecontrol.h	/^    int     sliceType;$/;"	m	struct:X265_NS::RateControlEntry	access:public
sliceTypeTmp	../../source/common/lowres.h	/^    int    sliceTypeTmp;     \/\/ used for init QP estimation$/;"	m	struct:X265_NS::Lowres	access:public
slicetypeAnalyse	../../source/encoder/slicetype.cpp	/^void Lookahead::slicetypeAnalyse(Lowres **frames, bool bKeyframe)$/;"	f	class:Lookahead	signature:(Lowres **frames, bool bKeyframe)
slicetypeAnalyse	../../source/encoder/slicetype.h	/^    void    slicetypeAnalyse(Lowres **frames, bool bKeyframe);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, bool bKeyframe)
slicetypeDecide	../../source/encoder/slicetype.cpp	/^void Lookahead::slicetypeDecide()$/;"	f	class:Lookahead	signature:()
slicetypeDecide	../../source/encoder/slicetype.h	/^    void    slicetypeDecide();$/;"	p	class:X265_NS::Lookahead	access:protected	signature:()
sortDeltaPOC	../../source/common/slice.cpp	/^void RPS::sortDeltaPOC(unsigned int maxDecPicBuffer)$/;"	f	class:RPS	signature:(unsigned int maxDecPicBuffer)
sortDeltaPOC	../../source/common/slice.h	/^    void sortDeltaPOC(unsigned int maxDecPicBuffer );$/;"	p	struct:X265_NS::RPS	access:public	signature:(unsigned int maxDecPicBuffer )
splitMode	../../source/encoder/entropy.h	/^    uint32_t splitMode;$/;"	m	struct:X265_NS::TURecurse	access:public
splitRefs	../../source/encoder/analysis.h	/^    uint32_t splitRefs;$/;"	m	struct:X265_NS::SplitData	access:public
splitTU	../../source/encoder/search.cpp	/^bool Search::splitTU(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore)$/;"	f	class:Search	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore)
splitTU	../../source/encoder/search.h	/^    bool     splitTU(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore);$/;"	p	class:X265_NS::Search	access:protected	signature:(Mode& mode, const CUGeom& cuGeom, uint32_t absPartIdx, uint32_t tuDepth, ShortYuv& resiYuv, Cost& splitCost, const uint32_t depthRange[2], int32_t splitMore)
splitbUsed	../../source/encoder/ratecontrol.cpp	/^void RateControl::splitbUsed(char bused[], RateControlEntry *rce)$/;"	f	class:RateControl	signature:(char bused[], RateControlEntry *rce)
splitbUsed	../../source/encoder/ratecontrol.h	/^    void   splitbUsed(char deltapoc[], RateControlEntry *rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(char deltapoc[], RateControlEntry *rce)
splitdeltaPOC	../../source/encoder/ratecontrol.cpp	/^void RateControl::splitdeltaPOC(char deltapoc[], RateControlEntry *rce)$/;"	f	class:RateControl	signature:(char deltapoc[], RateControlEntry *rce)
splitdeltaPOC	../../source/encoder/ratecontrol.h	/^    void   splitdeltaPOC(char deltapoc[], RateControlEntry *rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(char deltapoc[], RateControlEntry *rce)
spsrps	../../source/common/slice.h	/^    RPS      spsrps[MAX_NUM_SHORT_TERM_RPS];$/;"	m	struct:X265_NS::SPS	access:public
spsrpsNum	../../source/common/slice.h	/^    int      spsrpsNum;$/;"	m	struct:X265_NS::SPS	access:public
square1	../../source/encoder/motion.cpp	/^const MV square1[9] = { MV(0, 0), MV(0, -1), MV(0, 1), MV(-1, 0), MV(1, 0), MV(-1, -1), MV(-1, 1), MV(1, -1), MV(1, 1) };$/;"	m	namespace:__anon23	file:
ssd_s	../../source/common/primitives.h	/^        pixel_ssd_s_t   ssd_s;         \/\/ Sum of Square Error (residual coeff to self)$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
sse	../../source/common/pixel.cpp	/^sse_t sse(const T1* pix1, intptr_t stride_pix1, const T2* pix2, intptr_t stride_pix2)$/;"	f	namespace:__anon31	signature:(const T1* pix1, intptr_t stride_pix1, const T2* pix2, intptr_t stride_pix2)
sse2	../../source/common/x86/intrapred.h	/^DECL_ALL(sse2);$/;"	v
sse2	../../source/common/x86/ipfilter8.h	/^SETUP_FUNC_DEF(sse2);$/;"	v
sse2	../../source/common/x86/pixel-util.h	/^DEFINE_UTILS(sse2);$/;"	v
sse2	../../source/common/x86/pixel.h	/^DECL_PIXELS(sse2);$/;"	v
sse3	../../source/common/x86/ipfilter8.h	/^SETUP_FUNC_DEF(sse3);$/;"	v
sse3	../../source/common/x86/pixel.h	/^DECL_PIXELS(sse3);$/;"	v
sse4	../../source/common/x86/intrapred.h	/^DECL_ALL(sse4);$/;"	v
sse4	../../source/common/x86/ipfilter8.h	/^SETUP_FUNC_DEF(sse4);$/;"	v
sse4	../../source/common/x86/loopfilter.h	/^DECL_SAO(sse4);$/;"	v
sse4	../../source/common/x86/pixel-util.h	/^DEFINE_UTILS(sse4);$/;"	v
sse4	../../source/common/x86/pixel.h	/^DECL_PIXELS(sse4);$/;"	v
sse_pp	../../source/common/primitives.h	/^            pixel_sse_t    sse_pp;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
sse_pp	../../source/common/primitives.h	/^        pixel_sse_t     sse_pp;        \/\/ Sum of Square Error (pixel, pixel) fenc alignment not assumed$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
sse_ss	../../source/common/primitives.h	/^        pixel_sse_ss_t  sse_ss;        \/\/ Sum of Square Error (short, short) fenc alignment not assumed$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
sse_t	../../source/common/common.h	/^typedef uint32_t sse_t;$/;"	t
sse_t	../../source/common/common.h	/^typedef uint64_t sse_t;$/;"	t
ssimDistortion	../../source/common/quant.cpp	/^uint64_t Quant::ssimDistortion(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx)$/;"	f	class:Quant	signature:(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx)
ssimDistortion	../../source/common/quant.h	/^    uint64_t ssimDistortion(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride,$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& cu, const pixel* fenc, uint32_t fStride, const pixel* recon, intptr_t rstride, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx)
ssimEnergy	../../source/common/framedata.h	/^    int64_t     ssimEnergy;$/;"	m	struct:X265_NS::FrameStats	access:public
ssimEnergy	../../source/encoder/search.h	/^    uint32_t    ssimEnergy;$/;"	m	struct:X265_NS::Mode	access:public
ssim_4x4x2_core	../../source/common/pixel.cpp	/^static void ssim_4x4x2_core(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])$/;"	f	namespace:__anon31	signature:(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])
ssim_4x4x2_core	../../source/common/primitives.h	/^    ssim_4x4x2_core_t     ssim_4x4x2_core;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
ssim_4x4x2_core_t	../../source/common/primitives.h	/^typedef void (*ssim_4x4x2_core_t)(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]);$/;"	t	namespace:X265_NS
ssim_c1	../../source/common/x86/pixel-util8.asm	/^ssim_c1:   times 4 dd 107321.76    ; .01*.01*4095*4095*64$/;"	l
ssim_c1	../../source/common/x86/pixel-util8.asm	/^ssim_c1:   times 4 dd 1671         ; .01*.01*511*511*64$/;"	l
ssim_c1	../../source/common/x86/pixel-util8.asm	/^ssim_c1:   times 4 dd 416          ; .01*.01*255*255*64$/;"	l
ssim_c1	../../source/common/x86/pixel-util8.asm	/^ssim_c1:   times 4 dd 6697.7856    ; .01*.01*1023*1023*64$/;"	l
ssim_c2	../../source/common/x86/pixel-util8.asm	/^ssim_c2:   times 4 dd 235963       ; .03*.03*255*255*64*63$/;"	l
ssim_c2	../../source/common/x86/pixel-util8.asm	/^ssim_c2:   times 4 dd 3797644.4352 ; .03*.03*1023*1023*64*63$/;"	l
ssim_c2	../../source/common/x86/pixel-util8.asm	/^ssim_c2:   times 4 dd 60851437.92  ; .03*.03*4095*4095*64*63$/;"	l
ssim_c2	../../source/common/x86/pixel-util8.asm	/^ssim_c2:   times 4 dd 947556       ; .03*.03*511*511*64*63$/;"	l
ssim_end4_t	../../source/common/primitives.h	/^typedef float (*ssim_end4_t)(int sum0[5][4], int sum1[5][4], int width);$/;"	t	namespace:X265_NS
ssim_end_1	../../source/common/pixel.cpp	/^static float ssim_end_1(int s1, int s2, int ss, int s12)$/;"	f	namespace:__anon31	signature:(int s1, int s2, int ss, int s12)
ssim_end_4	../../source/common/pixel.cpp	/^static float ssim_end_4(int sum0[5][4], int sum1[5][4], int width)$/;"	f	namespace:__anon31	signature:(int sum0[5][4], int sum1[5][4], int width)
ssim_end_4	../../source/common/primitives.h	/^    ssim_end4_t           ssim_end_4;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
ssse3	../../source/common/x86/intrapred.h	/^DECL_ALL(ssse3);$/;"	v
ssse3	../../source/common/x86/ipfilter8.h	/^SETUP_FUNC_DEF(ssse3);$/;"	v
ssse3	../../source/common/x86/pixel-util.h	/^DEFINE_UTILS(ssse3);$/;"	v
ssse3	../../source/common/x86/pixel.h	/^DECL_PIXELS(ssse3);$/;"	v
ssum2_t	../../source/common/common.h	/^typedef int64_t  ssum2_t;$/;"	t
stackAlignMain	../../source/common/threading.cpp	/^static void stackAlignMain(Thread *instance)$/;"	f	namespace:X265_NS	signature:(Thread *instance)
start	../../source/common/threading.cpp	/^bool Thread::start()$/;"	f	class:X265_NS::Thread	signature:()
start	../../source/common/threading.h	/^    bool start();$/;"	p	class:X265_NS::Thread	access:public	signature:()
start	../../source/common/threadpool.cpp	/^bool ThreadPool::start()$/;"	f	class:X265_NS::ThreadPool	signature:()
start	../../source/common/threadpool.h	/^    bool start();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
start	../../source/encoder/entropy.cpp	/^void Entropy::start()$/;"	f	class:X265_NS::Entropy	signature:()
start	../../source/encoder/entropy.h	/^    void start();$/;"	p	class:X265_NS::Entropy	access:private	signature:()
start	../../source/encoder/framefilter.cpp	/^void FrameFilter::start(Frame *frame, Entropy& initState)$/;"	f	class:FrameFilter	signature:(Frame *frame, Entropy& initState)
start	../../source/encoder/framefilter.h	/^    void start(Frame *pic, Entropy& initState);$/;"	p	class:X265_NS::FrameFilter	access:public	signature:(Frame *pic, Entropy& initState)
startCompressFrame	../../source/encoder/frameencoder.cpp	/^bool FrameEncoder::startCompressFrame(Frame* curFrame)$/;"	f	class:X265_NS::FrameEncoder	signature:(Frame* curFrame)
startCompressFrame	../../source/encoder/frameencoder.h	/^    bool startCompressFrame(Frame* curFrame);$/;"	p	class:X265_NS::FrameEncoder	access:public	signature:(Frame* curFrame)
startReader	../../source/input/input.h	/^    virtual void startReader() = 0;$/;"	p	class:X265_NS::InputFile	access:public	signature:()
startReader	../../source/input/y4m.cpp	/^void Y4MInput::startReader()$/;"	f	class:Y4MInput	signature:()
startReader	../../source/input/y4m.h	/^    void startReader();$/;"	p	class:X265_NS::Y4MInput	access:public	signature:()
startReader	../../source/input/yuv.cpp	/^void YUVInput::startReader()$/;"	f	class:YUVInput	signature:()
startReader	../../source/input/yuv.h	/^    void startReader();$/;"	p	class:X265_NS::YUVInput	access:public	signature:()
startSlice	../../source/encoder/sao.cpp	/^void SAO::startSlice(Frame* frame, Entropy& initState)$/;"	f	class:X265_NS::SAO	signature:(Frame* frame, Entropy& initState)
startSlice	../../source/encoder/sao.h	/^    void startSlice(Frame* pic, Entropy& initState);$/;"	p	class:X265_NS::SAO	access:public	signature:(Frame* pic, Entropy& initState)
startTime	../../source/common/threading.h	/^    int64_t  startTime;$/;"	m	struct:X265_NS::ScopedElapsedTime	access:protected
stationCURatio	../../source/common/lowres.h	/^    double stationCURatio;$/;"	m	struct:X265_NS::Lowres	access:public
statsString	../../source/encoder/encoder.cpp	/^char* Encoder::statsString(EncStats& stat, char* buffer)$/;"	f	class:Encoder	signature:(EncStats& stat, char* buffer)
statsString	../../source/encoder/encoder.h	/^    char* statsString(EncStats&, char*);$/;"	p	class:X265_NS::Encoder	access:public	signature:(EncStats&, char*)
stop	../../source/common/threading.cpp	/^void Thread::stop()$/;"	f	class:X265_NS::Thread	signature:()
stop	../../source/common/threading.h	/^    void stop();$/;"	p	class:X265_NS::Thread	access:public	signature:()
stopJobs	../../source/encoder/encoder.cpp	/^void Encoder::stopJobs()$/;"	f	class:Encoder	signature:()
stopJobs	../../source/encoder/encoder.h	/^    void stopJobs();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
stopJobs	../../source/encoder/slicetype.cpp	/^void Lookahead::stopJobs()$/;"	f	class:Lookahead	signature:()
stopJobs	../../source/encoder/slicetype.h	/^    void    stopJobs();$/;"	p	class:X265_NS::Lookahead	access:public	signature:()
stopWorkers	../../source/common/threadpool.cpp	/^void ThreadPool::stopWorkers()$/;"	f	class:X265_NS::ThreadPool	signature:()
stopWorkers	../../source/common/threadpool.h	/^    void stopWorkers();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
store	../../source/encoder/entropy.h	/^    void store(Entropy& dest) const          { dest.copyFrom(*this); }$/;"	f	class:X265_NS::Entropy	access:public	signature:(Entropy& dest) const
str	../../source/encoder/api.cpp	413;"	d	file:
strcasecmp	../../source/common/param.cpp	39;"	d	file:
strcasecmp	../../source/common/threadpool.cpp	71;"	d	file:
strcatFilename	../../source/encoder/encoder.cpp	/^inline char *strcatFilename(const char *input, const char *suffix)$/;"	f	signature:(const char *input, const char *suffix)
strcatFilename	../../source/encoder/ratecontrol.cpp	/^inline char *strcatFilename(const char *input, const char *suffix)$/;"	f	namespace:__anon4	signature:(const char *input, const char *suffix)
strlen	../../source/compat/getopt/getopt.c	/^extern int strlen (const char *);$/;"	p	file:	signature:(const char *)
strtok_r	../../source/common/param.cpp	/^static char* strtok_r(char* str, const char* delim, char** nextp)$/;"	f	file:	signature:(char* str, const char* delim, char** nextp)
strtok_r	../../source/common/param.cpp	55;"	d	file:
sub_ps	../../source/common/primitives.h	/^            pixel_sub_ps_t sub_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::Chroma::CUChroma	access:public
sub_ps	../../source/common/primitives.h	/^        pixel_sub_ps_t  sub_ps;$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
subpelCompare	../../source/encoder/motion.cpp	/^int MotionEstimate::subpelCompare(ReferencePlanes *ref, const MV& qmv, pixelcmp_t cmp)$/;"	f	class:MotionEstimate	signature:(ReferencePlanes *ref, const MV& qmv, pixelcmp_t cmp)
subpelCompare	../../source/encoder/motion.h	/^    int subpelCompare(ReferencePlanes* ref, const MV &qmv, pixelcmp_t);$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:(ReferencePlanes* ref, const MV &qmv, pixelcmp_t)
subpelRefine	../../source/encoder/motion.h	/^    int subpelRefine;$/;"	m	class:X265_NS::MotionEstimate	access:protected
subr0	../../source/common/arm/pixel-util.S	/^subr0:$/;"	l
subtract	../../source/common/shortyuv.cpp	/^void ShortYuv::subtract(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp)$/;"	f	class:ShortYuv	signature:(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp)
subtract	../../source/common/shortyuv.h	/^    void subtract(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp);$/;"	p	class:X265_NS::ShortYuv	access:public	signature:(const Yuv& srcYuv0, const Yuv& srcYuv1, uint32_t log2Size, int picCsp)
sum2_t	../../source/common/common.h	/^typedef uint64_t sum2_t;$/;"	t
sum2_t	../../source/common/ppc/pixel_altivec.cpp	/^typedef uint32_t sum2_t ;$/;"	t	namespace:X265_NS	file:
sumQpAq	../../source/common/framedata.h	/^        double   sumQpAq;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
sumQpRc	../../source/common/framedata.h	/^        double   sumQpRc;$/;"	m	struct:X265_NS::FrameData::RCStatRow	access:public
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec(vec_s32_t sumv, int* sum){}$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<12, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 12>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 24>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 32>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 48>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 4>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 64>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<16, 8>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<4, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<4, 4>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<4, 8>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 16>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 32>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 4>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_columns_altivec	../../source/common/ppc/pixel_altivec.cpp	/^void inline sum_columns_altivec<8, 8>(vec_s32_t sumv, int* sum)$/;"	f	namespace:X265_NS	signature:(vec_s32_t sumv, int* sum)
sum_t	../../source/common/common.h	/^typedef uint32_t sum_t;$/;"	t
sum_t	../../source/common/ppc/pixel_altivec.cpp	/^typedef uint16_t sum_t ;$/;"	t	namespace:X265_NS	file:
tab_ChromaCoeff	../../source/common/x86/ipfilter16.asm	/^tab_ChromaCoeff:  dw  0, 64,  0,  0$/;"	d
tab_ChromaCoeffVer	../../source/common/x86/ipfilter16.asm	/^tab_ChromaCoeffVer: times 8 dw 0, 64$/;"	l
tab_LumaCoeff	../../source/common/x86/ipfilter16.asm	/^tab_LumaCoeff:    dw   0, 0,  0,  64,  0,   0,  0,  0$/;"	d
tab_LumaCoeffV	../../source/common/x86/ipfilter16.asm	/^tab_LumaCoeffV:   times 4 dw 0, 0$/;"	l
tab_LumaCoeffVer	../../source/common/x86/ipfilter16.asm	/^tab_LumaCoeffVer: times 8 dw 0, 0$/;"	l
tab_Tm16	../../source/common/x86/ipfilter16.asm	/^tab_Tm16:         db 0, 1, 2, 3, 4,  5,  6, 7, 2, 3, 4,  5, 6, 7, 8, 9$/;"	d
tab_c_32	../../source/common/x86/ipfilter16.asm	/^tab_c_32:         times 8 dd 32$/;"	l
tab_c_524800	../../source/common/x86/ipfilter16.asm	/^tab_c_524800:     times 4 dd 524800$/;"	l
tab_c_n8192	../../source/common/x86/ipfilter16.asm	/^tab_c_n8192:      times 8 dw -8192$/;"	l
tab_dct16_1	../../source/common/x86/dct8.asm	/^tab_dct16_1:    dw 64, 64, 64, 64, 64, 64, 64, 64$/;"	d
tab_dct16_2	../../source/common/x86/dct8.asm	/^tab_dct16_2:    dw 64, 64, 64, 64, 64, 64, 64, 64$/;"	d
tab_dct32_1	../../source/common/x86/dct8.asm	/^tab_dct32_1:    dw 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64$/;"	d
tab_dct32_2	../../source/common/x86/dct8.asm	/^tab_dct32_2:    dw 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64$/;"	d
tab_dct4	../../source/common/x86/dct8.asm	/^tab_dct4:       times 4 dw 64, 64$/;"	l
tab_dct8	../../source/common/x86/dct8.asm	/^tab_dct8:       dw 64, 64, 64, 64, 64, 64, 64, 64$/;"	d
tab_dct8_1	../../source/common/x86/dct8.asm	/^tab_dct8_1:     times 2 dw 89, 50, 75, 18$/;"	l
tab_dct8_2	../../source/common/x86/dct8.asm	/^tab_dct8_2:     times 2 dd 83, 36$/;"	l
tab_dst4	../../source/common/x86/dct8.asm	/^tab_dst4:       times 2 dw 29, 55, 74, 84$/;"	l
tab_idct16_1	../../source/common/x86/dct8.asm	/^tab_idct16_1:   dw 90, 87, 80, 70, 57, 43, 25, 9$/;"	d
tab_idct16_2	../../source/common/x86/dct8.asm	/^tab_idct16_2:   dw 64, 89, 83, 75, 64, 50, 36, 18$/;"	d
tab_idct32_1	../../source/common/x86/dct8.asm	/^tab_idct32_1:   dw 90 ,90 ,88 ,85, 82, 78, 73, 67, 61, 54, 46, 38, 31, 22, 13, 4$/;"	d
tab_idct32_2	../../source/common/x86/dct8.asm	/^tab_idct32_2:   dw 64, 89, 83, 75, 64, 50, 36, 18$/;"	d
tab_idct32_3	../../source/common/x86/dct8.asm	/^tab_idct32_3:   dw 90, 87, 80, 70, 57, 43, 25, 9$/;"	d
tab_idct32_4	../../source/common/x86/dct8.asm	/^tab_idct32_4:   dw 64, 90, 89, 87, 83, 80, 75, 70, 64, 57, 50, 43, 36, 25, 18, 9$/;"	d
tab_idct8_1	../../source/common/x86/dct8.asm	/^tab_idct8_1:    times 1 dw 64, -64, 36, -83, 64, 64, 83, 36$/;"	l
tab_idct8_2	../../source/common/x86/dct8.asm	/^tab_idct8_2:    times 1 dw 89, 75, 50, 18, 75, -18, -89, -50$/;"	l
tab_idct8_3	../../source/common/x86/dct8.asm	/^tab_idct8_3:    times 4 dw 89, 75$/;"	l
tab_idst4	../../source/common/x86/dct8.asm	/^tab_idst4:      times 4 dw 29, +84$/;"	l
takeContents	../../source/encoder/nal.cpp	/^void NALList::takeContents(NALList& other)$/;"	f	class:NALList	signature:(NALList& other)
takeContents	../../source/encoder/nal.h	/^    void takeContents(NALList& other);$/;"	p	class:X265_NS::NALList	access:public	signature:(NALList& other)
temp	../../source/encoder/sao.h	/^        Entropy temp;$/;"	m	struct:X265_NS::SAO::SAOContexts	access:public
temporalLayer	../../source/common/lowres.h	/^    int    temporalLayer;    \/\/temporal layer id for hierarchical B structure$/;"	m	struct:X265_NS::Lowres	access:public
temporalLayer	../../source/common/slice.h	/^    int  temporalLayer[MAX_NUM_REF_PICS];$/;"	m	struct:X265_NS::RPS	access:public
temporalLayer	../../source/encoder/ratecontrol.h	/^    int      temporalLayer;$/;"	m	struct:X265_NS::RateControlEntry	access:public
terminate	../../source/encoder/ratecontrol.cpp	/^void RateControl::terminate()$/;"	f	class:RateControl	signature:()
terminate	../../source/encoder/ratecontrol.h	/^    void terminate();          \/* un-block all waiting functions so encoder may close *\/$/;"	p	class:X265_NS::RateControl	access:public	signature:()
thread	../../source/common/threading.h	/^    ThreadHandle thread;$/;"	m	class:X265_NS::Thread	access:private
threadActive	../../source/input/y4m.h	/^    bool threadActive;$/;"	m	class:X265_NS::Y4MInput	access:protected
threadActive	../../source/input/yuv.h	/^    bool threadActive;$/;"	m	class:X265_NS::YUVInput	access:protected
threadActive	../../source/output/reconplay.h	/^    bool   threadActive;   \/* worker thread is active *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
threadMain	../../source/common/threading.h	/^    virtual void threadMain() = 0;$/;"	p	class:X265_NS::Thread	access:public	signature:()
threadMain	../../source/common/threadpool.cpp	/^    void threadMain();$/;"	p	class:X265_NS::WorkerThread	file:	access:public	signature:()
threadMain	../../source/common/threadpool.cpp	/^void WorkerThread::threadMain()$/;"	f	class:X265_NS::WorkerThread	signature:()
threadMain	../../source/encoder/frameencoder.cpp	/^void FrameEncoder::threadMain()$/;"	f	class:X265_NS::FrameEncoder	signature:()
threadMain	../../source/encoder/frameencoder.h	/^    void threadMain();$/;"	p	class:X265_NS::FrameEncoder	access:protected	signature:()
threadMain	../../source/input/y4m.cpp	/^void Y4MInput::threadMain()$/;"	f	class:Y4MInput	signature:()
threadMain	../../source/input/y4m.h	/^    void threadMain();$/;"	p	class:X265_NS::Y4MInput	access:protected	signature:()
threadMain	../../source/input/yuv.cpp	/^void YUVInput::threadMain()$/;"	f	class:YUVInput	signature:()
threadMain	../../source/input/yuv.h	/^    void threadMain();$/;"	p	class:X265_NS::YUVInput	access:protected	signature:()
threadMain	../../source/output/reconplay.cpp	/^void ReconPlay::threadMain()$/;"	f	class:ReconPlay	signature:()
threadMain	../../source/output/reconplay.h	/^    void threadMain();$/;"	p	class:X265_NS::ReconPlay	access:protected	signature:()
threshold	../../source/common/framedata.h	/^    double*       threshold;$/;"	m	struct:X265_NS::analysis2PassFrameData	access:public
tierFlag	../../source/common/slice.h	/^    bool     tierFlag;$/;"	m	struct:X265_NS::ProfileTierLevel	access:public
timeScale	../../source/common/slice.h	/^    uint32_t timeScale;$/;"	m	struct:X265_NS::TimingInfo	access:public
timebaseDenom	../../source/input/input.h	/^    int timebaseDenom;$/;"	m	struct:X265_NS::InputFileInfo	access:public
timebaseNum	../../source/input/input.h	/^    int timebaseNum;$/;"	m	struct:X265_NS::InputFileInfo	access:public
timedWait	../../source/common/threading.h	/^    bool timedWait(uint32_t milliseconds)$/;"	f	class:X265_NS::Event	access:public	signature:(uint32_t milliseconds)
timingInfo	../../source/common/slice.h	/^    TimingInfo timingInfo;$/;"	m	struct:X265_NS::VUI	access:public
tmpPredYuv	../../source/encoder/search.h	/^    Yuv      tmpPredYuv;$/;"	m	struct:X265_NS::RQTData	access:public
tmpResiYuv	../../source/encoder/search.h	/^    ShortYuv tmpResiYuv;$/;"	m	struct:X265_NS::RQTData	access:public
toQPel	../../source/common/mv.h	/^    MV toQPel() const                          { return *this << 2; }$/;"	f	struct:X265_NS::MV	access:public	signature:() const
topOffset	../../source/common/slice.h	/^    int  topOffset;$/;"	m	struct:X265_NS::Window	access:public
topSkipMinDepth	../../source/encoder/analysis.cpp	/^uint32_t Analysis::topSkipMinDepth(const CUData& parentCTU, const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
topSkipMinDepth	../../source/encoder/analysis.h	/^    uint32_t topSkipMinDepth(const CUData& parentCTU, const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUData& parentCTU, const CUGeom& cuGeom)
totalBits	../../source/common/frame.h	/^    int64_t  totalBits;$/;"	m	struct:X265_NS::RcStats	access:public
totalBits	../../source/common/framedata.h	/^        uint32_t totalBits;     \/* total bits to encode this CTU *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
totalBits	../../source/encoder/search.h	/^    uint32_t    totalBits;  \/\/ sum of partition bits (mv + coeff)$/;"	m	struct:X265_NS::Mode	access:public
totalCTUTime	../../source/encoder/search.h	/^    int64_t  totalCTUTime;                      \/\/ elapsed worker time in compressCTU (includes pmode master)$/;"	m	struct:X265_NS::CUStats	access:public
totalCTUs	../../source/encoder/search.h	/^    uint64_t totalCTUs;$/;"	m	struct:X265_NS::CUStats	access:public
totalCtu	../../source/common/framedata.h	/^    uint64_t    totalCtu;$/;"	m	struct:X265_NS::FrameStats	access:public
totalCu	../../source/common/framedata.h	/^    uint64_t    totalCu;$/;"	m	struct:X265_NS::FrameStats	access:public
totalCu	../../source/encoder/frameencoder.h	/^    uint64_t totalCu;$/;"	m	struct:X265_NS::StatisticLog	access:public
totalIntraCU	../../source/encoder/search.h	/^    uint32_t totalIntraCU[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
totalMotionReferences	../../source/encoder/search.h	/^    uint32_t totalMotionReferences[NUM_CU_DEPTH];$/;"	m	struct:X265_NS::CUStats	access:public
totalPu	../../source/common/framedata.h	/^    uint64_t    totalPu[NUM_CU_DEPTH + 1];$/;"	m	struct:X265_NS::FrameStats	access:public
totalUnits	../../source/common/predict.h	/^        int      totalUnits;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
trCoeffMemBlock	../../source/common/cudata.h	/^    coeff_t* trCoeffMemBlock;$/;"	m	struct:X265_NS::CUDataMemPool	access:public
transd_shuf1	../../source/common/x86/pixel-a.asm	/^transd_shuf1: SHUFFLE_MASK_W 0, 8, 2, 10, 4, 12, 6, 14$/;"	l
transd_shuf2	../../source/common/x86/pixel-a.asm	/^transd_shuf2: SHUFFLE_MASK_W 1, 9, 3, 11, 5, 13, 7, 15$/;"	l
transferCharacteristics	../../source/common/slice.h	/^    int        transferCharacteristics;$/;"	m	struct:X265_NS::VUI	access:public
transformNxN	../../source/common/quant.cpp	/^uint32_t Quant::transformNxN(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride,$/;"	f	class:Quant	signature:(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride, coeff_t* coeff, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx, bool useTransformSkip)
transformNxN	../../source/common/quant.h	/^    uint32_t transformNxN(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride, coeff_t* coeff,$/;"	p	class:X265_NS::Quant	access:public	signature:(const CUData& cu, const pixel* fenc, uint32_t fencStride, const int16_t* residual, uint32_t resiStride, coeff_t* coeff, uint32_t log2TrSize, TextType ttype, uint32_t absPartIdx, bool useTransformSkip)
transpose	../../source/common/pixel.cpp	/^void transpose(pixel* dst, const pixel* src, intptr_t stride)$/;"	f	namespace:__anon31	signature:(pixel* dst, const pixel* src, intptr_t stride)
transpose	../../source/common/primitives.h	/^        transpose_t     transpose;     \/\/ transpose pixel block; for use with intra all-angs$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
transpose_matrix_16_altivec	../../source/common/ppc/dct_altivec.cpp	/^inline void transpose_matrix_16_altivec(int16_t *src, intptr_t srcStride, int16_t *dst, intptr_t dstStride)$/;"	f	signature:(int16_t *src, intptr_t srcStride, int16_t *dst, intptr_t dstStride)
transpose_matrix_32_altivec	../../source/common/ppc/dct_altivec.cpp	/^inline void transpose_matrix_32_altivec(int16_t *src, intptr_t srcStride, int16_t *dst, intptr_t dstStride)$/;"	f	signature:(int16_t *src, intptr_t srcStride, int16_t *dst, intptr_t dstStride)
transpose_matrix_8_altivec	../../source/common/ppc/dct_altivec.cpp	/^inline void transpose_matrix_8_altivec(int16_t *src, intptr_t srcStride, int16_t *dst, intptr_t dstStride)$/;"	f	signature:(int16_t *src, intptr_t srcStride, int16_t *dst, intptr_t dstStride)
transpose_t	../../source/common/primitives.h	/^typedef void (*transpose_t)(pixel* dst, const pixel* src, intptr_t stride);$/;"	t	namespace:X265_NS
trigger	../../source/common/threading.h	/^    void trigger()$/;"	f	class:X265_NS::Event	access:public	signature:()
tryAcquireSleepingThread	../../source/common/threadpool.cpp	/^int ThreadPool::tryAcquireSleepingThread(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap)$/;"	f	class:X265_NS::ThreadPool	signature:(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap)
tryAcquireSleepingThread	../../source/common/threadpool.h	/^    int  tryAcquireSleepingThread(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(sleepbitmap_t firstTryBitmap, sleepbitmap_t secondTryBitmap)
tryBondPeers	../../source/common/threadpool.cpp	/^int ThreadPool::tryBondPeers(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master)$/;"	f	class:X265_NS::ThreadPool	signature:(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master)
tryBondPeers	../../source/common/threadpool.h	/^    int  tryBondPeers(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master);$/;"	p	class:X265_NS::ThreadPool	access:public	signature:(int maxPeers, sleepbitmap_t peerBitmap, BondedTaskGroup& master)
tryBondPeers	../../source/common/threadpool.h	/^    int tryBondPeers(JobProvider& jp, int maxPeers)$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:(JobProvider& jp, int maxPeers)
tryBondPeers	../../source/common/threadpool.h	/^    int tryBondPeers(ThreadPool& pool, int maxPeers)$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:(ThreadPool& pool, int maxPeers)
tryLossless	../../source/encoder/analysis.cpp	/^void Analysis::tryLossless(const CUGeom& cuGeom)$/;"	f	class:Analysis	signature:(const CUGeom& cuGeom)
tryLossless	../../source/encoder/analysis.h	/^    void tryLossless(const CUGeom& cuGeom);$/;"	p	class:X265_NS::Analysis	access:protected	signature:(const CUGeom& cuGeom)
tryWakeOne	../../source/common/threadpool.cpp	/^void JobProvider::tryWakeOne()$/;"	f	class:X265_NS::JobProvider	signature:()
tryWakeOne	../../source/common/threadpool.h	/^    void tryWakeOne();$/;"	p	class:X265_NS::JobProvider	access:public	signature:()
tuneAbrQScaleFromFeedback	../../source/encoder/ratecontrol.cpp	/^double RateControl::tuneAbrQScaleFromFeedback(double qScale)$/;"	f	class:RateControl	signature:(double qScale)
tuneAbrQScaleFromFeedback	../../source/encoder/ratecontrol.h	/^    double tuneAbrQScaleFromFeedback(double qScale);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double qScale)
tuneQScaleForGrain	../../source/encoder/ratecontrol.cpp	/^double RateControl::tuneQScaleForGrain(double rcOverflow)$/;"	f	class:RateControl	signature:(double rcOverflow)
tuneQScaleForGrain	../../source/encoder/ratecontrol.h	/^    double tuneQScaleForGrain(double rcOverflow);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(double rcOverflow)
type	../../source/common/pixel.cpp	658;"	d	file:
type	../../source/common/pixel.cpp	675;"	d	file:
typeIdx	../../source/common/common.h	/^    int  typeIdx;$/;"	m	struct:X265_NS::SaoCtuParam	access:public
u8_to_s16_b0_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b0_mask = {0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10};$/;"	m	namespace:X265_NS	file:
u8_to_s16_b0_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b0_mask = {0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_b1_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b1_mask = {0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11};$/;"	m	namespace:X265_NS	file:
u8_to_s16_b1_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b1_mask = {0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_b9_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b9_mask = {0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10};$/;"	m	namespace:X265_NS	file:
u8_to_s16_b9_mask	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_b9_mask = {0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09, 0x10, 0x09};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w4x4_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask1 = {0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w4x4_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask1 = {0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w4x4_mask9	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask9 = {0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w4x4_mask9	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w4x4_mask9 = {0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w8x8_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_mask1 = {0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00, 0x18};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w8x8_mask1	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_mask1 = {0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00, 0x18, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w8x8_maskh	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskh = {0x00, 0x10, 0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w8x8_maskh	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskh = {0x10, 0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00, 0x15, 0x00, 0x16, 0x00, 0x17, 0x00};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w8x8_maskl	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskl = {0x00, 0x18, 0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x1d, 0x00, 0x1e, 0x00, 0x1f};$/;"	m	namespace:X265_NS	file:
u8_to_s16_w8x8_maskl	../../source/common/ppc/intrapred_altivec.cpp	/^   vec_u8_t u8_to_s16_w8x8_maskl = {0x18, 0x00, 0x19, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x1c, 0x00, 0x1d, 0x00, 0x1e, 0x00, 0x1f, 0x00};$/;"	m	namespace:X265_NS	file:
uint16_t	../../source/compat/msvc/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t
uint32_t	../../source/compat/msvc/stdint.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	../../source/compat/msvc/stdint.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint8_t	../../source/compat/msvc/stdint.h	/^typedef unsigned char uint8_t;$/;"	t
uncodedDist	../../source/common/quant.cpp	/^    int64_t uncodedDist;       \/* uncoded distortion cost of coded coefficients *\/$/;"	m	struct:__anon29::coeffGroupRDStats	file:	access:public
unifiedRef	../../source/common/cudata.h	/^    union { int16_t refIdx[2]; int32_t unifiedRef; };$/;"	m	union:X265_NS::InterNeighbourMV::__anon7	access:public
unitHeight	../../source/common/predict.h	/^        int      unitHeight;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
unitWidth	../../source/common/predict.h	/^        int      unitWidth;$/;"	m	struct:X265_NS::Predict::IntraNeighbors	access:public
upShift_16_avx2	../../source/common/x86/pixel.h	/^void PFX(upShift_16_avx2)(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);$/;"	p	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
upShift_16_sse2	../../source/common/x86/pixel.h	/^void PFX(upShift_16_sse2)(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);$/;"	p	signature:(const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask)
upShift_8_avx2	../../source/common/x86/pixel.h	/^void PFX(upShift_8_avx2)(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);$/;"	p	signature:(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)
upShift_8_sse4	../../source/common/x86/pixel.h	/^void PFX(upShift_8_sse4)(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);$/;"	p	signature:(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)
update	../../source/common/md5.h	/^    void update(unsigned char *buf, unsigned len)$/;"	f	class:X265_NS::MD5	access:public	signature:(unsigned char *buf, unsigned len)
updateCRC	../../source/common/picyuv.cpp	/^void updateCRC(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride)
updateCRC	../../source/common/picyuv.h	/^void updateCRC(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride);$/;"	p	namespace:X265_NS	signature:(const pixel* plane, uint32_t& crcVal, uint32_t height, uint32_t width, intptr_t stride)
updateCandList	../../source/encoder/search.cpp	/^void Search::updateCandList(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList)$/;"	f	class:Search	signature:(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList)
updateCandList	../../source/encoder/search.h	/^    static void updateCandList(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList);$/;"	p	class:X265_NS::Search	access:protected	signature:(uint32_t mode, uint64_t cost, int maxCandCount, uint32_t* candModeList, uint64_t* candCostList)
updateChecksum	../../source/common/picyuv.cpp	/^void updateChecksum(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight)$/;"	f	namespace:X265_NS	signature:(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight)
updateChecksum	../../source/common/picyuv.h	/^void updateChecksum(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight);$/;"	p	namespace:X265_NS	signature:(const pixel* plane, uint32_t& checksumVal, uint32_t height, uint32_t width, intptr_t stride, int row, uint32_t cuHeight)
updateMD5Plane	../../source/common/picyuv.cpp	/^void updateMD5Plane(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)$/;"	f	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)
updateMD5Plane	../../source/common/picyuv.h	/^void updateMD5Plane(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride);$/;"	p	namespace:X265_NS	signature:(MD5Context& md5, const pixel* plane, uint32_t width, uint32_t height, intptr_t stride)
updateModeCost	../../source/encoder/search.h	/^    void updateModeCost(Mode& m) const { m.rdCost = m_rdCost.m_psyRd ? m_rdCost.calcPsyRdCost(m.distortion, m.totalBits, m.psyEnergy)$/;"	f	class:X265_NS::Search	access:protected	signature:(Mode& m) const
updatePic	../../source/common/cudata.cpp	/^void CUData::updatePic(uint32_t depth, int picCsp) const$/;"	f	class:CUData	signature:(uint32_t depth, int picCsp) const
updatePic	../../source/common/cudata.h	/^    void     updatePic(uint32_t depth, int picCsp) const;$/;"	p	class:X265_NS::CUData	access:public	signature:(uint32_t depth, int picCsp) const
updatePredictor	../../source/encoder/ratecontrol.cpp	/^void RateControl::updatePredictor(Predictor *p, double q, double var, double bits)$/;"	f	class:RateControl	signature:(Predictor *p, double q, double var, double bits)
updatePredictor	../../source/encoder/ratecontrol.h	/^    void   updatePredictor(Predictor *p, double q, double var, double bits);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Predictor *p, double q, double var, double bits)
updateRefIdx	../../source/encoder/encoder.cpp	/^void Encoder::updateRefIdx()$/;"	f	class:Encoder	signature:()
updateRefIdx	../../source/encoder/encoder.h	/^    void updateRefIdx();$/;"	p	class:X265_NS::Encoder	access:public	signature:()
updateVbv	../../source/encoder/ratecontrol.cpp	/^int RateControl::updateVbv(int64_t bits, RateControlEntry* rce)$/;"	f	class:RateControl	signature:(int64_t bits, RateControlEntry* rce)
updateVbv	../../source/encoder/ratecontrol.h	/^    int    updateVbv(int64_t bits, RateControlEntry* rce);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(int64_t bits, RateControlEntry* rce)
updateVbvPlan	../../source/encoder/encoder.cpp	/^void Encoder::updateVbvPlan(RateControl* rc)$/;"	f	class:Encoder	signature:(RateControl* rc)
updateVbvPlan	../../source/encoder/encoder.h	/^    void updateVbvPlan(RateControl* rc);$/;"	p	class:X265_NS::Encoder	access:public	signature:(RateControl* rc)
updateVbvPlan	../../source/encoder/ratecontrol.cpp	/^void RateControl::updateVbvPlan(Encoder* enc)$/;"	f	class:RateControl	signature:(Encoder* enc)
updateVbvPlan	../../source/encoder/ratecontrol.h	/^    void   updateVbvPlan(Encoder* enc);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(Encoder* enc)
useStrongFiltering	../../source/common/deblock.cpp	/^static inline bool useStrongFiltering(intptr_t offset, int32_t beta, int32_t tc, pixel* src)$/;"	f	file:	signature:(intptr_t offset, int32_t beta, int32_t tc, pixel* src)
v_pred32	../../source/common/ppc/intrapred_altivec.cpp	4941;"	d	file:
val	../../source/compat/getopt/getopt.h	/^  int val;$/;"	m	struct:option	access:public
var	../../source/common/primitives.h	/^        var_t           var;           \/\/ block internal variance$/;"	m	struct:X265_NS::EncoderPrimitives::CU	access:public
var_t	../../source/common/primitives.h	/^typedef uint64_t (*var_t)(const pixel* pix, intptr_t stride);$/;"	t	namespace:X265_NS
vbroadcasti128	../../source/common/x86/dct8.asm	/^vbroadcasti128      m5,                [pd_ %+ DCT8_ROUND1]$/;"	l
vbv2Pass	../../source/encoder/ratecontrol.cpp	/^bool RateControl::vbv2Pass(uint64_t allAvailableBits, int endPos, int startPos)$/;"	f	class:RateControl	signature:(uint64_t allAvailableBits, int endPos, int startPos)
vbv2Pass	../../source/encoder/ratecontrol.h	/^    bool   vbv2Pass(uint64_t allAvailableBits, int frameCount, int startPos);$/;"	p	class:X265_NS::RateControl	access:protected	signature:(uint64_t allAvailableBits, int frameCount, int startPos)
vbvCost	../../source/common/framedata.h	/^        uint32_t vbvCost;       \/* sum of lowres costs for 16x16 sub-blocks *\/$/;"	m	struct:X265_NS::FrameData::RCStatCU	access:public
vbvFrameCost	../../source/encoder/slicetype.cpp	/^int64_t Lookahead::vbvFrameCost(Lowres **frames, int p0, int p1, int b)$/;"	f	class:Lookahead	signature:(Lowres **frames, int p0, int p1, int b)
vbvFrameCost	../../source/encoder/slicetype.h	/^    int64_t vbvFrameCost(Lowres **frames, int p0, int p1, int b);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int p0, int p1, int b)
vbvLookahead	../../source/encoder/slicetype.cpp	/^void Lookahead::vbvLookahead(Lowres **frames, int numFrames, int keyframe)$/;"	f	class:Lookahead	signature:(Lowres **frames, int numFrames, int keyframe)
vbvLookahead	../../source/encoder/slicetype.h	/^    void    vbvLookahead(Lowres **frames, int numFrames, int keyframes);$/;"	p	class:X265_NS::Lookahead	access:protected	signature:(Lowres **frames, int numFrames, int keyframes)
vec_s16_t	../../source/common/ppc/ppccommon.h	34;"	d
vec_s32_t	../../source/common/ppc/ppccommon.h	36;"	d
vec_s32_to_u16	../../source/common/ppc/ppccommon.h	82;"	d
vec_s8_t	../../source/common/ppc/ppccommon.h	32;"	d
vec_u16_t	../../source/common/ppc/ppccommon.h	33;"	d
vec_u16_to_s32	../../source/common/ppc/ppccommon.h	79;"	d
vec_u16_to_s32_h	../../source/common/ppc/ppccommon.h	69;"	d
vec_u16_to_s32_h	../../source/common/ppc/ppccommon.h	74;"	d
vec_u16_to_s32_l	../../source/common/ppc/ppccommon.h	70;"	d
vec_u16_to_s32_l	../../source/common/ppc/ppccommon.h	75;"	d
vec_u16_to_u32	../../source/common/ppc/ppccommon.h	78;"	d
vec_u16_to_u32_h	../../source/common/ppc/ppccommon.h	67;"	d
vec_u16_to_u32_h	../../source/common/ppc/ppccommon.h	72;"	d
vec_u16_to_u32_l	../../source/common/ppc/ppccommon.h	68;"	d
vec_u16_to_u32_l	../../source/common/ppc/ppccommon.h	73;"	d
vec_u32_t	../../source/common/ppc/ppccommon.h	35;"	d
vec_u32_to_u16	../../source/common/ppc/ppccommon.h	81;"	d
vec_u8_t	../../source/common/ppc/ppccommon.h	31;"	d
vec_u8_to_s16	../../source/common/ppc/pixel_altivec.cpp	63;"	d	file:
vec_u8_to_s16	../../source/common/ppc/ppccommon.h	64;"	d
vec_u8_to_s16_h	../../source/common/ppc/pixel_altivec.cpp	53;"	d	file:
vec_u8_to_s16_h	../../source/common/ppc/ppccommon.h	54;"	d
vec_u8_to_s16_h	../../source/common/ppc/ppccommon.h	59;"	d
vec_u8_to_s16_l	../../source/common/ppc/pixel_altivec.cpp	54;"	d	file:
vec_u8_to_s16_l	../../source/common/ppc/ppccommon.h	55;"	d
vec_u8_to_s16_l	../../source/common/ppc/ppccommon.h	60;"	d
vec_u8_to_u16	../../source/common/ppc/pixel_altivec.cpp	62;"	d	file:
vec_u8_to_u16	../../source/common/ppc/ppccommon.h	63;"	d
vec_u8_to_u16_h	../../source/common/ppc/pixel_altivec.cpp	51;"	d	file:
vec_u8_to_u16_h	../../source/common/ppc/ppccommon.h	52;"	d
vec_u8_to_u16_h	../../source/common/ppc/ppccommon.h	57;"	d
vec_u8_to_u16_l	../../source/common/ppc/pixel_altivec.cpp	52;"	d	file:
vec_u8_to_u16_l	../../source/common/ppc/ppccommon.h	53;"	d
vec_u8_to_u16_l	../../source/common/ppc/ppccommon.h	58;"	d
version_str	../../source/common/version.cpp	/^const char* PFX(version_str) = XSTR(X265_VERSION);$/;"	v
videoFormat	../../source/common/slice.h	/^    int        videoFormat;$/;"	m	struct:X265_NS::VUI	access:public
videoFullRangeFlag	../../source/common/slice.h	/^    bool       videoFullRangeFlag;$/;"	m	struct:X265_NS::VUI	access:public
videoSignalTypePresentFlag	../../source/common/slice.h	/^    bool       videoSignalTypePresentFlag;$/;"	m	struct:X265_NS::VUI	access:public
vpbroadcastw	../../source/common/x86/blockcopy8.asm	/^vpbroadcastw m0, xm0$/;"	l
vshift	../../source/encoder/weightPrediction.cpp	/^    int         vshift;$/;"	m	struct:__anon22::Cache	file:	access:public
vuiParameters	../../source/common/slice.h	/^    VUI      vuiParameters;$/;"	m	struct:X265_NS::SPS	access:public
w	../../source/common/lowres.h	/^    } w[3];$/;"	m	struct:X265_NS::ReferencePlanes	typeref:struct:X265_NS::ReferencePlanes::__anon1	access:public
w	../../source/common/predict.h	/^        int w, o, offset, shift, round;$/;"	m	struct:X265_NS::Predict::WeightValues	access:public
wait	../../source/common/threading.h	/^    void wait()$/;"	f	class:X265_NS::Event	access:public	signature:()
waitForChange	../../source/common/threading.h	/^    int waitForChange(int prev)$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:(int prev)
waitForExit	../../source/common/threadpool.h	/^    void waitForExit()$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:()
waiterCount	../../source/common/winxp.h	/^    volatile int waiterCount;$/;"	m	struct:X265_NS::__anon21	access:public
waiterCountMutex	../../source/common/winxp.h	/^    CRITICAL_SECTION waiterCountMutex;$/;"	m	struct:X265_NS::__anon21	access:public
waitersDone	../../source/common/winxp.h	/^    HANDLE waitersDone;$/;"	m	struct:X265_NS::__anon21	access:public
wantedBitsWindow	../../source/common/frame.h	/^    double   wantedBitsWindow;$/;"	m	struct:X265_NS::RcStats	access:public
wbuffer	../../source/encoder/slicetype.h	/^    pixel*          wbuffer[4];$/;"	m	struct:X265_NS::LookaheadTLD	access:public
weight	../../source/common/lowres.h	/^        int      weight;$/;"	m	struct:X265_NS::ReferencePlanes::__anon1	access:public
weightAnalyse	../../source/encoder/frameencoder.cpp	/^void weightAnalyse(Slice& slice, Frame& frame, x265_param& param);$/;"	p	namespace:X265_NS	file:	signature:(Slice& slice, Frame& frame, x265_param& param)
weightAnalyse	../../source/encoder/weightPrediction.cpp	/^void weightAnalyse(Slice& slice, Frame& frame, x265_param& param)$/;"	f	namespace:X265_NS	signature:(Slice& slice, Frame& frame, x265_param& param)
weightAnalyzeTime	../../source/encoder/search.h	/^    int64_t  weightAnalyzeTime;                 \/\/ elapsed worker time analyzing reference weights$/;"	m	struct:X265_NS::CUStats	access:public
weightBidir	../../source/common/predict.cpp	/^inline pixel weightBidir(int w0, int16_t P0, int w1, int16_t P1, int round, int shift, int offset)$/;"	f	namespace:__anon13	signature:(int w0, int16_t P0, int w1, int16_t P1, int round, int shift, int offset)
weightBuffer	../../source/encoder/reference.h	/^    pixel*      weightBuffer[3];$/;"	m	class:X265_NS::MotionReference	access:public
weightCost	../../source/encoder/weightPrediction.cpp	/^uint32_t weightCost(pixel *         fenc,$/;"	f	namespace:__anon22	signature:(pixel * fenc, pixel * ref, pixel * weightTemp, intptr_t stride, const Cache & cache, int width, int height, WeightParam * w, bool bLuma)
weightCostLuma	../../source/encoder/slicetype.cpp	/^uint32_t LookaheadTLD::weightCostLuma(Lowres& fenc, Lowres& ref, WeightParam& wp)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc, Lowres& ref, WeightParam& wp)
weightCostLuma	../../source/encoder/slicetype.h	/^    uint32_t weightCostLuma(Lowres& fenc, Lowres& ref, WeightParam& wp);$/;"	p	struct:X265_NS::LookaheadTLD	access:protected	signature:(Lowres& fenc, Lowres& ref, WeightParam& wp)
weight_pp	../../source/common/primitives.h	/^    weightp_pp_t          weight_pp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
weight_pp_c	../../source/common/pixel.cpp	/^static void weight_pp_c(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset)$/;"	f	namespace:__anon31	signature:(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset)
weight_sp	../../source/common/primitives.h	/^    weightp_sp_t          weight_sp;$/;"	m	struct:X265_NS::EncoderPrimitives	access:public
weight_sp_c	../../source/common/pixel.cpp	/^static void weight_sp_c(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset)$/;"	f	namespace:__anon31	signature:(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset)
weightedCostDelta	../../source/common/lowres.h	/^    double    weightedCostDelta[X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
weightedRef	../../source/common/lowres.h	/^    ReferencePlanes weightedRef[X265_BFRAME_MAX + 2];$/;"	m	struct:X265_NS::Lowres	access:public
weightp_pp_t	../../source/common/primitives.h	/^typedef void (*weightp_pp_t)(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset);$/;"	t	namespace:X265_NS
weightp_sp_t	../../source/common/primitives.h	/^typedef void (*weightp_sp_t)(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset);$/;"	t	namespace:X265_NS
weightsAnalyse	../../source/encoder/slicetype.cpp	/^void LookaheadTLD::weightsAnalyse(Lowres& fenc, Lowres& ref)$/;"	f	class:LookaheadTLD	signature:(Lowres& fenc, Lowres& ref)
weightsAnalyse	../../source/encoder/slicetype.h	/^    void weightsAnalyse(Lowres& fenc, Lowres& ref);$/;"	p	struct:X265_NS::LookaheadTLD	access:public	signature:(Lowres& fenc, Lowres& ref)
whitePointX	../../source/encoder/sei.h	/^    uint16_t whitePointX, whitePointY;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
whitePointY	../../source/encoder/sei.h	/^    uint16_t whitePointX, whitePointY;$/;"	m	class:X265_NS::SEIMasteringDisplayColorVolume	access:public
width	../../source/common/lowres.h	/^    int    width;            \/\/ width of lowres frame in pixels$/;"	m	struct:X265_NS::Lowres	access:public
width	../../source/common/predict.h	/^    int          width;$/;"	m	struct:X265_NS::PredictionUnit	access:public
width	../../source/input/input.h	/^    int width;$/;"	m	struct:X265_NS::InputFileInfo	access:public
width	../../source/input/y4m.h	/^    int width;$/;"	m	class:X265_NS::Y4MInput	access:protected
width	../../source/input/yuv.h	/^    int width;$/;"	m	class:X265_NS::YUVInput	access:protected
width	../../source/output/reconplay.h	/^    int    width;          \/* width of frame *\/$/;"	m	class:X265_NS::ReconPlay	access:protected
width	../../source/output/y4m.h	/^    int width;$/;"	m	class:X265_NS::Y4MOutput	access:protected
width	../../source/output/yuv.h	/^    int width;$/;"	m	class:X265_NS::YUVOutput	access:protected
widthInCU	../../source/encoder/slicetype.h	/^    int             widthInCU;$/;"	m	struct:X265_NS::LookaheadTLD	access:public
word	../../source/common/mv.h	/^        int32_t word;$/;"	m	union:X265_NS::MV::__anon11	access:public
workload	../../source/encoder/motion.cpp	/^const SubpelWorkload workload[X265_MAX_SUBPEL_LEVEL + 1] =$/;"	m	namespace:__anon23	file:
wp_ssd	../../source/common/lowres.h	/^    uint64_t  wp_ssd[3];       \/\/ This is different than SSDY, this is sum(pixel^2) - sum(pixel)^2 for entire frame$/;"	m	struct:X265_NS::Lowres	access:public
wp_sum	../../source/common/lowres.h	/^    uint64_t  wp_sum[3];$/;"	m	struct:X265_NS::Lowres	access:public
write	../../source/common/bitstream.cpp	/^void Bitstream::write(uint32_t val, uint32_t numBits)$/;"	f	class:Bitstream	signature:(uint32_t val, uint32_t numBits)
write	../../source/common/bitstream.h	/^    virtual void     write(uint32_t val, uint32_t numBits)  = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:(uint32_t val, uint32_t numBits)
write	../../source/common/bitstream.h	/^    void     write(uint32_t val, uint32_t numBits);$/;"	p	class:X265_NS::Bitstream	access:public	signature:(uint32_t val, uint32_t numBits)
write	../../source/common/bitstream.h	/^    void     write(uint32_t, uint32_t num)  { m_bitCounter += num; }$/;"	f	class:X265_NS::BitCounter	access:public	signature:(uint32_t, uint32_t num)
write	../../source/encoder/sei.cpp	/^void SEI::write(Bitstream& bs, const SPS& sps)$/;"	f	class:SEI	signature:(Bitstream& bs, const SPS& sps)
write	../../source/encoder/sei.h	/^    void write(Bitstream& bs, const SPS& sps);$/;"	p	class:X265_NS::SEI	access:public	signature:(Bitstream& bs, const SPS& sps)
writeAlignOne	../../source/common/bitstream.cpp	/^void Bitstream::writeAlignOne()$/;"	f	class:Bitstream	signature:()
writeAlignOne	../../source/common/bitstream.h	/^    virtual void     writeAlignOne()                        = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:()
writeAlignOne	../../source/common/bitstream.h	/^    void     writeAlignOne()                { }$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
writeAlignOne	../../source/common/bitstream.h	/^    void     writeAlignOne();      \/\/ insert one bits until the bitstream is byte-aligned$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
writeAlignZero	../../source/common/bitstream.cpp	/^void Bitstream::writeAlignZero()$/;"	f	class:Bitstream	signature:()
writeAlignZero	../../source/common/bitstream.h	/^    virtual void     writeAlignZero()                       = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:()
writeAlignZero	../../source/common/bitstream.h	/^    void     writeAlignZero()               { }$/;"	f	class:X265_NS::BitCounter	access:public	signature:()
writeAlignZero	../../source/common/bitstream.h	/^    void     writeAlignZero();     \/\/ insert zero bits until the bitstream is byte-aligned$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
writeAnalysis2PassFile	../../source/encoder/encoder.cpp	/^void Encoder::writeAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype)$/;"	f	class:Encoder	signature:(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype)
writeAnalysis2PassFile	../../source/encoder/encoder.h	/^    void writeAnalysis2PassFile(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_2Pass* analysis2Pass, FrameData &curEncData, int slicetype)
writeAnalysisFile	../../source/encoder/encoder.cpp	/^void Encoder::writeAnalysisFile(x265_analysis_data* analysis, FrameData &curEncData)$/;"	f	class:Encoder	signature:(x265_analysis_data* analysis, FrameData &curEncData)
writeAnalysisFile	../../source/encoder/encoder.h	/^    void writeAnalysisFile(x265_analysis_data* pic, FrameData &curEncData);$/;"	p	class:X265_NS::Encoder	access:public	signature:(x265_analysis_data* pic, FrameData &curEncData)
writeByte	../../source/common/bitstream.cpp	/^void Bitstream::writeByte(uint32_t val)$/;"	f	class:Bitstream	signature:(uint32_t val)
writeByte	../../source/common/bitstream.h	/^    virtual void     writeByte(uint32_t val)                = 0;$/;"	p	class:X265_NS::BitInterface	access:public	signature:(uint32_t val)
writeByte	../../source/common/bitstream.h	/^    void     writeByte(uint32_t val);$/;"	p	class:X265_NS::Bitstream	access:public	signature:(uint32_t val)
writeByte	../../source/common/bitstream.h	/^    void     writeByte(uint32_t)            { m_bitCounter += 8;   }$/;"	f	class:X265_NS::BitCounter	access:public	signature:(uint32_t)
writeByteAlign	../../source/encoder/sei.cpp	/^void SEI::writeByteAlign()$/;"	f	class:SEI	signature:()
writeByteAlign	../../source/encoder/sei.h	/^    void writeByteAlign();$/;"	p	class:X265_NS::SEI	access:protected	signature:()
writeByteAlignment	../../source/common/bitstream.cpp	/^void Bitstream::writeByteAlignment()$/;"	f	class:Bitstream	signature:()
writeByteAlignment	../../source/common/bitstream.h	/^    void     writeByteAlignment(); \/\/ insert 1 bit, then pad to byte-align with zero$/;"	p	class:X265_NS::Bitstream	access:public	signature:()
writeCode	../../source/common/bitstream.h	/^    void writeCode(uint32_t code, uint32_t length) { m_bitIf->write(code, length); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code, uint32_t length)
writeCoefRemainExGolomb	../../source/encoder/entropy.cpp	/^void Entropy::writeCoefRemainExGolomb(uint32_t codeNumber, uint32_t absGoRice)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t codeNumber, uint32_t absGoRice)
writeCoefRemainExGolomb	../../source/encoder/entropy.h	/^    void writeCoefRemainExGolomb(uint32_t symbol, const uint32_t absGoRice);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t symbol, const uint32_t absGoRice)
writeCount	../../source/input/y4m.h	/^    ThreadSafeInteger writeCount;$/;"	m	class:X265_NS::Y4MInput	access:protected
writeCount	../../source/input/yuv.h	/^    ThreadSafeInteger writeCount;$/;"	m	class:X265_NS::YUVInput	access:protected
writeCount	../../source/output/reconplay.h	/^    ThreadSafeInteger writeCount;$/;"	m	class:X265_NS::ReconPlay	access:protected
writeEpExGolomb	../../source/encoder/entropy.cpp	/^void Entropy::writeEpExGolomb(uint32_t symbol, uint32_t count)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t symbol, uint32_t count)
writeEpExGolomb	../../source/encoder/entropy.h	/^    void writeEpExGolomb(uint32_t symbol, uint32_t count);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t symbol, uint32_t count)
writeFlag	../../source/common/bitstream.h	/^    void writeFlag(bool code)                      { m_bitIf->write(code, 1); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(bool code)
writeFrame	../../source/output/output.h	/^    virtual int writeFrame(const x265_nal* nal, uint32_t nalcount, x265_picture& pic) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(const x265_nal* nal, uint32_t nalcount, x265_picture& pic)
writeFrame	../../source/output/raw.cpp	/^int RAWOutput::writeFrame(const x265_nal* nal, uint32_t nalcount, x265_picture&)$/;"	f	class:RAWOutput	signature:(const x265_nal* nal, uint32_t nalcount, x265_picture&)
writeFrame	../../source/output/raw.h	/^    int writeFrame(const x265_nal* nal, uint32_t nalcount, x265_picture&);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(const x265_nal* nal, uint32_t nalcount, x265_picture&)
writeHeader	../../source/output/y4m.h	/^    void writeHeader();$/;"	p	class:X265_NS::Y4MOutput	access:protected	signature:()
writeHeaders	../../source/output/output.h	/^    virtual int writeHeaders(const x265_nal* nal, uint32_t nalcount) = 0;$/;"	p	class:X265_NS::OutputFile	access:public	signature:(const x265_nal* nal, uint32_t nalcount)
writeHeaders	../../source/output/raw.cpp	/^int RAWOutput::writeHeaders(const x265_nal* nal, uint32_t nalcount)$/;"	f	class:RAWOutput	signature:(const x265_nal* nal, uint32_t nalcount)
writeHeaders	../../source/output/raw.h	/^    int writeHeaders(const x265_nal* nal, uint32_t nalcount);$/;"	p	class:X265_NS::RAWOutput	access:public	signature:(const x265_nal* nal, uint32_t nalcount)
writeOut	../../source/encoder/entropy.cpp	/^void Entropy::writeOut()$/;"	f	class:X265_NS::Entropy	signature:()
writeOut	../../source/encoder/entropy.h	/^    void writeOut();$/;"	p	class:X265_NS::Entropy	access:private	signature:()
writePicture	../../source/output/output.h	/^    virtual bool writePicture(const x265_picture& pic) = 0;$/;"	p	class:X265_NS::ReconFile	access:public	signature:(const x265_picture& pic)
writePicture	../../source/output/reconplay.cpp	/^bool ReconPlay::writePicture(const x265_picture& pic)$/;"	f	class:ReconPlay	signature:(const x265_picture& pic)
writePicture	../../source/output/reconplay.h	/^    bool writePicture(const x265_picture& pic);$/;"	p	class:X265_NS::ReconPlay	access:public	signature:(const x265_picture& pic)
writePicture	../../source/output/y4m.cpp	/^bool Y4MOutput::writePicture(const x265_picture& pic)$/;"	f	class:Y4MOutput	signature:(const x265_picture& pic)
writePicture	../../source/output/y4m.h	/^    bool writePicture(const x265_picture& pic);$/;"	p	class:X265_NS::Y4MOutput	access:public	signature:(const x265_picture& pic)
writePicture	../../source/output/yuv.cpp	/^bool YUVOutput::writePicture(const x265_picture& pic)$/;"	f	class:YUVOutput	signature:(const x265_picture& pic)
writePicture	../../source/output/yuv.h	/^    bool writePicture(const x265_picture& pic);$/;"	p	class:X265_NS::YUVOutput	access:public	signature:(const x265_picture& pic)
writeRateControlFrameStats	../../source/encoder/ratecontrol.cpp	/^int RateControl::writeRateControlFrameStats(Frame* curFrame, RateControlEntry* rce)$/;"	f	class:RateControl	signature:(Frame* curFrame, RateControlEntry* rce)
writeRateControlFrameStats	../../source/encoder/ratecontrol.h	/^    int writeRateControlFrameStats(Frame* curFrame, RateControlEntry* rce);$/;"	p	class:X265_NS::RateControl	access:public	signature:(Frame* curFrame, RateControlEntry* rce)
writeSEI	../../source/encoder/sei.h	/^    virtual void writeSEI(const SPS&) = 0;$/;"	p	class:X265_NS::SEI	access:protected	signature:(const SPS&)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS& sps)$/;"	f	class:X265_NS::SEIBufferingPeriod	access:public	signature:(const SPS& sps)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS& sps)$/;"	f	class:X265_NS::SEIDecodedPictureHash	access:public	signature:(const SPS& sps)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS& sps)$/;"	f	class:X265_NS::SEIPictureTiming	access:public	signature:(const SPS& sps)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIActiveParameterSets	access:public	signature:(const SPS&)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIContentLightLevel	access:public	signature:(const SPS&)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEICreativeIntentMeta	access:public	signature:(const SPS&)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIMasteringDisplayColorVolume	access:public	signature:(const SPS&)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIRecoveryPoint	access:public	signature:(const SPS&)
writeSEI	../../source/encoder/sei.h	/^    void writeSEI(const SPS&)$/;"	f	class:X265_NS::SEIuserDataUnregistered	access:public	signature:(const SPS&)
writeSvlc	../../source/common/bitstream.h	/^    void writeSvlc(int32_t code)                   { uint32_t ucode = (code <= 0) ? -code << 1 : (code << 1) - 1; writeUvlc(ucode); }$/;"	f	class:X265_NS::SyntaxElementWriter	access:public	signature:(int32_t code)
writeUnaryMaxSymbol	../../source/encoder/entropy.cpp	/^void Entropy::writeUnaryMaxSymbol(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol)$/;"	f	class:X265_NS::Entropy	signature:(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol)
writeUnaryMaxSymbol	../../source/encoder/entropy.h	/^    void writeUnaryMaxSymbol(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol);$/;"	p	class:X265_NS::Entropy	access:private	signature:(uint32_t symbol, uint8_t* scmModel, int offset, uint32_t maxSymbol)
writeUvlc	../../source/common/bitstream.cpp	/^void SyntaxElementWriter::writeUvlc(uint32_t code)$/;"	f	class:SyntaxElementWriter	signature:(uint32_t code)
writeUvlc	../../source/common/bitstream.h	/^    void writeUvlc(uint32_t code);$/;"	p	class:X265_NS::SyntaxElementWriter	access:public	signature:(uint32_t code)
x	../../source/common/mv.h	/^        struct { int16_t x, y; };$/;"	m	struct:X265_NS::MV::__anon11::__anon12	access:public
x265_10bit	../../source/encoder/api.cpp	/^namespace x265_10bit {$/;"	n	file:
x265_10bit::x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth);$/;"	p	namespace:x265_10bit	file:	signature:(int bitDepth)
x265_10bit::x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);$/;"	p	namespace:x265_10bit	file:	signature:(int bitDepth, int apiVersion, int* err)
x265_12bit	../../source/encoder/api.cpp	/^namespace x265_12bit {$/;"	n	file:
x265_12bit::x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth);$/;"	p	namespace:x265_12bit	file:	signature:(int bitDepth)
x265_12bit::x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);$/;"	p	namespace:x265_12bit	file:	signature:(int bitDepth, int apiVersion, int* err)
x265_8bit	../../source/encoder/api.cpp	/^namespace x265_8bit {$/;"	n	file:
x265_8bit::x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth);$/;"	p	namespace:x265_8bit	file:	signature:(int bitDepth)
x265_8bit::x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);$/;"	p	namespace:x265_8bit	file:	signature:(int bitDepth, int apiVersion, int* err)
x265_addAvg_12x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_12x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_12x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_12x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x12_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x12_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x24_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x24_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x4_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x4_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x64_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_16x8_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_16x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_24x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_24x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_24x64_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_24x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_32x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_32x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_32x24_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_32x24_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_32x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_32x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_32x48_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_32x48_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_32x64_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_32x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_32x8_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_32x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_48x64_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_48x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_4x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_4x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_4x2_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_4x2_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_4x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_4x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_4x4_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_4x4_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_4x8_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_4x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_64x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_64x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_64x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_64x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_64x48_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_64x48_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_64x64_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_64x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_6x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_6x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_6x8_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_6x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x12_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x12_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x16_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x2_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x2_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x32_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x4_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x4_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x64_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x6_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x6_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_addAvg_8x8_neon	../../source/common/arm/pixel.h	/^void x265_addAvg_8x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);$/;"	p	signature:(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride)
x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth)$/;"	f	signature:(int bitDepth)
x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth);$/;"	p	namespace:x265_10bit	file:	signature:(int bitDepth)
x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth);$/;"	p	namespace:x265_12bit	file:	signature:(int bitDepth)
x265_api_get	../../source/encoder/api.cpp	/^const x265_api* x265_api_get(int bitDepth);$/;"	p	namespace:x265_8bit	file:	signature:(int bitDepth)
x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err)$/;"	f	signature:(int bitDepth, int apiVersion, int* err)
x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);$/;"	p	namespace:x265_10bit	file:	signature:(int bitDepth, int apiVersion, int* err)
x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);$/;"	p	namespace:x265_12bit	file:	signature:(int bitDepth, int apiVersion, int* err)
x265_api_query	../../source/encoder/api.cpp	/^const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);$/;"	p	namespace:x265_8bit	file:	signature:(int bitDepth, int apiVersion, int* err)
x265_atobool	../../source/common/param.cpp	/^static int x265_atobool(const char* str, bool& bError)$/;"	f	file:	signature:(const char* str, bool& bError)
x265_atof	../../source/common/param.cpp	/^double x265_atof(const char* str, bool& bError)$/;"	f	namespace:X265_NS	signature:(const char* str, bool& bError)
x265_atof	../../source/common/param.h	/^double x265_atof(const char *str, bool& bError);$/;"	p	namespace:X265_NS	signature:(const char *str, bool& bError)
x265_atoi	../../source/common/param.cpp	/^int x265_atoi(const char* str, bool& bError)$/;"	f	namespace:X265_NS	signature:(const char* str, bool& bError)
x265_atoi	../../source/common/param.h	/^int   x265_atoi(const char *str, bool& bError);$/;"	p	namespace:X265_NS	signature:(const char *str, bool& bError)
x265_blockcopy_pp_12x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_12x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_12x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_12x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x12_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x12_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x24_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x24_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_16x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_16x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_24x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_24x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_24x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_24x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_2x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_2x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_2x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_2x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_2x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_2x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_32x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_32x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_32x24_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_32x24_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_32x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_32x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_32x48_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_32x48_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_32x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_32x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_32x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_32x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_48x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_48x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_4x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_4x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_4x2_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_4x2_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_4x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_4x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_4x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_4x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_4x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_4x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_64x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_64x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_64x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_64x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_64x48_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_64x48_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_64x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_64x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_6x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_6x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_6x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_6x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x12_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x12_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x2_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x2_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x6_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x6_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_pp_8x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_pp_8x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_blockcopy_ps_16x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_16x16_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_16x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_16x32_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_32x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_32x32_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_32x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_32x64_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_4x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_4x4_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_4x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_4x8_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_64x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_64x64_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_8x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_8x16_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_ps_8x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ps_8x8_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb)
x265_blockcopy_sp_16x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_16x16_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_16x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_16x32_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_32x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_32x32_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_32x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_32x64_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_4x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_4x4_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_4x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_4x8_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_64x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_64x64_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_8x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_8x16_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_sp_8x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_sp_8x8_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_16x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_16x16_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_16x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_16x32_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_32x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_32x32_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_32x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_32x64_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_4x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_4x4_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_4x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_4x8_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_64x64_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_64x64_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_8x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_8x16_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockcopy_ss_8x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockcopy_ss_8x8_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);$/;"	p	signature:(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb)
x265_blockfill_s_16x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockfill_s_16x16_neon(int16_t* dst, intptr_t dstride, int16_t val);$/;"	p	signature:(int16_t* dst, intptr_t dstride, int16_t val)
x265_blockfill_s_32x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockfill_s_32x32_neon(int16_t* dst, intptr_t dstride, int16_t val);$/;"	p	signature:(int16_t* dst, intptr_t dstride, int16_t val)
x265_blockfill_s_4x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockfill_s_4x4_neon(int16_t* dst, intptr_t dstride, int16_t val);$/;"	p	signature:(int16_t* dst, intptr_t dstride, int16_t val)
x265_blockfill_s_8x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_blockfill_s_8x8_neon(int16_t* dst, intptr_t dstride, int16_t val);$/;"	p	signature:(int16_t* dst, intptr_t dstride, int16_t val)
x265_check_params	../../source/common/param.cpp	/^int x265_check_params(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
x265_check_params	../../source/common/param.h	/^int   x265_check_params(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
x265_chroma_lambda2_offset_tab	../../source/common/constants.cpp	/^const uint16_t x265_chroma_lambda2_offset_tab[MAX_CHROMA_LAMBDA_OFFSET+1] =$/;"	m	namespace:X265_NS	file:
x265_cleanup	../../source/encoder/api.cpp	/^void x265_cleanup(void)$/;"	f	signature:(void)
x265_clip	../../source/common/common.h	/^inline pixel x265_clip(T x) { return (pixel)x265_min<T>(T((1 << X265_DEPTH) - 1), x265_max<T>(T(0), x)); }$/;"	f	signature:(T x)
x265_clip3	../../source/common/common.h	/^inline T x265_clip3(T minVal, T maxVal, T a) { return x265_min(x265_max(minVal, a), maxVal); }$/;"	f	signature:(T minVal, T maxVal, T a)
x265_copy_cnt_16_neon	../../source/common/arm/blockcopy8.h	/^uint32_t x265_copy_cnt_16_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);$/;"	p	signature:(int16_t* coeff, const int16_t* residual, intptr_t resiStride)
x265_copy_cnt_32_neon	../../source/common/arm/blockcopy8.h	/^uint32_t x265_copy_cnt_32_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);$/;"	p	signature:(int16_t* coeff, const int16_t* residual, intptr_t resiStride)
x265_copy_cnt_4_neon	../../source/common/arm/blockcopy8.h	/^uint32_t x265_copy_cnt_4_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);$/;"	p	signature:(int16_t* coeff, const int16_t* residual, intptr_t resiStride)
x265_copy_cnt_8_neon	../../source/common/arm/blockcopy8.h	/^uint32_t x265_copy_cnt_8_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);$/;"	p	signature:(int16_t* coeff, const int16_t* residual, intptr_t resiStride)
x265_count_nonzero_16_neon	../../source/common/arm/blockcopy8.h	/^int x265_count_nonzero_16_neon(const int16_t* quantCoeff);$/;"	p	signature:(const int16_t* quantCoeff)
x265_count_nonzero_32_neon	../../source/common/arm/blockcopy8.h	/^int x265_count_nonzero_32_neon(const int16_t* quantCoeff);$/;"	p	signature:(const int16_t* quantCoeff)
x265_count_nonzero_4_neon	../../source/common/arm/blockcopy8.h	/^int x265_count_nonzero_4_neon(const int16_t* quantCoeff);$/;"	p	signature:(const int16_t* quantCoeff)
x265_count_nonzero_8_neon	../../source/common/arm/blockcopy8.h	/^int x265_count_nonzero_8_neon(const int16_t* quantCoeff);$/;"	p	signature:(const int16_t* quantCoeff)
x265_cpy2Dto1D_shr_16x16_neon	../../source/common/arm/blockcopy8.h	/^void x265_cpy2Dto1D_shr_16x16_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	p	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
x265_cpy2Dto1D_shr_32x32_neon	../../source/common/arm/blockcopy8.h	/^void x265_cpy2Dto1D_shr_32x32_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	p	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
x265_cpy2Dto1D_shr_4x4_neon	../../source/common/arm/blockcopy8.h	/^void x265_cpy2Dto1D_shr_4x4_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	p	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
x265_cpy2Dto1D_shr_8x8_neon	../../source/common/arm/blockcopy8.h	/^void x265_cpy2Dto1D_shr_8x8_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);$/;"	p	signature:(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
x265_dequant_normal_neon	../../source/common/arm/pixel-util.h	/^void x265_dequant_normal_neon(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift);$/;"	p	signature:(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift)
x265_dequant_scaling_neon	../../source/common/arm/pixel-util.h	/^void x265_dequant_scaling_neon(const int16_t* quantCoef, const int32_t* deQuantCoef, int16_t* coef, int num, int per, int shift);$/;"	p	signature:(const int16_t* quantCoef, const int32_t* deQuantCoef, int16_t* coef, int num, int per, int shift)
x265_emms	../../source/common/cpu.h	40;"	d
x265_emms	../../source/common/cpu.h	43;"	d
x265_emms	../../source/common/cpu.h	47;"	d
x265_emms	../../source/common/cpu.h	49;"	d
x265_encoder	../../source/encoder/encoder.h	/^struct x265_encoder {};$/;"	s
x265_encoder_close	../../source/encoder/api.cpp	/^void x265_encoder_close(x265_encoder *enc)$/;"	f	signature:(x265_encoder *enc)
x265_encoder_ctu_info	../../source/encoder/api.cpp	/^int x265_encoder_ctu_info(x265_encoder *enc, int poc, x265_ctu_info_t** ctu)$/;"	f	signature:(x265_encoder *enc, int poc, x265_ctu_info_t** ctu)
x265_encoder_encode	../../source/encoder/api.cpp	/^int x265_encoder_encode(x265_encoder *enc, x265_nal **pp_nal, uint32_t *pi_nal, x265_picture *pic_in, x265_picture *pic_out)$/;"	f	signature:(x265_encoder *enc, x265_nal **pp_nal, uint32_t *pi_nal, x265_picture *pic_in, x265_picture *pic_out)
x265_encoder_get_stats	../../source/encoder/api.cpp	/^void x265_encoder_get_stats(x265_encoder *enc, x265_stats *outputStats, uint32_t statsSizeBytes)$/;"	f	signature:(x265_encoder *enc, x265_stats *outputStats, uint32_t statsSizeBytes)
x265_encoder_headers	../../source/encoder/api.cpp	/^int x265_encoder_headers(x265_encoder *enc, x265_nal **pp_nal, uint32_t *pi_nal)$/;"	f	signature:(x265_encoder *enc, x265_nal **pp_nal, uint32_t *pi_nal)
x265_encoder_intra_refresh	../../source/encoder/api.cpp	/^int x265_encoder_intra_refresh(x265_encoder *enc)$/;"	f	signature:(x265_encoder *enc)
x265_encoder_log	../../source/encoder/api.cpp	/^void x265_encoder_log(x265_encoder* enc, int argc, char **argv)$/;"	f	signature:(x265_encoder* enc, int argc, char **argv)
x265_encoder_open	../../source/encoder/api.cpp	/^x265_encoder *x265_encoder_open(x265_param *p)$/;"	f	signature:(x265_param *p)
x265_encoder_parameters	../../source/encoder/api.cpp	/^void x265_encoder_parameters(x265_encoder *enc, x265_param *out)$/;"	f	signature:(x265_encoder *enc, x265_param *out)
x265_encoder_reconfig	../../source/encoder/api.cpp	/^int x265_encoder_reconfig(x265_encoder* enc, x265_param* param_in)$/;"	f	signature:(x265_encoder* enc, x265_param* param_in)
x265_exp2_lut	../../source/common/constants.cpp	/^const uint8_t x265_exp2_lut[64] =$/;"	m	namespace:X265_NS	file:
x265_exp2fix8	../../source/common/common.cpp	/^int x265_exp2fix8(double x)$/;"	f	namespace:X265_NS	signature:(double x)
x265_exp2fix8	../../source/common/common.h	/^int      x265_exp2fix8(double x);$/;"	p	namespace:X265_NS	signature:(double x)
x265_filterPixelToShort_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_filterPixelToShort_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_filterPixelToShort_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride)
x265_fopen	../../source/common/common.cpp	/^FILE* x265_fopen(const char* fileName, const char* mode)$/;"	f	namespace:X265_NS	signature:(const char* fileName, const char* mode)
x265_fopen	../../source/common/common.h	/^FILE*    x265_fopen(const char* fileName, const char* mode);$/;"	p	namespace:X265_NS	signature:(const char* fileName, const char* mode)
x265_fopen	../../source/common/common.h	426;"	d
x265_free	../../source/common/common.cpp	/^void x265_free(void *ptr)$/;"	f	namespace:X265_NS	signature:(void *ptr)
x265_free	../../source/common/common.h	/^void     x265_free(void *ptr);$/;"	p	namespace:X265_NS	signature:(void *ptr)
x265_getResidual16_neon	../../source/common/arm/pixel-util.h	/^void x265_getResidual16_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);$/;"	p	signature:(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)
x265_getResidual32_neon	../../source/common/arm/pixel-util.h	/^void x265_getResidual32_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);$/;"	p	signature:(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)
x265_getResidual4_neon	../../source/common/arm/pixel-util.h	/^void x265_getResidual4_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);$/;"	p	signature:(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)
x265_getResidual8_neon	../../source/common/arm/pixel-util.h	/^void x265_getResidual8_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);$/;"	p	signature:(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride)
x265_interp_4tap_horiz_pp_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_12x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_12x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_12x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_24x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_24x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_32x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_32x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_4x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_4x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_4x2_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_4x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_4x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_4x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_4x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x2_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x6_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x6_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_pp_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_horiz_ps_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_12x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_12x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_24x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_24x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_32x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_32x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_4x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_4x2_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_4x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_4x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x2_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x6_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x6_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_horiz_ps_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_horiz_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_4tap_vert_pp_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_16x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_24x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_24x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_32x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_32x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x2_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x6_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x6_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_pp_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_24x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_24x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_32x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_32x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x2_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x6_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x6_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_ps_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x12_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x24_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_16x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_24x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_24x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_24x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_32x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_32x24_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_32x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_32x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_32x48_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_32x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_32x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_48x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_64x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_64x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_64x48_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_64x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x12_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x2_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x2_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x6_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x6_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_4tap_vert_sp_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_4tap_vert_sp_8x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_12x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_4x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_4x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_4x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_pp_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_ps_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_12x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_16x12_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_16x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_16x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_16x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_16x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_16x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_24x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_32x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_32x24_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_32x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_32x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_32x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_48x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_4x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_4x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_4x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_64x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_64x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_64x48_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_64x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_8x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_8x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_8x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_8tap_vert_sp_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_8tap_vert_sp_8x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_12x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_4x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_4x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_4x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_pp_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);$/;"	p	signature:(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx)
x265_interp_horiz_ps_12x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_16x12_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_16x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_16x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_16x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_16x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_16x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_24x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_32x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_32x24_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_32x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_32x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_32x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_48x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_4x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_4x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_4x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_64x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_64x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_64x48_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_64x64_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_8x16_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_8x32_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_8x4_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_interp_horiz_ps_8x8_neon	../../source/common/arm/ipfilter8.h	/^void x265_interp_horiz_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);$/;"	p	signature:(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt)
x265_lambda2_tab	../../source/common/constants.cpp	/^double x265_lambda2_tab[QP_MAX_MAX + 1] =$/;"	m	namespace:X265_NS	file:
x265_lambda_tab	../../source/common/constants.cpp	/^double x265_lambda_tab[QP_MAX_MAX + 1] =$/;"	m	namespace:X265_NS	file:
x265_log	../../source/common/common.h	416;"	d
x265_log_file	../../source/common/common.h	417;"	d
x265_malloc	../../source/common/common.cpp	/^void *x265_malloc(size_t size)$/;"	f	namespace:X265_NS	signature:(size_t size)
x265_malloc	../../source/common/common.h	/^void*    x265_malloc(size_t size);$/;"	p	namespace:X265_NS	signature:(size_t size)
x265_max	../../source/common/common.h	/^inline T x265_max(T a, T b) { return a > b ? a : b; }$/;"	f	signature:(T a, T b)
x265_mdate	../../source/common/common.cpp	/^int64_t x265_mdate(void)$/;"	f	namespace:X265_NS	signature:(void)
x265_mdate	../../source/common/common.h	/^int64_t  x265_mdate(void);$/;"	p	namespace:X265_NS	signature:(void)
x265_min	../../source/common/common.h	/^inline T x265_min(T a, T b) { return a < b ? a : b; }$/;"	f	signature:(T a, T b)
x265_nquant_neon	../../source/common/arm/pixel-util.h	/^uint32_t x265_nquant_neon(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff);$/;"	p	signature:(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff)
x265_param2string	../../source/common/param.cpp	/^char *x265_param2string(x265_param* p, int padx, int pady)$/;"	f	namespace:X265_NS	signature:(x265_param* p, int padx, int pady)
x265_param2string	../../source/common/param.h	/^char* x265_param2string(x265_param *param, int padx, int pady);$/;"	p	namespace:X265_NS	signature:(x265_param *param, int padx, int pady)
x265_param_alloc	../../source/common/param.cpp	/^x265_param *x265_param_alloc()$/;"	f	signature:()
x265_param_alloc	../../source/common/param.h	/^x265_param* x265_param_alloc();$/;"	p	namespace:X265_NS	signature:()
x265_param_apply_fastfirstpass	../../source/common/param.cpp	/^void x265_param_apply_fastfirstpass(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
x265_param_apply_fastfirstpass	../../source/common/param.h	/^void  x265_param_apply_fastfirstpass(x265_param *p);$/;"	p	namespace:X265_NS	signature:(x265_param *p)
x265_param_apply_profile	../../source/common/param.h	/^int x265_param_apply_profile(x265_param *, const char *profile);$/;"	p	namespace:X265_NS	signature:(x265_param *, const char *profile)
x265_param_apply_profile	../../source/encoder/level.cpp	/^int x265_param_apply_profile(x265_param *param, const char *profile)$/;"	f	signature:(x265_param *param, const char *profile)
x265_param_default	../../source/common/param.cpp	/^void x265_param_default(x265_param* param)$/;"	f	signature:(x265_param* param)
x265_param_default	../../source/common/param.h	/^void x265_param_default(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
x265_param_default_preset	../../source/common/param.cpp	/^int x265_param_default_preset(x265_param* param, const char* preset, const char* tune)$/;"	f	signature:(x265_param* param, const char* preset, const char* tune)
x265_param_default_preset	../../source/common/param.h	/^int x265_param_default_preset(x265_param *, const char *preset, const char *tune);$/;"	p	namespace:X265_NS	signature:(x265_param *, const char *preset, const char *tune)
x265_param_free	../../source/common/param.cpp	/^void x265_param_free(x265_param* p)$/;"	f	signature:(x265_param* p)
x265_param_free	../../source/common/param.h	/^void x265_param_free(x265_param *);$/;"	p	namespace:X265_NS	signature:(x265_param *)
x265_param_parse	../../source/common/param.cpp	/^int x265_param_parse(x265_param* p, const char* name, const char* value)$/;"	f	signature:(x265_param* p, const char* name, const char* value)
x265_param_parse	../../source/common/param.h	/^int x265_param_parse(x265_param *p, const char *name, const char *value);$/;"	p	namespace:X265_NS	signature:(x265_param *p, const char *name, const char *value)
x265_picturePlaneSize	../../source/common/common.cpp	/^uint32_t x265_picturePlaneSize(int csp, int width, int height, int plane)$/;"	f	namespace:X265_NS	signature:(int csp, int width, int height, int plane)
x265_picturePlaneSize	../../source/common/common.h	/^uint32_t x265_picturePlaneSize(int csp, int width, int height, int plane);$/;"	p	namespace:X265_NS	signature:(int csp, int width, int height, int plane)
x265_picture_alloc	../../source/encoder/api.cpp	/^x265_picture *x265_picture_alloc()$/;"	f	signature:()
x265_picture_free	../../source/encoder/api.cpp	/^void x265_picture_free(x265_picture *p)$/;"	f	signature:(x265_picture *p)
x265_picture_init	../../source/encoder/api.cpp	/^void x265_picture_init(x265_param *param, x265_picture *pic)$/;"	f	signature:(x265_param *param, x265_picture *pic)
x265_pixel_add_ps_16x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_16x16_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_16x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_16x32_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_32x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_32x32_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_32x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_32x64_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_4x4_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_4x4_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_4x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_4x8_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_64x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_64x64_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_8x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_8x16_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_add_ps_8x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_add_ps_8x8_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_avg_pp_12x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_12x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_16x12_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_16x12_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_16x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_16x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_16x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_16x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_16x4_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_16x4_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_16x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_16x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_16x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_16x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_24x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_24x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_32x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_32x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_32x24_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_32x24_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_32x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_32x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_32x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_32x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_32x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_32x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_48x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_48x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_4x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_4x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_4x4_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_4x4_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_4x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_4x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_64x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_64x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_64x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_64x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_64x48_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_64x48_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_64x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_64x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_8x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_8x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_8x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_8x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_8x4_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_8x4_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_avg_pp_8x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_avg_pp_8x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);$/;"	p	signature:(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int)
x265_pixel_planecopy_cp_neon	../../source/common/arm/pixel.h	/^void x265_pixel_planecopy_cp_neon(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);$/;"	p	signature:(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift)
x265_pixel_sa8d_16x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_16x16_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sa8d_16x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_16x32_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sa8d_32x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_32x32_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sa8d_32x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_32x64_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sa8d_64x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_64x64_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sa8d_8x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_8x16_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sa8d_8x8_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_sa8d_8x8_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2)
x265_pixel_sad_12x16_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_12x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_16x12_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_16x12_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_16x16_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_16x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_16x32_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_16x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_16x4_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_16x4_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_16x64_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_16x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_16x8_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_16x8_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_24x32_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_24x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_32x16_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_32x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_32x24_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_32x24_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_32x32_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_32x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_32x64_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_32x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_32x8_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_32x8_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_48x64_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_48x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_4x16_armv6	../../source/common/arm/pixel.h	/^int x265_pixel_sad_4x16_armv6(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_4x4_armv6	../../source/common/arm/pixel.h	/^int x265_pixel_sad_4x4_armv6(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_4x8_armv6	../../source/common/arm/pixel.h	/^int x265_pixel_sad_4x8_armv6(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_64x16_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_64x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_64x32_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_64x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_64x48_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_64x48_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_64x64_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_64x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_8x16_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_8x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_8x32_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_8x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_8x4_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_8x4_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_sad_8x8_neon	../../source/common/arm/pixel.h	/^int x265_pixel_sad_8x8_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);$/;"	p	signature:(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride)
x265_pixel_satd_12x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_12x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_12x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_12x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x12_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x12_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x24_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x24_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x4_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_16x8_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_16x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_24x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_24x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_24x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_24x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_32x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_32x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_32x24_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_32x24_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_32x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_32x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_32x48_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_32x48_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_32x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_32x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_32x8_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_32x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_48x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_48x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_4x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_4x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_4x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_4x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_4x4_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_4x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_4x8_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_4x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_64x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_64x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_64x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_64x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_64x48_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_64x48_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_64x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_64x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_8x12_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_8x12_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_8x16_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_8x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_8x32_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_8x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_8x4_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_8x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_8x64_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_8x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_satd_8x8_neon	../../source/common/arm/pixel-util.h	/^int x265_pixel_satd_8x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_ssd_s_16x16_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_ssd_s_16x16_neon(const int16_t* a, intptr_t dstride);$/;"	p	signature:(const int16_t* a, intptr_t dstride)
x265_pixel_ssd_s_32x32_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_ssd_s_32x32_neon(const int16_t* a, intptr_t dstride);$/;"	p	signature:(const int16_t* a, intptr_t dstride)
x265_pixel_ssd_s_4x4_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_ssd_s_4x4_neon(const int16_t* a, intptr_t dstride);$/;"	p	signature:(const int16_t* a, intptr_t dstride)
x265_pixel_ssd_s_64x64_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_ssd_s_64x64_neon(const int16_t* a, intptr_t dstride);$/;"	p	signature:(const int16_t* a, intptr_t dstride)
x265_pixel_ssd_s_8x8_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_ssd_s_8x8_neon(const int16_t* a, intptr_t dstride);$/;"	p	signature:(const int16_t* a, intptr_t dstride)
x265_pixel_sse_pp_16x16_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_pp_16x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_sse_pp_32x32_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_pp_32x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_sse_pp_4x4_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_pp_4x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_sse_pp_64x64_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_pp_64x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_sse_pp_8x8_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_pp_8x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);$/;"	p	signature:(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2)
x265_pixel_sse_ss_16x16_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_ss_16x16_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);$/;"	p	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
x265_pixel_sse_ss_32x32_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_ss_32x32_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);$/;"	p	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
x265_pixel_sse_ss_4x4_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_ss_4x4_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);$/;"	p	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
x265_pixel_sse_ss_64x64_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_ss_64x64_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);$/;"	p	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
x265_pixel_sse_ss_8x8_neon	../../source/common/arm/pixel.h	/^sse_t x265_pixel_sse_ss_8x8_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);$/;"	p	signature:(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2)
x265_pixel_sub_ps_16x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_16x16_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_16x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_16x32_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_32x32_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_32x32_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_32x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_32x64_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_4x4_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_4x4_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_4x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_4x8_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_64x64_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_64x64_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_8x16_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_8x16_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_sub_ps_8x8_neon	../../source/common/arm/pixel.h	/^void x265_pixel_sub_ps_8x8_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);$/;"	p	signature:(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
x265_pixel_var_16x16_neon	../../source/common/arm/pixel-util.h	/^uint64_t x265_pixel_var_16x16_neon(const pixel* pix, intptr_t stride);$/;"	p	signature:(const pixel* pix, intptr_t stride)
x265_pixel_var_32x32_neon	../../source/common/arm/pixel-util.h	/^uint64_t x265_pixel_var_32x32_neon(const pixel* pix, intptr_t stride);$/;"	p	signature:(const pixel* pix, intptr_t stride)
x265_pixel_var_64x64_neon	../../source/common/arm/pixel-util.h	/^uint64_t x265_pixel_var_64x64_neon(const pixel* pix, intptr_t stride);$/;"	p	signature:(const pixel* pix, intptr_t stride)
x265_pixel_var_8x8_neon	../../source/common/arm/pixel-util.h	/^uint64_t x265_pixel_var_8x8_neon(const pixel* pix, intptr_t stride);$/;"	p	signature:(const pixel* pix, intptr_t stride)
x265_print_params	../../source/common/param.cpp	/^void x265_print_params(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
x265_print_params	../../source/common/param.h	/^void  x265_print_params(x265_param *param);$/;"	p	namespace:X265_NS	signature:(x265_param *param)
x265_qScale2qp	../../source/common/common.cpp	/^double x265_qScale2qp(double qScale)$/;"	f	namespace:X265_NS	signature:(double qScale)
x265_qScale2qp	../../source/common/common.h	/^double   x265_qScale2qp(double qScale);$/;"	p	namespace:X265_NS	signature:(double qScale)
x265_qp2qScale	../../source/common/common.cpp	/^double x265_qp2qScale(double qp)$/;"	f	namespace:X265_NS	signature:(double qp)
x265_qp2qScale	../../source/common/common.h	/^double   x265_qp2qScale(double qp);$/;"	p	namespace:X265_NS	signature:(double qp)
x265_quant_neon	../../source/common/arm/pixel-util.h	/^uint32_t x265_quant_neon(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff);$/;"	p	signature:(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff)
x265_rename	../../source/common/common.cpp	/^int x265_rename(const char* oldName, const char* newName)$/;"	f	namespace:X265_NS	signature:(const char* oldName, const char* newName)
x265_rename	../../source/common/common.h	/^int      x265_rename(const char* oldName, const char* newName);$/;"	p	namespace:X265_NS	signature:(const char* oldName, const char* newName)
x265_rename	../../source/common/common.h	428;"	d
x265_report_simd	../../source/common/common.h	/^void     x265_report_simd(x265_param* param);$/;"	p	namespace:X265_NS	signature:(x265_param* param)
x265_report_simd	../../source/common/primitives.cpp	/^void x265_report_simd(x265_param* param)$/;"	f	namespace:X265_NS	signature:(x265_param* param)
x265_sad_x3_12x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_12x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_16x12_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_16x12_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_16x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_16x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_16x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_16x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_16x4_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_16x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_16x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_16x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_16x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_16x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_24x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_24x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_32x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_32x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_32x24_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_32x24_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_32x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_32x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_32x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_32x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_32x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_32x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_48x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_48x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_4x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_4x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_4x4_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_4x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_4x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_4x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_64x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_64x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_64x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_64x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_64x48_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_64x48_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_64x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_64x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_8x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_8x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_8x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_8x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_8x4_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_8x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x3_8x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x3_8x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res)
x265_sad_x4_12x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_12x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_16x12_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_16x12_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_16x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_16x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_16x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_16x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_16x4_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_16x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_16x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_16x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_16x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_16x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_24x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_24x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_32x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_32x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_32x24_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_32x24_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_32x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_32x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_32x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_32x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_32x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_32x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_48x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_48x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_4x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_4x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_4x4_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_4x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_4x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_4x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_64x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_64x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_64x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_64x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_64x48_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_64x48_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_64x64_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_64x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_8x16_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_8x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_8x32_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_8x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_8x4_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_8x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_sad_x4_8x8_neon	../../source/common/arm/pixel.h	/^void x265_sad_x4_8x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);$/;"	p	signature:(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res)
x265_scale1D_128to64_neon	../../source/common/arm/pixel-util.h	/^void x265_scale1D_128to64_neon(pixel *dst, const pixel *src);$/;"	p	signature:(pixel *dst, const pixel *src)
x265_scale2D_64to32_neon	../../source/common/arm/pixel-util.h	/^void x265_scale2D_64to32_neon(pixel* dst, const pixel* src, intptr_t stride);$/;"	p	signature:(pixel* dst, const pixel* src, intptr_t stride)
x265_setup_primitives	../../source/common/common.h	/^void     x265_setup_primitives(x265_param* param);$/;"	p	namespace:X265_NS	signature:(x265_param* param)
x265_setup_primitives	../../source/common/primitives.cpp	/^void x265_setup_primitives(x265_param *param)$/;"	f	namespace:X265_NS	signature:(x265_param *param)
x265_slurp_file	../../source/common/common.cpp	/^char* x265_slurp_file(const char *filename)$/;"	f	namespace:X265_NS	signature:(const char *filename)
x265_slurp_file	../../source/common/common.h	/^char*    x265_slurp_file(const char *filename);$/;"	p	namespace:X265_NS	signature:(const char *filename)
x265_ssim2dB	../../source/common/common.cpp	/^double x265_ssim2dB(double ssim)$/;"	f	namespace:X265_NS	signature:(double ssim)
x265_ssim2dB	../../source/common/common.h	/^double   x265_ssim2dB(double ssim);$/;"	p	namespace:X265_NS	signature:(double ssim)
x265_ssim_4x4x2_core_neon	../../source/common/arm/pixel-util.h	/^void x265_ssim_4x4x2_core_neon(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]);$/;"	p	signature:(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4])
x265_unlink	../../source/common/common.cpp	/^int x265_unlink(const char* fileName)$/;"	f	namespace:X265_NS	signature:(const char* fileName)
x265_unlink	../../source/common/common.h	/^int      x265_unlink(const char* fileName);$/;"	p	namespace:X265_NS	signature:(const char* fileName)
x265_unlink	../../source/common/common.h	427;"	d
xop	../../source/common/x86/pixel.h	/^DECL_PIXELS(xop);$/;"	v
xstr	../../source/encoder/api.cpp	412;"	d	file:
y	../../source/common/mv.h	/^        struct { int16_t x, y; };$/;"	m	struct:X265_NS::MV::__anon11::__anon12	access:public
zeroFract	../../source/encoder/entropy.h	/^    void zeroFract()                   { m_fracBits = 0; }$/;"	f	class:X265_NS::Entropy	access:public	signature:()
zeroShort	../../source/encoder/search.h	/^    static const int16_t zeroShort[MAX_CU_SIZE];$/;"	m	class:X265_NS::Search	access:public
zero_s16v	../../source/common/ppc/pixel_altivec.cpp	45;"	d	file:
zero_s16v	../../source/common/ppc/ppccommon.h	44;"	d
zero_s32v	../../source/common/ppc/pixel_altivec.cpp	47;"	d	file:
zero_s32v	../../source/common/ppc/ppccommon.h	46;"	d
zero_s8v	../../source/common/ppc/pixel_altivec.cpp	43;"	d	file:
zero_s8v	../../source/common/ppc/ppccommon.h	42;"	d
zero_u16v	../../source/common/ppc/pixel_altivec.cpp	44;"	d	file:
zero_u16v	../../source/common/ppc/ppccommon.h	43;"	d
zero_u32v	../../source/common/ppc/pixel_altivec.cpp	46;"	d	file:
zero_u32v	../../source/common/ppc/ppccommon.h	45;"	d
zero_u8v	../../source/common/ppc/pixel_altivec.cpp	42;"	d	file:
zero_u8v	../../source/common/ppc/ppccommon.h	41;"	d
~BitInterface	../../source/common/bitstream.h	/^    virtual ~BitInterface() {}$/;"	f	class:X265_NS::BitInterface	access:public	signature:()
~Bitstream	../../source/common/bitstream.h	/^    ~Bitstream()                             { X265_FREE(m_fifo); }$/;"	f	class:X265_NS::Bitstream	access:public	signature:()
~BondedTaskGroup	../../source/common/threadpool.h	/^    ~BondedTaskGroup() { waitForExit(); }$/;"	f	class:X265_NS::BondedTaskGroup	access:public	signature:()
~DPB	../../source/encoder/dpb.cpp	/^DPB::~DPB()$/;"	f	class:DPB	signature:()
~DPB	../../source/encoder/dpb.h	/^    ~DPB();$/;"	p	class:X265_NS::DPB	access:public	signature:()
~Encoder	../../source/encoder/encoder.h	/^    ~Encoder()$/;"	f	class:X265_NS::Encoder	access:public	signature:()
~Event	../../source/common/threading.h	/^    ~Event()$/;"	f	class:X265_NS::Event	access:public	signature:()
~FrameEncoder	../../source/encoder/frameencoder.h	/^    virtual ~FrameEncoder() {}$/;"	f	class:X265_NS::FrameEncoder	access:public	signature:()
~InputFile	../../source/input/input.h	/^    virtual ~InputFile()  {}$/;"	f	class:X265_NS::InputFile	access:protected	signature:()
~JobProvider	../../source/common/threadpool.h	/^    virtual ~JobProvider() {}$/;"	f	class:X265_NS::JobProvider	access:public	signature:()
~Lock	../../source/common/threading.h	/^    ~Lock()$/;"	f	class:X265_NS::Lock	access:public	signature:()
~LookaheadTLD	../../source/encoder/slicetype.h	/^    ~LookaheadTLD() { X265_FREE(wbuffer[0]); }$/;"	f	struct:X265_NS::LookaheadTLD	access:public	signature:()
~MotionEstimate	../../source/encoder/motion.cpp	/^MotionEstimate::~MotionEstimate()$/;"	f	class:MotionEstimate	signature:()
~MotionEstimate	../../source/encoder/motion.h	/^    ~MotionEstimate();$/;"	p	class:X265_NS::MotionEstimate	access:public	signature:()
~MotionReference	../../source/encoder/reference.cpp	/^MotionReference::~MotionReference()$/;"	f	class:MotionReference	signature:()
~MotionReference	../../source/encoder/reference.h	/^    ~MotionReference();$/;"	p	class:X265_NS::MotionReference	access:public	signature:()
~NALList	../../source/encoder/nal.h	/^    ~NALList() { X265_FREE(m_buffer); X265_FREE(m_extraBuffer); }$/;"	f	class:X265_NS::NALList	access:public	signature:()
~OutputFile	../../source/output/output.h	/^    virtual ~OutputFile() {}$/;"	f	class:X265_NS::OutputFile	access:protected	signature:()
~ParallelFilter	../../source/encoder/framefilter.h	/^        ~ParallelFilter()$/;"	f	class:X265_NS::FrameFilter::ParallelFilter	access:public	signature:()
~Predict	../../source/common/predict.cpp	/^Predict::~Predict()$/;"	f	class:Predict	signature:()
~Predict	../../source/common/predict.h	/^    ~Predict();$/;"	p	class:X265_NS::Predict	access:public	signature:()
~Quant	../../source/common/quant.cpp	/^Quant::~Quant()$/;"	f	class:Quant	signature:()
~Quant	../../source/common/quant.h	/^    ~Quant();$/;"	p	class:X265_NS::Quant	access:public	signature:()
~ReconFile	../../source/output/output.h	/^    virtual ~ReconFile()  {}$/;"	f	class:X265_NS::ReconFile	access:protected	signature:()
~ReconPlay	../../source/output/reconplay.cpp	/^ReconPlay::~ReconPlay()$/;"	f	class:ReconPlay	signature:()
~ReconPlay	../../source/output/reconplay.h	/^    virtual ~ReconPlay();$/;"	p	class:X265_NS::ReconPlay	access:public	signature:()
~SAOParam	../../source/common/common.h	/^    ~SAOParam()$/;"	f	struct:X265_NS::SAOParam	access:public	signature:()
~SEI	../../source/encoder/sei.h	/^    virtual ~SEI() {}$/;"	f	class:X265_NS::SEI	access:public	signature:()
~SPS	../../source/common/slice.h	/^    ~SPS()$/;"	f	struct:X265_NS::SPS	access:public	signature:()
~ScalingList	../../source/common/scalinglist.cpp	/^ScalingList::~ScalingList()$/;"	f	class:X265_NS::ScalingList	signature:()
~ScalingList	../../source/common/scalinglist.h	/^    ~ScalingList();$/;"	p	class:X265_NS::ScalingList	access:public	signature:()
~ScopedElapsedTime	../../source/common/threading.h	/^    ~ScopedElapsedTime() { accumlatedTime += x265_mdate() - startTime; }$/;"	f	struct:X265_NS::ScopedElapsedTime	access:public	signature:()
~ScopedLock	../../source/common/threading.h	/^    ~ScopedLock()$/;"	f	class:X265_NS::ScopedLock	access:public	signature:()
~Search	../../source/encoder/search.cpp	/^Search::~Search()$/;"	f	class:Search	signature:()
~Search	../../source/encoder/search.h	/^    ~Search();$/;"	p	class:X265_NS::Search	access:public	signature:()
~Thread	../../source/common/threading.cpp	/^Thread::~Thread() {}$/;"	f	class:X265_NS::Thread	signature:()
~Thread	../../source/common/threading.cpp	/^Thread::~Thread()$/;"	f	class:X265_NS::Thread	signature:()
~Thread	../../source/common/threading.h	/^    virtual ~Thread();$/;"	p	class:X265_NS::Thread	access:public	signature:()
~ThreadPool	../../source/common/threadpool.cpp	/^ThreadPool::~ThreadPool()$/;"	f	class:X265_NS::ThreadPool	signature:()
~ThreadPool	../../source/common/threadpool.h	/^    ~ThreadPool();$/;"	p	class:X265_NS::ThreadPool	access:public	signature:()
~ThreadSafeInteger	../../source/common/threading.h	/^    ~ThreadSafeInteger()$/;"	f	class:X265_NS::ThreadSafeInteger	access:public	signature:()
~WaveFront	../../source/common/wavefront.cpp	/^WaveFront::~WaveFront()$/;"	f	class:X265_NS::WaveFront	signature:()
~WaveFront	../../source/common/wavefront.h	/^    virtual ~WaveFront();$/;"	p	class:X265_NS::WaveFront	access:public	signature:()
~WorkerThread	../../source/common/threadpool.cpp	/^    virtual ~WorkerThread() {}$/;"	f	class:X265_NS::WorkerThread	access:public	signature:()
~Y4MInput	../../source/input/y4m.cpp	/^Y4MInput::~Y4MInput()$/;"	f	class:Y4MInput	signature:()
~Y4MInput	../../source/input/y4m.h	/^    virtual ~Y4MInput();$/;"	p	class:X265_NS::Y4MInput	access:public	signature:()
~Y4MOutput	../../source/output/y4m.cpp	/^Y4MOutput::~Y4MOutput()$/;"	f	class:Y4MOutput	signature:()
~Y4MOutput	../../source/output/y4m.h	/^    virtual ~Y4MOutput();$/;"	p	class:X265_NS::Y4MOutput	access:public	signature:()
~YUVInput	../../source/input/yuv.cpp	/^YUVInput::~YUVInput()$/;"	f	class:YUVInput	signature:()
~YUVInput	../../source/input/yuv.h	/^    virtual ~YUVInput();$/;"	p	class:X265_NS::YUVInput	access:public	signature:()
~YUVOutput	../../source/output/yuv.cpp	/^YUVOutput::~YUVOutput()$/;"	f	class:YUVOutput	signature:()
~YUVOutput	../../source/output/yuv.h	/^    virtual ~YUVOutput();$/;"	p	class:X265_NS::YUVOutput	access:public	signature:()
